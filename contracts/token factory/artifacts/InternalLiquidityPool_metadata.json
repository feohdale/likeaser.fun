{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract IERC20",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_taxRate",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_companyAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_liquidityProvider",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_initialReserve",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					}
				],
				"name": "TokenAddressSet",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "applyTax",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "companyAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "initialReserve",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "liquidityProvider",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_tokenAddress",
						"type": "address"
					}
				],
				"name": "setTokenAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "taxRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "token",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "tokenAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Manages liquidity for an ERC20 token.",
			"kind": "dev",
			"methods": {
				"applyTax(uint256)": {
					"details": "Function to apply tax on token transfers.",
					"params": {
						"amount": "Amount of tokens being transferred."
					},
					"returns": {
						"_0": "Tax amount deducted."
					}
				},
				"constructor": {
					"details": "Constructor to initialize the InternalLiquidityPool.",
					"params": {
						"_companyAddress": "Address of the company.",
						"_initialReserve": "Initial reserve of tokens.",
						"_liquidityProvider": "Address of the liquidity provider.",
						"_taxRate": "The global tax rate.",
						"_token": "The ERC20 token contract."
					}
				},
				"setTokenAddress(address)": {
					"details": "Function to set the associated ERC20 token address.",
					"params": {
						"_tokenAddress": "Address of the ERC20 token."
					}
				}
			},
			"title": "InternalLiquidityPool",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/token factory/InternalLiquidityPool.sol": "InternalLiquidityPool"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/token factory/InternalLiquidityPool.sol": {
			"keccak256": "0xa2aead9e09b78b1677557034f94bbc5df79c4635331f325f57a2584a26536825",
			"license": "MIT",
			"urls": [
				"bzz-raw://a898a79f8e3ede1082d272c103e05b51ec633fea59e27572cc2620c47fbcb2dc",
				"dweb:/ipfs/QmWA82ZwriaeovahcQPYRLSp5pfsNjrJkLyzzX3FnTUFoe"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.7/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
			"license": "MIT",
			"urls": [
				"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
				"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
			]
		}
	},
	"version": 1
}