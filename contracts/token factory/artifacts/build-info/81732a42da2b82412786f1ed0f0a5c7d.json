{
	"id": "81732a42da2b82412786f1ed0f0a5c7d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/token factory/ERC20Token.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// Import the ERC20 implementation from OpenZeppelin\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n/**\n * @title ERC20Token\n * @dev Custom ERC20 Token with an associated liquidity pool.\n */\ncontract ERC20Token is ERC20 {\n    // Address of the liquidity pool associated with this token\n    address public liquidityPool;\n\n    // Address of the token creator\n    address public creator;\n\n    /**\n     * @dev Constructor to initialize the ERC20Token.\n     * @param name_ Name of the token.\n     * @param symbol_ Symbol of the token.\n     * @param totalSupply_ Total supply of the token (with 18 decimals).\n     * @param creator_ Address of the token creator.\n     * @param liquidityPool_ Address of the associated liquidity pool.\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint256 totalSupply_,\n        address creator_,\n        address liquidityPool_\n    ) ERC20(name_, symbol_) {\n        _mint(creator_, totalSupply_);\n        creator = creator_;\n        liquidityPool = liquidityPool_;\n    }\n\n    /**\n     * @dev Function to set the liquidity pool address.\n     * @param liquidityPool_ Address of the liquidity pool.\n     */\n    function setLiquidityPool(address liquidityPool_) external {\n        require(msg.sender == liquidityPool, \"Only liquidity pool can set this\");\n        liquidityPool = liquidityPool_;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token factory/ERC20Token.sol": {
				"ERC20Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply_",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "creator_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "liquidityPool_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "creator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "liquidityPool_",
									"type": "address"
								}
							],
							"name": "setLiquidityPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Custom ERC20 Token with an associated liquidity pool.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Constructor to initialize the ERC20Token.",
								"params": {
									"creator_": "Address of the token creator.",
									"liquidityPool_": "Address of the associated liquidity pool.",
									"name_": "Name of the token.",
									"symbol_": "Symbol of the token.",
									"totalSupply_": "Total supply of the token (with 18 decimals)."
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"setLiquidityPool(address)": {
								"details": "Function to set the liquidity pool address.",
								"params": {
									"liquidityPool_": "Address of the liquidity pool."
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"title": "ERC20Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/token factory/ERC20Token.sol\":258:1436  contract ERC20Token is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/token factory/ERC20Token.sol\":806:1108  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/token factory/ERC20Token.sol\":978:983  name_ */\n  dup5\n    /* \"contracts/token factory/ERC20Token.sol\":985:992  symbol_ */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/token factory/ERC20Token.sol\":1004:1033  _mint(creator_, totalSupply_) */\n  tag_11\n    /* \"contracts/token factory/ERC20Token.sol\":1010:1018  creator_ */\n  dup3\n    /* \"contracts/token factory/ERC20Token.sol\":1020:1032  totalSupply_ */\n  dup5\n    /* \"contracts/token factory/ERC20Token.sol\":1004:1009  _mint */\n  shl(0x20, tag_12)\n    /* \"contracts/token factory/ERC20Token.sol\":1004:1033  _mint(creator_, totalSupply_) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/token factory/ERC20Token.sol\":1053:1061  creator_ */\n  dup2\n    /* \"contracts/token factory/ERC20Token.sol\":1043:1050  creator */\n  0x06\n  0x00\n    /* \"contracts/token factory/ERC20Token.sol\":1043:1061  creator = creator_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/token factory/ERC20Token.sol\":1087:1101  liquidityPool_ */\n  dup1\n    /* \"contracts/token factory/ERC20Token.sol\":1071:1084  liquidityPool */\n  0x05\n  0x00\n    /* \"contracts/token factory/ERC20Token.sol\":1071:1101  liquidityPool = liquidityPool_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/token factory/ERC20Token.sol\":806:1108  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/token factory/ERC20Token.sol\":258:1436  contract ERC20Token is ERC20 {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_12:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_15\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_18\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_19)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_19:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_21\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_24)\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_29)\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_32:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_33:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_34:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_35:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_36:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_37:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_38:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_39:\n    /* \"#utility.yul\":957:984   */\n  tag_82\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_37\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_84\n  tag_38\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1030:1118   */\ntag_83:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_40:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_86\n  tag_32\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_87\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_39\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_41:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_90\n  tag_38\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1434:1490   */\ntag_89:\n    /* \"#utility.yul\":1508:1537   */\n  tag_91\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_37\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_42:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_43:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_94\n    /* \"#utility.yul\":1885:1934   */\n  tag_95\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_41\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1869:1935   */\n  tag_40\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_97\n  tag_36\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2010:2122   */\ntag_96:\n    /* \"#utility.yul\":2131:2183   */\n  tag_98\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_42\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_44:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_100\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_101\n  tag_35\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2292:2414   */\ntag_100:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_102\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_43\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2647   */\ntag_45:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2636:2641   */\n  dup2\n    /* \"#utility.yul\":2625:2641   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2647   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2653:2775   */\ntag_46:\n    /* \"#utility.yul\":2726:2750   */\n  tag_105\n    /* \"#utility.yul\":2744:2749   */\n  dup2\n    /* \"#utility.yul\":2726:2750   */\n  tag_45\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2719:2724   */\n  dup2\n    /* \"#utility.yul\":2716:2751   */\n  eq\n    /* \"#utility.yul\":2706:2769   */\n  tag_106\n  jumpi\n    /* \"#utility.yul\":2765:2766   */\n  0x00\n    /* \"#utility.yul\":2762:2763   */\n  dup1\n    /* \"#utility.yul\":2755:2767   */\n  revert\n    /* \"#utility.yul\":2706:2769   */\ntag_106:\n    /* \"#utility.yul\":2653:2775   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2781:2924   */\ntag_47:\n    /* \"#utility.yul\":2838:2843   */\n  0x00\n    /* \"#utility.yul\":2869:2875   */\n  dup2\n    /* \"#utility.yul\":2863:2876   */\n  mload\n    /* \"#utility.yul\":2854:2876   */\n  swap1\n  pop\n    /* \"#utility.yul\":2885:2918   */\n  tag_108\n    /* \"#utility.yul\":2912:2917   */\n  dup2\n    /* \"#utility.yul\":2885:2918   */\n  tag_46\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2781:2924   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2930:3056   */\ntag_48:\n    /* \"#utility.yul\":2967:2974   */\n  0x00\n    /* \"#utility.yul\":3007:3049   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3000:3005   */\n  dup3\n    /* \"#utility.yul\":2996:3050   */\n  and\n    /* \"#utility.yul\":2985:3050   */\n  swap1\n  pop\n    /* \"#utility.yul\":2930:3056   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3062:3158   */\ntag_49:\n    /* \"#utility.yul\":3099:3106   */\n  0x00\n    /* \"#utility.yul\":3128:3152   */\n  tag_111\n    /* \"#utility.yul\":3146:3151   */\n  dup3\n    /* \"#utility.yul\":3128:3152   */\n  tag_48\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3117:3152   */\n  swap1\n  pop\n    /* \"#utility.yul\":3062:3158   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3164:3286   */\ntag_50:\n    /* \"#utility.yul\":3237:3261   */\n  tag_113\n    /* \"#utility.yul\":3255:3260   */\n  dup2\n    /* \"#utility.yul\":3237:3261   */\n  tag_49\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3230:3235   */\n  dup2\n    /* \"#utility.yul\":3227:3262   */\n  eq\n    /* \"#utility.yul\":3217:3280   */\n  tag_114\n  jumpi\n    /* \"#utility.yul\":3276:3277   */\n  0x00\n    /* \"#utility.yul\":3273:3274   */\n  dup1\n    /* \"#utility.yul\":3266:3278   */\n  revert\n    /* \"#utility.yul\":3217:3280   */\ntag_114:\n    /* \"#utility.yul\":3164:3286   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3292:3435   */\ntag_51:\n    /* \"#utility.yul\":3349:3354   */\n  0x00\n    /* \"#utility.yul\":3380:3386   */\n  dup2\n    /* \"#utility.yul\":3374:3387   */\n  mload\n    /* \"#utility.yul\":3365:3387   */\n  swap1\n  pop\n    /* \"#utility.yul\":3396:3429   */\n  tag_116\n    /* \"#utility.yul\":3423:3428   */\n  dup2\n    /* \"#utility.yul\":3396:3429   */\n  tag_50\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3292:3435   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3441:4764   */\ntag_3:\n    /* \"#utility.yul\":3567:3573   */\n  0x00\n    /* \"#utility.yul\":3575:3581   */\n  dup1\n    /* \"#utility.yul\":3583:3589   */\n  0x00\n    /* \"#utility.yul\":3591:3597   */\n  dup1\n    /* \"#utility.yul\":3599:3605   */\n  0x00\n    /* \"#utility.yul\":3648:3651   */\n  0xa0\n    /* \"#utility.yul\":3636:3645   */\n  dup7\n    /* \"#utility.yul\":3627:3634   */\n  dup9\n    /* \"#utility.yul\":3623:3646   */\n  sub\n    /* \"#utility.yul\":3619:3652   */\n  slt\n    /* \"#utility.yul\":3616:3736   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":3655:3734   */\n  tag_119\n  tag_33\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3616:3736   */\ntag_118:\n    /* \"#utility.yul\":3796:3797   */\n  0x00\n    /* \"#utility.yul\":3785:3794   */\n  dup7\n    /* \"#utility.yul\":3781:3798   */\n  add\n    /* \"#utility.yul\":3775:3799   */\n  mload\n    /* \"#utility.yul\":3826:3844   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3818:3824   */\n  dup2\n    /* \"#utility.yul\":3815:3845   */\n  gt\n    /* \"#utility.yul\":3812:3929   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":3848:3927   */\n  tag_121\n  tag_34\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3812:3929   */\ntag_120:\n    /* \"#utility.yul\":3953:4027   */\n  tag_122\n    /* \"#utility.yul\":4019:4026   */\n  dup9\n    /* \"#utility.yul\":4010:4016   */\n  dup3\n    /* \"#utility.yul\":3999:4008   */\n  dup10\n    /* \"#utility.yul\":3995:4017   */\n  add\n    /* \"#utility.yul\":3953:4027   */\n  tag_44\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3943:4027   */\n  swap6\n  pop\n    /* \"#utility.yul\":3746:4037   */\n  pop\n    /* \"#utility.yul\":4097:4099   */\n  0x20\n    /* \"#utility.yul\":4086:4095   */\n  dup7\n    /* \"#utility.yul\":4082:4100   */\n  add\n    /* \"#utility.yul\":4076:4101   */\n  mload\n    /* \"#utility.yul\":4128:4146   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4120:4126   */\n  dup2\n    /* \"#utility.yul\":4117:4147   */\n  gt\n    /* \"#utility.yul\":4114:4231   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":4150:4229   */\n  tag_124\n  tag_34\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4114:4231   */\ntag_123:\n    /* \"#utility.yul\":4255:4329   */\n  tag_125\n    /* \"#utility.yul\":4321:4328   */\n  dup9\n    /* \"#utility.yul\":4312:4318   */\n  dup3\n    /* \"#utility.yul\":4301:4310   */\n  dup10\n    /* \"#utility.yul\":4297:4319   */\n  add\n    /* \"#utility.yul\":4255:4329   */\n  tag_44\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4245:4329   */\n  swap5\n  pop\n    /* \"#utility.yul\":4047:4339   */\n  pop\n    /* \"#utility.yul\":4378:4380   */\n  0x40\n    /* \"#utility.yul\":4404:4468   */\n  tag_126\n    /* \"#utility.yul\":4460:4467   */\n  dup9\n    /* \"#utility.yul\":4451:4457   */\n  dup3\n    /* \"#utility.yul\":4440:4449   */\n  dup10\n    /* \"#utility.yul\":4436:4458   */\n  add\n    /* \"#utility.yul\":4404:4468   */\n  tag_47\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4394:4468   */\n  swap4\n  pop\n    /* \"#utility.yul\":4349:4478   */\n  pop\n    /* \"#utility.yul\":4517:4519   */\n  0x60\n    /* \"#utility.yul\":4543:4607   */\n  tag_127\n    /* \"#utility.yul\":4599:4606   */\n  dup9\n    /* \"#utility.yul\":4590:4596   */\n  dup3\n    /* \"#utility.yul\":4579:4588   */\n  dup10\n    /* \"#utility.yul\":4575:4597   */\n  add\n    /* \"#utility.yul\":4543:4607   */\n  tag_51\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4533:4607   */\n  swap3\n  pop\n    /* \"#utility.yul\":4488:4617   */\n  pop\n    /* \"#utility.yul\":4656:4659   */\n  0x80\n    /* \"#utility.yul\":4683:4747   */\n  tag_128\n    /* \"#utility.yul\":4739:4746   */\n  dup9\n    /* \"#utility.yul\":4730:4736   */\n  dup3\n    /* \"#utility.yul\":4719:4728   */\n  dup10\n    /* \"#utility.yul\":4715:4737   */\n  add\n    /* \"#utility.yul\":4683:4747   */\n  tag_51\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4673:4747   */\n  swap2\n  pop\n    /* \"#utility.yul\":4627:4757   */\n  pop\n    /* \"#utility.yul\":3441:4764   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4770:4869   */\ntag_52:\n    /* \"#utility.yul\":4822:4828   */\n  0x00\n    /* \"#utility.yul\":4856:4861   */\n  dup2\n    /* \"#utility.yul\":4850:4862   */\n  mload\n    /* \"#utility.yul\":4840:4862   */\n  swap1\n  pop\n    /* \"#utility.yul\":4770:4869   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4875:5055   */\ntag_53:\n    /* \"#utility.yul\":4923:5000   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4920:4921   */\n  0x00\n    /* \"#utility.yul\":4913:5001   */\n  mstore\n    /* \"#utility.yul\":5020:5024   */\n  0x22\n    /* \"#utility.yul\":5017:5018   */\n  0x04\n    /* \"#utility.yul\":5010:5025   */\n  mstore\n    /* \"#utility.yul\":5044:5048   */\n  0x24\n    /* \"#utility.yul\":5041:5042   */\n  0x00\n    /* \"#utility.yul\":5034:5049   */\n  revert\n    /* \"#utility.yul\":5061:5381   */\ntag_54:\n    /* \"#utility.yul\":5105:5111   */\n  0x00\n    /* \"#utility.yul\":5142:5143   */\n  0x02\n    /* \"#utility.yul\":5136:5140   */\n  dup3\n    /* \"#utility.yul\":5132:5144   */\n  div\n    /* \"#utility.yul\":5122:5144   */\n  swap1\n  pop\n    /* \"#utility.yul\":5189:5190   */\n  0x01\n    /* \"#utility.yul\":5183:5187   */\n  dup3\n    /* \"#utility.yul\":5179:5191   */\n  and\n    /* \"#utility.yul\":5210:5228   */\n  dup1\n    /* \"#utility.yul\":5200:5281   */\n  tag_132\n  jumpi\n    /* \"#utility.yul\":5266:5270   */\n  0x7f\n    /* \"#utility.yul\":5258:5264   */\n  dup3\n    /* \"#utility.yul\":5254:5271   */\n  and\n    /* \"#utility.yul\":5244:5271   */\n  swap2\n  pop\n    /* \"#utility.yul\":5200:5281   */\ntag_132:\n    /* \"#utility.yul\":5328:5330   */\n  0x20\n    /* \"#utility.yul\":5320:5326   */\n  dup3\n    /* \"#utility.yul\":5317:5331   */\n  lt\n    /* \"#utility.yul\":5297:5315   */\n  dup2\n    /* \"#utility.yul\":5294:5332   */\n  sub\n    /* \"#utility.yul\":5291:5375   */\n  tag_133\n  jumpi\n    /* \"#utility.yul\":5347:5365   */\n  tag_134\n  tag_53\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":5291:5375   */\ntag_133:\n    /* \"#utility.yul\":5112:5381   */\n  pop\n    /* \"#utility.yul\":5061:5381   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5387:5528   */\ntag_55:\n    /* \"#utility.yul\":5436:5440   */\n  0x00\n    /* \"#utility.yul\":5459:5462   */\n  dup2\n    /* \"#utility.yul\":5451:5462   */\n  swap1\n  pop\n    /* \"#utility.yul\":5482:5485   */\n  dup2\n    /* \"#utility.yul\":5479:5480   */\n  0x00\n    /* \"#utility.yul\":5472:5486   */\n  mstore\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5513:5514   */\n  0x00\n    /* \"#utility.yul\":5503:5521   */\n  keccak256\n    /* \"#utility.yul\":5495:5521   */\n  swap1\n  pop\n    /* \"#utility.yul\":5387:5528   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5534:5627   */\ntag_56:\n    /* \"#utility.yul\":5571:5577   */\n  0x00\n    /* \"#utility.yul\":5618:5620   */\n  0x20\n    /* \"#utility.yul\":5613:5615   */\n  0x1f\n    /* \"#utility.yul\":5606:5611   */\n  dup4\n    /* \"#utility.yul\":5602:5616   */\n  add\n    /* \"#utility.yul\":5598:5621   */\n  div\n    /* \"#utility.yul\":5588:5621   */\n  swap1\n  pop\n    /* \"#utility.yul\":5534:5627   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5633:5740   */\ntag_57:\n    /* \"#utility.yul\":5677:5685   */\n  0x00\n    /* \"#utility.yul\":5727:5732   */\n  dup3\n    /* \"#utility.yul\":5721:5725   */\n  dup3\n    /* \"#utility.yul\":5717:5733   */\n  shl\n    /* \"#utility.yul\":5696:5733   */\n  swap1\n  pop\n    /* \"#utility.yul\":5633:5740   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5746:6139   */\ntag_58:\n    /* \"#utility.yul\":5815:5821   */\n  0x00\n    /* \"#utility.yul\":5865:5866   */\n  0x08\n    /* \"#utility.yul\":5853:5863   */\n  dup4\n    /* \"#utility.yul\":5849:5867   */\n  mul\n    /* \"#utility.yul\":5888:5985   */\n  tag_139\n    /* \"#utility.yul\":5918:5984   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5907:5916   */\n  dup3\n    /* \"#utility.yul\":5888:5985   */\n  tag_57\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":6006:6045   */\n  tag_140\n    /* \"#utility.yul\":6036:6044   */\n  dup7\n    /* \"#utility.yul\":6025:6034   */\n  dup4\n    /* \"#utility.yul\":6006:6045   */\n  tag_57\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":5994:6045   */\n  swap6\n  pop\n    /* \"#utility.yul\":6078:6082   */\n  dup1\n    /* \"#utility.yul\":6074:6083   */\n  not\n    /* \"#utility.yul\":6067:6072   */\n  dup5\n    /* \"#utility.yul\":6063:6084   */\n  and\n    /* \"#utility.yul\":6054:6084   */\n  swap4\n  pop\n    /* \"#utility.yul\":6127:6131   */\n  dup1\n    /* \"#utility.yul\":6117:6125   */\n  dup7\n    /* \"#utility.yul\":6113:6132   */\n  and\n    /* \"#utility.yul\":6106:6111   */\n  dup5\n    /* \"#utility.yul\":6103:6133   */\n  or\n    /* \"#utility.yul\":6093:6133   */\n  swap3\n  pop\n    /* \"#utility.yul\":5822:6139   */\n  pop\n  pop\n    /* \"#utility.yul\":5746:6139   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6145:6205   */\ntag_59:\n    /* \"#utility.yul\":6173:6176   */\n  0x00\n    /* \"#utility.yul\":6194:6199   */\n  dup2\n    /* \"#utility.yul\":6187:6199   */\n  swap1\n  pop\n    /* \"#utility.yul\":6145:6205   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6211:6353   */\ntag_60:\n    /* \"#utility.yul\":6261:6270   */\n  0x00\n    /* \"#utility.yul\":6294:6347   */\n  tag_143\n    /* \"#utility.yul\":6312:6346   */\n  tag_144\n    /* \"#utility.yul\":6321:6345   */\n  tag_145\n    /* \"#utility.yul\":6339:6344   */\n  dup5\n    /* \"#utility.yul\":6321:6345   */\n  tag_45\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6312:6346   */\n  tag_59\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6294:6347   */\n  tag_45\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":6281:6347   */\n  swap1\n  pop\n    /* \"#utility.yul\":6211:6353   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6359:6434   */\ntag_61:\n    /* \"#utility.yul\":6402:6405   */\n  0x00\n    /* \"#utility.yul\":6423:6428   */\n  dup2\n    /* \"#utility.yul\":6416:6428   */\n  swap1\n  pop\n    /* \"#utility.yul\":6359:6434   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6440:6709   */\ntag_62:\n    /* \"#utility.yul\":6550:6589   */\n  tag_148\n    /* \"#utility.yul\":6581:6588   */\n  dup4\n    /* \"#utility.yul\":6550:6589   */\n  tag_60\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":6611:6702   */\n  tag_149\n    /* \"#utility.yul\":6660:6701   */\n  tag_150\n    /* \"#utility.yul\":6684:6700   */\n  dup3\n    /* \"#utility.yul\":6660:6701   */\n  tag_61\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6652:6658   */\n  dup5\n    /* \"#utility.yul\":6645:6649   */\n  dup5\n    /* \"#utility.yul\":6639:6650   */\n  sload\n    /* \"#utility.yul\":6611:6702   */\n  tag_58\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6605:6609   */\n  dup3\n    /* \"#utility.yul\":6598:6703   */\n  sstore\n    /* \"#utility.yul\":6516:6709   */\n  pop\n    /* \"#utility.yul\":6440:6709   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6715:6788   */\ntag_63:\n    /* \"#utility.yul\":6760:6763   */\n  0x00\n    /* \"#utility.yul\":6715:6788   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6794:6983   */\ntag_64:\n    /* \"#utility.yul\":6871:6903   */\n  tag_153\n  tag_63\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6912:6977   */\n  tag_154\n    /* \"#utility.yul\":6970:6976   */\n  dup2\n    /* \"#utility.yul\":6962:6968   */\n  dup5\n    /* \"#utility.yul\":6956:6960   */\n  dup5\n    /* \"#utility.yul\":6912:6977   */\n  tag_62\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6847:6983   */\n  pop\n    /* \"#utility.yul\":6794:6983   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6989:7175   */\ntag_65:\n    /* \"#utility.yul\":7049:7169   */\ntag_156:\n    /* \"#utility.yul\":7066:7069   */\n  dup2\n    /* \"#utility.yul\":7059:7064   */\n  dup2\n    /* \"#utility.yul\":7056:7070   */\n  lt\n    /* \"#utility.yul\":7049:7169   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":7120:7159   */\n  tag_159\n    /* \"#utility.yul\":7157:7158   */\n  0x00\n    /* \"#utility.yul\":7150:7155   */\n  dup3\n    /* \"#utility.yul\":7120:7159   */\n  tag_64\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7093:7094   */\n  0x01\n    /* \"#utility.yul\":7086:7091   */\n  dup2\n    /* \"#utility.yul\":7082:7095   */\n  add\n    /* \"#utility.yul\":7073:7095   */\n  swap1\n  pop\n    /* \"#utility.yul\":7049:7169   */\n  jump(tag_156)\ntag_158:\n    /* \"#utility.yul\":6989:7175   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7181:7724   */\ntag_66:\n    /* \"#utility.yul\":7282:7284   */\n  0x1f\n    /* \"#utility.yul\":7277:7280   */\n  dup3\n    /* \"#utility.yul\":7274:7285   */\n  gt\n    /* \"#utility.yul\":7271:7717   */\n  iszero\n  tag_161\n  jumpi\n    /* \"#utility.yul\":7316:7354   */\n  tag_162\n    /* \"#utility.yul\":7348:7353   */\n  dup2\n    /* \"#utility.yul\":7316:7354   */\n  tag_55\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":7400:7429   */\n  tag_163\n    /* \"#utility.yul\":7418:7428   */\n  dup5\n    /* \"#utility.yul\":7400:7429   */\n  tag_56\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7390:7398   */\n  dup2\n    /* \"#utility.yul\":7386:7430   */\n  add\n    /* \"#utility.yul\":7583:7585   */\n  0x20\n    /* \"#utility.yul\":7571:7581   */\n  dup6\n    /* \"#utility.yul\":7568:7586   */\n  lt\n    /* \"#utility.yul\":7565:7614   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":7604:7612   */\n  dup2\n    /* \"#utility.yul\":7589:7612   */\n  swap1\n  pop\n    /* \"#utility.yul\":7565:7614   */\ntag_164:\n    /* \"#utility.yul\":7627:7707   */\n  tag_165\n    /* \"#utility.yul\":7683:7705   */\n  tag_166\n    /* \"#utility.yul\":7701:7704   */\n  dup6\n    /* \"#utility.yul\":7683:7705   */\n  tag_56\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7673:7681   */\n  dup4\n    /* \"#utility.yul\":7669:7706   */\n  add\n    /* \"#utility.yul\":7656:7667   */\n  dup3\n    /* \"#utility.yul\":7627:7707   */\n  tag_65\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7286:7717   */\n  pop\n  pop\n    /* \"#utility.yul\":7271:7717   */\ntag_161:\n    /* \"#utility.yul\":7181:7724   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7730:7847   */\ntag_67:\n    /* \"#utility.yul\":7784:7792   */\n  0x00\n    /* \"#utility.yul\":7834:7839   */\n  dup3\n    /* \"#utility.yul\":7828:7832   */\n  dup3\n    /* \"#utility.yul\":7824:7840   */\n  shr\n    /* \"#utility.yul\":7803:7840   */\n  swap1\n  pop\n    /* \"#utility.yul\":7730:7847   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7853:8022   */\ntag_68:\n    /* \"#utility.yul\":7897:7903   */\n  0x00\n    /* \"#utility.yul\":7930:7981   */\n  tag_169\n    /* \"#utility.yul\":7978:7979   */\n  0x00\n    /* \"#utility.yul\":7974:7980   */\n  not\n    /* \"#utility.yul\":7966:7971   */\n  dup5\n    /* \"#utility.yul\":7963:7964   */\n  0x08\n    /* \"#utility.yul\":7959:7972   */\n  mul\n    /* \"#utility.yul\":7930:7981   */\n  tag_67\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":7926:7982   */\n  not\n    /* \"#utility.yul\":8011:8015   */\n  dup1\n    /* \"#utility.yul\":8005:8009   */\n  dup4\n    /* \"#utility.yul\":8001:8016   */\n  and\n    /* \"#utility.yul\":7991:8016   */\n  swap2\n  pop\n    /* \"#utility.yul\":7904:8022   */\n  pop\n    /* \"#utility.yul\":7853:8022   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8027:8322   */\ntag_69:\n    /* \"#utility.yul\":8103:8107   */\n  0x00\n    /* \"#utility.yul\":8249:8278   */\n  tag_171\n    /* \"#utility.yul\":8274:8277   */\n  dup4\n    /* \"#utility.yul\":8268:8272   */\n  dup4\n    /* \"#utility.yul\":8249:8278   */\n  tag_68\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8241:8278   */\n  swap2\n  pop\n    /* \"#utility.yul\":8311:8314   */\n  dup3\n    /* \"#utility.yul\":8308:8309   */\n  0x02\n    /* \"#utility.yul\":8304:8315   */\n  mul\n    /* \"#utility.yul\":8298:8302   */\n  dup3\n    /* \"#utility.yul\":8295:8316   */\n  or\n    /* \"#utility.yul\":8287:8316   */\n  swap1\n  pop\n    /* \"#utility.yul\":8027:8322   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8327:9722   */\ntag_8:\n    /* \"#utility.yul\":8444:8481   */\n  tag_173\n    /* \"#utility.yul\":8477:8480   */\n  dup3\n    /* \"#utility.yul\":8444:8481   */\n  tag_52\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8546:8564   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8538:8544   */\n  dup2\n    /* \"#utility.yul\":8535:8565   */\n  gt\n    /* \"#utility.yul\":8532:8588   */\n  iszero\n  tag_174\n  jumpi\n    /* \"#utility.yul\":8568:8586   */\n  tag_175\n  tag_38\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":8532:8588   */\ntag_174:\n    /* \"#utility.yul\":8612:8650   */\n  tag_176\n    /* \"#utility.yul\":8644:8648   */\n  dup3\n    /* \"#utility.yul\":8638:8649   */\n  sload\n    /* \"#utility.yul\":8612:8650   */\n  tag_54\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8697:8764   */\n  tag_177\n    /* \"#utility.yul\":8757:8763   */\n  dup3\n    /* \"#utility.yul\":8749:8755   */\n  dup3\n    /* \"#utility.yul\":8743:8747   */\n  dup6\n    /* \"#utility.yul\":8697:8764   */\n  tag_66\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":8791:8792   */\n  0x00\n    /* \"#utility.yul\":8815:8819   */\n  0x20\n    /* \"#utility.yul\":8802:8819   */\n  swap1\n  pop\n    /* \"#utility.yul\":8847:8849   */\n  0x1f\n    /* \"#utility.yul\":8839:8845   */\n  dup4\n    /* \"#utility.yul\":8836:8850   */\n  gt\n    /* \"#utility.yul\":8864:8865   */\n  0x01\n    /* \"#utility.yul\":8859:9477   */\n  dup2\n  eq\n  tag_179\n  jumpi\n    /* \"#utility.yul\":9521:9522   */\n  0x00\n    /* \"#utility.yul\":9538:9544   */\n  dup5\n    /* \"#utility.yul\":9535:9612   */\n  iszero\n  tag_180\n  jumpi\n    /* \"#utility.yul\":9587:9596   */\n  dup3\n    /* \"#utility.yul\":9582:9585   */\n  dup8\n    /* \"#utility.yul\":9578:9597   */\n  add\n    /* \"#utility.yul\":9572:9598   */\n  mload\n    /* \"#utility.yul\":9563:9598   */\n  swap1\n  pop\n    /* \"#utility.yul\":9535:9612   */\ntag_180:\n    /* \"#utility.yul\":9638:9705   */\n  tag_181\n    /* \"#utility.yul\":9698:9704   */\n  dup6\n    /* \"#utility.yul\":9691:9696   */\n  dup3\n    /* \"#utility.yul\":9638:9705   */\n  tag_69\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":9632:9636   */\n  dup7\n    /* \"#utility.yul\":9625:9706   */\n  sstore\n    /* \"#utility.yul\":9494:9716   */\n  pop\n    /* \"#utility.yul\":8829:9716   */\n  jump(tag_178)\n    /* \"#utility.yul\":8859:9477   */\ntag_179:\n    /* \"#utility.yul\":8911:8915   */\n  0x1f\n    /* \"#utility.yul\":8907:8916   */\n  not\n    /* \"#utility.yul\":8899:8905   */\n  dup5\n    /* \"#utility.yul\":8895:8917   */\n  and\n    /* \"#utility.yul\":8945:8982   */\n  tag_182\n    /* \"#utility.yul\":8977:8981   */\n  dup7\n    /* \"#utility.yul\":8945:8982   */\n  tag_55\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":9004:9005   */\n  0x00\n    /* \"#utility.yul\":9018:9226   */\ntag_183:\n    /* \"#utility.yul\":9032:9039   */\n  dup3\n    /* \"#utility.yul\":9029:9030   */\n  dup2\n    /* \"#utility.yul\":9026:9040   */\n  lt\n    /* \"#utility.yul\":9018:9226   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":9111:9120   */\n  dup5\n    /* \"#utility.yul\":9106:9109   */\n  dup10\n    /* \"#utility.yul\":9102:9121   */\n  add\n    /* \"#utility.yul\":9096:9122   */\n  mload\n    /* \"#utility.yul\":9088:9094   */\n  dup3\n    /* \"#utility.yul\":9081:9123   */\n  sstore\n    /* \"#utility.yul\":9162:9163   */\n  0x01\n    /* \"#utility.yul\":9154:9160   */\n  dup3\n    /* \"#utility.yul\":9150:9164   */\n  add\n    /* \"#utility.yul\":9140:9164   */\n  swap2\n  pop\n    /* \"#utility.yul\":9209:9211   */\n  0x20\n    /* \"#utility.yul\":9198:9207   */\n  dup6\n    /* \"#utility.yul\":9194:9212   */\n  add\n    /* \"#utility.yul\":9181:9212   */\n  swap5\n  pop\n    /* \"#utility.yul\":9055:9059   */\n  0x20\n    /* \"#utility.yul\":9052:9053   */\n  dup2\n    /* \"#utility.yul\":9048:9060   */\n  add\n    /* \"#utility.yul\":9043:9060   */\n  swap1\n  pop\n    /* \"#utility.yul\":9018:9226   */\n  jump(tag_183)\ntag_185:\n    /* \"#utility.yul\":9254:9260   */\n  dup7\n    /* \"#utility.yul\":9245:9252   */\n  dup4\n    /* \"#utility.yul\":9242:9261   */\n  lt\n    /* \"#utility.yul\":9239:9418   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":9312:9321   */\n  dup5\n    /* \"#utility.yul\":9307:9310   */\n  dup10\n    /* \"#utility.yul\":9303:9322   */\n  add\n    /* \"#utility.yul\":9297:9323   */\n  mload\n    /* \"#utility.yul\":9355:9403   */\n  tag_187\n    /* \"#utility.yul\":9397:9401   */\n  0x1f\n    /* \"#utility.yul\":9389:9395   */\n  dup10\n    /* \"#utility.yul\":9385:9402   */\n  and\n    /* \"#utility.yul\":9374:9383   */\n  dup3\n    /* \"#utility.yul\":9355:9403   */\n  tag_68\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":9347:9353   */\n  dup4\n    /* \"#utility.yul\":9340:9404   */\n  sstore\n    /* \"#utility.yul\":9262:9418   */\n  pop\n    /* \"#utility.yul\":9239:9418   */\ntag_186:\n    /* \"#utility.yul\":9464:9465   */\n  0x01\n    /* \"#utility.yul\":9460:9461   */\n  0x02\n    /* \"#utility.yul\":9452:9458   */\n  dup9\n    /* \"#utility.yul\":9448:9462   */\n  mul\n    /* \"#utility.yul\":9444:9466   */\n  add\n    /* \"#utility.yul\":9438:9442   */\n  dup9\n    /* \"#utility.yul\":9431:9467   */\n  sstore\n    /* \"#utility.yul\":8866:9477   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8829:9716   */\ntag_178:\n  pop\n    /* \"#utility.yul\":8419:9722   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8327:9722   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9728:9846   */\ntag_70:\n    /* \"#utility.yul\":9815:9839   */\n  tag_189\n    /* \"#utility.yul\":9833:9838   */\n  dup2\n    /* \"#utility.yul\":9815:9839   */\n  tag_49\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":9810:9813   */\n  dup3\n    /* \"#utility.yul\":9803:9840   */\n  mstore\n    /* \"#utility.yul\":9728:9846   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9852:10074   */\ntag_17:\n    /* \"#utility.yul\":9945:9949   */\n  0x00\n    /* \"#utility.yul\":9983:9985   */\n  0x20\n    /* \"#utility.yul\":9972:9981   */\n  dup3\n    /* \"#utility.yul\":9968:9986   */\n  add\n    /* \"#utility.yul\":9960:9986   */\n  swap1\n  pop\n    /* \"#utility.yul\":9996:10067   */\n  tag_191\n    /* \"#utility.yul\":10064:10065   */\n  0x00\n    /* \"#utility.yul\":10053:10062   */\n  dup4\n    /* \"#utility.yul\":10049:10066   */\n  add\n    /* \"#utility.yul\":10040:10046   */\n  dup5\n    /* \"#utility.yul\":9996:10067   */\n  tag_70\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":9852:10074   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10080:10260   */\ntag_71:\n    /* \"#utility.yul\":10128:10205   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10125:10126   */\n  0x00\n    /* \"#utility.yul\":10118:10206   */\n  mstore\n    /* \"#utility.yul\":10225:10229   */\n  0x11\n    /* \"#utility.yul\":10222:10223   */\n  0x04\n    /* \"#utility.yul\":10215:10230   */\n  mstore\n    /* \"#utility.yul\":10249:10253   */\n  0x24\n    /* \"#utility.yul\":10246:10247   */\n  0x00\n    /* \"#utility.yul\":10239:10254   */\n  revert\n    /* \"#utility.yul\":10266:10457   */\ntag_23:\n    /* \"#utility.yul\":10306:10309   */\n  0x00\n    /* \"#utility.yul\":10325:10345   */\n  tag_194\n    /* \"#utility.yul\":10343:10344   */\n  dup3\n    /* \"#utility.yul\":10325:10345   */\n  tag_45\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":10320:10345   */\n  swap2\n  pop\n    /* \"#utility.yul\":10359:10379   */\n  tag_195\n    /* \"#utility.yul\":10377:10378   */\n  dup4\n    /* \"#utility.yul\":10359:10379   */\n  tag_45\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":10354:10379   */\n  swap3\n  pop\n    /* \"#utility.yul\":10402:10403   */\n  dup3\n    /* \"#utility.yul\":10399:10400   */\n  dup3\n    /* \"#utility.yul\":10395:10404   */\n  add\n    /* \"#utility.yul\":10388:10404   */\n  swap1\n  pop\n    /* \"#utility.yul\":10423:10426   */\n  dup1\n    /* \"#utility.yul\":10420:10421   */\n  dup3\n    /* \"#utility.yul\":10417:10427   */\n  gt\n    /* \"#utility.yul\":10414:10450   */\n  iszero\n  tag_196\n  jumpi\n    /* \"#utility.yul\":10430:10448   */\n  tag_197\n  tag_71\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":10414:10450   */\ntag_196:\n    /* \"#utility.yul\":10266:10457   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10463:10581   */\ntag_72:\n    /* \"#utility.yul\":10550:10574   */\n  tag_199\n    /* \"#utility.yul\":10568:10573   */\n  dup2\n    /* \"#utility.yul\":10550:10574   */\n  tag_45\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":10545:10548   */\n  dup3\n    /* \"#utility.yul\":10538:10575   */\n  mstore\n    /* \"#utility.yul\":10463:10581   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10587:11029   */\ntag_27:\n    /* \"#utility.yul\":10736:10740   */\n  0x00\n    /* \"#utility.yul\":10774:10776   */\n  0x60\n    /* \"#utility.yul\":10763:10772   */\n  dup3\n    /* \"#utility.yul\":10759:10777   */\n  add\n    /* \"#utility.yul\":10751:10777   */\n  swap1\n  pop\n    /* \"#utility.yul\":10787:10858   */\n  tag_201\n    /* \"#utility.yul\":10855:10856   */\n  0x00\n    /* \"#utility.yul\":10844:10853   */\n  dup4\n    /* \"#utility.yul\":10840:10857   */\n  add\n    /* \"#utility.yul\":10831:10837   */\n  dup7\n    /* \"#utility.yul\":10787:10858   */\n  tag_70\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":10868:10940   */\n  tag_202\n    /* \"#utility.yul\":10936:10938   */\n  0x20\n    /* \"#utility.yul\":10925:10934   */\n  dup4\n    /* \"#utility.yul\":10921:10939   */\n  add\n    /* \"#utility.yul\":10912:10918   */\n  dup6\n    /* \"#utility.yul\":10868:10940   */\n  tag_72\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":10950:11022   */\n  tag_203\n    /* \"#utility.yul\":11018:11020   */\n  0x40\n    /* \"#utility.yul\":11007:11016   */\n  dup4\n    /* \"#utility.yul\":11003:11021   */\n  add\n    /* \"#utility.yul\":10994:11000   */\n  dup5\n    /* \"#utility.yul\":10950:11022   */\n  tag_72\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":10587:11029   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11035:11257   */\ntag_31:\n    /* \"#utility.yul\":11128:11132   */\n  0x00\n    /* \"#utility.yul\":11166:11168   */\n  0x20\n    /* \"#utility.yul\":11155:11164   */\n  dup3\n    /* \"#utility.yul\":11151:11169   */\n  add\n    /* \"#utility.yul\":11143:11169   */\n  swap1\n  pop\n    /* \"#utility.yul\":11179:11250   */\n  tag_205\n    /* \"#utility.yul\":11247:11248   */\n  0x00\n    /* \"#utility.yul\":11236:11245   */\n  dup4\n    /* \"#utility.yul\":11232:11249   */\n  add\n    /* \"#utility.yul\":11223:11229   */\n  dup5\n    /* \"#utility.yul\":11179:11250   */\n  tag_72\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":11035:11257   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/token factory/ERC20Token.sol\":258:1436  contract ERC20Token is ERC20 {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/token factory/ERC20Token.sol\":258:1436  contract ERC20Token is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x665a11ca\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x01877020\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x02d05d3f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/token factory/ERC20Token.sol\":1246:1434  function setLiquidityPool(address liquidityPool_) external {... */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/token factory/ERC20Token.sol\":428:450  address public creator */\n    tag_4:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token factory/ERC20Token.sol\":357:385  address public liquidityPool */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_13:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token factory/ERC20Token.sol\":1246:1434  function setLiquidityPool(address liquidityPool_) external {... */\n    tag_19:\n        /* \"contracts/token factory/ERC20Token.sol\":1337:1350  liquidityPool */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token factory/ERC20Token.sol\":1323:1350  msg.sender == liquidityPool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token factory/ERC20Token.sol\":1323:1333  msg.sender */\n      caller\n        /* \"contracts/token factory/ERC20Token.sol\":1323:1350  msg.sender == liquidityPool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/token factory/ERC20Token.sol\":1315:1387  require(msg.sender == liquidityPool, \"Only liquidity pool can set this\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"contracts/token factory/ERC20Token.sol\":1413:1427  liquidityPool_ */\n      dup1\n        /* \"contracts/token factory/ERC20Token.sol\":1397:1410  liquidityPool */\n      0x05\n      0x00\n        /* \"contracts/token factory/ERC20Token.sol\":1397:1427  liquidityPool = liquidityPool_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/token factory/ERC20Token.sol\":1246:1434  function setLiquidityPool(address liquidityPool_) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/token factory/ERC20Token.sol\":428:450  address public creator */\n    tag_21:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_73\n      swap1\n      tag_72\n      jump\t// in\n    tag_73:\n      dup1\n      iszero\n      tag_74\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_75\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_74)\n    tag_75:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_76:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_76\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token factory/ERC20Token.sol\":357:385  address public liquidityPool */\n    tag_48:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_72\n      jump\t// in\n    tag_92:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_72\n      jump\t// in\n    tag_93:\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_95\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_94)\n    tag_95:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_96:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_96\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_64\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_107\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_113\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_115\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_120\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_124\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_127\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_130)\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_131\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_133\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_134)\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_137:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_139:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_140:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_167\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_139\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_141:\n        /* \"#utility.yul\":641:665   */\n      tag_169\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_140\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_170:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_142:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_172\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_141\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_18:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_175\n      tag_137\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":917:1036   */\n    tag_174:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_176\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_142\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1294   */\n    tag_143:\n        /* \"#utility.yul\":1263:1287   */\n      tag_178\n        /* \"#utility.yul\":1281:1286   */\n      dup2\n        /* \"#utility.yul\":1263:1287   */\n      tag_140\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":1258:1261   */\n      dup3\n        /* \"#utility.yul\":1251:1288   */\n      mstore\n        /* \"#utility.yul\":1176:1294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1300:1522   */\n    tag_23:\n        /* \"#utility.yul\":1393:1397   */\n      0x00\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"#utility.yul\":1408:1434   */\n      swap1\n      pop\n        /* \"#utility.yul\":1444:1515   */\n      tag_180\n        /* \"#utility.yul\":1512:1513   */\n      0x00\n        /* \"#utility.yul\":1501:1510   */\n      dup4\n        /* \"#utility.yul\":1497:1514   */\n      add\n        /* \"#utility.yul\":1488:1494   */\n      dup5\n        /* \"#utility.yul\":1444:1515   */\n      tag_143\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":1300:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1627   */\n    tag_144:\n        /* \"#utility.yul\":1580:1586   */\n      0x00\n        /* \"#utility.yul\":1614:1619   */\n      dup2\n        /* \"#utility.yul\":1608:1620   */\n      mload\n        /* \"#utility.yul\":1598:1620   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1633:1802   */\n    tag_145:\n        /* \"#utility.yul\":1717:1728   */\n      0x00\n        /* \"#utility.yul\":1751:1757   */\n      dup3\n        /* \"#utility.yul\":1746:1749   */\n      dup3\n        /* \"#utility.yul\":1739:1758   */\n      mstore\n        /* \"#utility.yul\":1791:1795   */\n      0x20\n        /* \"#utility.yul\":1786:1789   */\n      dup3\n        /* \"#utility.yul\":1782:1796   */\n      add\n        /* \"#utility.yul\":1767:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1633:1802   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1947   */\n    tag_146:\n        /* \"#utility.yul\":1897:1903   */\n      dup3\n        /* \"#utility.yul\":1892:1895   */\n      dup2\n        /* \"#utility.yul\":1887:1890   */\n      dup4\n        /* \"#utility.yul\":1881:1904   */\n      mcopy\n        /* \"#utility.yul\":1938:1939   */\n      0x00\n        /* \"#utility.yul\":1929:1935   */\n      dup4\n        /* \"#utility.yul\":1924:1927   */\n      dup4\n        /* \"#utility.yul\":1920:1936   */\n      add\n        /* \"#utility.yul\":1913:1940   */\n      mstore\n        /* \"#utility.yul\":1808:1947   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1953:2055   */\n    tag_147:\n        /* \"#utility.yul\":1994:2000   */\n      0x00\n        /* \"#utility.yul\":2045:2047   */\n      0x1f\n        /* \"#utility.yul\":2041:2048   */\n      not\n        /* \"#utility.yul\":2036:2038   */\n      0x1f\n        /* \"#utility.yul\":2029:2034   */\n      dup4\n        /* \"#utility.yul\":2025:2039   */\n      add\n        /* \"#utility.yul\":2021:2049   */\n      and\n        /* \"#utility.yul\":2011:2049   */\n      swap1\n      pop\n        /* \"#utility.yul\":1953:2055   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2061:2438   */\n    tag_148:\n        /* \"#utility.yul\":2149:2152   */\n      0x00\n        /* \"#utility.yul\":2177:2216   */\n      tag_186\n        /* \"#utility.yul\":2210:2215   */\n      dup3\n        /* \"#utility.yul\":2177:2216   */\n      tag_144\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2232:2303   */\n      tag_187\n        /* \"#utility.yul\":2296:2302   */\n      dup2\n        /* \"#utility.yul\":2291:2294   */\n      dup6\n        /* \"#utility.yul\":2232:2303   */\n      tag_145\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2225:2303   */\n      swap4\n      pop\n        /* \"#utility.yul\":2312:2377   */\n      tag_188\n        /* \"#utility.yul\":2370:2376   */\n      dup2\n        /* \"#utility.yul\":2365:2368   */\n      dup6\n        /* \"#utility.yul\":2358:2362   */\n      0x20\n        /* \"#utility.yul\":2351:2356   */\n      dup7\n        /* \"#utility.yul\":2347:2363   */\n      add\n        /* \"#utility.yul\":2312:2377   */\n      tag_146\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2402:2431   */\n      tag_189\n        /* \"#utility.yul\":2424:2430   */\n      dup2\n        /* \"#utility.yul\":2402:2431   */\n      tag_147\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2397:2400   */\n      dup5\n        /* \"#utility.yul\":2393:2432   */\n      add\n        /* \"#utility.yul\":2386:2432   */\n      swap2\n      pop\n        /* \"#utility.yul\":2153:2438   */\n      pop\n        /* \"#utility.yul\":2061:2438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2444:2757   */\n    tag_27:\n        /* \"#utility.yul\":2557:2561   */\n      0x00\n        /* \"#utility.yul\":2595:2597   */\n      0x20\n        /* \"#utility.yul\":2584:2593   */\n      dup3\n        /* \"#utility.yul\":2580:2598   */\n      add\n        /* \"#utility.yul\":2572:2598   */\n      swap1\n      pop\n        /* \"#utility.yul\":2644:2653   */\n      dup2\n        /* \"#utility.yul\":2638:2642   */\n      dup2\n        /* \"#utility.yul\":2634:2654   */\n      sub\n        /* \"#utility.yul\":2630:2631   */\n      0x00\n        /* \"#utility.yul\":2619:2628   */\n      dup4\n        /* \"#utility.yul\":2615:2632   */\n      add\n        /* \"#utility.yul\":2608:2655   */\n      mstore\n        /* \"#utility.yul\":2672:2750   */\n      tag_191\n        /* \"#utility.yul\":2745:2749   */\n      dup2\n        /* \"#utility.yul\":2736:2742   */\n      dup5\n        /* \"#utility.yul\":2672:2750   */\n      tag_148\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":2664:2750   */\n      swap1\n      pop\n        /* \"#utility.yul\":2444:2757   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2763:2840   */\n    tag_149:\n        /* \"#utility.yul\":2800:2807   */\n      0x00\n        /* \"#utility.yul\":2829:2834   */\n      dup2\n        /* \"#utility.yul\":2818:2834   */\n      swap1\n      pop\n        /* \"#utility.yul\":2763:2840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2846:2968   */\n    tag_150:\n        /* \"#utility.yul\":2919:2943   */\n      tag_194\n        /* \"#utility.yul\":2937:2942   */\n      dup2\n        /* \"#utility.yul\":2919:2943   */\n      tag_149\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":2912:2917   */\n      dup2\n        /* \"#utility.yul\":2909:2944   */\n      eq\n        /* \"#utility.yul\":2899:2962   */\n      tag_195\n      jumpi\n        /* \"#utility.yul\":2958:2959   */\n      0x00\n        /* \"#utility.yul\":2955:2956   */\n      dup1\n        /* \"#utility.yul\":2948:2960   */\n      revert\n        /* \"#utility.yul\":2899:2962   */\n    tag_195:\n        /* \"#utility.yul\":2846:2968   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2974:3113   */\n    tag_151:\n        /* \"#utility.yul\":3020:3025   */\n      0x00\n        /* \"#utility.yul\":3058:3064   */\n      dup2\n        /* \"#utility.yul\":3045:3065   */\n      calldataload\n        /* \"#utility.yul\":3036:3065   */\n      swap1\n      pop\n        /* \"#utility.yul\":3074:3107   */\n      tag_197\n        /* \"#utility.yul\":3101:3106   */\n      dup2\n        /* \"#utility.yul\":3074:3107   */\n      tag_150\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2974:3113   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3119:3593   */\n    tag_30:\n        /* \"#utility.yul\":3187:3193   */\n      0x00\n        /* \"#utility.yul\":3195:3201   */\n      dup1\n        /* \"#utility.yul\":3244:3246   */\n      0x40\n        /* \"#utility.yul\":3232:3241   */\n      dup4\n        /* \"#utility.yul\":3223:3230   */\n      dup6\n        /* \"#utility.yul\":3219:3242   */\n      sub\n        /* \"#utility.yul\":3215:3247   */\n      slt\n        /* \"#utility.yul\":3212:3331   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":3250:3329   */\n      tag_200\n      tag_137\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":3212:3331   */\n    tag_199:\n        /* \"#utility.yul\":3370:3371   */\n      0x00\n        /* \"#utility.yul\":3395:3448   */\n      tag_201\n        /* \"#utility.yul\":3440:3447   */\n      dup6\n        /* \"#utility.yul\":3431:3437   */\n      dup3\n        /* \"#utility.yul\":3420:3429   */\n      dup7\n        /* \"#utility.yul\":3416:3438   */\n      add\n        /* \"#utility.yul\":3395:3448   */\n      tag_142\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3385:3448   */\n      swap3\n      pop\n        /* \"#utility.yul\":3341:3458   */\n      pop\n        /* \"#utility.yul\":3497:3499   */\n      0x20\n        /* \"#utility.yul\":3523:3576   */\n      tag_202\n        /* \"#utility.yul\":3568:3575   */\n      dup6\n        /* \"#utility.yul\":3559:3565   */\n      dup3\n        /* \"#utility.yul\":3548:3557   */\n      dup7\n        /* \"#utility.yul\":3544:3566   */\n      add\n        /* \"#utility.yul\":3523:3576   */\n      tag_151\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3513:3576   */\n      swap2\n      pop\n        /* \"#utility.yul\":3468:3586   */\n      pop\n        /* \"#utility.yul\":3119:3593   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3599:3689   */\n    tag_152:\n        /* \"#utility.yul\":3633:3640   */\n      0x00\n        /* \"#utility.yul\":3676:3681   */\n      dup2\n        /* \"#utility.yul\":3669:3682   */\n      iszero\n        /* \"#utility.yul\":3662:3683   */\n      iszero\n        /* \"#utility.yul\":3651:3683   */\n      swap1\n      pop\n        /* \"#utility.yul\":3599:3689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3695:3804   */\n    tag_153:\n        /* \"#utility.yul\":3776:3797   */\n      tag_205\n        /* \"#utility.yul\":3791:3796   */\n      dup2\n        /* \"#utility.yul\":3776:3797   */\n      tag_152\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3771:3774   */\n      dup3\n        /* \"#utility.yul\":3764:3798   */\n      mstore\n        /* \"#utility.yul\":3695:3804   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3810:4020   */\n    tag_33:\n        /* \"#utility.yul\":3897:3901   */\n      0x00\n        /* \"#utility.yul\":3935:3937   */\n      0x20\n        /* \"#utility.yul\":3924:3933   */\n      dup3\n        /* \"#utility.yul\":3920:3938   */\n      add\n        /* \"#utility.yul\":3912:3938   */\n      swap1\n      pop\n        /* \"#utility.yul\":3948:4013   */\n      tag_207\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":3999:4008   */\n      dup4\n        /* \"#utility.yul\":3995:4012   */\n      add\n        /* \"#utility.yul\":3986:3992   */\n      dup5\n        /* \"#utility.yul\":3948:4013   */\n      tag_153\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3810:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4144   */\n    tag_154:\n        /* \"#utility.yul\":4113:4137   */\n      tag_209\n        /* \"#utility.yul\":4131:4136   */\n      dup2\n        /* \"#utility.yul\":4113:4137   */\n      tag_149\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":4108:4111   */\n      dup3\n        /* \"#utility.yul\":4101:4138   */\n      mstore\n        /* \"#utility.yul\":4026:4144   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4150:4372   */\n    tag_37:\n        /* \"#utility.yul\":4243:4247   */\n      0x00\n        /* \"#utility.yul\":4281:4283   */\n      0x20\n        /* \"#utility.yul\":4270:4279   */\n      dup3\n        /* \"#utility.yul\":4266:4284   */\n      add\n        /* \"#utility.yul\":4258:4284   */\n      swap1\n      pop\n        /* \"#utility.yul\":4294:4365   */\n      tag_211\n        /* \"#utility.yul\":4362:4363   */\n      0x00\n        /* \"#utility.yul\":4351:4360   */\n      dup4\n        /* \"#utility.yul\":4347:4364   */\n      add\n        /* \"#utility.yul\":4338:4344   */\n      dup5\n        /* \"#utility.yul\":4294:4365   */\n      tag_154\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4150:4372   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4378:4997   */\n    tag_40:\n        /* \"#utility.yul\":4455:4461   */\n      0x00\n        /* \"#utility.yul\":4463:4469   */\n      dup1\n        /* \"#utility.yul\":4471:4477   */\n      0x00\n        /* \"#utility.yul\":4520:4522   */\n      0x60\n        /* \"#utility.yul\":4508:4517   */\n      dup5\n        /* \"#utility.yul\":4499:4506   */\n      dup7\n        /* \"#utility.yul\":4495:4518   */\n      sub\n        /* \"#utility.yul\":4491:4523   */\n      slt\n        /* \"#utility.yul\":4488:4607   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":4526:4605   */\n      tag_214\n      tag_137\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":4488:4607   */\n    tag_213:\n        /* \"#utility.yul\":4646:4647   */\n      0x00\n        /* \"#utility.yul\":4671:4724   */\n      tag_215\n        /* \"#utility.yul\":4716:4723   */\n      dup7\n        /* \"#utility.yul\":4707:4713   */\n      dup3\n        /* \"#utility.yul\":4696:4705   */\n      dup8\n        /* \"#utility.yul\":4692:4714   */\n      add\n        /* \"#utility.yul\":4671:4724   */\n      tag_142\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4661:4724   */\n      swap4\n      pop\n        /* \"#utility.yul\":4617:4734   */\n      pop\n        /* \"#utility.yul\":4773:4775   */\n      0x20\n        /* \"#utility.yul\":4799:4852   */\n      tag_216\n        /* \"#utility.yul\":4844:4851   */\n      dup7\n        /* \"#utility.yul\":4835:4841   */\n      dup3\n        /* \"#utility.yul\":4824:4833   */\n      dup8\n        /* \"#utility.yul\":4820:4842   */\n      add\n        /* \"#utility.yul\":4799:4852   */\n      tag_142\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4789:4852   */\n      swap3\n      pop\n        /* \"#utility.yul\":4744:4862   */\n      pop\n        /* \"#utility.yul\":4901:4903   */\n      0x40\n        /* \"#utility.yul\":4927:4980   */\n      tag_217\n        /* \"#utility.yul\":4972:4979   */\n      dup7\n        /* \"#utility.yul\":4963:4969   */\n      dup3\n        /* \"#utility.yul\":4952:4961   */\n      dup8\n        /* \"#utility.yul\":4948:4970   */\n      add\n        /* \"#utility.yul\":4927:4980   */\n      tag_151\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4917:4980   */\n      swap2\n      pop\n        /* \"#utility.yul\":4872:4990   */\n      pop\n        /* \"#utility.yul\":4378:4997   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5003:5089   */\n    tag_155:\n        /* \"#utility.yul\":5038:5045   */\n      0x00\n        /* \"#utility.yul\":5078:5082   */\n      0xff\n        /* \"#utility.yul\":5071:5076   */\n      dup3\n        /* \"#utility.yul\":5067:5083   */\n      and\n        /* \"#utility.yul\":5056:5083   */\n      swap1\n      pop\n        /* \"#utility.yul\":5003:5089   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5095:5207   */\n    tag_156:\n        /* \"#utility.yul\":5178:5200   */\n      tag_220\n        /* \"#utility.yul\":5194:5199   */\n      dup2\n        /* \"#utility.yul\":5178:5200   */\n      tag_155\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5173:5176   */\n      dup3\n        /* \"#utility.yul\":5166:5201   */\n      mstore\n        /* \"#utility.yul\":5095:5207   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5213:5427   */\n    tag_46:\n        /* \"#utility.yul\":5302:5306   */\n      0x00\n        /* \"#utility.yul\":5340:5342   */\n      0x20\n        /* \"#utility.yul\":5329:5338   */\n      dup3\n        /* \"#utility.yul\":5325:5343   */\n      add\n        /* \"#utility.yul\":5317:5343   */\n      swap1\n      pop\n        /* \"#utility.yul\":5353:5420   */\n      tag_222\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5353:5420   */\n      tag_156\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":5213:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5907   */\n    tag_63:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5509:5515   */\n      dup1\n        /* \"#utility.yul\":5558:5560   */\n      0x40\n        /* \"#utility.yul\":5546:5555   */\n      dup4\n        /* \"#utility.yul\":5537:5544   */\n      dup6\n        /* \"#utility.yul\":5533:5556   */\n      sub\n        /* \"#utility.yul\":5529:5561   */\n      slt\n        /* \"#utility.yul\":5526:5645   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_225\n      tag_137\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":5526:5645   */\n    tag_224:\n        /* \"#utility.yul\":5684:5685   */\n      0x00\n        /* \"#utility.yul\":5709:5762   */\n      tag_226\n        /* \"#utility.yul\":5754:5761   */\n      dup6\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5734:5743   */\n      dup7\n        /* \"#utility.yul\":5730:5752   */\n      add\n        /* \"#utility.yul\":5709:5762   */\n      tag_142\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":5699:5762   */\n      swap3\n      pop\n        /* \"#utility.yul\":5655:5772   */\n      pop\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5837:5890   */\n      tag_227\n        /* \"#utility.yul\":5882:5889   */\n      dup6\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5862:5871   */\n      dup7\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5837:5890   */\n      tag_142\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5827:5890   */\n      swap2\n      pop\n        /* \"#utility.yul\":5782:5900   */\n      pop\n        /* \"#utility.yul\":5433:5907   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5913:6095   */\n    tag_157:\n        /* \"#utility.yul\":6053:6087   */\n      0x4f6e6c79206c697175696469747920706f6f6c2063616e207365742074686973\n        /* \"#utility.yul\":6049:6050   */\n      0x00\n        /* \"#utility.yul\":6041:6047   */\n      dup3\n        /* \"#utility.yul\":6037:6051   */\n      add\n        /* \"#utility.yul\":6030:6088   */\n      mstore\n        /* \"#utility.yul\":5913:6095   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6101:6467   */\n    tag_158:\n        /* \"#utility.yul\":6243:6246   */\n      0x00\n        /* \"#utility.yul\":6264:6331   */\n      tag_230\n        /* \"#utility.yul\":6328:6330   */\n      0x20\n        /* \"#utility.yul\":6323:6326   */\n      dup4\n        /* \"#utility.yul\":6264:6331   */\n      tag_145\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":6257:6331   */\n      swap2\n      pop\n        /* \"#utility.yul\":6340:6433   */\n      tag_231\n        /* \"#utility.yul\":6429:6432   */\n      dup3\n        /* \"#utility.yul\":6340:6433   */\n      tag_157\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":6458:6460   */\n      0x20\n        /* \"#utility.yul\":6453:6456   */\n      dup3\n        /* \"#utility.yul\":6449:6461   */\n      add\n        /* \"#utility.yul\":6442:6461   */\n      swap1\n      pop\n        /* \"#utility.yul\":6101:6467   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6473:6892   */\n    tag_69:\n        /* \"#utility.yul\":6639:6643   */\n      0x00\n        /* \"#utility.yul\":6677:6679   */\n      0x20\n        /* \"#utility.yul\":6666:6675   */\n      dup3\n        /* \"#utility.yul\":6662:6680   */\n      add\n        /* \"#utility.yul\":6654:6680   */\n      swap1\n      pop\n        /* \"#utility.yul\":6726:6735   */\n      dup2\n        /* \"#utility.yul\":6720:6724   */\n      dup2\n        /* \"#utility.yul\":6716:6736   */\n      sub\n        /* \"#utility.yul\":6712:6713   */\n      0x00\n        /* \"#utility.yul\":6701:6710   */\n      dup4\n        /* \"#utility.yul\":6697:6714   */\n      add\n        /* \"#utility.yul\":6690:6737   */\n      mstore\n        /* \"#utility.yul\":6754:6885   */\n      tag_233\n        /* \"#utility.yul\":6880:6884   */\n      dup2\n        /* \"#utility.yul\":6754:6885   */\n      tag_158\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":6746:6885   */\n      swap1\n      pop\n        /* \"#utility.yul\":6473:6892   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6898:7078   */\n    tag_159:\n        /* \"#utility.yul\":6946:7023   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6943:6944   */\n      0x00\n        /* \"#utility.yul\":6936:7024   */\n      mstore\n        /* \"#utility.yul\":7043:7047   */\n      0x22\n        /* \"#utility.yul\":7040:7041   */\n      0x04\n        /* \"#utility.yul\":7033:7048   */\n      mstore\n        /* \"#utility.yul\":7067:7071   */\n      0x24\n        /* \"#utility.yul\":7064:7065   */\n      0x00\n        /* \"#utility.yul\":7057:7072   */\n      revert\n        /* \"#utility.yul\":7084:7404   */\n    tag_72:\n        /* \"#utility.yul\":7128:7134   */\n      0x00\n        /* \"#utility.yul\":7165:7166   */\n      0x02\n        /* \"#utility.yul\":7159:7163   */\n      dup3\n        /* \"#utility.yul\":7155:7167   */\n      div\n        /* \"#utility.yul\":7145:7167   */\n      swap1\n      pop\n        /* \"#utility.yul\":7212:7213   */\n      0x01\n        /* \"#utility.yul\":7206:7210   */\n      dup3\n        /* \"#utility.yul\":7202:7214   */\n      and\n        /* \"#utility.yul\":7233:7251   */\n      dup1\n        /* \"#utility.yul\":7223:7304   */\n      tag_236\n      jumpi\n        /* \"#utility.yul\":7289:7293   */\n      0x7f\n        /* \"#utility.yul\":7281:7287   */\n      dup3\n        /* \"#utility.yul\":7277:7294   */\n      and\n        /* \"#utility.yul\":7267:7294   */\n      swap2\n      pop\n        /* \"#utility.yul\":7223:7304   */\n    tag_236:\n        /* \"#utility.yul\":7351:7353   */\n      0x20\n        /* \"#utility.yul\":7343:7349   */\n      dup3\n        /* \"#utility.yul\":7340:7354   */\n      lt\n        /* \"#utility.yul\":7320:7338   */\n      dup2\n        /* \"#utility.yul\":7317:7355   */\n      sub\n        /* \"#utility.yul\":7314:7398   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":7370:7388   */\n      tag_238\n      tag_159\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":7314:7398   */\n    tag_237:\n        /* \"#utility.yul\":7135:7404   */\n      pop\n        /* \"#utility.yul\":7084:7404   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7410:7852   */\n    tag_110:\n        /* \"#utility.yul\":7559:7563   */\n      0x00\n        /* \"#utility.yul\":7597:7599   */\n      0x60\n        /* \"#utility.yul\":7586:7595   */\n      dup3\n        /* \"#utility.yul\":7582:7600   */\n      add\n        /* \"#utility.yul\":7574:7600   */\n      swap1\n      pop\n        /* \"#utility.yul\":7610:7681   */\n      tag_240\n        /* \"#utility.yul\":7678:7679   */\n      0x00\n        /* \"#utility.yul\":7667:7676   */\n      dup4\n        /* \"#utility.yul\":7663:7680   */\n      add\n        /* \"#utility.yul\":7654:7660   */\n      dup7\n        /* \"#utility.yul\":7610:7681   */\n      tag_143\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":7691:7763   */\n      tag_241\n        /* \"#utility.yul\":7759:7761   */\n      0x20\n        /* \"#utility.yul\":7748:7757   */\n      dup4\n        /* \"#utility.yul\":7744:7762   */\n      add\n        /* \"#utility.yul\":7735:7741   */\n      dup6\n        /* \"#utility.yul\":7691:7763   */\n      tag_154\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":7773:7845   */\n      tag_242\n        /* \"#utility.yul\":7841:7843   */\n      0x40\n        /* \"#utility.yul\":7830:7839   */\n      dup4\n        /* \"#utility.yul\":7826:7844   */\n      add\n        /* \"#utility.yul\":7817:7823   */\n      dup5\n        /* \"#utility.yul\":7773:7845   */\n      tag_154\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":7410:7852   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7858:8038   */\n    tag_160:\n        /* \"#utility.yul\":7906:7983   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7903:7904   */\n      0x00\n        /* \"#utility.yul\":7896:7984   */\n      mstore\n        /* \"#utility.yul\":8003:8007   */\n      0x11\n        /* \"#utility.yul\":8000:8001   */\n      0x04\n        /* \"#utility.yul\":7993:8008   */\n      mstore\n        /* \"#utility.yul\":8027:8031   */\n      0x24\n        /* \"#utility.yul\":8024:8025   */\n      0x00\n        /* \"#utility.yul\":8017:8032   */\n      revert\n        /* \"#utility.yul\":8044:8235   */\n    tag_129:\n        /* \"#utility.yul\":8084:8087   */\n      0x00\n        /* \"#utility.yul\":8103:8123   */\n      tag_245\n        /* \"#utility.yul\":8121:8122   */\n      dup3\n        /* \"#utility.yul\":8103:8123   */\n      tag_149\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":8098:8123   */\n      swap2\n      pop\n        /* \"#utility.yul\":8137:8157   */\n      tag_246\n        /* \"#utility.yul\":8155:8156   */\n      dup4\n        /* \"#utility.yul\":8137:8157   */\n      tag_149\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":8132:8157   */\n      swap3\n      pop\n        /* \"#utility.yul\":8180:8181   */\n      dup3\n        /* \"#utility.yul\":8177:8178   */\n      dup3\n        /* \"#utility.yul\":8173:8182   */\n      add\n        /* \"#utility.yul\":8166:8182   */\n      swap1\n      pop\n        /* \"#utility.yul\":8201:8204   */\n      dup1\n        /* \"#utility.yul\":8198:8199   */\n      dup3\n        /* \"#utility.yul\":8195:8205   */\n      gt\n        /* \"#utility.yul\":8192:8228   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":8208:8226   */\n      tag_248\n      tag_160\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":8192:8228   */\n    tag_247:\n        /* \"#utility.yul\":8044:8235   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122008c7956369d3a74cc15c86449cbdacdb37a68cf0a08589531bf8cdc9be585e0564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_827": {
									"entryPoint": null,
									"id": 827,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 239,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 372,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1132,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_address_fromMemory": {
									"entryPoint": 1383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2432,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1937,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1118,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2321,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1568,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 926,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 930,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 922,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 918,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1706,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1838,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11260:6",
										"nodeType": "YulBlock",
										"src": "0:11260:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "423:28:6",
													"nodeType": "YulBlock",
													"src": "423:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:6",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:6",
																		"nodeType": "YulLiteral",
																		"src": "443:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nativeSrc": "433:12:6",
																"nodeType": "YulFunctionCall",
																"src": "433:12:6"
															},
															"nativeSrc": "433:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:6"
											},
											{
												"body": {
													"nativeSrc": "546:28:6",
													"nodeType": "YulBlock",
													"src": "546:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:6",
																		"nodeType": "YulLiteral",
																		"src": "563:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:6",
																		"nodeType": "YulLiteral",
																		"src": "566:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:6"
																},
																"nativeSrc": "556:12:6",
																"nodeType": "YulFunctionCall",
																"src": "556:12:6"
															},
															"nativeSrc": "556:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:6"
											},
											{
												"body": {
													"nativeSrc": "628:54:6",
													"nodeType": "YulBlock",
													"src": "628:54:6",
													"statements": [
														{
															"nativeSrc": "638:38:6",
															"nodeType": "YulAssignment",
															"src": "638:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:6",
																				"nodeType": "YulLiteral",
																				"src": "663:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:6"
																		},
																		"nativeSrc": "652:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:6",
																				"nodeType": "YulLiteral",
																				"src": "672:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:6"
																		},
																		"nativeSrc": "668:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:6"
																},
																"nativeSrc": "648:28:6",
																"nodeType": "YulFunctionCall",
																"src": "648:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:6",
														"nodeType": "YulTypedName",
														"src": "611:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:6",
														"nodeType": "YulTypedName",
														"src": "621:6:6",
														"type": ""
													}
												],
												"src": "580:102:6"
											},
											{
												"body": {
													"nativeSrc": "716:152:6",
													"nodeType": "YulBlock",
													"src": "716:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:6",
																		"nodeType": "YulLiteral",
																		"src": "733:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:6",
																		"nodeType": "YulLiteral",
																		"src": "736:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:6"
																},
																"nativeSrc": "726:88:6",
																"nodeType": "YulFunctionCall",
																"src": "726:88:6"
															},
															"nativeSrc": "726:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:6",
																		"nodeType": "YulLiteral",
																		"src": "830:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:6",
																		"nodeType": "YulLiteral",
																		"src": "833:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																},
																"nativeSrc": "823:15:6",
																"nodeType": "YulFunctionCall",
																"src": "823:15:6"
															},
															"nativeSrc": "823:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:6",
																		"nodeType": "YulLiteral",
																		"src": "854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:6",
																		"nodeType": "YulLiteral",
																		"src": "857:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:6"
																},
																"nativeSrc": "847:15:6",
																"nodeType": "YulFunctionCall",
																"src": "847:15:6"
															},
															"nativeSrc": "847:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:6"
											},
											{
												"body": {
													"nativeSrc": "917:238:6",
													"nodeType": "YulBlock",
													"src": "917:238:6",
													"statements": [
														{
															"nativeSrc": "927:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:6"
																		},
																		"nativeSrc": "957:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:6"
																},
																"nativeSrc": "945:40:6",
																"nodeType": "YulFunctionCall",
																"src": "945:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:6",
																	"nodeType": "YulTypedName",
																	"src": "931:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:6",
																"nodeType": "YulBlock",
																"src": "1096:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:6"
																			},
																			"nativeSrc": "1098:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:6"
																		},
																		"nativeSrc": "1098:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:6",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:6"
																		},
																		"nativeSrc": "1036:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:6"
																		},
																		"nativeSrc": "1072:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:6"
																},
																"nativeSrc": "1033:62:6",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:6"
															},
															"nativeSrc": "1030:88:6",
															"nodeType": "YulIf",
															"src": "1030:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:6"
																},
																"nativeSrc": "1127:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:6"
															},
															"nativeSrc": "1127:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:6",
														"nodeType": "YulTypedName",
														"src": "903:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:6",
														"nodeType": "YulTypedName",
														"src": "911:4:6",
														"type": ""
													}
												],
												"src": "874:281:6"
											},
											{
												"body": {
													"nativeSrc": "1202:88:6",
													"nodeType": "YulBlock",
													"src": "1202:88:6",
													"statements": [
														{
															"nativeSrc": "1212:30:6",
															"nodeType": "YulAssignment",
															"src": "1212:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:6"
																},
																"nativeSrc": "1222:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:6"
																},
																"nativeSrc": "1251:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:6"
															},
															"nativeSrc": "1251:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:6",
														"nodeType": "YulTypedName",
														"src": "1186:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:6",
														"nodeType": "YulTypedName",
														"src": "1195:6:6",
														"type": ""
													}
												],
												"src": "1161:129:6"
											},
											{
												"body": {
													"nativeSrc": "1363:241:6",
													"nodeType": "YulBlock",
													"src": "1363:241:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:6",
																"nodeType": "YulBlock",
																"src": "1468:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:6"
																			},
																			"nativeSrc": "1470:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:6"
																		},
																		"nativeSrc": "1470:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:6",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:6"
																},
																"nativeSrc": "1437:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:6"
															},
															"nativeSrc": "1434:56:6",
															"nodeType": "YulIf",
															"src": "1434:56:6"
														},
														{
															"nativeSrc": "1500:37:6",
															"nodeType": "YulAssignment",
															"src": "1500:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:6",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:6"
																},
																"nativeSrc": "1508:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:6"
																}
															]
														},
														{
															"nativeSrc": "1574:23:6",
															"nodeType": "YulAssignment",
															"src": "1574:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:6"
																},
																"nativeSrc": "1582:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:6",
														"nodeType": "YulTypedName",
														"src": "1347:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:6",
														"nodeType": "YulTypedName",
														"src": "1358:4:6",
														"type": ""
													}
												],
												"src": "1296:308:6"
											},
											{
												"body": {
													"nativeSrc": "1672:77:6",
													"nodeType": "YulBlock",
													"src": "1672:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:6"
																},
																"nativeSrc": "1683:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:6"
															},
															"nativeSrc": "1683:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:6"
																		},
																		"nativeSrc": "1722:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:6"
																},
																"nativeSrc": "1715:27:6",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:6"
															},
															"nativeSrc": "1715:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:6",
														"nodeType": "YulTypedName",
														"src": "1654:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:6",
														"nodeType": "YulTypedName",
														"src": "1659:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:6",
														"nodeType": "YulTypedName",
														"src": "1664:6:6",
														"type": ""
													}
												],
												"src": "1610:139:6"
											},
											{
												"body": {
													"nativeSrc": "1850:339:6",
													"nodeType": "YulBlock",
													"src": "1850:339:6",
													"statements": [
														{
															"nativeSrc": "1860:75:6",
															"nodeType": "YulAssignment",
															"src": "1860:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:6"
																		},
																		"nativeSrc": "1885:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:6"
																},
																"nativeSrc": "1869:66:6",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:6"
																},
																"nativeSrc": "1944:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:6"
															},
															"nativeSrc": "1944:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:6"
														},
														{
															"nativeSrc": "1974:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:6"
																},
																"nativeSrc": "1985:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:6",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:6",
																"nodeType": "YulBlock",
																"src": "2039:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:6"
																			},
																			"nativeSrc": "2041:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:6"
																		},
																		"nativeSrc": "2041:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:6"
																		},
																		"nativeSrc": "2016:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:6"
																},
																"nativeSrc": "2013:25:6",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:6"
															},
															"nativeSrc": "2010:112:6",
															"nodeType": "YulIf",
															"src": "2010:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:6"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:6"
																},
																"nativeSrc": "2131:52:6",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:6"
															},
															"nativeSrc": "2131:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:6",
														"nodeType": "YulTypedName",
														"src": "1823:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:6",
														"nodeType": "YulTypedName",
														"src": "1828:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:6",
														"nodeType": "YulTypedName",
														"src": "1836:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:6",
														"nodeType": "YulTypedName",
														"src": "1844:5:6",
														"type": ""
													}
												],
												"src": "1755:434:6"
											},
											{
												"body": {
													"nativeSrc": "2282:282:6",
													"nodeType": "YulBlock",
													"src": "2282:282:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:6",
																"nodeType": "YulBlock",
																"src": "2331:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:6"
																			},
																			"nativeSrc": "2333:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:6"
																		},
																		"nativeSrc": "2333:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:6",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:6"
																				},
																				"nativeSrc": "2306:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:6"
																		},
																		"nativeSrc": "2302:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:6"
																},
																"nativeSrc": "2295:35:6",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:6"
															},
															"nativeSrc": "2292:122:6",
															"nodeType": "YulIf",
															"src": "2292:122:6"
														},
														{
															"nativeSrc": "2423:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:6"
																},
																"nativeSrc": "2437:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:6",
															"nodeType": "YulAssignment",
															"src": "2459:99:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:6"
																		},
																		"nativeSrc": "2527:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:6"
																},
																"nativeSrc": "2468:90:6",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:6",
														"nodeType": "YulTypedName",
														"src": "2260:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:6",
														"nodeType": "YulTypedName",
														"src": "2268:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:6",
														"nodeType": "YulTypedName",
														"src": "2276:5:6",
														"type": ""
													}
												],
												"src": "2209:355:6"
											},
											{
												"body": {
													"nativeSrc": "2615:32:6",
													"nodeType": "YulBlock",
													"src": "2615:32:6",
													"statements": [
														{
															"nativeSrc": "2625:16:6",
															"nodeType": "YulAssignment",
															"src": "2625:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2636:5:6",
																"nodeType": "YulIdentifier",
																"src": "2636:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2570:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:6",
														"nodeType": "YulTypedName",
														"src": "2597:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:6",
														"nodeType": "YulTypedName",
														"src": "2607:7:6",
														"type": ""
													}
												],
												"src": "2570:77:6"
											},
											{
												"body": {
													"nativeSrc": "2696:79:6",
													"nodeType": "YulBlock",
													"src": "2696:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2753:16:6",
																"nodeType": "YulBlock",
																"src": "2753:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2762:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2762:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2765:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2755:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:6"
																			},
																			"nativeSrc": "2755:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2755:12:6"
																		},
																		"nativeSrc": "2755:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2755:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2719:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2719:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2744:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2744:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2726:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2726:17:6"
																				},
																				"nativeSrc": "2726:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2726:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2716:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2716:2:6"
																		},
																		"nativeSrc": "2716:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2716:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2709:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:6"
																},
																"nativeSrc": "2709:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2709:43:6"
															},
															"nativeSrc": "2706:63:6",
															"nodeType": "YulIf",
															"src": "2706:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2653:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2689:5:6",
														"nodeType": "YulTypedName",
														"src": "2689:5:6",
														"type": ""
													}
												],
												"src": "2653:122:6"
											},
											{
												"body": {
													"nativeSrc": "2844:80:6",
													"nodeType": "YulBlock",
													"src": "2844:80:6",
													"statements": [
														{
															"nativeSrc": "2854:22:6",
															"nodeType": "YulAssignment",
															"src": "2854:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2869:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2869:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2863:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2863:5:6"
																},
																"nativeSrc": "2863:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2863:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2854:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2854:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2912:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2912:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2885:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2885:26:6"
																},
																"nativeSrc": "2885:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2885:33:6"
															},
															"nativeSrc": "2885:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2885:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2781:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2822:6:6",
														"nodeType": "YulTypedName",
														"src": "2822:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2830:3:6",
														"nodeType": "YulTypedName",
														"src": "2830:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2838:5:6",
														"nodeType": "YulTypedName",
														"src": "2838:5:6",
														"type": ""
													}
												],
												"src": "2781:143:6"
											},
											{
												"body": {
													"nativeSrc": "2975:81:6",
													"nodeType": "YulBlock",
													"src": "2975:81:6",
													"statements": [
														{
															"nativeSrc": "2985:65:6",
															"nodeType": "YulAssignment",
															"src": "2985:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3000:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3000:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3007:42:6",
																		"nodeType": "YulLiteral",
																		"src": "3007:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2996:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2996:3:6"
																},
																"nativeSrc": "2996:54:6",
																"nodeType": "YulFunctionCall",
																"src": "2996:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2985:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2985:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2930:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2957:5:6",
														"nodeType": "YulTypedName",
														"src": "2957:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2967:7:6",
														"nodeType": "YulTypedName",
														"src": "2967:7:6",
														"type": ""
													}
												],
												"src": "2930:126:6"
											},
											{
												"body": {
													"nativeSrc": "3107:51:6",
													"nodeType": "YulBlock",
													"src": "3107:51:6",
													"statements": [
														{
															"nativeSrc": "3117:35:6",
															"nodeType": "YulAssignment",
															"src": "3117:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3146:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3146:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3128:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3128:17:6"
																},
																"nativeSrc": "3128:24:6",
																"nodeType": "YulFunctionCall",
																"src": "3128:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3117:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3117:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3062:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3089:5:6",
														"nodeType": "YulTypedName",
														"src": "3089:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3099:7:6",
														"nodeType": "YulTypedName",
														"src": "3099:7:6",
														"type": ""
													}
												],
												"src": "3062:96:6"
											},
											{
												"body": {
													"nativeSrc": "3207:79:6",
													"nodeType": "YulBlock",
													"src": "3207:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3264:16:6",
																"nodeType": "YulBlock",
																"src": "3264:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3273:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3273:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3276:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3276:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3266:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3266:6:6"
																			},
																			"nativeSrc": "3266:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3266:12:6"
																		},
																		"nativeSrc": "3266:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3266:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3230:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3230:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3255:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3255:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3237:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3237:17:6"
																				},
																				"nativeSrc": "3237:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3237:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3227:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3227:2:6"
																		},
																		"nativeSrc": "3227:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3227:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3220:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3220:6:6"
																},
																"nativeSrc": "3220:43:6",
																"nodeType": "YulFunctionCall",
																"src": "3220:43:6"
															},
															"nativeSrc": "3217:63:6",
															"nodeType": "YulIf",
															"src": "3217:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3164:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3200:5:6",
														"nodeType": "YulTypedName",
														"src": "3200:5:6",
														"type": ""
													}
												],
												"src": "3164:122:6"
											},
											{
												"body": {
													"nativeSrc": "3355:80:6",
													"nodeType": "YulBlock",
													"src": "3355:80:6",
													"statements": [
														{
															"nativeSrc": "3365:22:6",
															"nodeType": "YulAssignment",
															"src": "3365:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3380:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3380:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3374:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3374:5:6"
																},
																"nativeSrc": "3374:13:6",
																"nodeType": "YulFunctionCall",
																"src": "3374:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3365:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3365:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3423:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3423:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3396:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "3396:26:6"
																},
																"nativeSrc": "3396:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3396:33:6"
															},
															"nativeSrc": "3396:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3396:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "3292:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3333:6:6",
														"nodeType": "YulTypedName",
														"src": "3333:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3341:3:6",
														"nodeType": "YulTypedName",
														"src": "3341:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3349:5:6",
														"nodeType": "YulTypedName",
														"src": "3349:5:6",
														"type": ""
													}
												],
												"src": "3292:143:6"
											},
											{
												"body": {
													"nativeSrc": "3606:1158:6",
													"nodeType": "YulBlock",
													"src": "3606:1158:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3653:83:6",
																"nodeType": "YulBlock",
																"src": "3653:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3655:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3655:77:6"
																			},
																			"nativeSrc": "3655:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3655:79:6"
																		},
																		"nativeSrc": "3655:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3655:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3627:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3627:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3636:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3636:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3623:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3623:3:6"
																		},
																		"nativeSrc": "3623:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3623:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3648:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3648:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3619:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3619:3:6"
																},
																"nativeSrc": "3619:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3619:33:6"
															},
															"nativeSrc": "3616:120:6",
															"nodeType": "YulIf",
															"src": "3616:120:6"
														},
														{
															"nativeSrc": "3746:291:6",
															"nodeType": "YulBlock",
															"src": "3746:291:6",
															"statements": [
																{
																	"nativeSrc": "3761:38:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3761:38:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3785:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3785:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3796:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3796:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3781:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3781:3:6"
																				},
																				"nativeSrc": "3781:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3781:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3775:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3775:5:6"
																		},
																		"nativeSrc": "3775:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3775:24:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3765:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3765:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3846:83:6",
																		"nodeType": "YulBlock",
																		"src": "3846:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3848:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "3848:77:6"
																					},
																					"nativeSrc": "3848:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3848:79:6"
																				},
																				"nativeSrc": "3848:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3848:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3818:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3818:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3826:18:6",
																				"nodeType": "YulLiteral",
																				"src": "3826:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3815:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3815:2:6"
																		},
																		"nativeSrc": "3815:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3815:30:6"
																	},
																	"nativeSrc": "3812:117:6",
																	"nodeType": "YulIf",
																	"src": "3812:117:6"
																},
																{
																	"nativeSrc": "3943:84:6",
																	"nodeType": "YulAssignment",
																	"src": "3943:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3999:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3999:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4010:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4010:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3995:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3995:3:6"
																				},
																				"nativeSrc": "3995:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3995:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4019:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4019:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3953:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3953:41:6"
																		},
																		"nativeSrc": "3953:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3953:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3943:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3943:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4047:292:6",
															"nodeType": "YulBlock",
															"src": "4047:292:6",
															"statements": [
																{
																	"nativeSrc": "4062:39:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4062:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4086:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4086:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4097:2:6",
																						"nodeType": "YulLiteral",
																						"src": "4097:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4082:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4082:3:6"
																				},
																				"nativeSrc": "4082:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4082:18:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4076:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "4076:5:6"
																		},
																		"nativeSrc": "4076:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4076:25:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4066:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4066:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4148:83:6",
																		"nodeType": "YulBlock",
																		"src": "4148:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4150:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "4150:77:6"
																					},
																					"nativeSrc": "4150:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4150:79:6"
																				},
																				"nativeSrc": "4150:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4150:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4120:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4120:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4128:18:6",
																				"nodeType": "YulLiteral",
																				"src": "4128:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4117:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4117:2:6"
																		},
																		"nativeSrc": "4117:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4117:30:6"
																	},
																	"nativeSrc": "4114:117:6",
																	"nodeType": "YulIf",
																	"src": "4114:117:6"
																},
																{
																	"nativeSrc": "4245:84:6",
																	"nodeType": "YulAssignment",
																	"src": "4245:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4301:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4301:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4312:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4312:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4297:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4297:3:6"
																				},
																				"nativeSrc": "4297:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4297:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4321:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4321:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4255:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "4255:41:6"
																		},
																		"nativeSrc": "4255:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4255:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4245:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4245:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4349:129:6",
															"nodeType": "YulBlock",
															"src": "4349:129:6",
															"statements": [
																{
																	"nativeSrc": "4364:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4364:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4378:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4378:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4368:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4368:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4394:74:6",
																	"nodeType": "YulAssignment",
																	"src": "4394:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4440:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4440:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4451:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4451:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4436:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4436:3:6"
																				},
																				"nativeSrc": "4436:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4436:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4460:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4460:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4404:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "4404:31:6"
																		},
																		"nativeSrc": "4404:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4404:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4394:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4394:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4488:129:6",
															"nodeType": "YulBlock",
															"src": "4488:129:6",
															"statements": [
																{
																	"nativeSrc": "4503:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4503:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4517:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4517:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4507:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4507:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4533:74:6",
																	"nodeType": "YulAssignment",
																	"src": "4533:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4579:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4579:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4590:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4590:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4575:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4575:3:6"
																				},
																				"nativeSrc": "4575:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4575:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4599:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4599:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4543:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "4543:31:6"
																		},
																		"nativeSrc": "4543:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4543:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4533:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4533:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4627:130:6",
															"nodeType": "YulBlock",
															"src": "4627:130:6",
															"statements": [
																{
																	"nativeSrc": "4642:17:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4642:17:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4656:3:6",
																		"nodeType": "YulLiteral",
																		"src": "4656:3:6",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4646:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4646:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4673:74:6",
																	"nodeType": "YulAssignment",
																	"src": "4673:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4719:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4719:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4730:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4730:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4715:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4715:3:6"
																				},
																				"nativeSrc": "4715:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4715:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4739:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4739:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4683:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "4683:31:6"
																		},
																		"nativeSrc": "4683:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4683:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "4673:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4673:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_address_fromMemory",
												"nativeSrc": "3441:1323:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3544:9:6",
														"nodeType": "YulTypedName",
														"src": "3544:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3555:7:6",
														"nodeType": "YulTypedName",
														"src": "3555:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3567:6:6",
														"nodeType": "YulTypedName",
														"src": "3567:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3575:6:6",
														"nodeType": "YulTypedName",
														"src": "3575:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3583:6:6",
														"nodeType": "YulTypedName",
														"src": "3583:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3591:6:6",
														"nodeType": "YulTypedName",
														"src": "3591:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3599:6:6",
														"nodeType": "YulTypedName",
														"src": "3599:6:6",
														"type": ""
													}
												],
												"src": "3441:1323:6"
											},
											{
												"body": {
													"nativeSrc": "4829:40:6",
													"nodeType": "YulBlock",
													"src": "4829:40:6",
													"statements": [
														{
															"nativeSrc": "4840:22:6",
															"nodeType": "YulAssignment",
															"src": "4840:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4856:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4856:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4850:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4850:5:6"
																},
																"nativeSrc": "4850:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4850:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4840:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4840:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4770:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4812:5:6",
														"nodeType": "YulTypedName",
														"src": "4812:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4822:6:6",
														"nodeType": "YulTypedName",
														"src": "4822:6:6",
														"type": ""
													}
												],
												"src": "4770:99:6"
											},
											{
												"body": {
													"nativeSrc": "4903:152:6",
													"nodeType": "YulBlock",
													"src": "4903:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4920:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4920:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4923:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4923:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4913:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4913:6:6"
																},
																"nativeSrc": "4913:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4913:88:6"
															},
															"nativeSrc": "4913:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4913:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5017:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5017:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5020:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5020:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5010:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5010:6:6"
																},
																"nativeSrc": "5010:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5010:15:6"
															},
															"nativeSrc": "5010:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5010:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5041:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5041:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5044:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5044:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5034:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5034:6:6"
																},
																"nativeSrc": "5034:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5034:15:6"
															},
															"nativeSrc": "5034:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5034:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4875:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4875:180:6"
											},
											{
												"body": {
													"nativeSrc": "5112:269:6",
													"nodeType": "YulBlock",
													"src": "5112:269:6",
													"statements": [
														{
															"nativeSrc": "5122:22:6",
															"nodeType": "YulAssignment",
															"src": "5122:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5136:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5136:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5142:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5142:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5132:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5132:3:6"
																},
																"nativeSrc": "5132:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5132:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5122:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5122:6:6"
																}
															]
														},
														{
															"nativeSrc": "5153:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5153:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5183:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5183:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5189:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5179:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5179:3:6"
																},
																"nativeSrc": "5179:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5179:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5157:18:6",
																	"nodeType": "YulTypedName",
																	"src": "5157:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5230:51:6",
																"nodeType": "YulBlock",
																"src": "5230:51:6",
																"statements": [
																	{
																		"nativeSrc": "5244:27:6",
																		"nodeType": "YulAssignment",
																		"src": "5244:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5258:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "5258:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5266:4:6",
																					"nodeType": "YulLiteral",
																					"src": "5266:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5254:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5254:3:6"
																			},
																			"nativeSrc": "5254:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5254:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5244:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5244:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5210:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "5210:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5203:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5203:6:6"
																},
																"nativeSrc": "5203:26:6",
																"nodeType": "YulFunctionCall",
																"src": "5203:26:6"
															},
															"nativeSrc": "5200:81:6",
															"nodeType": "YulIf",
															"src": "5200:81:6"
														},
														{
															"body": {
																"nativeSrc": "5333:42:6",
																"nodeType": "YulBlock",
																"src": "5333:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5347:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5347:16:6"
																			},
																			"nativeSrc": "5347:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5347:18:6"
																		},
																		"nativeSrc": "5347:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5347:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5297:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "5297:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5320:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5320:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5328:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5328:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5317:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5317:2:6"
																		},
																		"nativeSrc": "5317:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5317:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5294:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5294:2:6"
																},
																"nativeSrc": "5294:38:6",
																"nodeType": "YulFunctionCall",
																"src": "5294:38:6"
															},
															"nativeSrc": "5291:84:6",
															"nodeType": "YulIf",
															"src": "5291:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5061:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5096:4:6",
														"nodeType": "YulTypedName",
														"src": "5096:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5105:6:6",
														"nodeType": "YulTypedName",
														"src": "5105:6:6",
														"type": ""
													}
												],
												"src": "5061:320:6"
											},
											{
												"body": {
													"nativeSrc": "5441:87:6",
													"nodeType": "YulBlock",
													"src": "5441:87:6",
													"statements": [
														{
															"nativeSrc": "5451:11:6",
															"nodeType": "YulAssignment",
															"src": "5451:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "5459:3:6",
																"nodeType": "YulIdentifier",
																"src": "5459:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5451:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5451:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5479:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5479:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5482:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5482:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5472:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5472:6:6"
																},
																"nativeSrc": "5472:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5472:14:6"
															},
															"nativeSrc": "5472:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "5472:14:6"
														},
														{
															"nativeSrc": "5495:26:6",
															"nodeType": "YulAssignment",
															"src": "5495:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5513:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5513:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5516:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5516:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5503:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:6"
																},
																"nativeSrc": "5503:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5503:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5495:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5495:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5387:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5428:3:6",
														"nodeType": "YulTypedName",
														"src": "5428:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5436:4:6",
														"nodeType": "YulTypedName",
														"src": "5436:4:6",
														"type": ""
													}
												],
												"src": "5387:141:6"
											},
											{
												"body": {
													"nativeSrc": "5578:49:6",
													"nodeType": "YulBlock",
													"src": "5578:49:6",
													"statements": [
														{
															"nativeSrc": "5588:33:6",
															"nodeType": "YulAssignment",
															"src": "5588:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5606:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5606:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5613:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5613:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5602:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5602:3:6"
																		},
																		"nativeSrc": "5602:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5602:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5618:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5618:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5598:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5598:3:6"
																},
																"nativeSrc": "5598:23:6",
																"nodeType": "YulFunctionCall",
																"src": "5598:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5588:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5588:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5534:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5561:5:6",
														"nodeType": "YulTypedName",
														"src": "5561:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5571:6:6",
														"nodeType": "YulTypedName",
														"src": "5571:6:6",
														"type": ""
													}
												],
												"src": "5534:93:6"
											},
											{
												"body": {
													"nativeSrc": "5686:54:6",
													"nodeType": "YulBlock",
													"src": "5686:54:6",
													"statements": [
														{
															"nativeSrc": "5696:37:6",
															"nodeType": "YulAssignment",
															"src": "5696:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5721:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5721:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5727:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5727:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5717:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5717:3:6"
																},
																"nativeSrc": "5717:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5717:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5696:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "5696:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5633:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5661:4:6",
														"nodeType": "YulTypedName",
														"src": "5661:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5667:5:6",
														"nodeType": "YulTypedName",
														"src": "5667:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5677:8:6",
														"nodeType": "YulTypedName",
														"src": "5677:8:6",
														"type": ""
													}
												],
												"src": "5633:107:6"
											},
											{
												"body": {
													"nativeSrc": "5822:317:6",
													"nodeType": "YulBlock",
													"src": "5822:317:6",
													"statements": [
														{
															"nativeSrc": "5832:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5832:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5853:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "5853:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5865:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5865:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5849:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5849:3:6"
																},
																"nativeSrc": "5849:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5849:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5836:9:6",
																	"nodeType": "YulTypedName",
																	"src": "5836:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5876:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5876:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5907:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5907:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5918:66:6",
																		"nodeType": "YulLiteral",
																		"src": "5918:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5888:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5888:18:6"
																},
																"nativeSrc": "5888:97:6",
																"nodeType": "YulFunctionCall",
																"src": "5888:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5880:4:6",
																	"nodeType": "YulTypedName",
																	"src": "5880:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5994:51:6",
															"nodeType": "YulAssignment",
															"src": "5994:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "6025:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6025:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "6036:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "6036:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "6006:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "6006:18:6"
																},
																"nativeSrc": "6006:39:6",
																"nodeType": "YulFunctionCall",
																"src": "6006:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5994:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "5994:8:6"
																}
															]
														},
														{
															"nativeSrc": "6054:30:6",
															"nodeType": "YulAssignment",
															"src": "6054:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6067:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6067:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "6078:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6078:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6074:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6074:3:6"
																		},
																		"nativeSrc": "6074:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6074:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6063:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6063:3:6"
																},
																"nativeSrc": "6063:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6063:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6054:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6054:5:6"
																}
															]
														},
														{
															"nativeSrc": "6093:40:6",
															"nodeType": "YulAssignment",
															"src": "6093:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6106:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6106:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "6117:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "6117:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "6127:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6127:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6113:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6113:3:6"
																		},
																		"nativeSrc": "6113:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6113:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6103:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6103:2:6"
																},
																"nativeSrc": "6103:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6103:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6093:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6093:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5746:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5783:5:6",
														"nodeType": "YulTypedName",
														"src": "5783:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5790:10:6",
														"nodeType": "YulTypedName",
														"src": "5790:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5802:8:6",
														"nodeType": "YulTypedName",
														"src": "5802:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5815:6:6",
														"nodeType": "YulTypedName",
														"src": "5815:6:6",
														"type": ""
													}
												],
												"src": "5746:393:6"
											},
											{
												"body": {
													"nativeSrc": "6177:28:6",
													"nodeType": "YulBlock",
													"src": "6177:28:6",
													"statements": [
														{
															"nativeSrc": "6187:12:6",
															"nodeType": "YulAssignment",
															"src": "6187:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "6194:5:6",
																"nodeType": "YulIdentifier",
																"src": "6194:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6187:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6187:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6145:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6163:5:6",
														"nodeType": "YulTypedName",
														"src": "6163:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6173:3:6",
														"nodeType": "YulTypedName",
														"src": "6173:3:6",
														"type": ""
													}
												],
												"src": "6145:60:6"
											},
											{
												"body": {
													"nativeSrc": "6271:82:6",
													"nodeType": "YulBlock",
													"src": "6271:82:6",
													"statements": [
														{
															"nativeSrc": "6281:66:6",
															"nodeType": "YulAssignment",
															"src": "6281:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6339:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6339:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6321:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "6321:17:6"
																				},
																				"nativeSrc": "6321:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6321:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6312:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "6312:8:6"
																		},
																		"nativeSrc": "6312:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6312:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6294:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6294:17:6"
																},
																"nativeSrc": "6294:53:6",
																"nodeType": "YulFunctionCall",
																"src": "6294:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6281:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "6281:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "6211:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6251:5:6",
														"nodeType": "YulTypedName",
														"src": "6251:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6261:9:6",
														"nodeType": "YulTypedName",
														"src": "6261:9:6",
														"type": ""
													}
												],
												"src": "6211:142:6"
											},
											{
												"body": {
													"nativeSrc": "6406:28:6",
													"nodeType": "YulBlock",
													"src": "6406:28:6",
													"statements": [
														{
															"nativeSrc": "6416:12:6",
															"nodeType": "YulAssignment",
															"src": "6416:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "6423:5:6",
																"nodeType": "YulIdentifier",
																"src": "6423:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6416:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6416:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6359:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6392:5:6",
														"nodeType": "YulTypedName",
														"src": "6392:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6402:3:6",
														"nodeType": "YulTypedName",
														"src": "6402:3:6",
														"type": ""
													}
												],
												"src": "6359:75:6"
											},
											{
												"body": {
													"nativeSrc": "6516:193:6",
													"nodeType": "YulBlock",
													"src": "6516:193:6",
													"statements": [
														{
															"nativeSrc": "6526:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6581:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "6581:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6550:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "6550:30:6"
																},
																"nativeSrc": "6550:39:6",
																"nodeType": "YulFunctionCall",
																"src": "6550:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6530:16:6",
																	"nodeType": "YulTypedName",
																	"src": "6530:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6605:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6605:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6645:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "6645:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6639:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6639:5:6"
																				},
																				"nativeSrc": "6639:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6639:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6652:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6652:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6684:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "6684:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6660:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "6660:23:6"
																				},
																				"nativeSrc": "6660:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6660:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6611:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "6611:27:6"
																		},
																		"nativeSrc": "6611:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6611:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6598:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6598:6:6"
																},
																"nativeSrc": "6598:105:6",
																"nodeType": "YulFunctionCall",
																"src": "6598:105:6"
															},
															"nativeSrc": "6598:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "6598:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6440:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6493:4:6",
														"nodeType": "YulTypedName",
														"src": "6493:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6499:6:6",
														"nodeType": "YulTypedName",
														"src": "6499:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6507:7:6",
														"nodeType": "YulTypedName",
														"src": "6507:7:6",
														"type": ""
													}
												],
												"src": "6440:269:6"
											},
											{
												"body": {
													"nativeSrc": "6764:24:6",
													"nodeType": "YulBlock",
													"src": "6764:24:6",
													"statements": [
														{
															"nativeSrc": "6774:8:6",
															"nodeType": "YulAssignment",
															"src": "6774:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "6781:1:6",
																"nodeType": "YulLiteral",
																"src": "6781:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6774:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6774:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6715:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6760:3:6",
														"nodeType": "YulTypedName",
														"src": "6760:3:6",
														"type": ""
													}
												],
												"src": "6715:73:6"
											},
											{
												"body": {
													"nativeSrc": "6847:136:6",
													"nodeType": "YulBlock",
													"src": "6847:136:6",
													"statements": [
														{
															"nativeSrc": "6857:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6857:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6871:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "6871:30:6"
																},
																"nativeSrc": "6871:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6871:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6861:6:6",
																	"nodeType": "YulTypedName",
																	"src": "6861:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6956:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6956:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6962:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6962:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6970:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6970:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6912:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6912:43:6"
																},
																"nativeSrc": "6912:65:6",
																"nodeType": "YulFunctionCall",
																"src": "6912:65:6"
															},
															"nativeSrc": "6912:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "6912:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6794:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6833:4:6",
														"nodeType": "YulTypedName",
														"src": "6833:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6839:6:6",
														"nodeType": "YulTypedName",
														"src": "6839:6:6",
														"type": ""
													}
												],
												"src": "6794:189:6"
											},
											{
												"body": {
													"nativeSrc": "7039:136:6",
													"nodeType": "YulBlock",
													"src": "7039:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7106:63:6",
																"nodeType": "YulBlock",
																"src": "7106:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7150:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "7150:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7157:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7157:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "7120:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "7120:29:6"
																			},
																			"nativeSrc": "7120:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7120:39:6"
																		},
																		"nativeSrc": "7120:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7120:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "7059:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7059:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7066:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7066:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7056:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7056:2:6"
																},
																"nativeSrc": "7056:14:6",
																"nodeType": "YulFunctionCall",
																"src": "7056:14:6"
															},
															"nativeSrc": "7049:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7071:26:6",
																"nodeType": "YulBlock",
																"src": "7071:26:6",
																"statements": [
																	{
																		"nativeSrc": "7073:22:6",
																		"nodeType": "YulAssignment",
																		"src": "7073:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7086:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "7086:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7093:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7093:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7082:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7082:3:6"
																			},
																			"nativeSrc": "7082:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7082:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "7073:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7073:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7053:2:6",
																"nodeType": "YulBlock",
																"src": "7053:2:6",
																"statements": []
															},
															"src": "7049:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6989:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "7027:5:6",
														"nodeType": "YulTypedName",
														"src": "7027:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7034:3:6",
														"nodeType": "YulTypedName",
														"src": "7034:3:6",
														"type": ""
													}
												],
												"src": "6989:186:6"
											},
											{
												"body": {
													"nativeSrc": "7260:464:6",
													"nodeType": "YulBlock",
													"src": "7260:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7286:431:6",
																"nodeType": "YulBlock",
																"src": "7286:431:6",
																"statements": [
																	{
																		"nativeSrc": "7300:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7300:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7348:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "7348:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7316:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "7316:31:6"
																			},
																			"nativeSrc": "7316:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7316:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7304:8:6",
																				"nodeType": "YulTypedName",
																				"src": "7304:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7367:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7367:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7390:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "7390:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7418:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "7418:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7400:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "7400:17:6"
																					},
																					"nativeSrc": "7400:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7400:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7386:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7386:3:6"
																			},
																			"nativeSrc": "7386:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7386:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7371:11:6",
																				"nodeType": "YulTypedName",
																				"src": "7371:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7587:27:6",
																			"nodeType": "YulBlock",
																			"src": "7587:27:6",
																			"statements": [
																				{
																					"nativeSrc": "7589:23:6",
																					"nodeType": "YulAssignment",
																					"src": "7589:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7604:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "7604:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7589:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "7589:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7571:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "7571:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7583:2:6",
																					"nodeType": "YulLiteral",
																					"src": "7583:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7568:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "7568:2:6"
																			},
																			"nativeSrc": "7568:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7568:18:6"
																		},
																		"nativeSrc": "7565:49:6",
																		"nodeType": "YulIf",
																		"src": "7565:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7656:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "7656:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7673:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "7673:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7701:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7701:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7683:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "7683:17:6"
																							},
																							"nativeSrc": "7683:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "7683:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7669:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "7669:3:6"
																					},
																					"nativeSrc": "7669:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7669:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7627:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "7627:28:6"
																			},
																			"nativeSrc": "7627:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7627:80:6"
																		},
																		"nativeSrc": "7627:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7627:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7277:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7277:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7282:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7282:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7274:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7274:2:6"
																},
																"nativeSrc": "7274:11:6",
																"nodeType": "YulFunctionCall",
																"src": "7274:11:6"
															},
															"nativeSrc": "7271:446:6",
															"nodeType": "YulIf",
															"src": "7271:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "7181:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "7236:5:6",
														"nodeType": "YulTypedName",
														"src": "7236:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7243:3:6",
														"nodeType": "YulTypedName",
														"src": "7243:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7248:10:6",
														"nodeType": "YulTypedName",
														"src": "7248:10:6",
														"type": ""
													}
												],
												"src": "7181:543:6"
											},
											{
												"body": {
													"nativeSrc": "7793:54:6",
													"nodeType": "YulBlock",
													"src": "7793:54:6",
													"statements": [
														{
															"nativeSrc": "7803:37:6",
															"nodeType": "YulAssignment",
															"src": "7803:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7828:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7828:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7834:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7834:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7824:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7824:3:6"
																},
																"nativeSrc": "7824:16:6",
																"nodeType": "YulFunctionCall",
																"src": "7824:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7803:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "7803:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7730:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7768:4:6",
														"nodeType": "YulTypedName",
														"src": "7768:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7774:5:6",
														"nodeType": "YulTypedName",
														"src": "7774:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7784:8:6",
														"nodeType": "YulTypedName",
														"src": "7784:8:6",
														"type": ""
													}
												],
												"src": "7730:117:6"
											},
											{
												"body": {
													"nativeSrc": "7904:118:6",
													"nodeType": "YulBlock",
													"src": "7904:118:6",
													"statements": [
														{
															"nativeSrc": "7914:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7963:1:6",
																						"nodeType": "YulLiteral",
																						"src": "7963:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7966:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "7966:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7959:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7959:3:6"
																				},
																				"nativeSrc": "7959:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7959:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7978:1:6",
																						"nodeType": "YulLiteral",
																						"src": "7978:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7974:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7974:3:6"
																				},
																				"nativeSrc": "7974:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7974:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7930:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "7930:28:6"
																		},
																		"nativeSrc": "7930:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7930:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7926:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7926:3:6"
																},
																"nativeSrc": "7926:56:6",
																"nodeType": "YulFunctionCall",
																"src": "7926:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7918:4:6",
																	"nodeType": "YulTypedName",
																	"src": "7918:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7991:25:6",
															"nodeType": "YulAssignment",
															"src": "7991:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8005:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8005:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "8011:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8011:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8001:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8001:3:6"
																},
																"nativeSrc": "8001:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8001:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7991:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7991:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7853:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7881:4:6",
														"nodeType": "YulTypedName",
														"src": "7881:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7887:5:6",
														"nodeType": "YulTypedName",
														"src": "7887:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7897:6:6",
														"nodeType": "YulTypedName",
														"src": "7897:6:6",
														"type": ""
													}
												],
												"src": "7853:169:6"
											},
											{
												"body": {
													"nativeSrc": "8108:214:6",
													"nodeType": "YulBlock",
													"src": "8108:214:6",
													"statements": [
														{
															"nativeSrc": "8241:37:6",
															"nodeType": "YulAssignment",
															"src": "8241:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8268:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8268:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8274:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8274:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "8249:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "8249:18:6"
																},
																"nativeSrc": "8249:29:6",
																"nodeType": "YulFunctionCall",
																"src": "8249:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8241:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8241:4:6"
																}
															]
														},
														{
															"nativeSrc": "8287:29:6",
															"nodeType": "YulAssignment",
															"src": "8287:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8298:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8298:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8308:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8308:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8311:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "8311:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8304:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8304:3:6"
																		},
																		"nativeSrc": "8304:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8304:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8295:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8295:2:6"
																},
																"nativeSrc": "8295:21:6",
																"nodeType": "YulFunctionCall",
																"src": "8295:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8287:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8287:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "8027:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8089:4:6",
														"nodeType": "YulTypedName",
														"src": "8089:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8095:3:6",
														"nodeType": "YulTypedName",
														"src": "8095:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "8103:4:6",
														"nodeType": "YulTypedName",
														"src": "8103:4:6",
														"type": ""
													}
												],
												"src": "8027:295:6"
											},
											{
												"body": {
													"nativeSrc": "8419:1303:6",
													"nodeType": "YulBlock",
													"src": "8419:1303:6",
													"statements": [
														{
															"nativeSrc": "8430:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8430:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8477:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8477:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8444:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "8444:32:6"
																},
																"nativeSrc": "8444:37:6",
																"nodeType": "YulFunctionCall",
																"src": "8444:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8434:6:6",
																	"nodeType": "YulTypedName",
																	"src": "8434:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8566:22:6",
																"nodeType": "YulBlock",
																"src": "8566:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8568:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8568:16:6"
																			},
																			"nativeSrc": "8568:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8568:18:6"
																		},
																		"nativeSrc": "8568:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8568:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8538:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8538:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8546:18:6",
																		"nodeType": "YulLiteral",
																		"src": "8546:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8535:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8535:2:6"
																},
																"nativeSrc": "8535:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8535:30:6"
															},
															"nativeSrc": "8532:56:6",
															"nodeType": "YulIf",
															"src": "8532:56:6"
														},
														{
															"nativeSrc": "8598:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8598:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8644:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8644:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8638:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8638:5:6"
																		},
																		"nativeSrc": "8638:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8638:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8612:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "8612:25:6"
																},
																"nativeSrc": "8612:38:6",
																"nodeType": "YulFunctionCall",
																"src": "8612:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8602:6:6",
																	"nodeType": "YulTypedName",
																	"src": "8602:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8743:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8743:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8749:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8749:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8757:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8757:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8697:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "8697:45:6"
																},
																"nativeSrc": "8697:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8697:67:6"
															},
															"nativeSrc": "8697:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "8697:67:6"
														},
														{
															"nativeSrc": "8774:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8774:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "8791:1:6",
																"nodeType": "YulLiteral",
																"src": "8791:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8778:9:6",
																	"nodeType": "YulTypedName",
																	"src": "8778:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8802:17:6",
															"nodeType": "YulAssignment",
															"src": "8802:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "8815:4:6",
																"nodeType": "YulLiteral",
																"src": "8815:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8802:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "8802:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8866:611:6",
																		"nodeType": "YulBlock",
																		"src": "8866:611:6",
																		"statements": [
																			{
																				"nativeSrc": "8880:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8880:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8899:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "8899:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8911:4:6",
																									"nodeType": "YulLiteral",
																									"src": "8911:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8907:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "8907:3:6"
																							},
																							"nativeSrc": "8907:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "8907:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8895:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "8895:3:6"
																					},
																					"nativeSrc": "8895:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8895:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8884:7:6",
																						"nodeType": "YulTypedName",
																						"src": "8884:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8931:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8931:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8977:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8977:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8945:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "8945:31:6"
																					},
																					"nativeSrc": "8945:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8945:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8935:6:6",
																						"nodeType": "YulTypedName",
																						"src": "8935:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8995:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8995:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9004:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9004:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8999:1:6",
																						"nodeType": "YulTypedName",
																						"src": "8999:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9063:163:6",
																					"nodeType": "YulBlock",
																					"src": "9063:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9088:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "9088:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "9106:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "9106:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "9111:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "9111:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "9102:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "9102:3:6"
																												},
																												"nativeSrc": "9102:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "9102:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "9096:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "9096:5:6"
																										},
																										"nativeSrc": "9096:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "9096:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9081:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "9081:6:6"
																								},
																								"nativeSrc": "9081:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9081:42:6"
																							},
																							"nativeSrc": "9081:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "9081:42:6"
																						},
																						{
																							"nativeSrc": "9140:24:6",
																							"nodeType": "YulAssignment",
																							"src": "9140:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9154:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "9154:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9162:1:6",
																										"nodeType": "YulLiteral",
																										"src": "9162:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9150:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "9150:3:6"
																								},
																								"nativeSrc": "9150:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9150:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "9140:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "9140:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9181:31:6",
																							"nodeType": "YulAssignment",
																							"src": "9181:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9198:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "9198:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9209:2:6",
																										"nodeType": "YulLiteral",
																										"src": "9209:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9194:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "9194:3:6"
																								},
																								"nativeSrc": "9194:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9194:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9181:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "9181:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "9029:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "9029:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9032:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "9032:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9026:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "9026:2:6"
																					},
																					"nativeSrc": "9026:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9026:14:6"
																				},
																				"nativeSrc": "9018:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "9041:21:6",
																					"nodeType": "YulBlock",
																					"src": "9041:21:6",
																					"statements": [
																						{
																							"nativeSrc": "9043:17:6",
																							"nodeType": "YulAssignment",
																							"src": "9043:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "9052:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "9052:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9055:4:6",
																										"nodeType": "YulLiteral",
																										"src": "9055:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9048:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "9048:3:6"
																								},
																								"nativeSrc": "9048:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9048:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "9043:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "9043:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "9022:3:6",
																					"nodeType": "YulBlock",
																					"src": "9022:3:6",
																					"statements": []
																				},
																				"src": "9018:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "9262:156:6",
																					"nodeType": "YulBlock",
																					"src": "9262:156:6",
																					"statements": [
																						{
																							"nativeSrc": "9280:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9280:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9307:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "9307:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9312:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "9312:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9303:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "9303:3:6"
																										},
																										"nativeSrc": "9303:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "9303:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9297:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9297:5:6"
																								},
																								"nativeSrc": "9297:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9297:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9284:9:6",
																									"nodeType": "YulTypedName",
																									"src": "9284:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9347:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "9347:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9374:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "9374:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9389:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "9389:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9397:4:6",
																														"nodeType": "YulLiteral",
																														"src": "9397:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9385:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "9385:3:6"
																												},
																												"nativeSrc": "9385:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "9385:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9355:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "9355:18:6"
																										},
																										"nativeSrc": "9355:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "9355:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9340:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "9340:6:6"
																								},
																								"nativeSrc": "9340:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9340:64:6"
																							},
																							"nativeSrc": "9340:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "9340:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9245:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "9245:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9254:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "9254:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9242:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "9242:2:6"
																					},
																					"nativeSrc": "9242:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9242:19:6"
																				},
																				"nativeSrc": "9239:179:6",
																				"nodeType": "YulIf",
																				"src": "9239:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9438:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "9438:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9452:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "9452:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9460:1:6",
																											"nodeType": "YulLiteral",
																											"src": "9460:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9448:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "9448:3:6"
																									},
																									"nativeSrc": "9448:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "9448:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9464:1:6",
																									"nodeType": "YulLiteral",
																									"src": "9464:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9444:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "9444:3:6"
																							},
																							"nativeSrc": "9444:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "9444:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9431:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9431:6:6"
																					},
																					"nativeSrc": "9431:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9431:36:6"
																				},
																				"nativeSrc": "9431:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "9431:36:6"
																			}
																		]
																	},
																	"nativeSrc": "8859:618:6",
																	"nodeType": "YulCase",
																	"src": "8859:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8864:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8864:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9494:222:6",
																		"nodeType": "YulBlock",
																		"src": "9494:222:6",
																		"statements": [
																			{
																				"nativeSrc": "9508:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9508:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9521:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9521:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9512:5:6",
																						"nodeType": "YulTypedName",
																						"src": "9512:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9545:67:6",
																					"nodeType": "YulBlock",
																					"src": "9545:67:6",
																					"statements": [
																						{
																							"nativeSrc": "9563:35:6",
																							"nodeType": "YulAssignment",
																							"src": "9563:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9582:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "9582:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9587:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "9587:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9578:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "9578:3:6"
																										},
																										"nativeSrc": "9578:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "9578:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9572:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9572:5:6"
																								},
																								"nativeSrc": "9572:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9572:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9563:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9563:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9538:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "9538:6:6"
																				},
																				"nativeSrc": "9535:77:6",
																				"nodeType": "YulIf",
																				"src": "9535:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9632:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "9632:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9691:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9691:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9698:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "9698:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9638:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "9638:52:6"
																							},
																							"nativeSrc": "9638:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "9638:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9625:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9625:6:6"
																					},
																					"nativeSrc": "9625:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9625:81:6"
																				},
																				"nativeSrc": "9625:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "9625:81:6"
																			}
																		]
																	},
																	"nativeSrc": "9486:230:6",
																	"nodeType": "YulCase",
																	"src": "9486:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8839:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8839:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8847:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8847:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8836:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8836:2:6"
																},
																"nativeSrc": "8836:14:6",
																"nodeType": "YulFunctionCall",
																"src": "8836:14:6"
															},
															"nativeSrc": "8829:887:6",
															"nodeType": "YulSwitch",
															"src": "8829:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8327:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8408:4:6",
														"nodeType": "YulTypedName",
														"src": "8408:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8414:3:6",
														"nodeType": "YulTypedName",
														"src": "8414:3:6",
														"type": ""
													}
												],
												"src": "8327:1395:6"
											},
											{
												"body": {
													"nativeSrc": "9793:53:6",
													"nodeType": "YulBlock",
													"src": "9793:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9810:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9810:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9833:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9833:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9815:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "9815:17:6"
																		},
																		"nativeSrc": "9815:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9815:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9803:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9803:6:6"
																},
																"nativeSrc": "9803:37:6",
																"nodeType": "YulFunctionCall",
																"src": "9803:37:6"
															},
															"nativeSrc": "9803:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "9803:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9728:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9781:5:6",
														"nodeType": "YulTypedName",
														"src": "9781:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9788:3:6",
														"nodeType": "YulTypedName",
														"src": "9788:3:6",
														"type": ""
													}
												],
												"src": "9728:118:6"
											},
											{
												"body": {
													"nativeSrc": "9950:124:6",
													"nodeType": "YulBlock",
													"src": "9950:124:6",
													"statements": [
														{
															"nativeSrc": "9960:26:6",
															"nodeType": "YulAssignment",
															"src": "9960:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9972:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9972:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9983:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9983:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9968:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9968:3:6"
																},
																"nativeSrc": "9968:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9968:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9960:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9960:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10040:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10040:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10053:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10053:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10064:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10064:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10049:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10049:3:6"
																		},
																		"nativeSrc": "10049:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10049:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9996:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9996:43:6"
																},
																"nativeSrc": "9996:71:6",
																"nodeType": "YulFunctionCall",
																"src": "9996:71:6"
															},
															"nativeSrc": "9996:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "9996:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9852:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9922:9:6",
														"nodeType": "YulTypedName",
														"src": "9922:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9934:6:6",
														"nodeType": "YulTypedName",
														"src": "9934:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9945:4:6",
														"nodeType": "YulTypedName",
														"src": "9945:4:6",
														"type": ""
													}
												],
												"src": "9852:222:6"
											},
											{
												"body": {
													"nativeSrc": "10108:152:6",
													"nodeType": "YulBlock",
													"src": "10108:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10125:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10125:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10128:77:6",
																		"nodeType": "YulLiteral",
																		"src": "10128:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10118:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10118:6:6"
																},
																"nativeSrc": "10118:88:6",
																"nodeType": "YulFunctionCall",
																"src": "10118:88:6"
															},
															"nativeSrc": "10118:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "10118:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10222:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10222:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10225:4:6",
																		"nodeType": "YulLiteral",
																		"src": "10225:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10215:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10215:6:6"
																},
																"nativeSrc": "10215:15:6",
																"nodeType": "YulFunctionCall",
																"src": "10215:15:6"
															},
															"nativeSrc": "10215:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "10215:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10246:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10246:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10249:4:6",
																		"nodeType": "YulLiteral",
																		"src": "10249:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10239:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10239:6:6"
																},
																"nativeSrc": "10239:15:6",
																"nodeType": "YulFunctionCall",
																"src": "10239:15:6"
															},
															"nativeSrc": "10239:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "10239:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10080:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "10080:180:6"
											},
											{
												"body": {
													"nativeSrc": "10310:147:6",
													"nodeType": "YulBlock",
													"src": "10310:147:6",
													"statements": [
														{
															"nativeSrc": "10320:25:6",
															"nodeType": "YulAssignment",
															"src": "10320:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10343:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10343:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10325:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10325:17:6"
																},
																"nativeSrc": "10325:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10325:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10320:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10320:1:6"
																}
															]
														},
														{
															"nativeSrc": "10354:25:6",
															"nodeType": "YulAssignment",
															"src": "10354:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10377:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10377:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10359:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10359:17:6"
																},
																"nativeSrc": "10359:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10359:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10354:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10354:1:6"
																}
															]
														},
														{
															"nativeSrc": "10388:16:6",
															"nodeType": "YulAssignment",
															"src": "10388:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10399:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10399:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10402:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10402:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10395:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10395:3:6"
																},
																"nativeSrc": "10395:9:6",
																"nodeType": "YulFunctionCall",
																"src": "10395:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10388:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10388:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10428:22:6",
																"nodeType": "YulBlock",
																"src": "10428:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10430:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10430:16:6"
																			},
																			"nativeSrc": "10430:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10430:18:6"
																		},
																		"nativeSrc": "10430:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10430:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10420:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10420:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10423:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10423:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10417:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10417:2:6"
																},
																"nativeSrc": "10417:10:6",
																"nodeType": "YulFunctionCall",
																"src": "10417:10:6"
															},
															"nativeSrc": "10414:36:6",
															"nodeType": "YulIf",
															"src": "10414:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10266:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10297:1:6",
														"nodeType": "YulTypedName",
														"src": "10297:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10300:1:6",
														"nodeType": "YulTypedName",
														"src": "10300:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10306:3:6",
														"nodeType": "YulTypedName",
														"src": "10306:3:6",
														"type": ""
													}
												],
												"src": "10266:191:6"
											},
											{
												"body": {
													"nativeSrc": "10528:53:6",
													"nodeType": "YulBlock",
													"src": "10528:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10545:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10545:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10568:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "10568:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10550:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "10550:17:6"
																		},
																		"nativeSrc": "10550:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10550:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10538:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10538:6:6"
																},
																"nativeSrc": "10538:37:6",
																"nodeType": "YulFunctionCall",
																"src": "10538:37:6"
															},
															"nativeSrc": "10538:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "10538:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10463:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10516:5:6",
														"nodeType": "YulTypedName",
														"src": "10516:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10523:3:6",
														"nodeType": "YulTypedName",
														"src": "10523:3:6",
														"type": ""
													}
												],
												"src": "10463:118:6"
											},
											{
												"body": {
													"nativeSrc": "10741:288:6",
													"nodeType": "YulBlock",
													"src": "10741:288:6",
													"statements": [
														{
															"nativeSrc": "10751:26:6",
															"nodeType": "YulAssignment",
															"src": "10751:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10763:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10763:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10774:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10774:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10759:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10759:3:6"
																},
																"nativeSrc": "10759:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10759:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10751:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10751:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10831:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10831:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10844:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10844:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10855:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10855:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10840:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10840:3:6"
																		},
																		"nativeSrc": "10840:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10840:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10787:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10787:43:6"
																},
																"nativeSrc": "10787:71:6",
																"nodeType": "YulFunctionCall",
																"src": "10787:71:6"
															},
															"nativeSrc": "10787:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "10787:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10912:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10912:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10925:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10925:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10936:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10936:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10921:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10921:3:6"
																		},
																		"nativeSrc": "10921:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10921:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10868:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10868:43:6"
																},
																"nativeSrc": "10868:72:6",
																"nodeType": "YulFunctionCall",
																"src": "10868:72:6"
															},
															"nativeSrc": "10868:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "10868:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10994:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10994:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11007:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11007:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11018:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11018:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11003:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11003:3:6"
																		},
																		"nativeSrc": "11003:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11003:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10950:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10950:43:6"
																},
																"nativeSrc": "10950:72:6",
																"nodeType": "YulFunctionCall",
																"src": "10950:72:6"
															},
															"nativeSrc": "10950:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "10950:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10587:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10697:9:6",
														"nodeType": "YulTypedName",
														"src": "10697:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10709:6:6",
														"nodeType": "YulTypedName",
														"src": "10709:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10717:6:6",
														"nodeType": "YulTypedName",
														"src": "10717:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10725:6:6",
														"nodeType": "YulTypedName",
														"src": "10725:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10736:4:6",
														"nodeType": "YulTypedName",
														"src": "10736:4:6",
														"type": ""
													}
												],
												"src": "10587:442:6"
											},
											{
												"body": {
													"nativeSrc": "11133:124:6",
													"nodeType": "YulBlock",
													"src": "11133:124:6",
													"statements": [
														{
															"nativeSrc": "11143:26:6",
															"nodeType": "YulAssignment",
															"src": "11143:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11155:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11155:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11166:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11166:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11151:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11151:3:6"
																},
																"nativeSrc": "11151:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11151:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11143:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11143:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11223:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11223:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11236:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11236:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11247:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11247:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11232:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11232:3:6"
																		},
																		"nativeSrc": "11232:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11232:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11179:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11179:43:6"
																},
																"nativeSrc": "11179:71:6",
																"nodeType": "YulFunctionCall",
																"src": "11179:71:6"
															},
															"nativeSrc": "11179:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "11179:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "11035:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11105:9:6",
														"nodeType": "YulTypedName",
														"src": "11105:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11117:6:6",
														"nodeType": "YulTypedName",
														"src": "11117:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11128:4:6",
														"nodeType": "YulTypedName",
														"src": "11128:4:6",
														"type": ""
													}
												],
												"src": "11035:222:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516119b93803806119b983398181016040528101906100319190610567565b84848160039081610042919061081a565b508060049081610052919061081a565b50505061006582846100ef60201b60201c565b8160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050506109ce565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361015f575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161015691906108f8565b60405180910390fd5b6101705f838361017460201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101c4578060025f8282546101b8919061093e565b92505081905550610292565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561024d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161024493929190610980565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102d9578060025f8282540392505081905550610323565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161038091906109b5565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6103ec826103a6565b810181811067ffffffffffffffff8211171561040b5761040a6103b6565b5b80604052505050565b5f61041d61038d565b905061042982826103e3565b919050565b5f67ffffffffffffffff821115610448576104476103b6565b5b610451826103a6565b9050602081019050919050565b8281835e5f83830152505050565b5f61047e6104798461042e565b610414565b90508281526020810184848401111561049a576104996103a2565b5b6104a584828561045e565b509392505050565b5f82601f8301126104c1576104c061039e565b5b81516104d184826020860161046c565b91505092915050565b5f819050919050565b6104ec816104da565b81146104f6575f80fd5b50565b5f81519050610507816104e3565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105368261050d565b9050919050565b6105468161052c565b8114610550575f80fd5b50565b5f815190506105618161053d565b92915050565b5f805f805f60a086880312156105805761057f610396565b5b5f86015167ffffffffffffffff81111561059d5761059c61039a565b5b6105a9888289016104ad565b955050602086015167ffffffffffffffff8111156105ca576105c961039a565b5b6105d6888289016104ad565b94505060406105e7888289016104f9565b93505060606105f888828901610553565b925050608061060988828901610553565b9150509295509295909350565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061066457607f821691505b60208210810361067757610676610620565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026106d97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261069e565b6106e3868361069e565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61071e610719610714846104da565b6106fb565b6104da565b9050919050565b5f819050919050565b61073783610704565b61074b61074382610725565b8484546106aa565b825550505050565b5f90565b61075f610753565b61076a81848461072e565b505050565b5b8181101561078d576107825f82610757565b600181019050610770565b5050565b601f8211156107d2576107a38161067d565b6107ac8461068f565b810160208510156107bb578190505b6107cf6107c78561068f565b83018261076f565b50505b505050565b5f82821c905092915050565b5f6107f25f19846008026107d7565b1980831691505092915050565b5f61080a83836107e3565b9150826002028217905092915050565b61082382610616565b67ffffffffffffffff81111561083c5761083b6103b6565b5b610846825461064d565b610851828285610791565b5f60209050601f831160018114610882575f8415610870578287015190505b61087a85826107ff565b8655506108e1565b601f1984166108908661067d565b5f5b828110156108b757848901518255600182019150602085019450602081019050610892565b868310156108d457848901516108d0601f8916826107e3565b8355505b6001600288020188555050505b505050505050565b6108f28161052c565b82525050565b5f60208201905061090b5f8301846108e9565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610948826104da565b9150610953836104da565b925082820190508082111561096b5761096a610911565b5b92915050565b61097a816104da565b82525050565b5f6060820190506109935f8301866108e9565b6109a06020830185610971565b6109ad6040830184610971565b949350505050565b5f6020820190506109c85f830184610971565b92915050565b610fde806109db5f395ff3fe608060405234801561000f575f80fd5b50600436106100b2575f3560e01c8063313ce5671161006f578063313ce5671461018c578063665a11ca146101aa57806370a08231146101c857806395d89b41146101f8578063a9059cbb14610216578063dd62ed3e14610246576100b2565b806301877020146100b657806302d05d3f146100d257806306fdde03146100f0578063095ea7b31461010e57806318160ddd1461013e57806323b872dd1461015c575b5f80fd5b6100d060048036038101906100cb9190610bdd565b610276565b005b6100da610348565b6040516100e79190610c17565b60405180910390f35b6100f861036d565b6040516101059190610ca0565b60405180910390f35b61012860048036038101906101239190610cf3565b6103fd565b6040516101359190610d4b565b60405180910390f35b61014661041f565b6040516101539190610d73565b60405180910390f35b61017660048036038101906101719190610d8c565b610428565b6040516101839190610d4b565b60405180910390f35b610194610456565b6040516101a19190610df7565b60405180910390f35b6101b261045e565b6040516101bf9190610c17565b60405180910390f35b6101e260048036038101906101dd9190610bdd565b610483565b6040516101ef9190610d73565b60405180910390f35b6102006104c8565b60405161020d9190610ca0565b60405180910390f35b610230600480360381019061022b9190610cf3565b610558565b60405161023d9190610d4b565b60405180910390f35b610260600480360381019061025b9190610e10565b61057a565b60405161026d9190610d73565b60405180910390f35b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610305576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fc90610e98565b60405180910390fd5b8060055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805461037c90610ee3565b80601f01602080910402602001604051908101604052809291908181526020018280546103a890610ee3565b80156103f35780601f106103ca576101008083540402835291602001916103f3565b820191905f5260205f20905b8154815290600101906020018083116103d657829003601f168201915b5050505050905090565b5f806104076105fc565b9050610414818585610603565b600191505092915050565b5f600254905090565b5f806104326105fc565b905061043f858285610615565b61044a8585856106a7565b60019150509392505050565b5f6012905090565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546104d790610ee3565b80601f016020809104026020016040519081016040528092919081815260200182805461050390610ee3565b801561054e5780601f106105255761010080835404028352916020019161054e565b820191905f5260205f20905b81548152906001019060200180831161053157829003601f168201915b5050505050905090565b5f806105626105fc565b905061056f8185856106a7565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6106108383836001610797565b505050565b5f610620848461057a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106a15781811015610692578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161068993929190610f13565b60405180910390fd5b6106a084848484035f610797565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610717575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161070e9190610c17565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610787575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161077e9190610c17565b60405180910390fd5b610792838383610966565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610807575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107fe9190610c17565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610877575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161086e9190610c17565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610960578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109579190610d73565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109b6578060025f8282546109aa9190610f75565b92505081905550610a84565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610a3f578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610a3693929190610f13565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610acb578060025f8282540392505081905550610b15565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b729190610d73565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610bac82610b83565b9050919050565b610bbc81610ba2565b8114610bc6575f80fd5b50565b5f81359050610bd781610bb3565b92915050565b5f60208284031215610bf257610bf1610b7f565b5b5f610bff84828501610bc9565b91505092915050565b610c1181610ba2565b82525050565b5f602082019050610c2a5f830184610c08565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610c7282610c30565b610c7c8185610c3a565b9350610c8c818560208601610c4a565b610c9581610c58565b840191505092915050565b5f6020820190508181035f830152610cb88184610c68565b905092915050565b5f819050919050565b610cd281610cc0565b8114610cdc575f80fd5b50565b5f81359050610ced81610cc9565b92915050565b5f8060408385031215610d0957610d08610b7f565b5b5f610d1685828601610bc9565b9250506020610d2785828601610cdf565b9150509250929050565b5f8115159050919050565b610d4581610d31565b82525050565b5f602082019050610d5e5f830184610d3c565b92915050565b610d6d81610cc0565b82525050565b5f602082019050610d865f830184610d64565b92915050565b5f805f60608486031215610da357610da2610b7f565b5b5f610db086828701610bc9565b9350506020610dc186828701610bc9565b9250506040610dd286828701610cdf565b9150509250925092565b5f60ff82169050919050565b610df181610ddc565b82525050565b5f602082019050610e0a5f830184610de8565b92915050565b5f8060408385031215610e2657610e25610b7f565b5b5f610e3385828601610bc9565b9250506020610e4485828601610bc9565b9150509250929050565b7f4f6e6c79206c697175696469747920706f6f6c2063616e2073657420746869735f82015250565b5f610e82602083610c3a565b9150610e8d82610e4e565b602082019050919050565b5f6020820190508181035f830152610eaf81610e76565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610efa57607f821691505b602082108103610f0d57610f0c610eb6565b5b50919050565b5f606082019050610f265f830186610c08565b610f336020830185610d64565b610f406040830184610d64565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f7f82610cc0565b9150610f8a83610cc0565b9250828201905080821115610fa257610fa1610f48565b5b9291505056fea264697066735822122008c7956369d3a74cc15c86449cbdacdb37a68cf0a08589531bf8cdc9be585e0564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x19B9 CODESIZE SUB DUP1 PUSH2 0x19B9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x567 JUMP JUMPDEST DUP5 DUP5 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x81A JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x52 SWAP2 SWAP1 PUSH2 0x81A JUMP JUMPDEST POP POP POP PUSH2 0x65 DUP3 DUP5 PUSH2 0xEF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP PUSH2 0x9CE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x8F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x170 PUSH0 DUP4 DUP4 PUSH2 0x174 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x93E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x292 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x24D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x244 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2D9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x323 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x3EC DUP3 PUSH2 0x3A6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x40B JUMPI PUSH2 0x40A PUSH2 0x3B6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x41D PUSH2 0x38D JUMP JUMPDEST SWAP1 POP PUSH2 0x429 DUP3 DUP3 PUSH2 0x3E3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x448 JUMPI PUSH2 0x447 PUSH2 0x3B6 JUMP JUMPDEST JUMPDEST PUSH2 0x451 DUP3 PUSH2 0x3A6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47E PUSH2 0x479 DUP5 PUSH2 0x42E JUMP JUMPDEST PUSH2 0x414 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x49A JUMPI PUSH2 0x499 PUSH2 0x3A2 JUMP JUMPDEST JUMPDEST PUSH2 0x4A5 DUP5 DUP3 DUP6 PUSH2 0x45E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4C1 JUMPI PUSH2 0x4C0 PUSH2 0x39E JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x4D1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x46C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4EC DUP2 PUSH2 0x4DA JUMP JUMPDEST DUP2 EQ PUSH2 0x4F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x507 DUP2 PUSH2 0x4E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x536 DUP3 PUSH2 0x50D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x546 DUP2 PUSH2 0x52C JUMP JUMPDEST DUP2 EQ PUSH2 0x550 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x561 DUP2 PUSH2 0x53D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x580 JUMPI PUSH2 0x57F PUSH2 0x396 JUMP JUMPDEST JUMPDEST PUSH0 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x59D JUMPI PUSH2 0x59C PUSH2 0x39A JUMP JUMPDEST JUMPDEST PUSH2 0x5A9 DUP9 DUP3 DUP10 ADD PUSH2 0x4AD JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5CA JUMPI PUSH2 0x5C9 PUSH2 0x39A JUMP JUMPDEST JUMPDEST PUSH2 0x5D6 DUP9 DUP3 DUP10 ADD PUSH2 0x4AD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x5E7 DUP9 DUP3 DUP10 ADD PUSH2 0x4F9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x5F8 DUP9 DUP3 DUP10 ADD PUSH2 0x553 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x609 DUP9 DUP3 DUP10 ADD PUSH2 0x553 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x664 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x677 JUMPI PUSH2 0x676 PUSH2 0x620 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x6D9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x69E JUMP JUMPDEST PUSH2 0x6E3 DUP7 DUP4 PUSH2 0x69E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x71E PUSH2 0x719 PUSH2 0x714 DUP5 PUSH2 0x4DA JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x737 DUP4 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x74B PUSH2 0x743 DUP3 PUSH2 0x725 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x6AA JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x75F PUSH2 0x753 JUMP JUMPDEST PUSH2 0x76A DUP2 DUP5 DUP5 PUSH2 0x72E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x78D JUMPI PUSH2 0x782 PUSH0 DUP3 PUSH2 0x757 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x770 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7D2 JUMPI PUSH2 0x7A3 DUP2 PUSH2 0x67D JUMP JUMPDEST PUSH2 0x7AC DUP5 PUSH2 0x68F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x7BB JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x7CF PUSH2 0x7C7 DUP6 PUSH2 0x68F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x76F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7F2 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x7D7 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x80A DUP4 DUP4 PUSH2 0x7E3 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x823 DUP3 PUSH2 0x616 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x83C JUMPI PUSH2 0x83B PUSH2 0x3B6 JUMP JUMPDEST JUMPDEST PUSH2 0x846 DUP3 SLOAD PUSH2 0x64D JUMP JUMPDEST PUSH2 0x851 DUP3 DUP3 DUP6 PUSH2 0x791 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x882 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x870 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x87A DUP6 DUP3 PUSH2 0x7FF JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x890 DUP7 PUSH2 0x67D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x8B7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x892 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x8D4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x8D0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x7E3 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8F2 DUP2 PUSH2 0x52C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x90B PUSH0 DUP4 ADD DUP5 PUSH2 0x8E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x948 DUP3 PUSH2 0x4DA JUMP JUMPDEST SWAP2 POP PUSH2 0x953 DUP4 PUSH2 0x4DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x96B JUMPI PUSH2 0x96A PUSH2 0x911 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x97A DUP2 PUSH2 0x4DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x993 PUSH0 DUP4 ADD DUP7 PUSH2 0x8E9 JUMP JUMPDEST PUSH2 0x9A0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x971 JUMP JUMPDEST PUSH2 0x9AD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x971 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9C8 PUSH0 DUP4 ADD DUP5 PUSH2 0x971 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFDE DUP1 PUSH2 0x9DB PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x665A11CA EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x1877020 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x2D05D3F EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x276 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDA PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0xD8C JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH2 0x57A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FC SWAP1 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x37C SWAP1 PUSH2 0xEE3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A8 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x407 PUSH2 0x5FC JUMP JUMPDEST SWAP1 POP PUSH2 0x414 DUP2 DUP6 DUP6 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x432 PUSH2 0x5FC JUMP JUMPDEST SWAP1 POP PUSH2 0x43F DUP6 DUP3 DUP6 PUSH2 0x615 JUMP JUMPDEST PUSH2 0x44A DUP6 DUP6 DUP6 PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4D7 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x503 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x54E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x525 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x531 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x562 PUSH2 0x5FC JUMP JUMPDEST SWAP1 POP PUSH2 0x56F DUP2 DUP6 DUP6 PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x610 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x797 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x620 DUP5 DUP5 PUSH2 0x57A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x6A1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x692 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x689 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6A0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x797 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x717 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70E SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x787 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x792 DUP4 DUP4 DUP4 PUSH2 0x966 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x807 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FE SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x877 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86E SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x960 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x957 SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9B6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9AA SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA84 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA3F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA36 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xACB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB15 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB72 SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBAC DUP3 PUSH2 0xB83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBC DUP2 PUSH2 0xBA2 JUMP JUMPDEST DUP2 EQ PUSH2 0xBC6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD7 DUP2 PUSH2 0xBB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBF2 JUMPI PUSH2 0xBF1 PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBFF DUP5 DUP3 DUP6 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC11 DUP2 PUSH2 0xBA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC2A PUSH0 DUP4 ADD DUP5 PUSH2 0xC08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC72 DUP3 PUSH2 0xC30 JUMP JUMPDEST PUSH2 0xC7C DUP2 DUP6 PUSH2 0xC3A JUMP JUMPDEST SWAP4 POP PUSH2 0xC8C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC4A JUMP JUMPDEST PUSH2 0xC95 DUP2 PUSH2 0xC58 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCB8 DUP2 DUP5 PUSH2 0xC68 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD2 DUP2 PUSH2 0xCC0 JUMP JUMPDEST DUP2 EQ PUSH2 0xCDC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCED DUP2 PUSH2 0xCC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD09 JUMPI PUSH2 0xD08 PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD16 DUP6 DUP3 DUP7 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD27 DUP6 DUP3 DUP7 ADD PUSH2 0xCDF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD45 DUP2 PUSH2 0xD31 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD5E PUSH0 DUP4 ADD DUP5 PUSH2 0xD3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD6D DUP2 PUSH2 0xCC0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD86 PUSH0 DUP4 ADD DUP5 PUSH2 0xD64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDA3 JUMPI PUSH2 0xDA2 PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xDC1 DUP7 DUP3 DUP8 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xDD2 DUP7 DUP3 DUP8 ADD PUSH2 0xCDF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF1 DUP2 PUSH2 0xDDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE0A PUSH0 DUP4 ADD DUP5 PUSH2 0xDE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE26 JUMPI PUSH2 0xE25 PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE33 DUP6 DUP3 DUP7 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE44 DUP6 DUP3 DUP7 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206C697175696469747920706F6F6C2063616E207365742074686973 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE82 PUSH1 0x20 DUP4 PUSH2 0xC3A JUMP JUMPDEST SWAP2 POP PUSH2 0xE8D DUP3 PUSH2 0xE4E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEAF DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xEFA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF0D JUMPI PUSH2 0xF0C PUSH2 0xEB6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF26 PUSH0 DUP4 ADD DUP7 PUSH2 0xC08 JUMP JUMPDEST PUSH2 0xF33 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0xF40 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD64 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF7F DUP3 PUSH2 0xCC0 JUMP JUMPDEST SWAP2 POP PUSH2 0xF8A DUP4 PUSH2 0xCC0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xFA2 JUMPI PUSH2 0xFA1 PUSH2 0xF48 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xC7 SWAP6 PUSH4 0x69D3A74C 0xC1 TLOAD DUP7 PREVRANDAO SWAP13 0xBD 0xAC 0xDB CALLDATACOPY 0xA6 DUP13 CREATE LOG0 DUP6 DUP10 MSTORE8 SHL 0xF8 0xCD 0xC9 0xBE PC MCOPY SDIV PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "258:1178:5:-:0;;;806:302;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;978:5;985:7;1970:5:1;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1004:29:5::1;1010:8;1020:12;1004:5;;;:29;;:::i;:::-;1053:8;1043:7;;:18;;;;;;;;;;;;;;;;;;1087:14;1071:13;;:30;;;;;;;;;;;;;;;;;;806:302:::0;;;;;258:1178;;7721:208:1;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:75:6:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:77::-;2607:7;2636:5;2625:16;;2570:77;;;:::o;2653:122::-;2726:24;2744:5;2726:24;:::i;:::-;2719:5;2716:35;2706:63;;2765:1;2762;2755:12;2706:63;2653:122;:::o;2781:143::-;2838:5;2869:6;2863:13;2854:22;;2885:33;2912:5;2885:33;:::i;:::-;2781:143;;;;:::o;2930:126::-;2967:7;3007:42;3000:5;2996:54;2985:65;;2930:126;;;:::o;3062:96::-;3099:7;3128:24;3146:5;3128:24;:::i;:::-;3117:35;;3062:96;;;:::o;3164:122::-;3237:24;3255:5;3237:24;:::i;:::-;3230:5;3227:35;3217:63;;3276:1;3273;3266:12;3217:63;3164:122;:::o;3292:143::-;3349:5;3380:6;3374:13;3365:22;;3396:33;3423:5;3396:33;:::i;:::-;3292:143;;;;:::o;3441:1323::-;3567:6;3575;3583;3591;3599;3648:3;3636:9;3627:7;3623:23;3619:33;3616:120;;;3655:79;;:::i;:::-;3616:120;3796:1;3785:9;3781:17;3775:24;3826:18;3818:6;3815:30;3812:117;;;3848:79;;:::i;:::-;3812:117;3953:74;4019:7;4010:6;3999:9;3995:22;3953:74;:::i;:::-;3943:84;;3746:291;4097:2;4086:9;4082:18;4076:25;4128:18;4120:6;4117:30;4114:117;;;4150:79;;:::i;:::-;4114:117;4255:74;4321:7;4312:6;4301:9;4297:22;4255:74;:::i;:::-;4245:84;;4047:292;4378:2;4404:64;4460:7;4451:6;4440:9;4436:22;4404:64;:::i;:::-;4394:74;;4349:129;4517:2;4543:64;4599:7;4590:6;4579:9;4575:22;4543:64;:::i;:::-;4533:74;;4488:129;4656:3;4683:64;4739:7;4730:6;4719:9;4715:22;4683:64;:::i;:::-;4673:74;;4627:130;3441:1323;;;;;;;;:::o;4770:99::-;4822:6;4856:5;4850:12;4840:22;;4770:99;;;:::o;4875:180::-;4923:77;4920:1;4913:88;5020:4;5017:1;5010:15;5044:4;5041:1;5034:15;5061:320;5105:6;5142:1;5136:4;5132:12;5122:22;;5189:1;5183:4;5179:12;5210:18;5200:81;;5266:4;5258:6;5254:17;5244:27;;5200:81;5328:2;5320:6;5317:14;5297:18;5294:38;5291:84;;5347:18;;:::i;:::-;5291:84;5112:269;5061:320;;;:::o;5387:141::-;5436:4;5459:3;5451:11;;5482:3;5479:1;5472:14;5516:4;5513:1;5503:18;5495:26;;5387:141;;;:::o;5534:93::-;5571:6;5618:2;5613;5606:5;5602:14;5598:23;5588:33;;5534:93;;;:::o;5633:107::-;5677:8;5727:5;5721:4;5717:16;5696:37;;5633:107;;;;:::o;5746:393::-;5815:6;5865:1;5853:10;5849:18;5888:97;5918:66;5907:9;5888:97;:::i;:::-;6006:39;6036:8;6025:9;6006:39;:::i;:::-;5994:51;;6078:4;6074:9;6067:5;6063:21;6054:30;;6127:4;6117:8;6113:19;6106:5;6103:30;6093:40;;5822:317;;5746:393;;;;;:::o;6145:60::-;6173:3;6194:5;6187:12;;6145:60;;;:::o;6211:142::-;6261:9;6294:53;6312:34;6321:24;6339:5;6321:24;:::i;:::-;6312:34;:::i;:::-;6294:53;:::i;:::-;6281:66;;6211:142;;;:::o;6359:75::-;6402:3;6423:5;6416:12;;6359:75;;;:::o;6440:269::-;6550:39;6581:7;6550:39;:::i;:::-;6611:91;6660:41;6684:16;6660:41;:::i;:::-;6652:6;6645:4;6639:11;6611:91;:::i;:::-;6605:4;6598:105;6516:193;6440:269;;;:::o;6715:73::-;6760:3;6715:73;:::o;6794:189::-;6871:32;;:::i;:::-;6912:65;6970:6;6962;6956:4;6912:65;:::i;:::-;6847:136;6794:189;;:::o;6989:186::-;7049:120;7066:3;7059:5;7056:14;7049:120;;;7120:39;7157:1;7150:5;7120:39;:::i;:::-;7093:1;7086:5;7082:13;7073:22;;7049:120;;;6989:186;;:::o;7181:543::-;7282:2;7277:3;7274:11;7271:446;;;7316:38;7348:5;7316:38;:::i;:::-;7400:29;7418:10;7400:29;:::i;:::-;7390:8;7386:44;7583:2;7571:10;7568:18;7565:49;;;7604:8;7589:23;;7565:49;7627:80;7683:22;7701:3;7683:22;:::i;:::-;7673:8;7669:37;7656:11;7627:80;:::i;:::-;7286:431;;7271:446;7181:543;;;:::o;7730:117::-;7784:8;7834:5;7828:4;7824:16;7803:37;;7730:117;;;;:::o;7853:169::-;7897:6;7930:51;7978:1;7974:6;7966:5;7963:1;7959:13;7930:51;:::i;:::-;7926:56;8011:4;8005;8001:15;7991:25;;7904:118;7853:169;;;;:::o;8027:295::-;8103:4;8249:29;8274:3;8268:4;8249:29;:::i;:::-;8241:37;;8311:3;8308:1;8304:11;8298:4;8295:21;8287:29;;8027:295;;;;:::o;8327:1395::-;8444:37;8477:3;8444:37;:::i;:::-;8546:18;8538:6;8535:30;8532:56;;;8568:18;;:::i;:::-;8532:56;8612:38;8644:4;8638:11;8612:38;:::i;:::-;8697:67;8757:6;8749;8743:4;8697:67;:::i;:::-;8791:1;8815:4;8802:17;;8847:2;8839:6;8836:14;8864:1;8859:618;;;;9521:1;9538:6;9535:77;;;9587:9;9582:3;9578:19;9572:26;9563:35;;9535:77;9638:67;9698:6;9691:5;9638:67;:::i;:::-;9632:4;9625:81;9494:222;8829:887;;8859:618;8911:4;8907:9;8899:6;8895:22;8945:37;8977:4;8945:37;:::i;:::-;9004:1;9018:208;9032:7;9029:1;9026:14;9018:208;;;9111:9;9106:3;9102:19;9096:26;9088:6;9081:42;9162:1;9154:6;9150:14;9140:24;;9209:2;9198:9;9194:18;9181:31;;9055:4;9052:1;9048:12;9043:17;;9018:208;;;9254:6;9245:7;9242:19;9239:179;;;9312:9;9307:3;9303:19;9297:26;9355:48;9397:4;9389:6;9385:17;9374:9;9355:48;:::i;:::-;9347:6;9340:64;9262:156;9239:179;9464:1;9460;9452:6;9448:14;9444:22;9438:4;9431:36;8866:611;;;8829:887;;8419:1303;;;8327:1395;;:::o;9728:118::-;9815:24;9833:5;9815:24;:::i;:::-;9810:3;9803:37;9728:118;;:::o;9852:222::-;9945:4;9983:2;9972:9;9968:18;9960:26;;9996:71;10064:1;10053:9;10049:17;10040:6;9996:71;:::i;:::-;9852:222;;;;:::o;10080:180::-;10128:77;10125:1;10118:88;10225:4;10222:1;10215:15;10249:4;10246:1;10239:15;10266:191;10306:3;10325:20;10343:1;10325:20;:::i;:::-;10320:25;;10359:20;10377:1;10359:20;:::i;:::-;10354:25;;10402:1;10399;10395:9;10388:16;;10423:3;10420:1;10417:10;10414:36;;;10430:18;;:::i;:::-;10414:36;10266:191;;;;:::o;10463:118::-;10550:24;10568:5;10550:24;:::i;:::-;10545:3;10538:37;10463:118;;:::o;10587:442::-;10736:4;10774:2;10763:9;10759:18;10751:26;;10787:71;10855:1;10844:9;10840:17;10831:6;10787:71;:::i;:::-;10868:72;10936:2;10925:9;10921:18;10912:6;10868:72;:::i;:::-;10950;11018:2;11007:9;11003:18;10994:6;10950:72;:::i;:::-;10587:442;;;;;;:::o;11035:222::-;11128:4;11166:2;11155:9;11151:18;11143:26;;11179:71;11247:1;11236:9;11232:17;11223:6;11179:71;:::i;:::-;11035:222;;;;:::o;258:1178:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 1539,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 1943,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 1532,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 1557,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 1703,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 2406,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 1402,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 1021,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 1155,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@creator_795": {
									"entryPoint": 840,
									"id": 795,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_215": {
									"entryPoint": 1110,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@liquidityPool_793": {
									"entryPoint": 1118,
									"id": 793,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_197": {
									"entryPoint": 877,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setLiquidityPool_846": {
									"entryPoint": 630,
									"id": 846,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_206": {
									"entryPoint": 1224,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": 1055,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 1064,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 1368,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d5238c306bd9ae156396300b2bcef8cae989e20659986e12318b157b1350c310_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3859,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d5238c306bd9ae156396300b2bcef8cae989e20659986e12318b157b1350c310__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3146,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3912,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3766,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2943,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_d5238c306bd9ae156396300b2bcef8cae989e20659986e12318b157b1350c310": {
									"entryPoint": 3662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8238:6",
										"nodeType": "YulBlock",
										"src": "0:8238:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "748:87:6",
													"nodeType": "YulBlock",
													"src": "748:87:6",
													"statements": [
														{
															"nativeSrc": "758:29:6",
															"nodeType": "YulAssignment",
															"src": "758:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:6"
																},
																"nativeSrc": "767:20:6",
																"nodeType": "YulFunctionCall",
																"src": "767:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:6"
																},
																"nativeSrc": "796:33:6",
																"nodeType": "YulFunctionCall",
																"src": "796:33:6"
															},
															"nativeSrc": "796:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:6",
														"nodeType": "YulTypedName",
														"src": "726:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:6",
														"nodeType": "YulTypedName",
														"src": "734:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:6",
														"nodeType": "YulTypedName",
														"src": "742:5:6",
														"type": ""
													}
												],
												"src": "696:139:6"
											},
											{
												"body": {
													"nativeSrc": "907:263:6",
													"nodeType": "YulBlock",
													"src": "907:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:6",
																"nodeType": "YulBlock",
																"src": "953:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:6"
																			},
																			"nativeSrc": "955:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:6"
																		},
																		"nativeSrc": "955:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:6"
																		},
																		"nativeSrc": "924:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:6",
																		"nodeType": "YulLiteral",
																		"src": "949:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:6"
																},
																"nativeSrc": "920:32:6",
																"nodeType": "YulFunctionCall",
																"src": "920:32:6"
															},
															"nativeSrc": "917:119:6",
															"nodeType": "YulIf",
															"src": "917:119:6"
														},
														{
															"nativeSrc": "1046:117:6",
															"nodeType": "YulBlock",
															"src": "1046:117:6",
															"statements": [
																{
																	"nativeSrc": "1061:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:6"
																				},
																				"nativeSrc": "1121:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:6"
																		},
																		"nativeSrc": "1100:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:6",
														"nodeType": "YulTypedName",
														"src": "877:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:6",
														"nodeType": "YulTypedName",
														"src": "888:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:6",
														"nodeType": "YulTypedName",
														"src": "900:6:6",
														"type": ""
													}
												],
												"src": "841:329:6"
											},
											{
												"body": {
													"nativeSrc": "1241:53:6",
													"nodeType": "YulBlock",
													"src": "1241:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1258:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1258:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1281:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1281:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1263:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1263:17:6"
																		},
																		"nativeSrc": "1263:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1263:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1251:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:6"
																},
																"nativeSrc": "1251:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1251:37:6"
															},
															"nativeSrc": "1251:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1251:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1176:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1229:5:6",
														"nodeType": "YulTypedName",
														"src": "1229:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1236:3:6",
														"nodeType": "YulTypedName",
														"src": "1236:3:6",
														"type": ""
													}
												],
												"src": "1176:118:6"
											},
											{
												"body": {
													"nativeSrc": "1398:124:6",
													"nodeType": "YulBlock",
													"src": "1398:124:6",
													"statements": [
														{
															"nativeSrc": "1408:26:6",
															"nodeType": "YulAssignment",
															"src": "1408:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1420:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1431:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1416:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:6"
																},
																"nativeSrc": "1416:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1416:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1408:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1408:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1488:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1501:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1501:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1512:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1512:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1497:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:6"
																		},
																		"nativeSrc": "1497:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1444:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1444:43:6"
																},
																"nativeSrc": "1444:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1444:71:6"
															},
															"nativeSrc": "1444:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1444:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1300:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1370:9:6",
														"nodeType": "YulTypedName",
														"src": "1370:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1382:6:6",
														"nodeType": "YulTypedName",
														"src": "1382:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1393:4:6",
														"nodeType": "YulTypedName",
														"src": "1393:4:6",
														"type": ""
													}
												],
												"src": "1300:222:6"
											},
											{
												"body": {
													"nativeSrc": "1587:40:6",
													"nodeType": "YulBlock",
													"src": "1587:40:6",
													"statements": [
														{
															"nativeSrc": "1598:22:6",
															"nodeType": "YulAssignment",
															"src": "1598:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1614:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1614:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1608:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1608:5:6"
																},
																"nativeSrc": "1608:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1608:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1598:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1528:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1570:5:6",
														"nodeType": "YulTypedName",
														"src": "1570:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1580:6:6",
														"nodeType": "YulTypedName",
														"src": "1580:6:6",
														"type": ""
													}
												],
												"src": "1528:99:6"
											},
											{
												"body": {
													"nativeSrc": "1729:73:6",
													"nodeType": "YulBlock",
													"src": "1729:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1746:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1746:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1751:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1751:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1739:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1739:6:6"
																},
																"nativeSrc": "1739:19:6",
																"nodeType": "YulFunctionCall",
																"src": "1739:19:6"
															},
															"nativeSrc": "1739:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "1739:19:6"
														},
														{
															"nativeSrc": "1767:29:6",
															"nodeType": "YulAssignment",
															"src": "1767:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1786:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1786:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1791:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1791:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1782:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1782:3:6"
																},
																"nativeSrc": "1782:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1782:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1767:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "1767:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1633:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1701:3:6",
														"nodeType": "YulTypedName",
														"src": "1701:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1706:6:6",
														"nodeType": "YulTypedName",
														"src": "1706:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1717:11:6",
														"nodeType": "YulTypedName",
														"src": "1717:11:6",
														"type": ""
													}
												],
												"src": "1633:169:6"
											},
											{
												"body": {
													"nativeSrc": "1870:77:6",
													"nodeType": "YulBlock",
													"src": "1870:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1887:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1887:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1892:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1892:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1897:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1897:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1881:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1881:5:6"
																},
																"nativeSrc": "1881:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1881:23:6"
															},
															"nativeSrc": "1881:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "1881:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1924:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1924:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1929:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1929:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1920:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:6"
																		},
																		"nativeSrc": "1920:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1920:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1938:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1938:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1913:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1913:6:6"
																},
																"nativeSrc": "1913:27:6",
																"nodeType": "YulFunctionCall",
																"src": "1913:27:6"
															},
															"nativeSrc": "1913:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "1913:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1808:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1852:3:6",
														"nodeType": "YulTypedName",
														"src": "1852:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1857:3:6",
														"nodeType": "YulTypedName",
														"src": "1857:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1862:6:6",
														"nodeType": "YulTypedName",
														"src": "1862:6:6",
														"type": ""
													}
												],
												"src": "1808:139:6"
											},
											{
												"body": {
													"nativeSrc": "2001:54:6",
													"nodeType": "YulBlock",
													"src": "2001:54:6",
													"statements": [
														{
															"nativeSrc": "2011:38:6",
															"nodeType": "YulAssignment",
															"src": "2011:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2029:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2029:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2036:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2036:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2025:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2025:3:6"
																		},
																		"nativeSrc": "2025:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2025:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2045:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2045:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2041:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2041:3:6"
																		},
																		"nativeSrc": "2041:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2041:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2021:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2021:3:6"
																},
																"nativeSrc": "2021:28:6",
																"nodeType": "YulFunctionCall",
																"src": "2021:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2011:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1953:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1984:5:6",
														"nodeType": "YulTypedName",
														"src": "1984:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1994:6:6",
														"nodeType": "YulTypedName",
														"src": "1994:6:6",
														"type": ""
													}
												],
												"src": "1953:102:6"
											},
											{
												"body": {
													"nativeSrc": "2153:285:6",
													"nodeType": "YulBlock",
													"src": "2153:285:6",
													"statements": [
														{
															"nativeSrc": "2163:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2163:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2210:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2210:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2177:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "2177:32:6"
																},
																"nativeSrc": "2177:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2177:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2167:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2167:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2225:78:6",
															"nodeType": "YulAssignment",
															"src": "2225:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2291:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2291:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2296:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2296:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2232:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2232:58:6"
																},
																"nativeSrc": "2232:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2232:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2225:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2225:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2351:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2351:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2358:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2358:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2347:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2347:3:6"
																		},
																		"nativeSrc": "2347:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2347:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2365:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2365:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2370:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2370:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2312:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2312:34:6"
																},
																"nativeSrc": "2312:65:6",
																"nodeType": "YulFunctionCall",
																"src": "2312:65:6"
															},
															"nativeSrc": "2312:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "2312:65:6"
														},
														{
															"nativeSrc": "2386:46:6",
															"nodeType": "YulAssignment",
															"src": "2386:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2397:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2397:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2424:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2424:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2402:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "2402:21:6"
																		},
																		"nativeSrc": "2402:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2402:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2393:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2393:3:6"
																},
																"nativeSrc": "2393:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2393:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2386:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2386:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2061:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2134:5:6",
														"nodeType": "YulTypedName",
														"src": "2134:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2141:3:6",
														"nodeType": "YulTypedName",
														"src": "2141:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2149:3:6",
														"nodeType": "YulTypedName",
														"src": "2149:3:6",
														"type": ""
													}
												],
												"src": "2061:377:6"
											},
											{
												"body": {
													"nativeSrc": "2562:195:6",
													"nodeType": "YulBlock",
													"src": "2562:195:6",
													"statements": [
														{
															"nativeSrc": "2572:26:6",
															"nodeType": "YulAssignment",
															"src": "2572:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2584:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2584:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2595:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2595:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2580:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2580:3:6"
																},
																"nativeSrc": "2580:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2580:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2572:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2572:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2619:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2619:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2630:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2630:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2615:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2615:3:6"
																		},
																		"nativeSrc": "2615:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2615:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2638:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2638:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2644:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2644:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2634:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:6"
																		},
																		"nativeSrc": "2634:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2608:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2608:6:6"
																},
																"nativeSrc": "2608:47:6",
																"nodeType": "YulFunctionCall",
																"src": "2608:47:6"
															},
															"nativeSrc": "2608:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "2608:47:6"
														},
														{
															"nativeSrc": "2664:86:6",
															"nodeType": "YulAssignment",
															"src": "2664:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2736:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2736:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2745:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2745:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2672:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "2672:63:6"
																},
																"nativeSrc": "2672:78:6",
																"nodeType": "YulFunctionCall",
																"src": "2672:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2664:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2664:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2444:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2534:9:6",
														"nodeType": "YulTypedName",
														"src": "2534:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2546:6:6",
														"nodeType": "YulTypedName",
														"src": "2546:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2557:4:6",
														"nodeType": "YulTypedName",
														"src": "2557:4:6",
														"type": ""
													}
												],
												"src": "2444:313:6"
											},
											{
												"body": {
													"nativeSrc": "2808:32:6",
													"nodeType": "YulBlock",
													"src": "2808:32:6",
													"statements": [
														{
															"nativeSrc": "2818:16:6",
															"nodeType": "YulAssignment",
															"src": "2818:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:6",
																"nodeType": "YulIdentifier",
																"src": "2829:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:6",
														"nodeType": "YulTypedName",
														"src": "2790:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:6",
														"nodeType": "YulTypedName",
														"src": "2800:7:6",
														"type": ""
													}
												],
												"src": "2763:77:6"
											},
											{
												"body": {
													"nativeSrc": "2889:79:6",
													"nodeType": "YulBlock",
													"src": "2889:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2946:16:6",
																"nodeType": "YulBlock",
																"src": "2946:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2955:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2955:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2958:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2958:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2948:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2948:6:6"
																			},
																			"nativeSrc": "2948:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2948:12:6"
																		},
																		"nativeSrc": "2948:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2948:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2912:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2912:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2937:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2937:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2919:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2919:17:6"
																				},
																				"nativeSrc": "2919:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2919:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2909:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2909:2:6"
																		},
																		"nativeSrc": "2909:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2909:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2902:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2902:6:6"
																},
																"nativeSrc": "2902:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2902:43:6"
															},
															"nativeSrc": "2899:63:6",
															"nodeType": "YulIf",
															"src": "2899:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2846:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2882:5:6",
														"nodeType": "YulTypedName",
														"src": "2882:5:6",
														"type": ""
													}
												],
												"src": "2846:122:6"
											},
											{
												"body": {
													"nativeSrc": "3026:87:6",
													"nodeType": "YulBlock",
													"src": "3026:87:6",
													"statements": [
														{
															"nativeSrc": "3036:29:6",
															"nodeType": "YulAssignment",
															"src": "3036:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3058:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3058:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3045:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3045:12:6"
																},
																"nativeSrc": "3045:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3045:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3036:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3036:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3101:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3101:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3074:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "3074:26:6"
																},
																"nativeSrc": "3074:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3074:33:6"
															},
															"nativeSrc": "3074:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3074:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2974:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3004:6:6",
														"nodeType": "YulTypedName",
														"src": "3004:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3012:3:6",
														"nodeType": "YulTypedName",
														"src": "3012:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3020:5:6",
														"nodeType": "YulTypedName",
														"src": "3020:5:6",
														"type": ""
													}
												],
												"src": "2974:139:6"
											},
											{
												"body": {
													"nativeSrc": "3202:391:6",
													"nodeType": "YulBlock",
													"src": "3202:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3248:83:6",
																"nodeType": "YulBlock",
																"src": "3248:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3250:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3250:77:6"
																			},
																			"nativeSrc": "3250:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3250:79:6"
																		},
																		"nativeSrc": "3250:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3250:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3223:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3223:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3232:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3219:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3219:3:6"
																		},
																		"nativeSrc": "3219:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3219:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3244:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3244:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3215:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3215:3:6"
																},
																"nativeSrc": "3215:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3215:32:6"
															},
															"nativeSrc": "3212:119:6",
															"nodeType": "YulIf",
															"src": "3212:119:6"
														},
														{
															"nativeSrc": "3341:117:6",
															"nodeType": "YulBlock",
															"src": "3341:117:6",
															"statements": [
																{
																	"nativeSrc": "3356:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3356:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3370:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3370:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3360:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3360:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3385:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3385:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3420:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3420:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3431:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3431:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3416:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3416:3:6"
																				},
																				"nativeSrc": "3416:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3440:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3440:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3395:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3395:20:6"
																		},
																		"nativeSrc": "3395:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3395:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3385:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3385:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3468:118:6",
															"nodeType": "YulBlock",
															"src": "3468:118:6",
															"statements": [
																{
																	"nativeSrc": "3483:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3483:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3497:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3497:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3487:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3487:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3513:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3513:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3548:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3548:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3559:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3559:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3544:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3544:3:6"
																				},
																				"nativeSrc": "3544:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3544:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3568:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3568:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3523:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3523:20:6"
																		},
																		"nativeSrc": "3523:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3523:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3513:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3513:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3119:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3164:9:6",
														"nodeType": "YulTypedName",
														"src": "3164:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3175:7:6",
														"nodeType": "YulTypedName",
														"src": "3175:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3187:6:6",
														"nodeType": "YulTypedName",
														"src": "3187:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3195:6:6",
														"nodeType": "YulTypedName",
														"src": "3195:6:6",
														"type": ""
													}
												],
												"src": "3119:474:6"
											},
											{
												"body": {
													"nativeSrc": "3641:48:6",
													"nodeType": "YulBlock",
													"src": "3641:48:6",
													"statements": [
														{
															"nativeSrc": "3651:32:6",
															"nodeType": "YulAssignment",
															"src": "3651:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3676:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3676:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3669:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3669:6:6"
																		},
																		"nativeSrc": "3669:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3669:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3662:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3662:6:6"
																},
																"nativeSrc": "3662:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3662:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3651:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3651:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3599:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3623:5:6",
														"nodeType": "YulTypedName",
														"src": "3623:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3633:7:6",
														"nodeType": "YulTypedName",
														"src": "3633:7:6",
														"type": ""
													}
												],
												"src": "3599:90:6"
											},
											{
												"body": {
													"nativeSrc": "3754:50:6",
													"nodeType": "YulBlock",
													"src": "3754:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3771:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3771:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3791:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3791:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3776:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3776:14:6"
																		},
																		"nativeSrc": "3776:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3776:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3764:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3764:6:6"
																},
																"nativeSrc": "3764:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3764:34:6"
															},
															"nativeSrc": "3764:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3764:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3695:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3742:5:6",
														"nodeType": "YulTypedName",
														"src": "3742:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3749:3:6",
														"nodeType": "YulTypedName",
														"src": "3749:3:6",
														"type": ""
													}
												],
												"src": "3695:109:6"
											},
											{
												"body": {
													"nativeSrc": "3902:118:6",
													"nodeType": "YulBlock",
													"src": "3902:118:6",
													"statements": [
														{
															"nativeSrc": "3912:26:6",
															"nodeType": "YulAssignment",
															"src": "3912:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3924:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3924:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3935:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3935:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3920:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:6"
																},
																"nativeSrc": "3920:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3920:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3912:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3986:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3986:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3999:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3999:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4010:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4010:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3995:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3995:3:6"
																		},
																		"nativeSrc": "3995:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3995:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3948:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3948:37:6"
																},
																"nativeSrc": "3948:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3948:65:6"
															},
															"nativeSrc": "3948:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3948:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3810:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3874:9:6",
														"nodeType": "YulTypedName",
														"src": "3874:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3886:6:6",
														"nodeType": "YulTypedName",
														"src": "3886:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3897:4:6",
														"nodeType": "YulTypedName",
														"src": "3897:4:6",
														"type": ""
													}
												],
												"src": "3810:210:6"
											},
											{
												"body": {
													"nativeSrc": "4091:53:6",
													"nodeType": "YulBlock",
													"src": "4091:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4108:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4108:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4131:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4131:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4113:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "4113:17:6"
																		},
																		"nativeSrc": "4113:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4113:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4101:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4101:6:6"
																},
																"nativeSrc": "4101:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4101:37:6"
															},
															"nativeSrc": "4101:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "4101:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4026:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4079:5:6",
														"nodeType": "YulTypedName",
														"src": "4079:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4086:3:6",
														"nodeType": "YulTypedName",
														"src": "4086:3:6",
														"type": ""
													}
												],
												"src": "4026:118:6"
											},
											{
												"body": {
													"nativeSrc": "4248:124:6",
													"nodeType": "YulBlock",
													"src": "4248:124:6",
													"statements": [
														{
															"nativeSrc": "4258:26:6",
															"nodeType": "YulAssignment",
															"src": "4258:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4270:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4270:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4281:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4281:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4266:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4266:3:6"
																},
																"nativeSrc": "4266:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4266:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4258:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4258:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4338:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4338:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4351:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4351:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4362:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4362:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4347:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4347:3:6"
																		},
																		"nativeSrc": "4347:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4294:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4294:43:6"
																},
																"nativeSrc": "4294:71:6",
																"nodeType": "YulFunctionCall",
																"src": "4294:71:6"
															},
															"nativeSrc": "4294:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "4294:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4150:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4220:9:6",
														"nodeType": "YulTypedName",
														"src": "4220:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4232:6:6",
														"nodeType": "YulTypedName",
														"src": "4232:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4243:4:6",
														"nodeType": "YulTypedName",
														"src": "4243:4:6",
														"type": ""
													}
												],
												"src": "4150:222:6"
											},
											{
												"body": {
													"nativeSrc": "4478:519:6",
													"nodeType": "YulBlock",
													"src": "4478:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4524:83:6",
																"nodeType": "YulBlock",
																"src": "4524:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4526:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4526:77:6"
																			},
																			"nativeSrc": "4526:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4526:79:6"
																		},
																		"nativeSrc": "4526:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4526:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4499:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4499:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4508:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4508:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4495:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4495:3:6"
																		},
																		"nativeSrc": "4495:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4495:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4520:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4520:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4491:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4491:3:6"
																},
																"nativeSrc": "4491:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4491:32:6"
															},
															"nativeSrc": "4488:119:6",
															"nodeType": "YulIf",
															"src": "4488:119:6"
														},
														{
															"nativeSrc": "4617:117:6",
															"nodeType": "YulBlock",
															"src": "4617:117:6",
															"statements": [
																{
																	"nativeSrc": "4632:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4632:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4646:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4646:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4636:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4636:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4661:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4661:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4696:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4696:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4707:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4707:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4692:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4692:3:6"
																				},
																				"nativeSrc": "4692:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4692:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4716:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4716:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4671:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4671:20:6"
																		},
																		"nativeSrc": "4671:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4671:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4661:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4661:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4744:118:6",
															"nodeType": "YulBlock",
															"src": "4744:118:6",
															"statements": [
																{
																	"nativeSrc": "4759:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4759:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4773:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4773:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4763:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4763:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4789:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4789:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4824:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4824:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4835:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4835:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4820:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4820:3:6"
																				},
																				"nativeSrc": "4820:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4820:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4844:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4844:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4799:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4799:20:6"
																		},
																		"nativeSrc": "4799:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4799:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4789:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4789:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4872:118:6",
															"nodeType": "YulBlock",
															"src": "4872:118:6",
															"statements": [
																{
																	"nativeSrc": "4887:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4887:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4901:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4901:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4891:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4891:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4917:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4917:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4952:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4952:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4963:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4963:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4948:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4948:3:6"
																				},
																				"nativeSrc": "4948:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4948:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4972:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4972:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4927:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4927:20:6"
																		},
																		"nativeSrc": "4927:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4927:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4917:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4917:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4378:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4432:9:6",
														"nodeType": "YulTypedName",
														"src": "4432:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4443:7:6",
														"nodeType": "YulTypedName",
														"src": "4443:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4455:6:6",
														"nodeType": "YulTypedName",
														"src": "4455:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4463:6:6",
														"nodeType": "YulTypedName",
														"src": "4463:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4471:6:6",
														"nodeType": "YulTypedName",
														"src": "4471:6:6",
														"type": ""
													}
												],
												"src": "4378:619:6"
											},
											{
												"body": {
													"nativeSrc": "5046:43:6",
													"nodeType": "YulBlock",
													"src": "5046:43:6",
													"statements": [
														{
															"nativeSrc": "5056:27:6",
															"nodeType": "YulAssignment",
															"src": "5056:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5071:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5071:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5078:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5078:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5067:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5067:3:6"
																},
																"nativeSrc": "5067:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5067:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5056:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5056:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5003:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5028:5:6",
														"nodeType": "YulTypedName",
														"src": "5028:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5038:7:6",
														"nodeType": "YulTypedName",
														"src": "5038:7:6",
														"type": ""
													}
												],
												"src": "5003:86:6"
											},
											{
												"body": {
													"nativeSrc": "5156:51:6",
													"nodeType": "YulBlock",
													"src": "5156:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5173:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5173:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5194:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5194:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5178:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "5178:15:6"
																		},
																		"nativeSrc": "5178:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5178:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5166:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5166:6:6"
																},
																"nativeSrc": "5166:35:6",
																"nodeType": "YulFunctionCall",
																"src": "5166:35:6"
															},
															"nativeSrc": "5166:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "5166:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5095:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5144:5:6",
														"nodeType": "YulTypedName",
														"src": "5144:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5151:3:6",
														"nodeType": "YulTypedName",
														"src": "5151:3:6",
														"type": ""
													}
												],
												"src": "5095:112:6"
											},
											{
												"body": {
													"nativeSrc": "5307:120:6",
													"nodeType": "YulBlock",
													"src": "5307:120:6",
													"statements": [
														{
															"nativeSrc": "5317:26:6",
															"nodeType": "YulAssignment",
															"src": "5317:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5329:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5329:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5340:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5340:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5325:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5325:3:6"
																},
																"nativeSrc": "5325:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5325:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5317:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5317:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:6"
																		},
																		"nativeSrc": "5402:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5353:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "5353:39:6"
																},
																"nativeSrc": "5353:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5353:67:6"
															},
															"nativeSrc": "5353:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "5353:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5213:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5279:9:6",
														"nodeType": "YulTypedName",
														"src": "5279:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5291:6:6",
														"nodeType": "YulTypedName",
														"src": "5291:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5302:4:6",
														"nodeType": "YulTypedName",
														"src": "5302:4:6",
														"type": ""
													}
												],
												"src": "5213:214:6"
											},
											{
												"body": {
													"nativeSrc": "5516:391:6",
													"nodeType": "YulBlock",
													"src": "5516:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5562:83:6",
																"nodeType": "YulBlock",
																"src": "5562:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5564:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:6"
																			},
																			"nativeSrc": "5564:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:6"
																		},
																		"nativeSrc": "5564:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5537:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5537:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:6"
																		},
																		"nativeSrc": "5533:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5529:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:6"
																},
																"nativeSrc": "5529:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5529:32:6"
															},
															"nativeSrc": "5526:119:6",
															"nodeType": "YulIf",
															"src": "5526:119:6"
														},
														{
															"nativeSrc": "5655:117:6",
															"nodeType": "YulBlock",
															"src": "5655:117:6",
															"statements": [
																{
																	"nativeSrc": "5670:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5684:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5674:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5674:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5699:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5699:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5734:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5734:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5745:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5745:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5730:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:6"
																				},
																				"nativeSrc": "5730:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5754:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5754:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5709:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5709:20:6"
																		},
																		"nativeSrc": "5709:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5699:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5699:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5782:118:6",
															"nodeType": "YulBlock",
															"src": "5782:118:6",
															"statements": [
																{
																	"nativeSrc": "5797:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5797:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5811:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5801:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5801:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5827:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5827:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5862:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5862:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5873:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5873:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5858:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5858:3:6"
																				},
																				"nativeSrc": "5858:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5858:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5882:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5837:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5837:20:6"
																		},
																		"nativeSrc": "5837:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5827:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5827:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5433:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:6",
														"nodeType": "YulTypedName",
														"src": "5478:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5489:7:6",
														"nodeType": "YulTypedName",
														"src": "5489:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5501:6:6",
														"nodeType": "YulTypedName",
														"src": "5501:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5509:6:6",
														"nodeType": "YulTypedName",
														"src": "5509:6:6",
														"type": ""
													}
												],
												"src": "5433:474:6"
											},
											{
												"body": {
													"nativeSrc": "6019:76:6",
													"nodeType": "YulBlock",
													"src": "6019:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6041:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6041:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6049:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6049:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6037:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6037:3:6"
																		},
																		"nativeSrc": "6037:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6037:14:6"
																	},
																	{
																		"hexValue": "4f6e6c79206c697175696469747920706f6f6c2063616e207365742074686973",
																		"kind": "string",
																		"nativeSrc": "6053:34:6",
																		"nodeType": "YulLiteral",
																		"src": "6053:34:6",
																		"type": "",
																		"value": "Only liquidity pool can set this"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6030:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6030:6:6"
																},
																"nativeSrc": "6030:58:6",
																"nodeType": "YulFunctionCall",
																"src": "6030:58:6"
															},
															"nativeSrc": "6030:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "6030:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_d5238c306bd9ae156396300b2bcef8cae989e20659986e12318b157b1350c310",
												"nativeSrc": "5913:182:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6011:6:6",
														"nodeType": "YulTypedName",
														"src": "6011:6:6",
														"type": ""
													}
												],
												"src": "5913:182:6"
											},
											{
												"body": {
													"nativeSrc": "6247:220:6",
													"nodeType": "YulBlock",
													"src": "6247:220:6",
													"statements": [
														{
															"nativeSrc": "6257:74:6",
															"nodeType": "YulAssignment",
															"src": "6257:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6323:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6323:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6328:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6328:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6264:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "6264:58:6"
																},
																"nativeSrc": "6264:67:6",
																"nodeType": "YulFunctionCall",
																"src": "6264:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6257:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6257:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6429:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6429:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d5238c306bd9ae156396300b2bcef8cae989e20659986e12318b157b1350c310",
																	"nativeSrc": "6340:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "6340:88:6"
																},
																"nativeSrc": "6340:93:6",
																"nodeType": "YulFunctionCall",
																"src": "6340:93:6"
															},
															"nativeSrc": "6340:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "6340:93:6"
														},
														{
															"nativeSrc": "6442:19:6",
															"nodeType": "YulAssignment",
															"src": "6442:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6453:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6453:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6458:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6458:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6449:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6449:3:6"
																},
																"nativeSrc": "6449:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6449:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6442:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6442:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d5238c306bd9ae156396300b2bcef8cae989e20659986e12318b157b1350c310_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6101:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6235:3:6",
														"nodeType": "YulTypedName",
														"src": "6235:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6243:3:6",
														"nodeType": "YulTypedName",
														"src": "6243:3:6",
														"type": ""
													}
												],
												"src": "6101:366:6"
											},
											{
												"body": {
													"nativeSrc": "6644:248:6",
													"nodeType": "YulBlock",
													"src": "6644:248:6",
													"statements": [
														{
															"nativeSrc": "6654:26:6",
															"nodeType": "YulAssignment",
															"src": "6654:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6666:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6666:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6677:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6677:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6662:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6662:3:6"
																},
																"nativeSrc": "6662:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6662:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6654:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6654:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6701:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6701:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6712:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6712:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6697:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6697:3:6"
																		},
																		"nativeSrc": "6697:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6697:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6720:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6720:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6726:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6726:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6716:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6716:3:6"
																		},
																		"nativeSrc": "6716:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6716:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6690:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6690:6:6"
																},
																"nativeSrc": "6690:47:6",
																"nodeType": "YulFunctionCall",
																"src": "6690:47:6"
															},
															"nativeSrc": "6690:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "6690:47:6"
														},
														{
															"nativeSrc": "6746:139:6",
															"nodeType": "YulAssignment",
															"src": "6746:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6880:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6880:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d5238c306bd9ae156396300b2bcef8cae989e20659986e12318b157b1350c310_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6754:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "6754:124:6"
																},
																"nativeSrc": "6754:131:6",
																"nodeType": "YulFunctionCall",
																"src": "6754:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6746:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6746:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d5238c306bd9ae156396300b2bcef8cae989e20659986e12318b157b1350c310__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6473:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6624:9:6",
														"nodeType": "YulTypedName",
														"src": "6624:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6639:4:6",
														"nodeType": "YulTypedName",
														"src": "6639:4:6",
														"type": ""
													}
												],
												"src": "6473:419:6"
											},
											{
												"body": {
													"nativeSrc": "6926:152:6",
													"nodeType": "YulBlock",
													"src": "6926:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6943:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6943:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6946:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6946:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6936:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6936:6:6"
																},
																"nativeSrc": "6936:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6936:88:6"
															},
															"nativeSrc": "6936:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6936:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7040:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7040:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7043:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7043:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7033:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7033:6:6"
																},
																"nativeSrc": "7033:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7033:15:6"
															},
															"nativeSrc": "7033:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7033:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7064:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7064:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7067:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7067:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7057:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7057:6:6"
																},
																"nativeSrc": "7057:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7057:15:6"
															},
															"nativeSrc": "7057:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7057:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6898:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6898:180:6"
											},
											{
												"body": {
													"nativeSrc": "7135:269:6",
													"nodeType": "YulBlock",
													"src": "7135:269:6",
													"statements": [
														{
															"nativeSrc": "7145:22:6",
															"nodeType": "YulAssignment",
															"src": "7145:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7159:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7159:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7165:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7165:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7155:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7155:3:6"
																},
																"nativeSrc": "7155:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7155:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7145:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7145:6:6"
																}
															]
														},
														{
															"nativeSrc": "7176:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7176:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7206:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7206:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7212:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7212:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7202:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7202:3:6"
																},
																"nativeSrc": "7202:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7202:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7180:18:6",
																	"nodeType": "YulTypedName",
																	"src": "7180:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7253:51:6",
																"nodeType": "YulBlock",
																"src": "7253:51:6",
																"statements": [
																	{
																		"nativeSrc": "7267:27:6",
																		"nodeType": "YulAssignment",
																		"src": "7267:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7281:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "7281:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7289:4:6",
																					"nodeType": "YulLiteral",
																					"src": "7289:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7277:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7277:3:6"
																			},
																			"nativeSrc": "7277:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7277:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7267:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7267:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7233:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "7233:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7226:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7226:6:6"
																},
																"nativeSrc": "7226:26:6",
																"nodeType": "YulFunctionCall",
																"src": "7226:26:6"
															},
															"nativeSrc": "7223:81:6",
															"nodeType": "YulIf",
															"src": "7223:81:6"
														},
														{
															"body": {
																"nativeSrc": "7356:42:6",
																"nodeType": "YulBlock",
																"src": "7356:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7370:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7370:16:6"
																			},
																			"nativeSrc": "7370:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7370:18:6"
																		},
																		"nativeSrc": "7370:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7370:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7320:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "7320:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7343:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7343:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7351:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7351:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7340:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7340:2:6"
																		},
																		"nativeSrc": "7340:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7340:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7317:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7317:2:6"
																},
																"nativeSrc": "7317:38:6",
																"nodeType": "YulFunctionCall",
																"src": "7317:38:6"
															},
															"nativeSrc": "7314:84:6",
															"nodeType": "YulIf",
															"src": "7314:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7084:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7119:4:6",
														"nodeType": "YulTypedName",
														"src": "7119:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7128:6:6",
														"nodeType": "YulTypedName",
														"src": "7128:6:6",
														"type": ""
													}
												],
												"src": "7084:320:6"
											},
											{
												"body": {
													"nativeSrc": "7564:288:6",
													"nodeType": "YulBlock",
													"src": "7564:288:6",
													"statements": [
														{
															"nativeSrc": "7574:26:6",
															"nodeType": "YulAssignment",
															"src": "7574:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7586:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7586:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7597:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7597:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7582:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7582:3:6"
																},
																"nativeSrc": "7582:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7582:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7574:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7574:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7654:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7654:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7667:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7667:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7678:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7678:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7663:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7663:3:6"
																		},
																		"nativeSrc": "7663:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7663:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7610:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7610:43:6"
																},
																"nativeSrc": "7610:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7610:71:6"
															},
															"nativeSrc": "7610:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "7610:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7735:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7735:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7748:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7748:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7759:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7759:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7744:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7744:3:6"
																		},
																		"nativeSrc": "7744:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7744:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7691:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7691:43:6"
																},
																"nativeSrc": "7691:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7691:72:6"
															},
															"nativeSrc": "7691:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7691:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7817:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7817:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7830:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7830:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7841:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7841:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7826:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7826:3:6"
																		},
																		"nativeSrc": "7826:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7826:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7773:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7773:43:6"
																},
																"nativeSrc": "7773:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7773:72:6"
															},
															"nativeSrc": "7773:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7773:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7410:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7520:9:6",
														"nodeType": "YulTypedName",
														"src": "7520:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7532:6:6",
														"nodeType": "YulTypedName",
														"src": "7532:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7540:6:6",
														"nodeType": "YulTypedName",
														"src": "7540:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7548:6:6",
														"nodeType": "YulTypedName",
														"src": "7548:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7559:4:6",
														"nodeType": "YulTypedName",
														"src": "7559:4:6",
														"type": ""
													}
												],
												"src": "7410:442:6"
											},
											{
												"body": {
													"nativeSrc": "7886:152:6",
													"nodeType": "YulBlock",
													"src": "7886:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7903:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7903:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7906:77:6",
																		"nodeType": "YulLiteral",
																		"src": "7906:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7896:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7896:6:6"
																},
																"nativeSrc": "7896:88:6",
																"nodeType": "YulFunctionCall",
																"src": "7896:88:6"
															},
															"nativeSrc": "7896:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "7896:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8000:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8000:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8003:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8003:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7993:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7993:6:6"
																},
																"nativeSrc": "7993:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7993:15:6"
															},
															"nativeSrc": "7993:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7993:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8024:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8024:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8027:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8027:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8017:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8017:6:6"
																},
																"nativeSrc": "8017:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8017:15:6"
															},
															"nativeSrc": "8017:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8017:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7858:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "7858:180:6"
											},
											{
												"body": {
													"nativeSrc": "8088:147:6",
													"nodeType": "YulBlock",
													"src": "8088:147:6",
													"statements": [
														{
															"nativeSrc": "8098:25:6",
															"nodeType": "YulAssignment",
															"src": "8098:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8121:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8121:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8103:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8103:17:6"
																},
																"nativeSrc": "8103:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8103:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8098:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8098:1:6"
																}
															]
														},
														{
															"nativeSrc": "8132:25:6",
															"nodeType": "YulAssignment",
															"src": "8132:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8155:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8155:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8137:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8137:17:6"
																},
																"nativeSrc": "8137:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8137:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8132:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8132:1:6"
																}
															]
														},
														{
															"nativeSrc": "8166:16:6",
															"nodeType": "YulAssignment",
															"src": "8166:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8177:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8177:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8180:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8180:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8173:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8173:3:6"
																},
																"nativeSrc": "8173:9:6",
																"nodeType": "YulFunctionCall",
																"src": "8173:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8166:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8166:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8206:22:6",
																"nodeType": "YulBlock",
																"src": "8206:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8208:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8208:16:6"
																			},
																			"nativeSrc": "8208:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8208:18:6"
																		},
																		"nativeSrc": "8208:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8208:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8198:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8198:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8201:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8201:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8195:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8195:2:6"
																},
																"nativeSrc": "8195:10:6",
																"nodeType": "YulFunctionCall",
																"src": "8195:10:6"
															},
															"nativeSrc": "8192:36:6",
															"nodeType": "YulIf",
															"src": "8192:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8044:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8075:1:6",
														"nodeType": "YulTypedName",
														"src": "8075:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8078:1:6",
														"nodeType": "YulTypedName",
														"src": "8078:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8084:3:6",
														"nodeType": "YulTypedName",
														"src": "8084:3:6",
														"type": ""
													}
												],
												"src": "8044:191:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_d5238c306bd9ae156396300b2bcef8cae989e20659986e12318b157b1350c310(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only liquidity pool can set this\")\n\n    }\n\n    function abi_encode_t_stringliteral_d5238c306bd9ae156396300b2bcef8cae989e20659986e12318b157b1350c310_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_d5238c306bd9ae156396300b2bcef8cae989e20659986e12318b157b1350c310(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d5238c306bd9ae156396300b2bcef8cae989e20659986e12318b157b1350c310__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d5238c306bd9ae156396300b2bcef8cae989e20659986e12318b157b1350c310_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x665A11CA EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x1877020 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x2D05D3F EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x276 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDA PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0xD8C JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH2 0x57A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FC SWAP1 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x37C SWAP1 PUSH2 0xEE3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A8 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x407 PUSH2 0x5FC JUMP JUMPDEST SWAP1 POP PUSH2 0x414 DUP2 DUP6 DUP6 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x432 PUSH2 0x5FC JUMP JUMPDEST SWAP1 POP PUSH2 0x43F DUP6 DUP3 DUP6 PUSH2 0x615 JUMP JUMPDEST PUSH2 0x44A DUP6 DUP6 DUP6 PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4D7 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x503 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x54E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x525 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x531 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x562 PUSH2 0x5FC JUMP JUMPDEST SWAP1 POP PUSH2 0x56F DUP2 DUP6 DUP6 PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x610 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x797 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x620 DUP5 DUP5 PUSH2 0x57A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x6A1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x692 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x689 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6A0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x797 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x717 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70E SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x787 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x792 DUP4 DUP4 DUP4 PUSH2 0x966 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x807 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FE SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x877 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86E SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x960 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x957 SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9B6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9AA SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA84 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA3F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA36 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xACB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB15 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB72 SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBAC DUP3 PUSH2 0xB83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBC DUP2 PUSH2 0xBA2 JUMP JUMPDEST DUP2 EQ PUSH2 0xBC6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD7 DUP2 PUSH2 0xBB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBF2 JUMPI PUSH2 0xBF1 PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBFF DUP5 DUP3 DUP6 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC11 DUP2 PUSH2 0xBA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC2A PUSH0 DUP4 ADD DUP5 PUSH2 0xC08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC72 DUP3 PUSH2 0xC30 JUMP JUMPDEST PUSH2 0xC7C DUP2 DUP6 PUSH2 0xC3A JUMP JUMPDEST SWAP4 POP PUSH2 0xC8C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC4A JUMP JUMPDEST PUSH2 0xC95 DUP2 PUSH2 0xC58 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCB8 DUP2 DUP5 PUSH2 0xC68 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD2 DUP2 PUSH2 0xCC0 JUMP JUMPDEST DUP2 EQ PUSH2 0xCDC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCED DUP2 PUSH2 0xCC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD09 JUMPI PUSH2 0xD08 PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD16 DUP6 DUP3 DUP7 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD27 DUP6 DUP3 DUP7 ADD PUSH2 0xCDF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD45 DUP2 PUSH2 0xD31 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD5E PUSH0 DUP4 ADD DUP5 PUSH2 0xD3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD6D DUP2 PUSH2 0xCC0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD86 PUSH0 DUP4 ADD DUP5 PUSH2 0xD64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDA3 JUMPI PUSH2 0xDA2 PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xDC1 DUP7 DUP3 DUP8 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xDD2 DUP7 DUP3 DUP8 ADD PUSH2 0xCDF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF1 DUP2 PUSH2 0xDDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE0A PUSH0 DUP4 ADD DUP5 PUSH2 0xDE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE26 JUMPI PUSH2 0xE25 PUSH2 0xB7F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE33 DUP6 DUP3 DUP7 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE44 DUP6 DUP3 DUP7 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206C697175696469747920706F6F6C2063616E207365742074686973 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE82 PUSH1 0x20 DUP4 PUSH2 0xC3A JUMP JUMPDEST SWAP2 POP PUSH2 0xE8D DUP3 PUSH2 0xE4E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEAF DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xEFA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF0D JUMPI PUSH2 0xF0C PUSH2 0xEB6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF26 PUSH0 DUP4 ADD DUP7 PUSH2 0xC08 JUMP JUMPDEST PUSH2 0xF33 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0xF40 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD64 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF7F DUP3 PUSH2 0xCC0 JUMP JUMPDEST SWAP2 POP PUSH2 0xF8A DUP4 PUSH2 0xCC0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xFA2 JUMPI PUSH2 0xFA1 PUSH2 0xF48 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xC7 SWAP6 PUSH4 0x69D3A74C 0xC1 TLOAD DUP7 PREVRANDAO SWAP13 0xBD 0xAC 0xDB CALLDATACOPY 0xA6 DUP13 CREATE LOG0 DUP6 DUP10 MSTORE8 SHL 0xF8 0xCD 0xC9 0xBE PC MCOPY SDIV PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "258:1178:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1246:188;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;428:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;357:28:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1246:188:5;1337:13;;;;;;;;;;;1323:27;;:10;:27;;;1315:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1413:14;1397:13;;:30;;;;;;;;;;;;;;;;;;1246:188;:::o;428:22::-;;;;;;;;;;;;;:::o;2074:89:1:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;357:28:5:-;;;;;;;;;;;;;:::o;3299:116:1:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2276:93::-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;3846:140::-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8989:128:1:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:99::-;1580:6;1614:5;1608:12;1598:22;;1528:99;;;:::o;1633:169::-;1717:11;1751:6;1746:3;1739:19;1791:4;1786:3;1782:14;1767:29;;1633:169;;;;:::o;1808:139::-;1897:6;1892:3;1887;1881:23;1938:1;1929:6;1924:3;1920:16;1913:27;1808:139;;;:::o;1953:102::-;1994:6;2045:2;2041:7;2036:2;2029:5;2025:14;2021:28;2011:38;;1953:102;;;:::o;2061:377::-;2149:3;2177:39;2210:5;2177:39;:::i;:::-;2232:71;2296:6;2291:3;2232:71;:::i;:::-;2225:78;;2312:65;2370:6;2365:3;2358:4;2351:5;2347:16;2312:65;:::i;:::-;2402:29;2424:6;2402:29;:::i;:::-;2397:3;2393:39;2386:46;;2153:285;2061:377;;;;:::o;2444:313::-;2557:4;2595:2;2584:9;2580:18;2572:26;;2644:9;2638:4;2634:20;2630:1;2619:9;2615:17;2608:47;2672:78;2745:4;2736:6;2672:78;:::i;:::-;2664:86;;2444:313;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:122::-;2919:24;2937:5;2919:24;:::i;:::-;2912:5;2909:35;2899:63;;2958:1;2955;2948:12;2899:63;2846:122;:::o;2974:139::-;3020:5;3058:6;3045:20;3036:29;;3074:33;3101:5;3074:33;:::i;:::-;2974:139;;;;:::o;3119:474::-;3187:6;3195;3244:2;3232:9;3223:7;3219:23;3215:32;3212:119;;;3250:79;;:::i;:::-;3212:119;3370:1;3395:53;3440:7;3431:6;3420:9;3416:22;3395:53;:::i;:::-;3385:63;;3341:117;3497:2;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3468:118;3119:474;;;;;:::o;3599:90::-;3633:7;3676:5;3669:13;3662:21;3651:32;;3599:90;;;:::o;3695:109::-;3776:21;3791:5;3776:21;:::i;:::-;3771:3;3764:34;3695:109;;:::o;3810:210::-;3897:4;3935:2;3924:9;3920:18;3912:26;;3948:65;4010:1;3999:9;3995:17;3986:6;3948:65;:::i;:::-;3810:210;;;;:::o;4026:118::-;4113:24;4131:5;4113:24;:::i;:::-;4108:3;4101:37;4026:118;;:::o;4150:222::-;4243:4;4281:2;4270:9;4266:18;4258:26;;4294:71;4362:1;4351:9;4347:17;4338:6;4294:71;:::i;:::-;4150:222;;;;:::o;4378:619::-;4455:6;4463;4471;4520:2;4508:9;4499:7;4495:23;4491:32;4488:119;;;4526:79;;:::i;:::-;4488:119;4646:1;4671:53;4716:7;4707:6;4696:9;4692:22;4671:53;:::i;:::-;4661:63;;4617:117;4773:2;4799:53;4844:7;4835:6;4824:9;4820:22;4799:53;:::i;:::-;4789:63;;4744:118;4901:2;4927:53;4972:7;4963:6;4952:9;4948:22;4927:53;:::i;:::-;4917:63;;4872:118;4378:619;;;;;:::o;5003:86::-;5038:7;5078:4;5071:5;5067:16;5056:27;;5003:86;;;:::o;5095:112::-;5178:22;5194:5;5178:22;:::i;:::-;5173:3;5166:35;5095:112;;:::o;5213:214::-;5302:4;5340:2;5329:9;5325:18;5317:26;;5353:67;5417:1;5406:9;5402:17;5393:6;5353:67;:::i;:::-;5213:214;;;;:::o;5433:474::-;5501:6;5509;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;:::i;:::-;5699:63;;5655:117;5811:2;5837:53;5882:7;5873:6;5862:9;5858:22;5837:53;:::i;:::-;5827:63;;5782:118;5433:474;;;;;:::o;5913:182::-;6053:34;6049:1;6041:6;6037:14;6030:58;5913:182;:::o;6101:366::-;6243:3;6264:67;6328:2;6323:3;6264:67;:::i;:::-;6257:74;;6340:93;6429:3;6340:93;:::i;:::-;6458:2;6453:3;6449:12;6442:19;;6101:366;;;:::o;6473:419::-;6639:4;6677:2;6666:9;6662:18;6654:26;;6726:9;6720:4;6716:20;6712:1;6701:9;6697:17;6690:47;6754:131;6880:4;6754:131;:::i;:::-;6746:139;;6473:419;;;:::o;6898:180::-;6946:77;6943:1;6936:88;7043:4;7040:1;7033:15;7067:4;7064:1;7057:15;7084:320;7128:6;7165:1;7159:4;7155:12;7145:22;;7212:1;7206:4;7202:12;7233:18;7223:81;;7289:4;7281:6;7277:17;7267:27;;7223:81;7351:2;7343:6;7340:14;7320:18;7317:38;7314:84;;7370:18;;:::i;:::-;7314:84;7135:269;7084:320;;;:::o;7410:442::-;7559:4;7597:2;7586:9;7582:18;7574:26;;7610:71;7678:1;7667:9;7663:17;7654:6;7610:71;:::i;:::-;7691:72;7759:2;7748:9;7744:18;7735:6;7691:72;:::i;:::-;7773;7841:2;7830:9;7826:18;7817:6;7773:72;:::i;:::-;7410:442;;;;;;:::o;7858:180::-;7906:77;7903:1;7896:88;8003:4;8000:1;7993:15;8027:4;8024:1;8017:15;8044:191;8084:3;8103:20;8121:1;8103:20;:::i;:::-;8098:25;;8137:20;8155:1;8137:20;:::i;:::-;8132:25;;8180:1;8177;8173:9;8166:16;;8201:3;8198:1;8195:10;8192:36;;;8208:18;;:::i;:::-;8192:36;8044:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "812400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2873",
								"creator()": "2531",
								"decimals()": "338",
								"liquidityPool()": "2530",
								"name()": "infinite",
								"setLiquidityPool(address)": "26885",
								"symbol()": "infinite",
								"totalSupply()": "2521",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 258,
									"end": 1436,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 258,
									"end": 1436,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 258,
									"end": 1436,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 806,
									"end": 1108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 978,
									"end": 983,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 985,
									"end": 992,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1004,
									"end": 1033,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1010,
									"end": 1018,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1020,
									"end": 1032,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1004,
									"end": 1009,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1004,
									"end": 1009,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1004,
									"end": 1009,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1004,
									"end": 1033,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1004,
									"end": 1033,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1004,
									"end": 1033,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1004,
									"end": 1033,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1004,
									"end": 1033,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1061,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1050,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1043,
									"end": 1050,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1043,
									"end": 1061,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1043,
									"end": 1061,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1061,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1061,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1061,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1061,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1043,
									"end": 1061,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1061,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1061,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1061,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1061,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1061,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1043,
									"end": 1061,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1061,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1061,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1061,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1061,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1061,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1087,
									"end": 1101,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1084,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1071,
									"end": 1084,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1071,
									"end": 1101,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1071,
									"end": 1101,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1101,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1101,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1101,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1101,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1071,
									"end": 1101,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1101,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1101,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1101,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1101,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1101,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1071,
									"end": 1101,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1101,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1101,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1101,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1101,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1071,
									"end": 1101,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 806,
									"end": 1108,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 258,
									"end": 1436,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 258,
									"end": 1436,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2636,
									"end": 2641,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 2744,
									"end": 2749,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 2726,
									"end": 2750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2724,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2716,
									"end": 2751,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2765,
									"end": 2766,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2762,
									"end": 2763,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2755,
									"end": 2767,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2653,
									"end": 2775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2838,
									"end": 2843,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2875,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2863,
									"end": 2876,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 2912,
									"end": 2917,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 2885,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 3056,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 2930,
									"end": 3056,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2967,
									"end": 2974,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3007,
									"end": 3049,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3000,
									"end": 3005,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3050,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2985,
									"end": 3050,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2985,
									"end": 3050,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 3056,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 3056,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 3056,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 3056,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3062,
									"end": 3158,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3062,
									"end": 3158,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3099,
									"end": 3106,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3128,
									"end": 3152,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 3146,
									"end": 3151,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3128,
									"end": 3152,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 3128,
									"end": 3152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3128,
									"end": 3152,
									"name": "tag",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 3128,
									"end": 3152,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3117,
									"end": 3152,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3117,
									"end": 3152,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3062,
									"end": 3158,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3062,
									"end": 3158,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3062,
									"end": 3158,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3062,
									"end": 3158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3164,
									"end": 3286,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3164,
									"end": 3286,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 3255,
									"end": 3260,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3237,
									"end": 3261,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "tag",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3230,
									"end": 3235,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3227,
									"end": 3262,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3276,
									"end": 3277,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3273,
									"end": 3274,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3266,
									"end": 3278,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3164,
									"end": 3286,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3164,
									"end": 3286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3349,
									"end": 3354,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3380,
									"end": 3386,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3374,
									"end": 3387,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3365,
									"end": 3387,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3365,
									"end": 3387,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 3423,
									"end": 3428,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3396,
									"end": 3429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "tag",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 4764,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3441,
									"end": 4764,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3567,
									"end": 3573,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3575,
									"end": 3581,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3583,
									"end": 3589,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3591,
									"end": 3597,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3599,
									"end": 3605,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3648,
									"end": 3651,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 3636,
									"end": 3645,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3627,
									"end": 3634,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3623,
									"end": 3646,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3619,
									"end": 3652,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 3616,
									"end": 3736,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3616,
									"end": 3736,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 3616,
									"end": 3736,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3655,
									"end": 3734,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 3655,
									"end": 3734,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 3655,
									"end": 3734,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3655,
									"end": 3734,
									"name": "tag",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 3655,
									"end": 3734,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3616,
									"end": 3736,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 3616,
									"end": 3736,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3796,
									"end": 3797,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3785,
									"end": 3794,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3781,
									"end": 3798,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3775,
									"end": 3799,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3826,
									"end": 3844,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3818,
									"end": 3824,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3815,
									"end": 3845,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3812,
									"end": 3929,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3812,
									"end": 3929,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 3812,
									"end": 3929,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3848,
									"end": 3927,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 3848,
									"end": 3927,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 3848,
									"end": 3927,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3848,
									"end": 3927,
									"name": "tag",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 3848,
									"end": 3927,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3812,
									"end": 3929,
									"name": "tag",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 3812,
									"end": 3929,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3953,
									"end": 4027,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 4019,
									"end": 4026,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4016,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3999,
									"end": 4008,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 3995,
									"end": 4017,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3953,
									"end": 4027,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 3953,
									"end": 4027,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3953,
									"end": 4027,
									"name": "tag",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 3953,
									"end": 4027,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3943,
									"end": 4027,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 3943,
									"end": 4027,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3746,
									"end": 4037,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4097,
									"end": 4099,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4095,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4082,
									"end": 4100,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4076,
									"end": 4101,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4146,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4120,
									"end": 4126,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4117,
									"end": 4147,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4114,
									"end": 4231,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4114,
									"end": 4231,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 4114,
									"end": 4231,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4150,
									"end": 4229,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 4150,
									"end": 4229,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 4150,
									"end": 4229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4150,
									"end": 4229,
									"name": "tag",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 4150,
									"end": 4229,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4114,
									"end": 4231,
									"name": "tag",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 4114,
									"end": 4231,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4255,
									"end": 4329,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 4321,
									"end": 4328,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4312,
									"end": 4318,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4301,
									"end": 4310,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4297,
									"end": 4319,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4255,
									"end": 4329,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 4255,
									"end": 4329,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4255,
									"end": 4329,
									"name": "tag",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 4255,
									"end": 4329,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4245,
									"end": 4329,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 4245,
									"end": 4329,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4047,
									"end": 4339,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4378,
									"end": 4380,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4404,
									"end": 4468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 4460,
									"end": 4467,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4457,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4440,
									"end": 4449,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4436,
									"end": 4458,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4404,
									"end": 4468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 4404,
									"end": 4468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4404,
									"end": 4468,
									"name": "tag",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 4404,
									"end": 4468,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4394,
									"end": 4468,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4394,
									"end": 4468,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4349,
									"end": 4478,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4517,
									"end": 4519,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 4543,
									"end": 4607,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 4599,
									"end": 4606,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4590,
									"end": 4596,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4579,
									"end": 4588,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4575,
									"end": 4597,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4543,
									"end": 4607,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 4543,
									"end": 4607,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4543,
									"end": 4607,
									"name": "tag",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 4543,
									"end": 4607,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4533,
									"end": 4607,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4533,
									"end": 4607,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4488,
									"end": 4617,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4656,
									"end": 4659,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 4683,
									"end": 4747,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 4739,
									"end": 4746,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4730,
									"end": 4736,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4719,
									"end": 4728,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4715,
									"end": 4737,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4683,
									"end": 4747,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 4683,
									"end": 4747,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4683,
									"end": 4747,
									"name": "tag",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 4683,
									"end": 4747,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4673,
									"end": 4747,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4673,
									"end": 4747,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4627,
									"end": 4757,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 4764,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 4764,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 4764,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 4764,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 4764,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 4764,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 4764,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 4764,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 4764,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4770,
									"end": 4869,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 4770,
									"end": 4869,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4822,
									"end": 4828,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4856,
									"end": 4861,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4850,
									"end": 4862,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4840,
									"end": 4862,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4840,
									"end": 4862,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4770,
									"end": 4869,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4770,
									"end": 4869,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4770,
									"end": 4869,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4770,
									"end": 4869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4875,
									"end": 5055,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 4875,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4923,
									"end": 5000,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4920,
									"end": 4921,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4913,
									"end": 5001,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5020,
									"end": 5024,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 5017,
									"end": 5018,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 5010,
									"end": 5025,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5044,
									"end": 5048,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 5041,
									"end": 5042,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5034,
									"end": 5049,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 5061,
									"end": 5381,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 5061,
									"end": 5381,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5105,
									"end": 5111,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5142,
									"end": 5143,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 5136,
									"end": 5140,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5132,
									"end": 5144,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 5122,
									"end": 5144,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5122,
									"end": 5144,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5189,
									"end": 5190,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5183,
									"end": 5187,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5179,
									"end": 5191,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5210,
									"end": 5228,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5200,
									"end": 5281,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 5200,
									"end": 5281,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5266,
									"end": 5270,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 5258,
									"end": 5264,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5254,
									"end": 5271,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5244,
									"end": 5271,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5244,
									"end": 5271,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5200,
									"end": 5281,
									"name": "tag",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 5200,
									"end": 5281,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5328,
									"end": 5330,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5320,
									"end": 5326,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5317,
									"end": 5331,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5297,
									"end": 5315,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5294,
									"end": 5332,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 5291,
									"end": 5375,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 5291,
									"end": 5375,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5347,
									"end": 5365,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 5347,
									"end": 5365,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 5347,
									"end": 5365,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5347,
									"end": 5365,
									"name": "tag",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 5347,
									"end": 5365,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5291,
									"end": 5375,
									"name": "tag",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 5291,
									"end": 5375,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5112,
									"end": 5381,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5061,
									"end": 5381,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5061,
									"end": 5381,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5061,
									"end": 5381,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5061,
									"end": 5381,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5387,
									"end": 5528,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 5387,
									"end": 5528,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5436,
									"end": 5440,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5459,
									"end": 5462,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5451,
									"end": 5462,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5451,
									"end": 5462,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5482,
									"end": 5485,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5479,
									"end": 5480,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5472,
									"end": 5486,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5513,
									"end": 5514,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5503,
									"end": 5521,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 5495,
									"end": 5521,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5495,
									"end": 5521,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5387,
									"end": 5528,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5387,
									"end": 5528,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5387,
									"end": 5528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5387,
									"end": 5528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5534,
									"end": 5627,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 5534,
									"end": 5627,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5571,
									"end": 5577,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5618,
									"end": 5620,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5613,
									"end": 5615,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5606,
									"end": 5611,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5602,
									"end": 5616,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5598,
									"end": 5621,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 5588,
									"end": 5621,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5588,
									"end": 5621,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5534,
									"end": 5627,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5534,
									"end": 5627,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5534,
									"end": 5627,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5534,
									"end": 5627,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5633,
									"end": 5740,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 5633,
									"end": 5740,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5677,
									"end": 5685,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5727,
									"end": 5732,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5721,
									"end": 5725,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5717,
									"end": 5733,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 5696,
									"end": 5733,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5696,
									"end": 5733,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5633,
									"end": 5740,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5633,
									"end": 5740,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5633,
									"end": 5740,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5633,
									"end": 5740,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5633,
									"end": 5740,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5746,
									"end": 6139,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 5746,
									"end": 6139,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5815,
									"end": 5821,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5865,
									"end": 5866,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5853,
									"end": 5863,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5849,
									"end": 5867,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5888,
									"end": 5985,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 5918,
									"end": 5984,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5907,
									"end": 5916,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5888,
									"end": 5985,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 5888,
									"end": 5985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5888,
									"end": 5985,
									"name": "tag",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 5888,
									"end": 5985,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6006,
									"end": 6045,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 6036,
									"end": 6044,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6025,
									"end": 6034,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6006,
									"end": 6045,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 6006,
									"end": 6045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6006,
									"end": 6045,
									"name": "tag",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 6006,
									"end": 6045,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5994,
									"end": 6045,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 5994,
									"end": 6045,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6078,
									"end": 6082,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6074,
									"end": 6083,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6067,
									"end": 6072,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6063,
									"end": 6084,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6054,
									"end": 6084,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 6054,
									"end": 6084,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6127,
									"end": 6131,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6117,
									"end": 6125,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6113,
									"end": 6132,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6106,
									"end": 6111,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6103,
									"end": 6133,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 6093,
									"end": 6133,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6093,
									"end": 6133,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5822,
									"end": 6139,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5822,
									"end": 6139,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5746,
									"end": 6139,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 5746,
									"end": 6139,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5746,
									"end": 6139,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5746,
									"end": 6139,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5746,
									"end": 6139,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5746,
									"end": 6139,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6145,
									"end": 6205,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 6145,
									"end": 6205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6173,
									"end": 6176,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6194,
									"end": 6199,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6187,
									"end": 6199,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6187,
									"end": 6199,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6145,
									"end": 6205,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6145,
									"end": 6205,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6145,
									"end": 6205,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6145,
									"end": 6205,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6353,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 6211,
									"end": 6353,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6261,
									"end": 6270,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6294,
									"end": 6347,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 6312,
									"end": 6346,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 6321,
									"end": 6345,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 6339,
									"end": 6344,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6321,
									"end": 6345,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 6321,
									"end": 6345,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6321,
									"end": 6345,
									"name": "tag",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 6321,
									"end": 6345,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6312,
									"end": 6346,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 6312,
									"end": 6346,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6312,
									"end": 6346,
									"name": "tag",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 6312,
									"end": 6346,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6294,
									"end": 6347,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 6294,
									"end": 6347,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6294,
									"end": 6347,
									"name": "tag",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 6294,
									"end": 6347,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6281,
									"end": 6347,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6281,
									"end": 6347,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6353,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6353,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6353,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6211,
									"end": 6353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6359,
									"end": 6434,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 6359,
									"end": 6434,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6402,
									"end": 6405,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6423,
									"end": 6428,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6416,
									"end": 6428,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6416,
									"end": 6428,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6359,
									"end": 6434,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6359,
									"end": 6434,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6359,
									"end": 6434,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6359,
									"end": 6434,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6440,
									"end": 6709,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 6440,
									"end": 6709,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6550,
									"end": 6589,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 6581,
									"end": 6588,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6550,
									"end": 6589,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 6550,
									"end": 6589,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6550,
									"end": 6589,
									"name": "tag",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 6550,
									"end": 6589,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6611,
									"end": 6702,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 6660,
									"end": 6701,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 6684,
									"end": 6700,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6660,
									"end": 6701,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 6660,
									"end": 6701,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6660,
									"end": 6701,
									"name": "tag",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 6660,
									"end": 6701,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6652,
									"end": 6658,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6645,
									"end": 6649,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6639,
									"end": 6650,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6611,
									"end": 6702,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 6611,
									"end": 6702,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6611,
									"end": 6702,
									"name": "tag",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 6611,
									"end": 6702,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6605,
									"end": 6609,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6598,
									"end": 6703,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6516,
									"end": 6709,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6440,
									"end": 6709,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6440,
									"end": 6709,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6440,
									"end": 6709,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6440,
									"end": 6709,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6715,
									"end": 6788,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 6715,
									"end": 6788,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6760,
									"end": 6763,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6715,
									"end": 6788,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6715,
									"end": 6788,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6794,
									"end": 6983,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 6794,
									"end": 6983,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6871,
									"end": 6903,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 6871,
									"end": 6903,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 6871,
									"end": 6903,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6871,
									"end": 6903,
									"name": "tag",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 6871,
									"end": 6903,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6912,
									"end": 6977,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 6970,
									"end": 6976,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6962,
									"end": 6968,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6956,
									"end": 6960,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6912,
									"end": 6977,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 6912,
									"end": 6977,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6912,
									"end": 6977,
									"name": "tag",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 6912,
									"end": 6977,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6847,
									"end": 6983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6794,
									"end": 6983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6794,
									"end": 6983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6794,
									"end": 6983,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6989,
									"end": 7175,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 6989,
									"end": 7175,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7049,
									"end": 7169,
									"name": "tag",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 7049,
									"end": 7169,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7066,
									"end": 7069,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7059,
									"end": 7064,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7056,
									"end": 7070,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7049,
									"end": 7169,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7049,
									"end": 7169,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 7049,
									"end": 7169,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7120,
									"end": 7159,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7150,
									"end": 7155,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7120,
									"end": 7159,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 7120,
									"end": 7159,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7120,
									"end": 7159,
									"name": "tag",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 7120,
									"end": 7159,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7093,
									"end": 7094,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7086,
									"end": 7091,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7082,
									"end": 7095,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7073,
									"end": 7095,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7073,
									"end": 7095,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7049,
									"end": 7169,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 7049,
									"end": 7169,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7049,
									"end": 7169,
									"name": "tag",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 7049,
									"end": 7169,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6989,
									"end": 7175,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6989,
									"end": 7175,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6989,
									"end": 7175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7181,
									"end": 7724,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 7181,
									"end": 7724,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7282,
									"end": 7284,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7277,
									"end": 7280,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7274,
									"end": 7285,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7271,
									"end": 7717,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7271,
									"end": 7717,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 7271,
									"end": 7717,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7316,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 7348,
									"end": 7353,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7316,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 7316,
									"end": 7354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7316,
									"end": 7354,
									"name": "tag",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 7316,
									"end": 7354,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7400,
									"end": 7429,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "163"
								},
								{
									"begin": 7418,
									"end": 7428,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7400,
									"end": 7429,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 7400,
									"end": 7429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7400,
									"end": 7429,
									"name": "tag",
									"source": 6,
									"value": "163"
								},
								{
									"begin": 7400,
									"end": 7429,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7390,
									"end": 7398,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7386,
									"end": 7430,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7583,
									"end": 7585,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7571,
									"end": 7581,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7568,
									"end": 7586,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7565,
									"end": 7614,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7565,
									"end": 7614,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 7565,
									"end": 7614,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7604,
									"end": 7612,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7589,
									"end": 7612,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7589,
									"end": 7612,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7565,
									"end": 7614,
									"name": "tag",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 7565,
									"end": 7614,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7627,
									"end": 7707,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 7683,
									"end": 7705,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 7701,
									"end": 7704,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7683,
									"end": 7705,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 7683,
									"end": 7705,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7683,
									"end": 7705,
									"name": "tag",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 7683,
									"end": 7705,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7673,
									"end": 7681,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7669,
									"end": 7706,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7656,
									"end": 7667,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7627,
									"end": 7707,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 7627,
									"end": 7707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7627,
									"end": 7707,
									"name": "tag",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 7627,
									"end": 7707,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7286,
									"end": 7717,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7286,
									"end": 7717,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7271,
									"end": 7717,
									"name": "tag",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 7271,
									"end": 7717,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7181,
									"end": 7724,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7181,
									"end": 7724,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7181,
									"end": 7724,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7181,
									"end": 7724,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7730,
									"end": 7847,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 7730,
									"end": 7847,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7784,
									"end": 7792,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7834,
									"end": 7839,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7828,
									"end": 7832,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7824,
									"end": 7840,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 7803,
									"end": 7840,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7803,
									"end": 7840,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7730,
									"end": 7847,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7730,
									"end": 7847,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7730,
									"end": 7847,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7730,
									"end": 7847,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7730,
									"end": 7847,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7853,
									"end": 8022,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 7853,
									"end": 8022,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7897,
									"end": 7903,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7930,
									"end": 7981,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 7978,
									"end": 7979,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7974,
									"end": 7980,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7966,
									"end": 7971,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7963,
									"end": 7964,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7959,
									"end": 7972,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7930,
									"end": 7981,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 7930,
									"end": 7981,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7930,
									"end": 7981,
									"name": "tag",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 7930,
									"end": 7981,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7926,
									"end": 7982,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 8011,
									"end": 8015,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 8005,
									"end": 8009,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8001,
									"end": 8016,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7991,
									"end": 8016,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7991,
									"end": 8016,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7904,
									"end": 8022,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7853,
									"end": 8022,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7853,
									"end": 8022,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7853,
									"end": 8022,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7853,
									"end": 8022,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7853,
									"end": 8022,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8027,
									"end": 8322,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 8027,
									"end": 8322,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8103,
									"end": 8107,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8249,
									"end": 8278,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 8274,
									"end": 8277,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8268,
									"end": 8272,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8249,
									"end": 8278,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 8249,
									"end": 8278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8249,
									"end": 8278,
									"name": "tag",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 8249,
									"end": 8278,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8241,
									"end": 8278,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8241,
									"end": 8278,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8311,
									"end": 8314,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8308,
									"end": 8309,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 8304,
									"end": 8315,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 8298,
									"end": 8302,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8295,
									"end": 8316,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 8287,
									"end": 8316,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8287,
									"end": 8316,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8027,
									"end": 8322,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8027,
									"end": 8322,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8027,
									"end": 8322,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8027,
									"end": 8322,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8027,
									"end": 8322,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8327,
									"end": 9722,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 8327,
									"end": 9722,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8444,
									"end": 8481,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "173"
								},
								{
									"begin": 8477,
									"end": 8480,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8444,
									"end": 8481,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 8444,
									"end": 8481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8444,
									"end": 8481,
									"name": "tag",
									"source": 6,
									"value": "173"
								},
								{
									"begin": 8444,
									"end": 8481,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8546,
									"end": 8564,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8538,
									"end": 8544,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8535,
									"end": 8565,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8532,
									"end": 8588,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8532,
									"end": 8588,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "174"
								},
								{
									"begin": 8532,
									"end": 8588,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8568,
									"end": 8586,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 8568,
									"end": 8586,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 8568,
									"end": 8586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8568,
									"end": 8586,
									"name": "tag",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 8568,
									"end": 8586,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8532,
									"end": 8588,
									"name": "tag",
									"source": 6,
									"value": "174"
								},
								{
									"begin": 8532,
									"end": 8588,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8612,
									"end": 8650,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "176"
								},
								{
									"begin": 8644,
									"end": 8648,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8638,
									"end": 8649,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 8612,
									"end": 8650,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 8612,
									"end": 8650,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8612,
									"end": 8650,
									"name": "tag",
									"source": 6,
									"value": "176"
								},
								{
									"begin": 8612,
									"end": 8650,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8697,
									"end": 8764,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "177"
								},
								{
									"begin": 8757,
									"end": 8763,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8749,
									"end": 8755,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8743,
									"end": 8747,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8697,
									"end": 8764,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 8697,
									"end": 8764,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8697,
									"end": 8764,
									"name": "tag",
									"source": 6,
									"value": "177"
								},
								{
									"begin": 8697,
									"end": 8764,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8791,
									"end": 8792,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8815,
									"end": 8819,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8802,
									"end": 8819,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8802,
									"end": 8819,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8847,
									"end": 8849,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8839,
									"end": 8845,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8836,
									"end": 8850,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8864,
									"end": 8865,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8859,
									"end": 9477,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8859,
									"end": 9477,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 8859,
									"end": 9477,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 8859,
									"end": 9477,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9521,
									"end": 9522,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9538,
									"end": 9544,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9535,
									"end": 9612,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9535,
									"end": 9612,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "180"
								},
								{
									"begin": 9535,
									"end": 9612,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9587,
									"end": 9596,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9582,
									"end": 9585,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 9578,
									"end": 9597,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9572,
									"end": 9598,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9563,
									"end": 9598,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9563,
									"end": 9598,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9535,
									"end": 9612,
									"name": "tag",
									"source": 6,
									"value": "180"
								},
								{
									"begin": 9535,
									"end": 9612,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9638,
									"end": 9705,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 9698,
									"end": 9704,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 9691,
									"end": 9696,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9638,
									"end": 9705,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 9638,
									"end": 9705,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9638,
									"end": 9705,
									"name": "tag",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 9638,
									"end": 9705,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9632,
									"end": 9636,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 9625,
									"end": 9706,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 9494,
									"end": 9716,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8829,
									"end": 9716,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "178"
								},
								{
									"begin": 8829,
									"end": 9716,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8859,
									"end": 9477,
									"name": "tag",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 8859,
									"end": 9477,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8911,
									"end": 8915,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8907,
									"end": 8916,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 8899,
									"end": 8905,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8895,
									"end": 8917,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8945,
									"end": 8982,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "182"
								},
								{
									"begin": 8977,
									"end": 8981,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8945,
									"end": 8982,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 8945,
									"end": 8982,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8945,
									"end": 8982,
									"name": "tag",
									"source": 6,
									"value": "182"
								},
								{
									"begin": 8945,
									"end": 8982,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9004,
									"end": 9005,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9018,
									"end": 9226,
									"name": "tag",
									"source": 6,
									"value": "183"
								},
								{
									"begin": 9018,
									"end": 9226,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9032,
									"end": 9039,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9029,
									"end": 9030,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9026,
									"end": 9040,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 9018,
									"end": 9226,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9018,
									"end": 9226,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "185"
								},
								{
									"begin": 9018,
									"end": 9226,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9111,
									"end": 9120,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9106,
									"end": 9109,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 9102,
									"end": 9121,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9096,
									"end": 9122,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9088,
									"end": 9094,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9081,
									"end": 9123,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 9162,
									"end": 9163,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 9154,
									"end": 9160,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9150,
									"end": 9164,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9140,
									"end": 9164,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9140,
									"end": 9164,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9209,
									"end": 9211,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9198,
									"end": 9207,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 9194,
									"end": 9212,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9181,
									"end": 9212,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 9181,
									"end": 9212,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9055,
									"end": 9059,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9052,
									"end": 9053,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9048,
									"end": 9060,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9043,
									"end": 9060,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9043,
									"end": 9060,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9018,
									"end": 9226,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "183"
								},
								{
									"begin": 9018,
									"end": 9226,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9018,
									"end": 9226,
									"name": "tag",
									"source": 6,
									"value": "185"
								},
								{
									"begin": 9018,
									"end": 9226,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9254,
									"end": 9260,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 9245,
									"end": 9252,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9242,
									"end": 9261,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 9239,
									"end": 9418,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9239,
									"end": 9418,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "186"
								},
								{
									"begin": 9239,
									"end": 9418,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9312,
									"end": 9321,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9307,
									"end": 9310,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 9303,
									"end": 9322,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9297,
									"end": 9323,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9355,
									"end": 9403,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "187"
								},
								{
									"begin": 9397,
									"end": 9401,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 9389,
									"end": 9395,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 9385,
									"end": 9402,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9374,
									"end": 9383,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9355,
									"end": 9403,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 9355,
									"end": 9403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9355,
									"end": 9403,
									"name": "tag",
									"source": 6,
									"value": "187"
								},
								{
									"begin": 9355,
									"end": 9403,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9347,
									"end": 9353,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9340,
									"end": 9404,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 9262,
									"end": 9418,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9239,
									"end": 9418,
									"name": "tag",
									"source": 6,
									"value": "186"
								},
								{
									"begin": 9239,
									"end": 9418,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9464,
									"end": 9465,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 9460,
									"end": 9461,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 9452,
									"end": 9458,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 9448,
									"end": 9462,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 9444,
									"end": 9466,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9438,
									"end": 9442,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 9431,
									"end": 9467,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8866,
									"end": 9477,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8866,
									"end": 9477,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8866,
									"end": 9477,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8829,
									"end": 9716,
									"name": "tag",
									"source": 6,
									"value": "178"
								},
								{
									"begin": 8829,
									"end": 9716,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8829,
									"end": 9716,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8419,
									"end": 9722,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8419,
									"end": 9722,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8419,
									"end": 9722,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8327,
									"end": 9722,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8327,
									"end": 9722,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8327,
									"end": 9722,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9728,
									"end": 9846,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 9728,
									"end": 9846,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9815,
									"end": 9839,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "189"
								},
								{
									"begin": 9833,
									"end": 9838,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9815,
									"end": 9839,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 9815,
									"end": 9839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9815,
									"end": 9839,
									"name": "tag",
									"source": 6,
									"value": "189"
								},
								{
									"begin": 9815,
									"end": 9839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9810,
									"end": 9813,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9803,
									"end": 9840,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9728,
									"end": 9846,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9728,
									"end": 9846,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9728,
									"end": 9846,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9852,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 9852,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9945,
									"end": 9949,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9983,
									"end": 9985,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9972,
									"end": 9981,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9968,
									"end": 9986,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9960,
									"end": 9986,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9960,
									"end": 9986,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9996,
									"end": 10067,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "191"
								},
								{
									"begin": 10064,
									"end": 10065,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10053,
									"end": 10062,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10049,
									"end": 10066,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10040,
									"end": 10046,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9996,
									"end": 10067,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 9996,
									"end": 10067,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9996,
									"end": 10067,
									"name": "tag",
									"source": 6,
									"value": "191"
								},
								{
									"begin": 9996,
									"end": 10067,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9852,
									"end": 10074,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9852,
									"end": 10074,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9852,
									"end": 10074,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9852,
									"end": 10074,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9852,
									"end": 10074,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10080,
									"end": 10260,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 10080,
									"end": 10260,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10128,
									"end": 10205,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10125,
									"end": 10126,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10118,
									"end": 10206,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 10225,
									"end": 10229,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 10222,
									"end": 10223,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 10215,
									"end": 10230,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 10249,
									"end": 10253,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 10246,
									"end": 10247,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10239,
									"end": 10254,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 10266,
									"end": 10457,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 10266,
									"end": 10457,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10306,
									"end": 10309,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10325,
									"end": 10345,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "194"
								},
								{
									"begin": 10343,
									"end": 10344,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10325,
									"end": 10345,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 10325,
									"end": 10345,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10325,
									"end": 10345,
									"name": "tag",
									"source": 6,
									"value": "194"
								},
								{
									"begin": 10325,
									"end": 10345,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10320,
									"end": 10345,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10320,
									"end": 10345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10359,
									"end": 10379,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "195"
								},
								{
									"begin": 10377,
									"end": 10378,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10359,
									"end": 10379,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 10359,
									"end": 10379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10359,
									"end": 10379,
									"name": "tag",
									"source": 6,
									"value": "195"
								},
								{
									"begin": 10359,
									"end": 10379,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10354,
									"end": 10379,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 10354,
									"end": 10379,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10402,
									"end": 10403,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10399,
									"end": 10400,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10395,
									"end": 10404,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10388,
									"end": 10404,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10388,
									"end": 10404,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10423,
									"end": 10426,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 10420,
									"end": 10421,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10417,
									"end": 10427,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 10414,
									"end": 10450,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 10414,
									"end": 10450,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "196"
								},
								{
									"begin": 10414,
									"end": 10450,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10430,
									"end": 10448,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "197"
								},
								{
									"begin": 10430,
									"end": 10448,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 10430,
									"end": 10448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10430,
									"end": 10448,
									"name": "tag",
									"source": 6,
									"value": "197"
								},
								{
									"begin": 10430,
									"end": 10448,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10414,
									"end": 10450,
									"name": "tag",
									"source": 6,
									"value": "196"
								},
								{
									"begin": 10414,
									"end": 10450,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10266,
									"end": 10457,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 10266,
									"end": 10457,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10266,
									"end": 10457,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10266,
									"end": 10457,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10266,
									"end": 10457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10463,
									"end": 10581,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 10463,
									"end": 10581,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10550,
									"end": 10574,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "199"
								},
								{
									"begin": 10568,
									"end": 10573,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10550,
									"end": 10574,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 10550,
									"end": 10574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10550,
									"end": 10574,
									"name": "tag",
									"source": 6,
									"value": "199"
								},
								{
									"begin": 10550,
									"end": 10574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10545,
									"end": 10548,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10538,
									"end": 10575,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 10463,
									"end": 10581,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10463,
									"end": 10581,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10463,
									"end": 10581,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10587,
									"end": 11029,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 10587,
									"end": 11029,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10736,
									"end": 10740,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10774,
									"end": 10776,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 10763,
									"end": 10772,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10759,
									"end": 10777,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10751,
									"end": 10777,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10751,
									"end": 10777,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10787,
									"end": 10858,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "201"
								},
								{
									"begin": 10855,
									"end": 10856,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10844,
									"end": 10853,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10840,
									"end": 10857,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10831,
									"end": 10837,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 10787,
									"end": 10858,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 10787,
									"end": 10858,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10787,
									"end": 10858,
									"name": "tag",
									"source": 6,
									"value": "201"
								},
								{
									"begin": 10787,
									"end": 10858,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10868,
									"end": 10940,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "202"
								},
								{
									"begin": 10936,
									"end": 10938,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10925,
									"end": 10934,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10921,
									"end": 10939,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10912,
									"end": 10918,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 10868,
									"end": 10940,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 10868,
									"end": 10940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10868,
									"end": 10940,
									"name": "tag",
									"source": 6,
									"value": "202"
								},
								{
									"begin": 10868,
									"end": 10940,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10950,
									"end": 11022,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "203"
								},
								{
									"begin": 11018,
									"end": 11020,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 11007,
									"end": 11016,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 11003,
									"end": 11021,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10994,
									"end": 11000,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10950,
									"end": 11022,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 10950,
									"end": 11022,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10950,
									"end": 11022,
									"name": "tag",
									"source": 6,
									"value": "203"
								},
								{
									"begin": 10950,
									"end": 11022,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10587,
									"end": 11029,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 10587,
									"end": 11029,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 10587,
									"end": 11029,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10587,
									"end": 11029,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10587,
									"end": 11029,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10587,
									"end": 11029,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10587,
									"end": 11029,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11035,
									"end": 11257,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 11035,
									"end": 11257,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11128,
									"end": 11132,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 11166,
									"end": 11168,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 11155,
									"end": 11164,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11151,
									"end": 11169,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 11143,
									"end": 11169,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 11143,
									"end": 11169,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11179,
									"end": 11250,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "205"
								},
								{
									"begin": 11247,
									"end": 11248,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 11236,
									"end": 11245,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 11232,
									"end": 11249,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 11223,
									"end": 11229,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11179,
									"end": 11250,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 11179,
									"end": 11250,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11179,
									"end": 11250,
									"name": "tag",
									"source": 6,
									"value": "205"
								},
								{
									"begin": 11179,
									"end": 11250,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11035,
									"end": 11257,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 11035,
									"end": 11257,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 11035,
									"end": 11257,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11035,
									"end": 11257,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11035,
									"end": 11257,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 258,
									"end": 1436,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 258,
									"end": 1436,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 258,
									"end": 1436,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 1436,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 258,
									"end": 1436,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 1436,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 1436,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 258,
									"end": 1436,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 1436,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122008c7956369d3a74cc15c86449cbdacdb37a68cf0a08589531bf8cdc9be585e0564736f6c634300081a0033",
									".code": [
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "665A11CA"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "1877020"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "2D05D3F"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 258,
											"end": 1436,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1246,
											"end": 1434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1246,
											"end": 1434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 428,
											"end": 450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 450,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 428,
											"end": 450,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 428,
											"end": 450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 428,
											"end": 450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 450,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 357,
											"end": 385,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 357,
											"end": 385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 357,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 357,
											"end": 385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 357,
											"end": 385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 385,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 357,
											"end": 385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 357,
											"end": 385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 357,
											"end": 385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 385,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1337,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1350,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1337,
											"end": 1350,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1350,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1337,
											"end": 1350,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1323,
											"end": 1350,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1333,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1323,
											"end": 1350,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1350,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1315,
											"end": 1387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1315,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1427,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1397,
											"end": 1410,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1397,
											"end": 1410,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 428,
											"end": 450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 428,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 428,
											"end": 450,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 428,
											"end": 450,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 428,
											"end": 450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 385,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 357,
											"end": 385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 357,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 357,
											"end": 385,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 357,
											"end": 385,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1263,
											"end": 1287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1288,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1497,
											"end": 1514,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1444,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1300,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1627,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1528,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1614,
											"end": 1619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1608,
											"end": 1620,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1620,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1620,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1627,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1633,
											"end": 1802,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1633,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1717,
											"end": 1728,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1749,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1758,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1795,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1786,
											"end": 1789,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1796,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1633,
											"end": 1802,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1633,
											"end": 1802,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1633,
											"end": 1802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1633,
											"end": 1802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1633,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1947,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1808,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1897,
											"end": 1903,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1895,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1890,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 1939,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1929,
											"end": 1935,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1927,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1936,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1940,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2055,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1953,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2000,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2047,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2038,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2029,
											"end": 2034,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2039,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2049,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2438,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2061,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2149,
											"end": 2152,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2177,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2210,
											"end": 2215,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2177,
											"end": 2216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2216,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2177,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2294,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2232,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2232,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2303,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2370,
											"end": 2376,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2368,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2362,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2351,
											"end": 2356,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2347,
											"end": 2363,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2312,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2377,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2312,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2402,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2424,
											"end": 2430,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2402,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2402,
											"end": 2431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2402,
											"end": 2431,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2402,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2397,
											"end": 2400,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2393,
											"end": 2432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2432,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2432,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2153,
											"end": 2438,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2438,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2438,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2438,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2438,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2757,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2444,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2561,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2593,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2653,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2638,
											"end": 2642,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2654,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2630,
											"end": 2631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2628,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2632,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2608,
											"end": 2655,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2745,
											"end": 2749,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2736,
											"end": 2742,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2672,
											"end": 2750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2750,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2672,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2750,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2757,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2757,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2757,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2757,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 2840,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2763,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2834,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2818,
											"end": 2834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2818,
											"end": 2834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 2840,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 2840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 2840,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 2840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2937,
											"end": 2942,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2919,
											"end": 2943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 2917,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2909,
											"end": 2944,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2958,
											"end": 2959,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2956,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2960,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3025,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3065,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3036,
											"end": 3065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3036,
											"end": 3065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3101,
											"end": 3106,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3074,
											"end": 3107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3193,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3201,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3232,
											"end": 3241,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3230,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3242,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3215,
											"end": 3247,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3250,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3370,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3440,
											"end": 3447,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3431,
											"end": 3437,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3429,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3438,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3395,
											"end": 3448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3448,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3448,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3341,
											"end": 3458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3499,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3568,
											"end": 3575,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3565,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3557,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3523,
											"end": 3576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3468,
											"end": 3586,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3640,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3681,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3682,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3683,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3599,
											"end": 3689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3791,
											"end": 3796,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3776,
											"end": 3797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3774,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 3901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3937,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3924,
											"end": 3933,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3938,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3912,
											"end": 3938,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3912,
											"end": 3938,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3995,
											"end": 4012,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3948,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4026,
											"end": 4144,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4026,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4113,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4113,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4113,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4113,
											"end": 4137,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 4113,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4111,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4026,
											"end": 4144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4026,
											"end": 4144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4026,
											"end": 4144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4243,
											"end": 4247,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4281,
											"end": 4283,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4270,
											"end": 4279,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4266,
											"end": 4284,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4284,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 4362,
											"end": 4363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4360,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4364,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4338,
											"end": 4344,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4294,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4365,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 4294,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4520,
											"end": 4522,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4508,
											"end": 4517,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4499,
											"end": 4506,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4495,
											"end": 4518,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4523,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4526,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4526,
											"end": 4605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4605,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4526,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4647,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4671,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4716,
											"end": 4723,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4707,
											"end": 4713,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4705,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4692,
											"end": 4714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4671,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4671,
											"end": 4724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4671,
											"end": 4724,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4671,
											"end": 4724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4661,
											"end": 4724,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4661,
											"end": 4724,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4617,
											"end": 4734,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4775,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4799,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 4844,
											"end": 4851,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4841,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4824,
											"end": 4833,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4820,
											"end": 4842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4799,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4799,
											"end": 4852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4799,
											"end": 4852,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 4799,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4852,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4789,
											"end": 4852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4744,
											"end": 4862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4901,
											"end": 4903,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 4972,
											"end": 4979,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4963,
											"end": 4969,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4952,
											"end": 4961,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 4970,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4927,
											"end": 4980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 4980,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 4980,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4872,
											"end": 4990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5038,
											"end": 5045,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5078,
											"end": 5082,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5071,
											"end": 5076,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 5194,
											"end": 5199,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5178,
											"end": 5200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5176,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5166,
											"end": 5201,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5095,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5306,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5342,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5329,
											"end": 5338,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5317,
											"end": 5343,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5317,
											"end": 5343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5353,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5730,
											"end": 5752,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 5709,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 5837,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 6095,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5913,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6053,
											"end": 6087,
											"name": "PUSH",
											"source": 6,
											"value": "4F6E6C79206C697175696469747920706F6F6C2063616E207365742074686973"
										},
										{
											"begin": 6049,
											"end": 6050,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6041,
											"end": 6047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6030,
											"end": 6088,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 6095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 6095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6101,
											"end": 6467,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 6101,
											"end": 6467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6243,
											"end": 6246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6264,
											"end": 6331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 6328,
											"end": 6330,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6323,
											"end": 6326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 6264,
											"end": 6331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6331,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 6264,
											"end": 6331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6257,
											"end": 6331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6257,
											"end": 6331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6340,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 6429,
											"end": 6432,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6340,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 6340,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6340,
											"end": 6433,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 6340,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6458,
											"end": 6460,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6453,
											"end": 6456,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6449,
											"end": 6461,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6442,
											"end": 6461,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6442,
											"end": 6461,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6101,
											"end": 6467,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6101,
											"end": 6467,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6101,
											"end": 6467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6101,
											"end": 6467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6473,
											"end": 6892,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 6473,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6677,
											"end": 6679,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6666,
											"end": 6675,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6662,
											"end": 6680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6654,
											"end": 6680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6654,
											"end": 6680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6726,
											"end": 6735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6724,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6716,
											"end": 6736,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6713,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6701,
											"end": 6710,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6690,
											"end": 6737,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6754,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 6880,
											"end": 6884,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6754,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 6754,
											"end": 6885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6754,
											"end": 6885,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 6754,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6746,
											"end": 6885,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6746,
											"end": 6885,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6473,
											"end": 6892,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6473,
											"end": 6892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6473,
											"end": 6892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6473,
											"end": 6892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6898,
											"end": 7078,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 6898,
											"end": 7078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6946,
											"end": 7023,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6943,
											"end": 6944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 7024,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7043,
											"end": 7047,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 7040,
											"end": 7041,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7033,
											"end": 7048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7067,
											"end": 7071,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7064,
											"end": 7065,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7057,
											"end": 7072,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7404,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 7084,
											"end": 7404,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7128,
											"end": 7134,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7165,
											"end": 7166,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7159,
											"end": 7163,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7155,
											"end": 7167,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7145,
											"end": 7167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7145,
											"end": 7167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7212,
											"end": 7213,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7206,
											"end": 7210,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7202,
											"end": 7214,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7233,
											"end": 7251,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7223,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 7223,
											"end": 7304,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7293,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 7281,
											"end": 7287,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7277,
											"end": 7294,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7267,
											"end": 7294,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7267,
											"end": 7294,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7223,
											"end": 7304,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 7223,
											"end": 7304,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7351,
											"end": 7353,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7343,
											"end": 7349,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7340,
											"end": 7354,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7320,
											"end": 7338,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7355,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7314,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 7314,
											"end": 7398,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 7370,
											"end": 7388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 7370,
											"end": 7388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7388,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 7370,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7314,
											"end": 7398,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 7314,
											"end": 7398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7404,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7410,
											"end": 7852,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 7410,
											"end": 7852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7559,
											"end": 7563,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7597,
											"end": 7599,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7586,
											"end": 7595,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7582,
											"end": 7600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7574,
											"end": 7600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7574,
											"end": 7600,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7610,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 7678,
											"end": 7679,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7667,
											"end": 7676,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7663,
											"end": 7680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7654,
											"end": 7660,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7610,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 7610,
											"end": 7681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7610,
											"end": 7681,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 7610,
											"end": 7681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7691,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 7759,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7748,
											"end": 7757,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 7762,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7741,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7691,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 7691,
											"end": 7763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7691,
											"end": 7763,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 7691,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7773,
											"end": 7845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 7841,
											"end": 7843,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7830,
											"end": 7839,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7826,
											"end": 7844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7817,
											"end": 7823,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7773,
											"end": 7845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 7773,
											"end": 7845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7773,
											"end": 7845,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 7773,
											"end": 7845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7410,
											"end": 7852,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7410,
											"end": 7852,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7410,
											"end": 7852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7410,
											"end": 7852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7410,
											"end": 7852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7410,
											"end": 7852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7410,
											"end": 7852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7858,
											"end": 8038,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 7858,
											"end": 8038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7983,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7896,
											"end": 7984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8003,
											"end": 8007,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 8000,
											"end": 8001,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7993,
											"end": 8008,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8027,
											"end": 8031,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8024,
											"end": 8025,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8017,
											"end": 8032,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8235,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 8044,
											"end": 8235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8084,
											"end": 8087,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 8121,
											"end": 8122,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 8103,
											"end": 8123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 8103,
											"end": 8123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8123,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8137,
											"end": 8157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 8155,
											"end": 8156,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8137,
											"end": 8157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 8137,
											"end": 8157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8137,
											"end": 8157,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 8137,
											"end": 8157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8132,
											"end": 8157,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8132,
											"end": 8157,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8180,
											"end": 8181,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8177,
											"end": 8178,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8173,
											"end": 8182,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8166,
											"end": 8182,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8166,
											"end": 8182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8201,
											"end": 8204,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8198,
											"end": 8199,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8195,
											"end": 8205,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8192,
											"end": 8228,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8192,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 8192,
											"end": 8228,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 8208,
											"end": 8226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 8208,
											"end": 8226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8192,
											"end": 8228,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 8192,
											"end": 8228,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8235,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/token factory/ERC20Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"creator()": "02d05d3f",
							"decimals()": "313ce567",
							"liquidityPool()": "665a11ca",
							"name()": "06fdde03",
							"setLiquidityPool(address)": "01877020",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityPool_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidityPool_\",\"type\":\"address\"}],\"name\":\"setLiquidityPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Custom ERC20 Token with an associated liquidity pool.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Constructor to initialize the ERC20Token.\",\"params\":{\"creator_\":\"Address of the token creator.\",\"liquidityPool_\":\"Address of the associated liquidity pool.\",\"name_\":\"Name of the token.\",\"symbol_\":\"Symbol of the token.\",\"totalSupply_\":\"Total supply of the token (with 18 decimals).\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"setLiquidityPool(address)\":{\"details\":\"Function to set the liquidity pool address.\",\"params\":{\"liquidityPool_\":\"Address of the liquidity pool.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"ERC20Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token factory/ERC20Token.sol\":\"ERC20Token\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/token factory/ERC20Token.sol\":{\"keccak256\":\"0xeb0437a075c403a7759a0dace9fcee3950cdddf014fcc18d2a5f4ac8b2485c62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95c1fde9d30a5dea4761c7e80d34080585abe774aff920c8645219a65aa065a7\",\"dweb:/ipfs/QmWuMtnX94cZhxoFC78o7D9jq6FXzKxpJQALxzktynRoPD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/token factory/ERC20Token.sol:ERC20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/token factory/ERC20Token.sol:ERC20Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/token factory/ERC20Token.sol:ERC20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/token factory/ERC20Token.sol:ERC20Token",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/token factory/ERC20Token.sol:ERC20Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 793,
								"contract": "contracts/token factory/ERC20Token.sol:ERC20Token",
								"label": "liquidityPool",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 795,
								"contract": "contracts/token factory/ERC20Token.sol:ERC20Token",
								"label": "creator",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/token factory/ERC20Token.sol": {
				"ast": {
					"absolutePath": "contracts/token factory/ERC20Token.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"ERC20Token": [
							847
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 848,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 848,
							"sourceUnit": 652,
							"src": "110:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 790,
										"name": "ERC20",
										"nameLocations": [
											"281:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "281:5:5"
									},
									"id": 791,
									"nodeType": "InheritanceSpecifier",
									"src": "281:5:5"
								}
							],
							"canonicalName": "ERC20Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 789,
								"nodeType": "StructuredDocumentation",
								"src": "167:90:5",
								"text": " @title ERC20Token\n @dev Custom ERC20 Token with an associated liquidity pool."
							},
							"fullyImplemented": true,
							"id": 847,
							"linearizedBaseContracts": [
								847,
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20Token",
							"nameLocation": "267:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "665a11ca",
									"id": 793,
									"mutability": "mutable",
									"name": "liquidityPool",
									"nameLocation": "372:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "357:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 792,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "357:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "02d05d3f",
									"id": 795,
									"mutability": "mutable",
									"name": "creator",
									"nameLocation": "443:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "428:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 794,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "428:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "994:114:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 814,
															"name": "creator_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "1010:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 815,
															"name": "totalSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "1020:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 813,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "1004:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1004:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "1004:29:5"
											},
											{
												"expression": {
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 818,
														"name": "creator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "1043:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 819,
														"name": "creator_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "1053:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1043:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "1043:18:5"
											},
											{
												"expression": {
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 822,
														"name": "liquidityPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "1071:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 823,
														"name": "liquidityPool_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "1087:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1071:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "1071:30:5"
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "457:344:5",
										"text": " @dev Constructor to initialize the ERC20Token.\n @param name_ Name of the token.\n @param symbol_ Symbol of the token.\n @param totalSupply_ Total supply of the token (with 18 decimals).\n @param creator_ Address of the token creator.\n @param liquidityPool_ Address of the associated liquidity pool."
									},
									"id": 827,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 809,
													"name": "name_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 798,
													"src": "978:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 810,
													"name": "symbol_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 800,
													"src": "985:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 811,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 808,
												"name": "ERC20",
												"nameLocations": [
													"972:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "972:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "972:21:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "841:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "827:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 797,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "827:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "870:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "856:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 799,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "totalSupply_",
												"nameLocation": "895:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "887:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "creator_",
												"nameLocation": "925:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "917:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "liquidityPool_",
												"nameLocation": "951:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "943:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:154:5"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "994:0:5"
									},
									"scope": 847,
									"src": "806:302:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "1305:129:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 834,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1323:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1327:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1323:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 836,
																"name": "liquidityPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "1337:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1323:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206c697175696469747920706f6f6c2063616e207365742074686973",
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1352:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d5238c306bd9ae156396300b2bcef8cae989e20659986e12318b157b1350c310",
																"typeString": "literal_string \"Only liquidity pool can set this\""
															},
															"value": "Only liquidity pool can set this"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d5238c306bd9ae156396300b2bcef8cae989e20659986e12318b157b1350c310",
																"typeString": "literal_string \"Only liquidity pool can set this\""
															}
														],
														"id": 833,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1315:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1315:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "1315:72:5"
											},
											{
												"expression": {
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 841,
														"name": "liquidityPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "1397:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 842,
														"name": "liquidityPool_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "1413:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1397:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "1397:30:5"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "1114:127:5",
										"text": " @dev Function to set the liquidity pool address.\n @param liquidityPool_ Address of the liquidity pool."
									},
									"functionSelector": "01877020",
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setLiquidityPool",
									"nameLocation": "1255:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "liquidityPool_",
												"nameLocation": "1280:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "1272:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:24:5"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1305:0:5"
									},
									"scope": 847,
									"src": "1246:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 848,
							"src": "258:1178:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "32:1405:5"
				},
				"id": 5
			}
		}
	}
}