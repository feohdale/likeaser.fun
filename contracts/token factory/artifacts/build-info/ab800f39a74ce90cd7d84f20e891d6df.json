{
	"id": "ab800f39a74ce90cd7d84f20e891d6df",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/token factory/CustomToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract CustomToken is ERC20, Ownable {\n    string private _customName;\n    string private _customSymbol;\n    bool private initialized;\n    string public imageURL; // Lien vers l'image associée au token\n\n    constructor() ERC20(\"\", \"\") Ownable(msg.sender) {}\n\n    // Fonction d'initialisation pour définir le nom et le symbole après le déploiement\n    function initialize(string memory name, string memory symbol) external {\n        require(!initialized, \"Token already initialized\");\n        _customName = name;\n        _customSymbol = symbol;\n        initialized = true;\n    }\n\n    // Fonctions pour récupérer le nom et le symbole personnalisés\n    function name() public view override returns (string memory) {\n        return _customName;\n    }\n\n    function symbol() public view override returns (string memory) {\n        return _customSymbol;\n    }\n\n    // Permet uniquement au propriétaire de minter des tokens\n    function mint(address to, uint256 amount) external onlyOwner {\n        _mint(to, amount);\n    }\n\n    // Fonction pour ajouter ou mettre à jour le lien de l'image\n    function setImageURL(string memory _imageURL) external onlyOwner {\n        imageURL = _imageURL;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x4ce6e9f30dba5ae30f26321dc851b669caf3f953f8c832304d05df2a523f1af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb24de66bbfa42093a20d448cb2564655525cba0342035a42a37654e5d922deb\",\"dweb:/ipfs/QmYgnFHamrgy5qurrxVLR1qDb7MirvGEoxCVwqiF1YvDMf\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x4ce6e9f30dba5ae30f26321dc851b669caf3f953f8c832304d05df2a523f1af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb24de66bbfa42093a20d448cb2564655525cba0342035a42a37654e5d922deb\",\"dweb:/ipfs/QmYgnFHamrgy5qurrxVLR1qDb7MirvGEoxCVwqiF1YvDMf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x4ce6e9f30dba5ae30f26321dc851b669caf3f953f8c832304d05df2a523f1af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb24de66bbfa42093a20d448cb2564655525cba0342035a42a37654e5d922deb\",\"dweb:/ipfs/QmYgnFHamrgy5qurrxVLR1qDb7MirvGEoxCVwqiF1YvDMf\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token factory/CustomToken.sol": {
				"CustomToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "imageURL",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_imageURL",
									"type": "string"
								}
							],
							"name": "setImageURL",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/token factory/CustomToken.sol\":168:1369  contract CustomToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/token factory/CustomToken.sol\":378:428  constructor() ERC20(\"\", \"\") Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/token factory/CustomToken.sol\":414:424  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/token factory/CustomToken.sol\":168:1369  contract CustomToken is ERC20, Ownable {... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_18:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_19:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_20:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_21:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_46:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_48\n  tag_20\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":714:798   */\ntag_47:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_22:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_23:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_24:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_25:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_53\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_24\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1429:1468   */\n  tag_54\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_24\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_26:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_27:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_28:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_58\n    /* \"#utility.yul\":1818:1852   */\n  tag_59\n    /* \"#utility.yul\":1827:1851   */\n  tag_60\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_26\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1818:1852   */\n  tag_27\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1800:1853   */\n  tag_26\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_29:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_30:\n    /* \"#utility.yul\":2056:2095   */\n  tag_63\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_28\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2117:2208   */\n  tag_64\n    /* \"#utility.yul\":2166:2207   */\n  tag_65\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_29\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_25\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_31:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_32:\n    /* \"#utility.yul\":2377:2409   */\n  tag_68\n  tag_31\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2418:2483   */\n  tag_69\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_30\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_33:\n    /* \"#utility.yul\":2555:2675   */\ntag_71:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_74\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_32\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_71)\ntag_73:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_34:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_77\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_22\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2906:2935   */\n  tag_78\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_23\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_79:\n    /* \"#utility.yul\":3133:3213   */\n  tag_80\n    /* \"#utility.yul\":3189:3211   */\n  tag_81\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_23\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_33\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_76:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_35:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_36:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_84\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_35\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_37:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_86\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_36\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_88\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_18\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_90\n  tag_19\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4038:4094   */\ntag_89:\n    /* \"#utility.yul\":4118:4156   */\n  tag_91\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_21\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4203:4270   */\n  tag_92\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_34\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_94\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_95:\n    /* \"#utility.yul\":5144:5211   */\n  tag_96\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_37\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_93)\n    /* \"#utility.yul\":4365:4983   */\ntag_94:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_97\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_22\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_98:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_98)\ntag_100:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_102\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_36\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_101:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_93:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_38:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_39:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_105\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_38\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_40:\n    /* \"#utility.yul\":5555:5579   */\n  tag_107\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_39\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_12:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_109\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_40\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/token factory/CustomToken.sol\":168:1369  contract CustomToken is ERC20, Ownable {... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/token factory/CustomToken.sol\":168:1369  contract CustomToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb90497e0\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4cd88b76\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x58e792ee\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/token factory/CustomToken.sol\":827:923  function name() public view override returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token factory/CustomToken.sol\":1098:1193  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/token factory/CustomToken.sol\":525:751  function initialize(string memory name, string memory symbol) external {... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/token factory/CustomToken.sol\":1265:1367  function setImageURL(string memory _imageURL) external onlyOwner {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token factory/CustomToken.sol\":929:1029  function symbol() public view override returns (string memory) {... */\n    tag_14:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token factory/CustomToken.sol\":309:331  string public imageURL */\n    tag_16:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"contracts/token factory/CustomToken.sol\":827:923  function name() public view override returns (string memory) {... */\n    tag_23:\n        /* \"contracts/token factory/CustomToken.sol\":873:886  string memory */\n      0x60\n        /* \"contracts/token factory/CustomToken.sol\":905:916  _customName */\n      0x06\n        /* \"contracts/token factory/CustomToken.sol\":898:916  return _customName */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_87\n      jump\t// in\n    tag_88:\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/token factory/CustomToken.sol\":827:923  function name() public view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token factory/CustomToken.sol\":1098:1193  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_106:\n        /* \"contracts/token factory/CustomToken.sol\":1169:1186  _mint(to, amount) */\n      tag_109\n        /* \"contracts/token factory/CustomToken.sol\":1175:1177  to */\n      dup3\n        /* \"contracts/token factory/CustomToken.sol\":1179:1185  amount */\n      dup3\n        /* \"contracts/token factory/CustomToken.sol\":1169:1174  _mint */\n      tag_110\n        /* \"contracts/token factory/CustomToken.sol\":1169:1186  _mint(to, amount) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/token factory/CustomToken.sol\":1098:1193  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token factory/CustomToken.sol\":525:751  function initialize(string memory name, string memory symbol) external {... */\n    tag_51:\n        /* \"contracts/token factory/CustomToken.sol\":615:626  initialized */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/token factory/CustomToken.sol\":614:626  !initialized */\n      iszero\n        /* \"contracts/token factory/CustomToken.sol\":606:656  require(!initialized, \"Token already initialized\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"contracts/token factory/CustomToken.sol\":680:684  name */\n      dup2\n        /* \"contracts/token factory/CustomToken.sol\":666:677  _customName */\n      0x06\n        /* \"contracts/token factory/CustomToken.sol\":666:684  _customName = name */\n      swap1\n      dup2\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      pop\n        /* \"contracts/token factory/CustomToken.sol\":710:716  symbol */\n      dup1\n        /* \"contracts/token factory/CustomToken.sol\":694:707  _customSymbol */\n      0x07\n        /* \"contracts/token factory/CustomToken.sol\":694:716  _customSymbol = symbol */\n      swap1\n      dup2\n      tag_117\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_117:\n      pop\n        /* \"contracts/token factory/CustomToken.sol\":740:744  true */\n      0x01\n        /* \"contracts/token factory/CustomToken.sol\":726:737  initialized */\n      0x08\n      0x00\n        /* \"contracts/token factory/CustomToken.sol\":726:744  initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/token factory/CustomToken.sol\":525:751  function initialize(string memory name, string memory symbol) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token factory/CustomToken.sol\":1265:1367  function setImageURL(string memory _imageURL) external onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/token factory/CustomToken.sol\":1351:1360  _imageURL */\n      dup1\n        /* \"contracts/token factory/CustomToken.sol\":1340:1348  imageURL */\n      0x09\n        /* \"contracts/token factory/CustomToken.sol\":1340:1360  imageURL = _imageURL */\n      swap1\n      dup2\n      tag_121\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_121:\n      pop\n        /* \"contracts/token factory/CustomToken.sol\":1265:1367  function setImageURL(string memory _imageURL) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token factory/CustomToken.sol\":929:1029  function symbol() public view override returns (string memory) {... */\n    tag_68:\n        /* \"contracts/token factory/CustomToken.sol\":977:990  string memory */\n      0x60\n        /* \"contracts/token factory/CustomToken.sol\":1009:1022  _customSymbol */\n      0x07\n        /* \"contracts/token factory/CustomToken.sol\":1002:1022  return _customSymbol */\n      dup1\n      sload\n      tag_130\n      swap1\n      tag_87\n      jump\t// in\n    tag_130:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_131\n      swap1\n      tag_87\n      jump\t// in\n    tag_131:\n      dup1\n      iszero\n      tag_132\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_133\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_132)\n    tag_133:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_134:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_134\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/token factory/CustomToken.sol\":929:1029  function symbol() public view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token factory/CustomToken.sol\":309:331  string public imageURL */\n    tag_75:\n      0x09\n      dup1\n      sload\n      tag_138\n      swap1\n      tag_87\n      jump\t// in\n    tag_138:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_87\n      jump\t// in\n    tag_139:\n      dup1\n      iszero\n      tag_140\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_141\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_140)\n    tag_141:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_142:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_142\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_185\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_188\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_190)\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_194)\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_195\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_196:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_197:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:535   */\n    tag_198:\n        /* \"#utility.yul\":369:370   */\n      0x00\n        /* \"#utility.yul\":379:492   */\n    tag_249:\n        /* \"#utility.yul\":393:399   */\n      dup4\n        /* \"#utility.yul\":390:391   */\n      dup2\n        /* \"#utility.yul\":387:400   */\n      lt\n        /* \"#utility.yul\":379:492   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":478:479   */\n      dup1\n        /* \"#utility.yul\":473:476   */\n      dup3\n        /* \"#utility.yul\":469:480   */\n      add\n        /* \"#utility.yul\":463:481   */\n      mload\n        /* \"#utility.yul\":459:460   */\n      dup2\n        /* \"#utility.yul\":454:457   */\n      dup5\n        /* \"#utility.yul\":450:461   */\n      add\n        /* \"#utility.yul\":443:482   */\n      mstore\n        /* \"#utility.yul\":415:417   */\n      0x20\n        /* \"#utility.yul\":412:413   */\n      dup2\n        /* \"#utility.yul\":408:418   */\n      add\n        /* \"#utility.yul\":403:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":379:492   */\n      jump(tag_249)\n    tag_251:\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":517:523   */\n      dup5\n        /* \"#utility.yul\":512:515   */\n      dup5\n        /* \"#utility.yul\":508:524   */\n      add\n        /* \"#utility.yul\":501:528   */\n      mstore\n        /* \"#utility.yul\":349:535   */\n      pop\n        /* \"#utility.yul\":287:535   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":541:643   */\n    tag_199:\n        /* \"#utility.yul\":582:588   */\n      0x00\n        /* \"#utility.yul\":633:635   */\n      0x1f\n        /* \"#utility.yul\":629:636   */\n      not\n        /* \"#utility.yul\":624:626   */\n      0x1f\n        /* \"#utility.yul\":617:622   */\n      dup4\n        /* \"#utility.yul\":613:627   */\n      add\n        /* \"#utility.yul\":609:637   */\n      and\n        /* \"#utility.yul\":599:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":541:643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":649:1026   */\n    tag_200:\n        /* \"#utility.yul\":737:740   */\n      0x00\n        /* \"#utility.yul\":765:804   */\n      tag_254\n        /* \"#utility.yul\":798:803   */\n      dup3\n        /* \"#utility.yul\":765:804   */\n      tag_196\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":820:891   */\n      tag_255\n        /* \"#utility.yul\":884:890   */\n      dup2\n        /* \"#utility.yul\":879:882   */\n      dup6\n        /* \"#utility.yul\":820:891   */\n      tag_197\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":813:891   */\n      swap4\n      pop\n        /* \"#utility.yul\":900:965   */\n      tag_256\n        /* \"#utility.yul\":958:964   */\n      dup2\n        /* \"#utility.yul\":953:956   */\n      dup6\n        /* \"#utility.yul\":946:950   */\n      0x20\n        /* \"#utility.yul\":939:944   */\n      dup7\n        /* \"#utility.yul\":935:951   */\n      add\n        /* \"#utility.yul\":900:965   */\n      tag_198\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":990:1019   */\n      tag_257\n        /* \"#utility.yul\":1012:1018   */\n      dup2\n        /* \"#utility.yul\":990:1019   */\n      tag_199\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":985:988   */\n      dup5\n        /* \"#utility.yul\":981:1020   */\n      add\n        /* \"#utility.yul\":974:1020   */\n      swap2\n      pop\n        /* \"#utility.yul\":741:1026   */\n      pop\n        /* \"#utility.yul\":649:1026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1032:1345   */\n    tag_25:\n        /* \"#utility.yul\":1145:1149   */\n      0x00\n        /* \"#utility.yul\":1183:1185   */\n      0x20\n        /* \"#utility.yul\":1172:1181   */\n      dup3\n        /* \"#utility.yul\":1168:1186   */\n      add\n        /* \"#utility.yul\":1160:1186   */\n      swap1\n      pop\n        /* \"#utility.yul\":1232:1241   */\n      dup2\n        /* \"#utility.yul\":1226:1230   */\n      dup2\n        /* \"#utility.yul\":1222:1242   */\n      sub\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1207:1216   */\n      dup4\n        /* \"#utility.yul\":1203:1220   */\n      add\n        /* \"#utility.yul\":1196:1243   */\n      mstore\n        /* \"#utility.yul\":1260:1338   */\n      tag_259\n        /* \"#utility.yul\":1333:1337   */\n      dup2\n        /* \"#utility.yul\":1324:1330   */\n      dup5\n        /* \"#utility.yul\":1260:1338   */\n      tag_200\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":1252:1338   */\n      swap1\n      pop\n        /* \"#utility.yul\":1032:1345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1351:1426   */\n    tag_201:\n        /* \"#utility.yul\":1384:1390   */\n      0x00\n        /* \"#utility.yul\":1417:1419   */\n      0x40\n        /* \"#utility.yul\":1411:1420   */\n      mload\n        /* \"#utility.yul\":1401:1420   */\n      swap1\n      pop\n        /* \"#utility.yul\":1351:1426   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1432:1549   */\n    tag_202:\n        /* \"#utility.yul\":1541:1542   */\n      0x00\n        /* \"#utility.yul\":1538:1539   */\n      dup1\n        /* \"#utility.yul\":1531:1543   */\n      revert\n        /* \"#utility.yul\":1555:1672   */\n    tag_203:\n        /* \"#utility.yul\":1664:1665   */\n      0x00\n        /* \"#utility.yul\":1661:1662   */\n      dup1\n        /* \"#utility.yul\":1654:1666   */\n      revert\n        /* \"#utility.yul\":1678:1804   */\n    tag_204:\n        /* \"#utility.yul\":1715:1722   */\n      0x00\n        /* \"#utility.yul\":1755:1797   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1748:1753   */\n      dup3\n        /* \"#utility.yul\":1744:1798   */\n      and\n        /* \"#utility.yul\":1733:1798   */\n      swap1\n      pop\n        /* \"#utility.yul\":1678:1804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1810:1906   */\n    tag_205:\n        /* \"#utility.yul\":1847:1854   */\n      0x00\n        /* \"#utility.yul\":1876:1900   */\n      tag_265\n        /* \"#utility.yul\":1894:1899   */\n      dup3\n        /* \"#utility.yul\":1876:1900   */\n      tag_204\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":1865:1900   */\n      swap1\n      pop\n        /* \"#utility.yul\":1810:1906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1912:2034   */\n    tag_206:\n        /* \"#utility.yul\":1985:2009   */\n      tag_267\n        /* \"#utility.yul\":2003:2008   */\n      dup2\n        /* \"#utility.yul\":1985:2009   */\n      tag_205\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":1978:1983   */\n      dup2\n        /* \"#utility.yul\":1975:2010   */\n      eq\n        /* \"#utility.yul\":1965:2028   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":2024:2025   */\n      0x00\n        /* \"#utility.yul\":2021:2022   */\n      dup1\n        /* \"#utility.yul\":2014:2026   */\n      revert\n        /* \"#utility.yul\":1965:2028   */\n    tag_268:\n        /* \"#utility.yul\":1912:2034   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2040:2179   */\n    tag_207:\n        /* \"#utility.yul\":2086:2091   */\n      0x00\n        /* \"#utility.yul\":2124:2130   */\n      dup2\n        /* \"#utility.yul\":2111:2131   */\n      calldataload\n        /* \"#utility.yul\":2102:2131   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2173   */\n      tag_270\n        /* \"#utility.yul\":2167:2172   */\n      dup2\n        /* \"#utility.yul\":2140:2173   */\n      tag_206\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":2040:2179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2185:2262   */\n    tag_208:\n        /* \"#utility.yul\":2222:2229   */\n      0x00\n        /* \"#utility.yul\":2251:2256   */\n      dup2\n        /* \"#utility.yul\":2240:2256   */\n      swap1\n      pop\n        /* \"#utility.yul\":2185:2262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2268:2390   */\n    tag_209:\n        /* \"#utility.yul\":2341:2365   */\n      tag_273\n        /* \"#utility.yul\":2359:2364   */\n      dup2\n        /* \"#utility.yul\":2341:2365   */\n      tag_208\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":2334:2339   */\n      dup2\n        /* \"#utility.yul\":2331:2366   */\n      eq\n        /* \"#utility.yul\":2321:2384   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":2380:2381   */\n      0x00\n        /* \"#utility.yul\":2377:2378   */\n      dup1\n        /* \"#utility.yul\":2370:2382   */\n      revert\n        /* \"#utility.yul\":2321:2384   */\n    tag_274:\n        /* \"#utility.yul\":2268:2390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2396:2535   */\n    tag_210:\n        /* \"#utility.yul\":2442:2447   */\n      0x00\n        /* \"#utility.yul\":2480:2486   */\n      dup2\n        /* \"#utility.yul\":2467:2487   */\n      calldataload\n        /* \"#utility.yul\":2458:2487   */\n      swap1\n      pop\n        /* \"#utility.yul\":2496:2529   */\n      tag_276\n        /* \"#utility.yul\":2523:2528   */\n      dup2\n        /* \"#utility.yul\":2496:2529   */\n      tag_209\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2396:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:3015   */\n    tag_28:\n        /* \"#utility.yul\":2609:2615   */\n      0x00\n        /* \"#utility.yul\":2617:2623   */\n      dup1\n        /* \"#utility.yul\":2666:2668   */\n      0x40\n        /* \"#utility.yul\":2654:2663   */\n      dup4\n        /* \"#utility.yul\":2645:2652   */\n      dup6\n        /* \"#utility.yul\":2641:2664   */\n      sub\n        /* \"#utility.yul\":2637:2669   */\n      slt\n        /* \"#utility.yul\":2634:2753   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":2672:2751   */\n      tag_279\n      tag_202\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2634:2753   */\n    tag_278:\n        /* \"#utility.yul\":2792:2793   */\n      0x00\n        /* \"#utility.yul\":2817:2870   */\n      tag_280\n        /* \"#utility.yul\":2862:2869   */\n      dup6\n        /* \"#utility.yul\":2853:2859   */\n      dup3\n        /* \"#utility.yul\":2842:2851   */\n      dup7\n        /* \"#utility.yul\":2838:2860   */\n      add\n        /* \"#utility.yul\":2817:2870   */\n      tag_207\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2807:2870   */\n      swap3\n      pop\n        /* \"#utility.yul\":2763:2880   */\n      pop\n        /* \"#utility.yul\":2919:2921   */\n      0x20\n        /* \"#utility.yul\":2945:2998   */\n      tag_281\n        /* \"#utility.yul\":2990:2997   */\n      dup6\n        /* \"#utility.yul\":2981:2987   */\n      dup3\n        /* \"#utility.yul\":2970:2979   */\n      dup7\n        /* \"#utility.yul\":2966:2988   */\n      add\n        /* \"#utility.yul\":2945:2998   */\n      tag_210\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":2935:2998   */\n      swap2\n      pop\n        /* \"#utility.yul\":2890:3008   */\n      pop\n        /* \"#utility.yul\":2541:3015   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3021:3111   */\n    tag_211:\n        /* \"#utility.yul\":3055:3062   */\n      0x00\n        /* \"#utility.yul\":3098:3103   */\n      dup2\n        /* \"#utility.yul\":3091:3104   */\n      iszero\n        /* \"#utility.yul\":3084:3105   */\n      iszero\n        /* \"#utility.yul\":3073:3105   */\n      swap1\n      pop\n        /* \"#utility.yul\":3021:3111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3117:3226   */\n    tag_212:\n        /* \"#utility.yul\":3198:3219   */\n      tag_284\n        /* \"#utility.yul\":3213:3218   */\n      dup2\n        /* \"#utility.yul\":3198:3219   */\n      tag_211\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3193:3196   */\n      dup3\n        /* \"#utility.yul\":3186:3220   */\n      mstore\n        /* \"#utility.yul\":3117:3226   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3232:3442   */\n    tag_31:\n        /* \"#utility.yul\":3319:3323   */\n      0x00\n        /* \"#utility.yul\":3357:3359   */\n      0x20\n        /* \"#utility.yul\":3346:3355   */\n      dup3\n        /* \"#utility.yul\":3342:3360   */\n      add\n        /* \"#utility.yul\":3334:3360   */\n      swap1\n      pop\n        /* \"#utility.yul\":3370:3435   */\n      tag_286\n        /* \"#utility.yul\":3432:3433   */\n      0x00\n        /* \"#utility.yul\":3421:3430   */\n      dup4\n        /* \"#utility.yul\":3417:3434   */\n      add\n        /* \"#utility.yul\":3408:3414   */\n      dup5\n        /* \"#utility.yul\":3370:3435   */\n      tag_212\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":3232:3442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3448:3566   */\n    tag_213:\n        /* \"#utility.yul\":3535:3559   */\n      tag_288\n        /* \"#utility.yul\":3553:3558   */\n      dup2\n        /* \"#utility.yul\":3535:3559   */\n      tag_208\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":3530:3533   */\n      dup3\n        /* \"#utility.yul\":3523:3560   */\n      mstore\n        /* \"#utility.yul\":3448:3566   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3572:3794   */\n    tag_35:\n        /* \"#utility.yul\":3665:3669   */\n      0x00\n        /* \"#utility.yul\":3703:3705   */\n      0x20\n        /* \"#utility.yul\":3692:3701   */\n      dup3\n        /* \"#utility.yul\":3688:3706   */\n      add\n        /* \"#utility.yul\":3680:3706   */\n      swap1\n      pop\n        /* \"#utility.yul\":3716:3787   */\n      tag_290\n        /* \"#utility.yul\":3784:3785   */\n      0x00\n        /* \"#utility.yul\":3773:3782   */\n      dup4\n        /* \"#utility.yul\":3769:3786   */\n      add\n        /* \"#utility.yul\":3760:3766   */\n      dup5\n        /* \"#utility.yul\":3716:3787   */\n      tag_213\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3572:3794   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3800:4419   */\n    tag_38:\n        /* \"#utility.yul\":3877:3883   */\n      0x00\n        /* \"#utility.yul\":3885:3891   */\n      dup1\n        /* \"#utility.yul\":3893:3899   */\n      0x00\n        /* \"#utility.yul\":3942:3944   */\n      0x60\n        /* \"#utility.yul\":3930:3939   */\n      dup5\n        /* \"#utility.yul\":3921:3928   */\n      dup7\n        /* \"#utility.yul\":3917:3940   */\n      sub\n        /* \"#utility.yul\":3913:3945   */\n      slt\n        /* \"#utility.yul\":3910:4029   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":3948:4027   */\n      tag_293\n      tag_202\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3910:4029   */\n    tag_292:\n        /* \"#utility.yul\":4068:4069   */\n      0x00\n        /* \"#utility.yul\":4093:4146   */\n      tag_294\n        /* \"#utility.yul\":4138:4145   */\n      dup7\n        /* \"#utility.yul\":4129:4135   */\n      dup3\n        /* \"#utility.yul\":4118:4127   */\n      dup8\n        /* \"#utility.yul\":4114:4136   */\n      add\n        /* \"#utility.yul\":4093:4146   */\n      tag_207\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":4083:4146   */\n      swap4\n      pop\n        /* \"#utility.yul\":4039:4156   */\n      pop\n        /* \"#utility.yul\":4195:4197   */\n      0x20\n        /* \"#utility.yul\":4221:4274   */\n      tag_295\n        /* \"#utility.yul\":4266:4273   */\n      dup7\n        /* \"#utility.yul\":4257:4263   */\n      dup3\n        /* \"#utility.yul\":4246:4255   */\n      dup8\n        /* \"#utility.yul\":4242:4264   */\n      add\n        /* \"#utility.yul\":4221:4274   */\n      tag_207\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":4211:4274   */\n      swap3\n      pop\n        /* \"#utility.yul\":4166:4284   */\n      pop\n        /* \"#utility.yul\":4323:4325   */\n      0x40\n        /* \"#utility.yul\":4349:4402   */\n      tag_296\n        /* \"#utility.yul\":4394:4401   */\n      dup7\n        /* \"#utility.yul\":4385:4391   */\n      dup3\n        /* \"#utility.yul\":4374:4383   */\n      dup8\n        /* \"#utility.yul\":4370:4392   */\n      add\n        /* \"#utility.yul\":4349:4402   */\n      tag_210\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":4339:4402   */\n      swap2\n      pop\n        /* \"#utility.yul\":4294:4412   */\n      pop\n        /* \"#utility.yul\":3800:4419   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4425:4511   */\n    tag_214:\n        /* \"#utility.yul\":4460:4467   */\n      0x00\n        /* \"#utility.yul\":4500:4504   */\n      0xff\n        /* \"#utility.yul\":4493:4498   */\n      dup3\n        /* \"#utility.yul\":4489:4505   */\n      and\n        /* \"#utility.yul\":4478:4505   */\n      swap1\n      pop\n        /* \"#utility.yul\":4425:4511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4517:4629   */\n    tag_215:\n        /* \"#utility.yul\":4600:4622   */\n      tag_299\n        /* \"#utility.yul\":4616:4621   */\n      dup2\n        /* \"#utility.yul\":4600:4622   */\n      tag_214\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":4595:4598   */\n      dup3\n        /* \"#utility.yul\":4588:4623   */\n      mstore\n        /* \"#utility.yul\":4517:4629   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4635:4849   */\n    tag_44:\n        /* \"#utility.yul\":4724:4728   */\n      0x00\n        /* \"#utility.yul\":4762:4764   */\n      0x20\n        /* \"#utility.yul\":4751:4760   */\n      dup3\n        /* \"#utility.yul\":4747:4765   */\n      add\n        /* \"#utility.yul\":4739:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4775:4842   */\n      tag_301\n        /* \"#utility.yul\":4839:4840   */\n      0x00\n        /* \"#utility.yul\":4828:4837   */\n      dup4\n        /* \"#utility.yul\":4824:4841   */\n      add\n        /* \"#utility.yul\":4815:4821   */\n      dup5\n        /* \"#utility.yul\":4775:4842   */\n      tag_215\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":4635:4849   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4855:4972   */\n    tag_216:\n        /* \"#utility.yul\":4964:4965   */\n      0x00\n        /* \"#utility.yul\":4961:4962   */\n      dup1\n        /* \"#utility.yul\":4954:4966   */\n      revert\n        /* \"#utility.yul\":4978:5095   */\n    tag_217:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5084:5085   */\n      dup1\n        /* \"#utility.yul\":5077:5089   */\n      revert\n        /* \"#utility.yul\":5101:5281   */\n    tag_218:\n        /* \"#utility.yul\":5149:5226   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5146:5147   */\n      0x00\n        /* \"#utility.yul\":5139:5227   */\n      mstore\n        /* \"#utility.yul\":5246:5250   */\n      0x41\n        /* \"#utility.yul\":5243:5244   */\n      0x04\n        /* \"#utility.yul\":5236:5251   */\n      mstore\n        /* \"#utility.yul\":5270:5274   */\n      0x24\n        /* \"#utility.yul\":5267:5268   */\n      0x00\n        /* \"#utility.yul\":5260:5275   */\n      revert\n        /* \"#utility.yul\":5287:5568   */\n    tag_219:\n        /* \"#utility.yul\":5370:5397   */\n      tag_306\n        /* \"#utility.yul\":5392:5396   */\n      dup3\n        /* \"#utility.yul\":5370:5397   */\n      tag_199\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":5362:5368   */\n      dup2\n        /* \"#utility.yul\":5358:5398   */\n      add\n        /* \"#utility.yul\":5500:5506   */\n      dup2\n        /* \"#utility.yul\":5488:5498   */\n      dup2\n        /* \"#utility.yul\":5485:5507   */\n      lt\n        /* \"#utility.yul\":5464:5482   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5452:5462   */\n      dup3\n        /* \"#utility.yul\":5449:5483   */\n      gt\n        /* \"#utility.yul\":5446:5508   */\n      or\n        /* \"#utility.yul\":5443:5531   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":5511:5529   */\n      tag_308\n      tag_218\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5443:5531   */\n    tag_307:\n        /* \"#utility.yul\":5551:5561   */\n      dup1\n        /* \"#utility.yul\":5547:5549   */\n      0x40\n        /* \"#utility.yul\":5540:5562   */\n      mstore\n        /* \"#utility.yul\":5330:5568   */\n      pop\n        /* \"#utility.yul\":5287:5568   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5574:5703   */\n    tag_220:\n        /* \"#utility.yul\":5608:5614   */\n      0x00\n        /* \"#utility.yul\":5635:5655   */\n      tag_310\n      tag_201\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":5625:5655   */\n      swap1\n      pop\n        /* \"#utility.yul\":5664:5697   */\n      tag_311\n        /* \"#utility.yul\":5692:5696   */\n      dup3\n        /* \"#utility.yul\":5684:5690   */\n      dup3\n        /* \"#utility.yul\":5664:5697   */\n      tag_219\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":5574:5703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5709:6017   */\n    tag_221:\n        /* \"#utility.yul\":5771:5775   */\n      0x00\n        /* \"#utility.yul\":5861:5879   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5853:5859   */\n      dup3\n        /* \"#utility.yul\":5850:5880   */\n      gt\n        /* \"#utility.yul\":5847:5903   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":5883:5901   */\n      tag_314\n      tag_218\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":5847:5903   */\n    tag_313:\n        /* \"#utility.yul\":5921:5950   */\n      tag_315\n        /* \"#utility.yul\":5943:5949   */\n      dup3\n        /* \"#utility.yul\":5921:5950   */\n      tag_199\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5913:5950   */\n      swap1\n      pop\n        /* \"#utility.yul\":6005:6009   */\n      0x20\n        /* \"#utility.yul\":5999:6003   */\n      dup2\n        /* \"#utility.yul\":5995:6010   */\n      add\n        /* \"#utility.yul\":5987:6010   */\n      swap1\n      pop\n        /* \"#utility.yul\":5709:6017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6023:6171   */\n    tag_222:\n        /* \"#utility.yul\":6121:6127   */\n      dup3\n        /* \"#utility.yul\":6116:6119   */\n      dup2\n        /* \"#utility.yul\":6111:6114   */\n      dup4\n        /* \"#utility.yul\":6098:6128   */\n      calldatacopy\n        /* \"#utility.yul\":6162:6163   */\n      0x00\n        /* \"#utility.yul\":6153:6159   */\n      dup4\n        /* \"#utility.yul\":6148:6151   */\n      dup4\n        /* \"#utility.yul\":6144:6160   */\n      add\n        /* \"#utility.yul\":6137:6164   */\n      mstore\n        /* \"#utility.yul\":6023:6171   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6177:6602   */\n    tag_223:\n        /* \"#utility.yul\":6255:6260   */\n      0x00\n        /* \"#utility.yul\":6280:6346   */\n      tag_318\n        /* \"#utility.yul\":6296:6345   */\n      tag_319\n        /* \"#utility.yul\":6338:6344   */\n      dup5\n        /* \"#utility.yul\":6296:6345   */\n      tag_221\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":6280:6346   */\n      tag_220\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6271:6346   */\n      swap1\n      pop\n        /* \"#utility.yul\":6369:6375   */\n      dup3\n        /* \"#utility.yul\":6362:6367   */\n      dup2\n        /* \"#utility.yul\":6355:6376   */\n      mstore\n        /* \"#utility.yul\":6407:6411   */\n      0x20\n        /* \"#utility.yul\":6400:6405   */\n      dup2\n        /* \"#utility.yul\":6396:6412   */\n      add\n        /* \"#utility.yul\":6445:6448   */\n      dup5\n        /* \"#utility.yul\":6436:6442   */\n      dup5\n        /* \"#utility.yul\":6431:6434   */\n      dup5\n        /* \"#utility.yul\":6427:6443   */\n      add\n        /* \"#utility.yul\":6424:6449   */\n      gt\n        /* \"#utility.yul\":6421:6533   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":6452:6531   */\n      tag_321\n      tag_217\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":6421:6533   */\n    tag_320:\n        /* \"#utility.yul\":6542:6596   */\n      tag_322\n        /* \"#utility.yul\":6589:6595   */\n      dup5\n        /* \"#utility.yul\":6584:6587   */\n      dup3\n        /* \"#utility.yul\":6579:6582   */\n      dup6\n        /* \"#utility.yul\":6542:6596   */\n      tag_222\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":6261:6602   */\n      pop\n        /* \"#utility.yul\":6177:6602   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6622:6962   */\n    tag_224:\n        /* \"#utility.yul\":6678:6683   */\n      0x00\n        /* \"#utility.yul\":6727:6730   */\n      dup3\n        /* \"#utility.yul\":6720:6724   */\n      0x1f\n        /* \"#utility.yul\":6712:6718   */\n      dup4\n        /* \"#utility.yul\":6708:6725   */\n      add\n        /* \"#utility.yul\":6704:6731   */\n      slt\n        /* \"#utility.yul\":6694:6816   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":6735:6814   */\n      tag_325\n      tag_216\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":6694:6816   */\n    tag_324:\n        /* \"#utility.yul\":6852:6858   */\n      dup2\n        /* \"#utility.yul\":6839:6859   */\n      calldataload\n        /* \"#utility.yul\":6877:6956   */\n      tag_326\n        /* \"#utility.yul\":6952:6955   */\n      dup5\n        /* \"#utility.yul\":6944:6950   */\n      dup3\n        /* \"#utility.yul\":6937:6941   */\n      0x20\n        /* \"#utility.yul\":6929:6935   */\n      dup7\n        /* \"#utility.yul\":6925:6942   */\n      add\n        /* \"#utility.yul\":6877:6956   */\n      tag_223\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":6868:6956   */\n      swap2\n      pop\n        /* \"#utility.yul\":6684:6962   */\n      pop\n        /* \"#utility.yul\":6622:6962   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6968:7802   */\n    tag_50:\n        /* \"#utility.yul\":7056:7062   */\n      0x00\n        /* \"#utility.yul\":7064:7070   */\n      dup1\n        /* \"#utility.yul\":7113:7115   */\n      0x40\n        /* \"#utility.yul\":7101:7110   */\n      dup4\n        /* \"#utility.yul\":7092:7099   */\n      dup6\n        /* \"#utility.yul\":7088:7111   */\n      sub\n        /* \"#utility.yul\":7084:7116   */\n      slt\n        /* \"#utility.yul\":7081:7200   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":7119:7198   */\n      tag_329\n      tag_202\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":7081:7200   */\n    tag_328:\n        /* \"#utility.yul\":7267:7268   */\n      0x00\n        /* \"#utility.yul\":7256:7265   */\n      dup4\n        /* \"#utility.yul\":7252:7269   */\n      add\n        /* \"#utility.yul\":7239:7270   */\n      calldataload\n        /* \"#utility.yul\":7297:7315   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7289:7295   */\n      dup2\n        /* \"#utility.yul\":7286:7316   */\n      gt\n        /* \"#utility.yul\":7283:7400   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":7319:7398   */\n      tag_331\n      tag_203\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":7283:7400   */\n    tag_330:\n        /* \"#utility.yul\":7424:7487   */\n      tag_332\n        /* \"#utility.yul\":7479:7486   */\n      dup6\n        /* \"#utility.yul\":7470:7476   */\n      dup3\n        /* \"#utility.yul\":7459:7468   */\n      dup7\n        /* \"#utility.yul\":7455:7477   */\n      add\n        /* \"#utility.yul\":7424:7487   */\n      tag_224\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":7414:7487   */\n      swap3\n      pop\n        /* \"#utility.yul\":7210:7497   */\n      pop\n        /* \"#utility.yul\":7564:7566   */\n      0x20\n        /* \"#utility.yul\":7553:7562   */\n      dup4\n        /* \"#utility.yul\":7549:7567   */\n      add\n        /* \"#utility.yul\":7536:7568   */\n      calldataload\n        /* \"#utility.yul\":7595:7613   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7587:7593   */\n      dup2\n        /* \"#utility.yul\":7584:7614   */\n      gt\n        /* \"#utility.yul\":7581:7698   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":7617:7696   */\n      tag_334\n      tag_203\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":7581:7698   */\n    tag_333:\n        /* \"#utility.yul\":7722:7785   */\n      tag_335\n        /* \"#utility.yul\":7777:7784   */\n      dup6\n        /* \"#utility.yul\":7768:7774   */\n      dup3\n        /* \"#utility.yul\":7757:7766   */\n      dup7\n        /* \"#utility.yul\":7753:7775   */\n      add\n        /* \"#utility.yul\":7722:7785   */\n      tag_224\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":7712:7785   */\n      swap2\n      pop\n        /* \"#utility.yul\":7507:7795   */\n      pop\n        /* \"#utility.yul\":6968:7802   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7808:8317   */\n    tag_54:\n        /* \"#utility.yul\":7877:7883   */\n      0x00\n        /* \"#utility.yul\":7926:7928   */\n      0x20\n        /* \"#utility.yul\":7914:7923   */\n      dup3\n        /* \"#utility.yul\":7905:7912   */\n      dup5\n        /* \"#utility.yul\":7901:7924   */\n      sub\n        /* \"#utility.yul\":7897:7929   */\n      slt\n        /* \"#utility.yul\":7894:8013   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":7932:8011   */\n      tag_338\n      tag_202\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":7894:8013   */\n    tag_337:\n        /* \"#utility.yul\":8080:8081   */\n      0x00\n        /* \"#utility.yul\":8069:8078   */\n      dup3\n        /* \"#utility.yul\":8065:8082   */\n      add\n        /* \"#utility.yul\":8052:8083   */\n      calldataload\n        /* \"#utility.yul\":8110:8128   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8102:8108   */\n      dup2\n        /* \"#utility.yul\":8099:8129   */\n      gt\n        /* \"#utility.yul\":8096:8213   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":8132:8211   */\n      tag_340\n      tag_203\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":8096:8213   */\n    tag_339:\n        /* \"#utility.yul\":8237:8300   */\n      tag_341\n        /* \"#utility.yul\":8292:8299   */\n      dup5\n        /* \"#utility.yul\":8283:8289   */\n      dup3\n        /* \"#utility.yul\":8272:8281   */\n      dup6\n        /* \"#utility.yul\":8268:8290   */\n      add\n        /* \"#utility.yul\":8237:8300   */\n      tag_224\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":8227:8300   */\n      swap2\n      pop\n        /* \"#utility.yul\":8023:8310   */\n      pop\n        /* \"#utility.yul\":7808:8317   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8323:8652   */\n    tag_58:\n        /* \"#utility.yul\":8382:8388   */\n      0x00\n        /* \"#utility.yul\":8431:8433   */\n      0x20\n        /* \"#utility.yul\":8419:8428   */\n      dup3\n        /* \"#utility.yul\":8410:8417   */\n      dup5\n        /* \"#utility.yul\":8406:8429   */\n      sub\n        /* \"#utility.yul\":8402:8434   */\n      slt\n        /* \"#utility.yul\":8399:8518   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":8437:8516   */\n      tag_344\n      tag_202\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":8399:8518   */\n    tag_343:\n        /* \"#utility.yul\":8557:8558   */\n      0x00\n        /* \"#utility.yul\":8582:8635   */\n      tag_345\n        /* \"#utility.yul\":8627:8634   */\n      dup5\n        /* \"#utility.yul\":8618:8624   */\n      dup3\n        /* \"#utility.yul\":8607:8616   */\n      dup6\n        /* \"#utility.yul\":8603:8625   */\n      add\n        /* \"#utility.yul\":8582:8635   */\n      tag_207\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":8572:8635   */\n      swap2\n      pop\n        /* \"#utility.yul\":8528:8645   */\n      pop\n        /* \"#utility.yul\":8323:8652   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8658:8776   */\n    tag_225:\n        /* \"#utility.yul\":8745:8769   */\n      tag_347\n        /* \"#utility.yul\":8763:8768   */\n      dup2\n        /* \"#utility.yul\":8745:8769   */\n      tag_205\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":8740:8743   */\n      dup3\n        /* \"#utility.yul\":8733:8770   */\n      mstore\n        /* \"#utility.yul\":8658:8776   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8782:9004   */\n    tag_66:\n        /* \"#utility.yul\":8875:8879   */\n      0x00\n        /* \"#utility.yul\":8913:8915   */\n      0x20\n        /* \"#utility.yul\":8902:8911   */\n      dup3\n        /* \"#utility.yul\":8898:8916   */\n      add\n        /* \"#utility.yul\":8890:8916   */\n      swap1\n      pop\n        /* \"#utility.yul\":8926:8997   */\n      tag_349\n        /* \"#utility.yul\":8994:8995   */\n      0x00\n        /* \"#utility.yul\":8983:8992   */\n      dup4\n        /* \"#utility.yul\":8979:8996   */\n      add\n        /* \"#utility.yul\":8970:8976   */\n      dup5\n        /* \"#utility.yul\":8926:8997   */\n      tag_225\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":8782:9004   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9010:9484   */\n    tag_79:\n        /* \"#utility.yul\":9078:9084   */\n      0x00\n        /* \"#utility.yul\":9086:9092   */\n      dup1\n        /* \"#utility.yul\":9135:9137   */\n      0x40\n        /* \"#utility.yul\":9123:9132   */\n      dup4\n        /* \"#utility.yul\":9114:9121   */\n      dup6\n        /* \"#utility.yul\":9110:9133   */\n      sub\n        /* \"#utility.yul\":9106:9138   */\n      slt\n        /* \"#utility.yul\":9103:9222   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":9141:9220   */\n      tag_352\n      tag_202\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":9103:9222   */\n    tag_351:\n        /* \"#utility.yul\":9261:9262   */\n      0x00\n        /* \"#utility.yul\":9286:9339   */\n      tag_353\n        /* \"#utility.yul\":9331:9338   */\n      dup6\n        /* \"#utility.yul\":9322:9328   */\n      dup3\n        /* \"#utility.yul\":9311:9320   */\n      dup7\n        /* \"#utility.yul\":9307:9329   */\n      add\n        /* \"#utility.yul\":9286:9339   */\n      tag_207\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":9276:9339   */\n      swap3\n      pop\n        /* \"#utility.yul\":9232:9349   */\n      pop\n        /* \"#utility.yul\":9388:9390   */\n      0x20\n        /* \"#utility.yul\":9414:9467   */\n      tag_354\n        /* \"#utility.yul\":9459:9466   */\n      dup6\n        /* \"#utility.yul\":9450:9456   */\n      dup3\n        /* \"#utility.yul\":9439:9448   */\n      dup7\n        /* \"#utility.yul\":9435:9457   */\n      add\n        /* \"#utility.yul\":9414:9467   */\n      tag_207\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":9404:9467   */\n      swap2\n      pop\n        /* \"#utility.yul\":9359:9477   */\n      pop\n        /* \"#utility.yul\":9010:9484   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9490:9670   */\n    tag_226:\n        /* \"#utility.yul\":9538:9615   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9535:9536   */\n      0x00\n        /* \"#utility.yul\":9528:9616   */\n      mstore\n        /* \"#utility.yul\":9635:9639   */\n      0x22\n        /* \"#utility.yul\":9632:9633   */\n      0x04\n        /* \"#utility.yul\":9625:9640   */\n      mstore\n        /* \"#utility.yul\":9659:9663   */\n      0x24\n        /* \"#utility.yul\":9656:9657   */\n      0x00\n        /* \"#utility.yul\":9649:9664   */\n      revert\n        /* \"#utility.yul\":9676:9996   */\n    tag_87:\n        /* \"#utility.yul\":9720:9726   */\n      0x00\n        /* \"#utility.yul\":9757:9758   */\n      0x02\n        /* \"#utility.yul\":9751:9755   */\n      dup3\n        /* \"#utility.yul\":9747:9759   */\n      div\n        /* \"#utility.yul\":9737:9759   */\n      swap1\n      pop\n        /* \"#utility.yul\":9804:9805   */\n      0x01\n        /* \"#utility.yul\":9798:9802   */\n      dup3\n        /* \"#utility.yul\":9794:9806   */\n      and\n        /* \"#utility.yul\":9825:9843   */\n      dup1\n        /* \"#utility.yul\":9815:9896   */\n      tag_357\n      jumpi\n        /* \"#utility.yul\":9881:9885   */\n      0x7f\n        /* \"#utility.yul\":9873:9879   */\n      dup3\n        /* \"#utility.yul\":9869:9886   */\n      and\n        /* \"#utility.yul\":9859:9886   */\n      swap2\n      pop\n        /* \"#utility.yul\":9815:9896   */\n    tag_357:\n        /* \"#utility.yul\":9943:9945   */\n      0x20\n        /* \"#utility.yul\":9935:9941   */\n      dup3\n        /* \"#utility.yul\":9932:9946   */\n      lt\n        /* \"#utility.yul\":9912:9930   */\n      dup2\n        /* \"#utility.yul\":9909:9947   */\n      sub\n        /* \"#utility.yul\":9906:9990   */\n      tag_358\n      jumpi\n        /* \"#utility.yul\":9962:9980   */\n      tag_359\n      tag_226\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":9906:9990   */\n    tag_358:\n        /* \"#utility.yul\":9727:9996   */\n      pop\n        /* \"#utility.yul\":9676:9996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10002:10177   */\n    tag_227:\n        /* \"#utility.yul\":10142:10169   */\n      0x546f6b656e20616c726561647920696e697469616c697a656400000000000000\n        /* \"#utility.yul\":10138:10139   */\n      0x00\n        /* \"#utility.yul\":10130:10136   */\n      dup3\n        /* \"#utility.yul\":10126:10140   */\n      add\n        /* \"#utility.yul\":10119:10170   */\n      mstore\n        /* \"#utility.yul\":10002:10177   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10183:10549   */\n    tag_228:\n        /* \"#utility.yul\":10325:10328   */\n      0x00\n        /* \"#utility.yul\":10346:10413   */\n      tag_362\n        /* \"#utility.yul\":10410:10412   */\n      0x19\n        /* \"#utility.yul\":10405:10408   */\n      dup4\n        /* \"#utility.yul\":10346:10413   */\n      tag_197\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":10339:10413   */\n      swap2\n      pop\n        /* \"#utility.yul\":10422:10515   */\n      tag_363\n        /* \"#utility.yul\":10511:10514   */\n      dup3\n        /* \"#utility.yul\":10422:10515   */\n      tag_227\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":10540:10542   */\n      0x20\n        /* \"#utility.yul\":10535:10538   */\n      dup3\n        /* \"#utility.yul\":10531:10543   */\n      add\n        /* \"#utility.yul\":10524:10543   */\n      swap1\n      pop\n        /* \"#utility.yul\":10183:10549   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10555:10974   */\n    tag_114:\n        /* \"#utility.yul\":10721:10725   */\n      0x00\n        /* \"#utility.yul\":10759:10761   */\n      0x20\n        /* \"#utility.yul\":10748:10757   */\n      dup3\n        /* \"#utility.yul\":10744:10762   */\n      add\n        /* \"#utility.yul\":10736:10762   */\n      swap1\n      pop\n        /* \"#utility.yul\":10808:10817   */\n      dup2\n        /* \"#utility.yul\":10802:10806   */\n      dup2\n        /* \"#utility.yul\":10798:10818   */\n      sub\n        /* \"#utility.yul\":10794:10795   */\n      0x00\n        /* \"#utility.yul\":10783:10792   */\n      dup4\n        /* \"#utility.yul\":10779:10796   */\n      add\n        /* \"#utility.yul\":10772:10819   */\n      mstore\n        /* \"#utility.yul\":10836:10967   */\n      tag_365\n        /* \"#utility.yul\":10962:10966   */\n      dup2\n        /* \"#utility.yul\":10836:10967   */\n      tag_228\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":10828:10967   */\n      swap1\n      pop\n        /* \"#utility.yul\":10555:10974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10980:11121   */\n    tag_229:\n        /* \"#utility.yul\":11029:11033   */\n      0x00\n        /* \"#utility.yul\":11052:11055   */\n      dup2\n        /* \"#utility.yul\":11044:11055   */\n      swap1\n      pop\n        /* \"#utility.yul\":11075:11078   */\n      dup2\n        /* \"#utility.yul\":11072:11073   */\n      0x00\n        /* \"#utility.yul\":11065:11079   */\n      mstore\n        /* \"#utility.yul\":11109:11113   */\n      0x20\n        /* \"#utility.yul\":11106:11107   */\n      0x00\n        /* \"#utility.yul\":11096:11114   */\n      keccak256\n        /* \"#utility.yul\":11088:11114   */\n      swap1\n      pop\n        /* \"#utility.yul\":10980:11121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11127:11220   */\n    tag_230:\n        /* \"#utility.yul\":11164:11170   */\n      0x00\n        /* \"#utility.yul\":11211:11213   */\n      0x20\n        /* \"#utility.yul\":11206:11208   */\n      0x1f\n        /* \"#utility.yul\":11199:11204   */\n      dup4\n        /* \"#utility.yul\":11195:11209   */\n      add\n        /* \"#utility.yul\":11191:11214   */\n      div\n        /* \"#utility.yul\":11181:11214   */\n      swap1\n      pop\n        /* \"#utility.yul\":11127:11220   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11226:11333   */\n    tag_231:\n        /* \"#utility.yul\":11270:11278   */\n      0x00\n        /* \"#utility.yul\":11320:11325   */\n      dup3\n        /* \"#utility.yul\":11314:11318   */\n      dup3\n        /* \"#utility.yul\":11310:11326   */\n      shl\n        /* \"#utility.yul\":11289:11326   */\n      swap1\n      pop\n        /* \"#utility.yul\":11226:11333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11339:11732   */\n    tag_232:\n        /* \"#utility.yul\":11408:11414   */\n      0x00\n        /* \"#utility.yul\":11458:11459   */\n      0x08\n        /* \"#utility.yul\":11446:11456   */\n      dup4\n        /* \"#utility.yul\":11442:11460   */\n      mul\n        /* \"#utility.yul\":11481:11578   */\n      tag_370\n        /* \"#utility.yul\":11511:11577   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11500:11509   */\n      dup3\n        /* \"#utility.yul\":11481:11578   */\n      tag_231\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":11599:11638   */\n      tag_371\n        /* \"#utility.yul\":11629:11637   */\n      dup7\n        /* \"#utility.yul\":11618:11627   */\n      dup4\n        /* \"#utility.yul\":11599:11638   */\n      tag_231\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":11587:11638   */\n      swap6\n      pop\n        /* \"#utility.yul\":11671:11675   */\n      dup1\n        /* \"#utility.yul\":11667:11676   */\n      not\n        /* \"#utility.yul\":11660:11665   */\n      dup5\n        /* \"#utility.yul\":11656:11677   */\n      and\n        /* \"#utility.yul\":11647:11677   */\n      swap4\n      pop\n        /* \"#utility.yul\":11720:11724   */\n      dup1\n        /* \"#utility.yul\":11710:11718   */\n      dup7\n        /* \"#utility.yul\":11706:11725   */\n      and\n        /* \"#utility.yul\":11699:11704   */\n      dup5\n        /* \"#utility.yul\":11696:11726   */\n      or\n        /* \"#utility.yul\":11686:11726   */\n      swap3\n      pop\n        /* \"#utility.yul\":11415:11732   */\n      pop\n      pop\n        /* \"#utility.yul\":11339:11732   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11738:11798   */\n    tag_233:\n        /* \"#utility.yul\":11766:11769   */\n      0x00\n        /* \"#utility.yul\":11787:11792   */\n      dup2\n        /* \"#utility.yul\":11780:11792   */\n      swap1\n      pop\n        /* \"#utility.yul\":11738:11798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11804:11946   */\n    tag_234:\n        /* \"#utility.yul\":11854:11863   */\n      0x00\n        /* \"#utility.yul\":11887:11940   */\n      tag_374\n        /* \"#utility.yul\":11905:11939   */\n      tag_375\n        /* \"#utility.yul\":11914:11938   */\n      tag_376\n        /* \"#utility.yul\":11932:11937   */\n      dup5\n        /* \"#utility.yul\":11914:11938   */\n      tag_208\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":11905:11939   */\n      tag_233\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":11887:11940   */\n      tag_208\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":11874:11940   */\n      swap1\n      pop\n        /* \"#utility.yul\":11804:11946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11952:12027   */\n    tag_235:\n        /* \"#utility.yul\":11995:11998   */\n      0x00\n        /* \"#utility.yul\":12016:12021   */\n      dup2\n        /* \"#utility.yul\":12009:12021   */\n      swap1\n      pop\n        /* \"#utility.yul\":11952:12027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12033:12302   */\n    tag_236:\n        /* \"#utility.yul\":12143:12182   */\n      tag_379\n        /* \"#utility.yul\":12174:12181   */\n      dup4\n        /* \"#utility.yul\":12143:12182   */\n      tag_234\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":12204:12295   */\n      tag_380\n        /* \"#utility.yul\":12253:12294   */\n      tag_381\n        /* \"#utility.yul\":12277:12293   */\n      dup3\n        /* \"#utility.yul\":12253:12294   */\n      tag_235\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":12245:12251   */\n      dup5\n        /* \"#utility.yul\":12238:12242   */\n      dup5\n        /* \"#utility.yul\":12232:12243   */\n      sload\n        /* \"#utility.yul\":12204:12295   */\n      tag_232\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":12198:12202   */\n      dup3\n        /* \"#utility.yul\":12191:12296   */\n      sstore\n        /* \"#utility.yul\":12109:12302   */\n      pop\n        /* \"#utility.yul\":12033:12302   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12308:12381   */\n    tag_237:\n        /* \"#utility.yul\":12353:12356   */\n      0x00\n        /* \"#utility.yul\":12308:12381   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":12387:12576   */\n    tag_238:\n        /* \"#utility.yul\":12464:12496   */\n      tag_384\n      tag_237\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":12505:12570   */\n      tag_385\n        /* \"#utility.yul\":12563:12569   */\n      dup2\n        /* \"#utility.yul\":12555:12561   */\n      dup5\n        /* \"#utility.yul\":12549:12553   */\n      dup5\n        /* \"#utility.yul\":12505:12570   */\n      tag_236\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":12440:12576   */\n      pop\n        /* \"#utility.yul\":12387:12576   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12582:12768   */\n    tag_239:\n        /* \"#utility.yul\":12642:12762   */\n    tag_387:\n        /* \"#utility.yul\":12659:12662   */\n      dup2\n        /* \"#utility.yul\":12652:12657   */\n      dup2\n        /* \"#utility.yul\":12649:12663   */\n      lt\n        /* \"#utility.yul\":12642:12762   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":12713:12752   */\n      tag_390\n        /* \"#utility.yul\":12750:12751   */\n      0x00\n        /* \"#utility.yul\":12743:12748   */\n      dup3\n        /* \"#utility.yul\":12713:12752   */\n      tag_238\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":12686:12687   */\n      0x01\n        /* \"#utility.yul\":12679:12684   */\n      dup2\n        /* \"#utility.yul\":12675:12688   */\n      add\n        /* \"#utility.yul\":12666:12688   */\n      swap1\n      pop\n        /* \"#utility.yul\":12642:12762   */\n      jump(tag_387)\n    tag_389:\n        /* \"#utility.yul\":12582:12768   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12774:13317   */\n    tag_240:\n        /* \"#utility.yul\":12875:12877   */\n      0x1f\n        /* \"#utility.yul\":12870:12873   */\n      dup3\n        /* \"#utility.yul\":12867:12878   */\n      gt\n        /* \"#utility.yul\":12864:13310   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":12909:12947   */\n      tag_393\n        /* \"#utility.yul\":12941:12946   */\n      dup2\n        /* \"#utility.yul\":12909:12947   */\n      tag_229\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":12993:13022   */\n      tag_394\n        /* \"#utility.yul\":13011:13021   */\n      dup5\n        /* \"#utility.yul\":12993:13022   */\n      tag_230\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":12983:12991   */\n      dup2\n        /* \"#utility.yul\":12979:13023   */\n      add\n        /* \"#utility.yul\":13176:13178   */\n      0x20\n        /* \"#utility.yul\":13164:13174   */\n      dup6\n        /* \"#utility.yul\":13161:13179   */\n      lt\n        /* \"#utility.yul\":13158:13207   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":13197:13205   */\n      dup2\n        /* \"#utility.yul\":13182:13205   */\n      swap1\n      pop\n        /* \"#utility.yul\":13158:13207   */\n    tag_395:\n        /* \"#utility.yul\":13220:13300   */\n      tag_396\n        /* \"#utility.yul\":13276:13298   */\n      tag_397\n        /* \"#utility.yul\":13294:13297   */\n      dup6\n        /* \"#utility.yul\":13276:13298   */\n      tag_230\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":13266:13274   */\n      dup4\n        /* \"#utility.yul\":13262:13299   */\n      add\n        /* \"#utility.yul\":13249:13260   */\n      dup3\n        /* \"#utility.yul\":13220:13300   */\n      tag_239\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":12879:13310   */\n      pop\n      pop\n        /* \"#utility.yul\":12864:13310   */\n    tag_392:\n        /* \"#utility.yul\":12774:13317   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13323:13440   */\n    tag_241:\n        /* \"#utility.yul\":13377:13385   */\n      0x00\n        /* \"#utility.yul\":13427:13432   */\n      dup3\n        /* \"#utility.yul\":13421:13425   */\n      dup3\n        /* \"#utility.yul\":13417:13433   */\n      shr\n        /* \"#utility.yul\":13396:13433   */\n      swap1\n      pop\n        /* \"#utility.yul\":13323:13440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13446:13615   */\n    tag_242:\n        /* \"#utility.yul\":13490:13496   */\n      0x00\n        /* \"#utility.yul\":13523:13574   */\n      tag_400\n        /* \"#utility.yul\":13571:13572   */\n      0x00\n        /* \"#utility.yul\":13567:13573   */\n      not\n        /* \"#utility.yul\":13559:13564   */\n      dup5\n        /* \"#utility.yul\":13556:13557   */\n      0x08\n        /* \"#utility.yul\":13552:13565   */\n      mul\n        /* \"#utility.yul\":13523:13574   */\n      tag_241\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":13519:13575   */\n      not\n        /* \"#utility.yul\":13604:13608   */\n      dup1\n        /* \"#utility.yul\":13598:13602   */\n      dup4\n        /* \"#utility.yul\":13594:13609   */\n      and\n        /* \"#utility.yul\":13584:13609   */\n      swap2\n      pop\n        /* \"#utility.yul\":13497:13615   */\n      pop\n        /* \"#utility.yul\":13446:13615   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13620:13915   */\n    tag_243:\n        /* \"#utility.yul\":13696:13700   */\n      0x00\n        /* \"#utility.yul\":13842:13871   */\n      tag_402\n        /* \"#utility.yul\":13867:13870   */\n      dup4\n        /* \"#utility.yul\":13861:13865   */\n      dup4\n        /* \"#utility.yul\":13842:13871   */\n      tag_242\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":13834:13871   */\n      swap2\n      pop\n        /* \"#utility.yul\":13904:13907   */\n      dup3\n        /* \"#utility.yul\":13901:13902   */\n      0x02\n        /* \"#utility.yul\":13897:13908   */\n      mul\n        /* \"#utility.yul\":13891:13895   */\n      dup3\n        /* \"#utility.yul\":13888:13909   */\n      or\n        /* \"#utility.yul\":13880:13909   */\n      swap1\n      pop\n        /* \"#utility.yul\":13620:13915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13920:15315   */\n    tag_116:\n        /* \"#utility.yul\":14037:14074   */\n      tag_404\n        /* \"#utility.yul\":14070:14073   */\n      dup3\n        /* \"#utility.yul\":14037:14074   */\n      tag_196\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":14139:14157   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14131:14137   */\n      dup2\n        /* \"#utility.yul\":14128:14158   */\n      gt\n        /* \"#utility.yul\":14125:14181   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":14161:14179   */\n      tag_406\n      tag_218\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":14125:14181   */\n    tag_405:\n        /* \"#utility.yul\":14205:14243   */\n      tag_407\n        /* \"#utility.yul\":14237:14241   */\n      dup3\n        /* \"#utility.yul\":14231:14242   */\n      sload\n        /* \"#utility.yul\":14205:14243   */\n      tag_87\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":14290:14357   */\n      tag_408\n        /* \"#utility.yul\":14350:14356   */\n      dup3\n        /* \"#utility.yul\":14342:14348   */\n      dup3\n        /* \"#utility.yul\":14336:14340   */\n      dup6\n        /* \"#utility.yul\":14290:14357   */\n      tag_240\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":14384:14385   */\n      0x00\n        /* \"#utility.yul\":14408:14412   */\n      0x20\n        /* \"#utility.yul\":14395:14412   */\n      swap1\n      pop\n        /* \"#utility.yul\":14440:14442   */\n      0x1f\n        /* \"#utility.yul\":14432:14438   */\n      dup4\n        /* \"#utility.yul\":14429:14443   */\n      gt\n        /* \"#utility.yul\":14457:14458   */\n      0x01\n        /* \"#utility.yul\":14452:15070   */\n      dup2\n      eq\n      tag_410\n      jumpi\n        /* \"#utility.yul\":15114:15115   */\n      0x00\n        /* \"#utility.yul\":15131:15137   */\n      dup5\n        /* \"#utility.yul\":15128:15205   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":15180:15189   */\n      dup3\n        /* \"#utility.yul\":15175:15178   */\n      dup8\n        /* \"#utility.yul\":15171:15190   */\n      add\n        /* \"#utility.yul\":15165:15191   */\n      mload\n        /* \"#utility.yul\":15156:15191   */\n      swap1\n      pop\n        /* \"#utility.yul\":15128:15205   */\n    tag_411:\n        /* \"#utility.yul\":15231:15298   */\n      tag_412\n        /* \"#utility.yul\":15291:15297   */\n      dup6\n        /* \"#utility.yul\":15284:15289   */\n      dup3\n        /* \"#utility.yul\":15231:15298   */\n      tag_243\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":15225:15229   */\n      dup7\n        /* \"#utility.yul\":15218:15299   */\n      sstore\n        /* \"#utility.yul\":15087:15309   */\n      pop\n        /* \"#utility.yul\":14422:15309   */\n      jump(tag_409)\n        /* \"#utility.yul\":14452:15070   */\n    tag_410:\n        /* \"#utility.yul\":14504:14508   */\n      0x1f\n        /* \"#utility.yul\":14500:14509   */\n      not\n        /* \"#utility.yul\":14492:14498   */\n      dup5\n        /* \"#utility.yul\":14488:14510   */\n      and\n        /* \"#utility.yul\":14538:14575   */\n      tag_413\n        /* \"#utility.yul\":14570:14574   */\n      dup7\n        /* \"#utility.yul\":14538:14575   */\n      tag_229\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":14597:14598   */\n      0x00\n        /* \"#utility.yul\":14611:14819   */\n    tag_414:\n        /* \"#utility.yul\":14625:14632   */\n      dup3\n        /* \"#utility.yul\":14622:14623   */\n      dup2\n        /* \"#utility.yul\":14619:14633   */\n      lt\n        /* \"#utility.yul\":14611:14819   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":14704:14713   */\n      dup5\n        /* \"#utility.yul\":14699:14702   */\n      dup10\n        /* \"#utility.yul\":14695:14714   */\n      add\n        /* \"#utility.yul\":14689:14715   */\n      mload\n        /* \"#utility.yul\":14681:14687   */\n      dup3\n        /* \"#utility.yul\":14674:14716   */\n      sstore\n        /* \"#utility.yul\":14755:14756   */\n      0x01\n        /* \"#utility.yul\":14747:14753   */\n      dup3\n        /* \"#utility.yul\":14743:14757   */\n      add\n        /* \"#utility.yul\":14733:14757   */\n      swap2\n      pop\n        /* \"#utility.yul\":14802:14804   */\n      0x20\n        /* \"#utility.yul\":14791:14800   */\n      dup6\n        /* \"#utility.yul\":14787:14805   */\n      add\n        /* \"#utility.yul\":14774:14805   */\n      swap5\n      pop\n        /* \"#utility.yul\":14648:14652   */\n      0x20\n        /* \"#utility.yul\":14645:14646   */\n      dup2\n        /* \"#utility.yul\":14641:14653   */\n      add\n        /* \"#utility.yul\":14636:14653   */\n      swap1\n      pop\n        /* \"#utility.yul\":14611:14819   */\n      jump(tag_414)\n    tag_416:\n        /* \"#utility.yul\":14847:14853   */\n      dup7\n        /* \"#utility.yul\":14838:14845   */\n      dup4\n        /* \"#utility.yul\":14835:14854   */\n      lt\n        /* \"#utility.yul\":14832:15011   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":14905:14914   */\n      dup5\n        /* \"#utility.yul\":14900:14903   */\n      dup10\n        /* \"#utility.yul\":14896:14915   */\n      add\n        /* \"#utility.yul\":14890:14916   */\n      mload\n        /* \"#utility.yul\":14948:14996   */\n      tag_418\n        /* \"#utility.yul\":14990:14994   */\n      0x1f\n        /* \"#utility.yul\":14982:14988   */\n      dup10\n        /* \"#utility.yul\":14978:14995   */\n      and\n        /* \"#utility.yul\":14967:14976   */\n      dup3\n        /* \"#utility.yul\":14948:14996   */\n      tag_242\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":14940:14946   */\n      dup4\n        /* \"#utility.yul\":14933:14997   */\n      sstore\n        /* \"#utility.yul\":14855:15011   */\n      pop\n        /* \"#utility.yul\":14832:15011   */\n    tag_417:\n        /* \"#utility.yul\":15057:15058   */\n      0x01\n        /* \"#utility.yul\":15053:15054   */\n      0x02\n        /* \"#utility.yul\":15045:15051   */\n      dup9\n        /* \"#utility.yul\":15041:15055   */\n      mul\n        /* \"#utility.yul\":15037:15059   */\n      add\n        /* \"#utility.yul\":15031:15035   */\n      dup9\n        /* \"#utility.yul\":15024:15060   */\n      sstore\n        /* \"#utility.yul\":14459:15070   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14422:15309   */\n    tag_409:\n      pop\n        /* \"#utility.yul\":14012:15315   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13920:15315   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15321:15763   */\n    tag_159:\n        /* \"#utility.yul\":15470:15474   */\n      0x00\n        /* \"#utility.yul\":15508:15510   */\n      0x60\n        /* \"#utility.yul\":15497:15506   */\n      dup3\n        /* \"#utility.yul\":15493:15511   */\n      add\n        /* \"#utility.yul\":15485:15511   */\n      swap1\n      pop\n        /* \"#utility.yul\":15521:15592   */\n      tag_420\n        /* \"#utility.yul\":15589:15590   */\n      0x00\n        /* \"#utility.yul\":15578:15587   */\n      dup4\n        /* \"#utility.yul\":15574:15591   */\n      add\n        /* \"#utility.yul\":15565:15571   */\n      dup7\n        /* \"#utility.yul\":15521:15592   */\n      tag_225\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":15602:15674   */\n      tag_421\n        /* \"#utility.yul\":15670:15672   */\n      0x20\n        /* \"#utility.yul\":15659:15668   */\n      dup4\n        /* \"#utility.yul\":15655:15673   */\n      add\n        /* \"#utility.yul\":15646:15652   */\n      dup6\n        /* \"#utility.yul\":15602:15674   */\n      tag_213\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":15684:15756   */\n      tag_422\n        /* \"#utility.yul\":15752:15754   */\n      0x40\n        /* \"#utility.yul\":15741:15750   */\n      dup4\n        /* \"#utility.yul\":15737:15755   */\n      add\n        /* \"#utility.yul\":15728:15734   */\n      dup5\n        /* \"#utility.yul\":15684:15756   */\n      tag_213\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":15321:15763   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15769:15949   */\n    tag_244:\n        /* \"#utility.yul\":15817:15894   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15814:15815   */\n      0x00\n        /* \"#utility.yul\":15807:15895   */\n      mstore\n        /* \"#utility.yul\":15914:15918   */\n      0x11\n        /* \"#utility.yul\":15911:15912   */\n      0x04\n        /* \"#utility.yul\":15904:15919   */\n      mstore\n        /* \"#utility.yul\":15938:15942   */\n      0x24\n        /* \"#utility.yul\":15935:15936   */\n      0x00\n        /* \"#utility.yul\":15928:15943   */\n      revert\n        /* \"#utility.yul\":15955:16146   */\n    tag_189:\n        /* \"#utility.yul\":15995:15998   */\n      0x00\n        /* \"#utility.yul\":16014:16034   */\n      tag_425\n        /* \"#utility.yul\":16032:16033   */\n      dup3\n        /* \"#utility.yul\":16014:16034   */\n      tag_208\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":16009:16034   */\n      swap2\n      pop\n        /* \"#utility.yul\":16048:16068   */\n      tag_426\n        /* \"#utility.yul\":16066:16067   */\n      dup4\n        /* \"#utility.yul\":16048:16068   */\n      tag_208\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":16043:16068   */\n      swap3\n      pop\n        /* \"#utility.yul\":16091:16092   */\n      dup3\n        /* \"#utility.yul\":16088:16089   */\n      dup3\n        /* \"#utility.yul\":16084:16093   */\n      add\n        /* \"#utility.yul\":16077:16093   */\n      swap1\n      pop\n        /* \"#utility.yul\":16112:16115   */\n      dup1\n        /* \"#utility.yul\":16109:16110   */\n      dup3\n        /* \"#utility.yul\":16106:16116   */\n      gt\n        /* \"#utility.yul\":16103:16139   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":16119:16137   */\n      tag_428\n      tag_244\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":16103:16139   */\n    tag_427:\n        /* \"#utility.yul\":15955:16146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220759fd265fb1534ddc9cfb78c17c01d8acb9c222f78cb679e4727df9e826d430c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_961": {
									"entryPoint": null,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 219,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 868,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 621,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 804,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5817:7",
										"nodeType": "YulBlock",
										"src": "0:5817:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "140:152:7",
													"nodeType": "YulBlock",
													"src": "140:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:7",
																		"nodeType": "YulLiteral",
																		"src": "157:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:7",
																		"nodeType": "YulLiteral",
																		"src": "160:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:7"
																},
																"nativeSrc": "150:88:7",
																"nodeType": "YulFunctionCall",
																"src": "150:88:7"
															},
															"nativeSrc": "150:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:7",
																		"nodeType": "YulLiteral",
																		"src": "254:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:7",
																		"nodeType": "YulLiteral",
																		"src": "257:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:7"
																},
																"nativeSrc": "247:15:7",
																"nodeType": "YulFunctionCall",
																"src": "247:15:7"
															},
															"nativeSrc": "247:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:7",
																		"nodeType": "YulLiteral",
																		"src": "278:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:7",
																		"nodeType": "YulLiteral",
																		"src": "281:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:7"
																},
																"nativeSrc": "271:15:7",
																"nodeType": "YulFunctionCall",
																"src": "271:15:7"
															},
															"nativeSrc": "271:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:7"
											},
											{
												"body": {
													"nativeSrc": "326:152:7",
													"nodeType": "YulBlock",
													"src": "326:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:7",
																		"nodeType": "YulLiteral",
																		"src": "343:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:7",
																		"nodeType": "YulLiteral",
																		"src": "346:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:7"
																},
																"nativeSrc": "336:88:7",
																"nodeType": "YulFunctionCall",
																"src": "336:88:7"
															},
															"nativeSrc": "336:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:7",
																		"nodeType": "YulLiteral",
																		"src": "443:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:15:7",
																"nodeType": "YulFunctionCall",
																"src": "433:15:7"
															},
															"nativeSrc": "433:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:7",
																		"nodeType": "YulLiteral",
																		"src": "464:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:7",
																		"nodeType": "YulLiteral",
																		"src": "467:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:7"
																},
																"nativeSrc": "457:15:7",
																"nodeType": "YulFunctionCall",
																"src": "457:15:7"
															},
															"nativeSrc": "457:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:7"
											},
											{
												"body": {
													"nativeSrc": "535:269:7",
													"nodeType": "YulBlock",
													"src": "535:269:7",
													"statements": [
														{
															"nativeSrc": "545:22:7",
															"nodeType": "YulAssignment",
															"src": "545:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:7",
																		"nodeType": "YulLiteral",
																		"src": "565:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:7"
																},
																"nativeSrc": "555:12:7",
																"nodeType": "YulFunctionCall",
																"src": "555:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:7"
																}
															]
														},
														{
															"nativeSrc": "576:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:7",
																		"nodeType": "YulLiteral",
																		"src": "612:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:7"
																},
																"nativeSrc": "602:12:7",
																"nodeType": "YulFunctionCall",
																"src": "602:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:7",
																	"nodeType": "YulTypedName",
																	"src": "580:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:7",
																"nodeType": "YulBlock",
																"src": "653:51:7",
																"statements": [
																	{
																		"nativeSrc": "667:27:7",
																		"nodeType": "YulAssignment",
																		"src": "667:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:7",
																					"nodeType": "YulLiteral",
																					"src": "689:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:7"
																			},
																			"nativeSrc": "677:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:7"
																},
																"nativeSrc": "626:26:7",
																"nodeType": "YulFunctionCall",
																"src": "626:26:7"
															},
															"nativeSrc": "623:81:7",
															"nodeType": "YulIf",
															"src": "623:81:7"
														},
														{
															"body": {
																"nativeSrc": "756:42:7",
																"nodeType": "YulBlock",
																"src": "756:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:7"
																			},
																			"nativeSrc": "770:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:7"
																		},
																		"nativeSrc": "770:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:7",
																				"nodeType": "YulLiteral",
																				"src": "751:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:7"
																		},
																		"nativeSrc": "740:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:7"
																},
																"nativeSrc": "717:38:7",
																"nodeType": "YulFunctionCall",
																"src": "717:38:7"
															},
															"nativeSrc": "714:84:7",
															"nodeType": "YulIf",
															"src": "714:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:7",
														"nodeType": "YulTypedName",
														"src": "519:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:7",
														"nodeType": "YulTypedName",
														"src": "528:6:7",
														"type": ""
													}
												],
												"src": "484:320:7"
											},
											{
												"body": {
													"nativeSrc": "864:87:7",
													"nodeType": "YulBlock",
													"src": "864:87:7",
													"statements": [
														{
															"nativeSrc": "874:11:7",
															"nodeType": "YulAssignment",
															"src": "874:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:7",
																"nodeType": "YulIdentifier",
																"src": "882:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:7",
																		"nodeType": "YulLiteral",
																		"src": "902:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:7"
																},
																"nativeSrc": "895:14:7",
																"nodeType": "YulFunctionCall",
																"src": "895:14:7"
															},
															"nativeSrc": "895:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:7"
														},
														{
															"nativeSrc": "918:26:7",
															"nodeType": "YulAssignment",
															"src": "918:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:7",
																		"nodeType": "YulLiteral",
																		"src": "936:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:7",
																		"nodeType": "YulLiteral",
																		"src": "939:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:7"
																},
																"nativeSrc": "926:18:7",
																"nodeType": "YulFunctionCall",
																"src": "926:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:7",
														"nodeType": "YulTypedName",
														"src": "851:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:7",
														"nodeType": "YulTypedName",
														"src": "859:4:7",
														"type": ""
													}
												],
												"src": "810:141:7"
											},
											{
												"body": {
													"nativeSrc": "1001:49:7",
													"nodeType": "YulBlock",
													"src": "1001:49:7",
													"statements": [
														{
															"nativeSrc": "1011:33:7",
															"nodeType": "YulAssignment",
															"src": "1011:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:7"
																		},
																		"nativeSrc": "1025:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:7"
																},
																"nativeSrc": "1021:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:7",
														"nodeType": "YulTypedName",
														"src": "984:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:7",
														"nodeType": "YulTypedName",
														"src": "994:6:7",
														"type": ""
													}
												],
												"src": "957:93:7"
											},
											{
												"body": {
													"nativeSrc": "1109:54:7",
													"nodeType": "YulBlock",
													"src": "1109:54:7",
													"statements": [
														{
															"nativeSrc": "1119:37:7",
															"nodeType": "YulAssignment",
															"src": "1119:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:7"
																},
																"nativeSrc": "1140:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:7",
														"nodeType": "YulTypedName",
														"src": "1084:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:7",
														"nodeType": "YulTypedName",
														"src": "1090:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:7",
														"nodeType": "YulTypedName",
														"src": "1100:8:7",
														"type": ""
													}
												],
												"src": "1056:107:7"
											},
											{
												"body": {
													"nativeSrc": "1245:317:7",
													"nodeType": "YulBlock",
													"src": "1245:317:7",
													"statements": [
														{
															"nativeSrc": "1255:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:7"
																},
																"nativeSrc": "1272:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:7",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:7",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:7"
																},
																"nativeSrc": "1311:97:7",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:7",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:7",
															"nodeType": "YulAssignment",
															"src": "1417:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:7"
																},
																"nativeSrc": "1429:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:7"
																}
															]
														},
														{
															"nativeSrc": "1477:30:7",
															"nodeType": "YulAssignment",
															"src": "1477:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:7"
																		},
																		"nativeSrc": "1497:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:7"
																},
																"nativeSrc": "1486:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:7"
																}
															]
														},
														{
															"nativeSrc": "1516:40:7",
															"nodeType": "YulAssignment",
															"src": "1516:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:7"
																		},
																		"nativeSrc": "1536:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:7"
																},
																"nativeSrc": "1526:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:7",
														"nodeType": "YulTypedName",
														"src": "1206:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:7",
														"nodeType": "YulTypedName",
														"src": "1213:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:7",
														"nodeType": "YulTypedName",
														"src": "1225:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:7",
														"nodeType": "YulTypedName",
														"src": "1238:6:7",
														"type": ""
													}
												],
												"src": "1169:393:7"
											},
											{
												"body": {
													"nativeSrc": "1613:32:7",
													"nodeType": "YulBlock",
													"src": "1613:32:7",
													"statements": [
														{
															"nativeSrc": "1623:16:7",
															"nodeType": "YulAssignment",
															"src": "1623:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:7",
																"nodeType": "YulIdentifier",
																"src": "1634:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:7",
														"nodeType": "YulTypedName",
														"src": "1595:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:7",
														"nodeType": "YulTypedName",
														"src": "1605:7:7",
														"type": ""
													}
												],
												"src": "1568:77:7"
											},
											{
												"body": {
													"nativeSrc": "1683:28:7",
													"nodeType": "YulBlock",
													"src": "1683:28:7",
													"statements": [
														{
															"nativeSrc": "1693:12:7",
															"nodeType": "YulAssignment",
															"src": "1693:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:7",
																"nodeType": "YulIdentifier",
																"src": "1700:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:7",
														"nodeType": "YulTypedName",
														"src": "1669:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:7",
														"nodeType": "YulTypedName",
														"src": "1679:3:7",
														"type": ""
													}
												],
												"src": "1651:60:7"
											},
											{
												"body": {
													"nativeSrc": "1777:82:7",
													"nodeType": "YulBlock",
													"src": "1777:82:7",
													"statements": [
														{
															"nativeSrc": "1787:66:7",
															"nodeType": "YulAssignment",
															"src": "1787:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:7"
																				},
																				"nativeSrc": "1827:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:7"
																		},
																		"nativeSrc": "1818:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:7"
																},
																"nativeSrc": "1800:53:7",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:7",
														"nodeType": "YulTypedName",
														"src": "1757:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:7",
														"nodeType": "YulTypedName",
														"src": "1767:9:7",
														"type": ""
													}
												],
												"src": "1717:142:7"
											},
											{
												"body": {
													"nativeSrc": "1912:28:7",
													"nodeType": "YulBlock",
													"src": "1912:28:7",
													"statements": [
														{
															"nativeSrc": "1922:12:7",
															"nodeType": "YulAssignment",
															"src": "1922:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:7",
																"nodeType": "YulIdentifier",
																"src": "1929:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:7",
														"nodeType": "YulTypedName",
														"src": "1898:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:7",
														"nodeType": "YulTypedName",
														"src": "1908:3:7",
														"type": ""
													}
												],
												"src": "1865:75:7"
											},
											{
												"body": {
													"nativeSrc": "2022:193:7",
													"nodeType": "YulBlock",
													"src": "2022:193:7",
													"statements": [
														{
															"nativeSrc": "2032:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:7"
																},
																"nativeSrc": "2056:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:7",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:7"
																				},
																				"nativeSrc": "2145:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:7"
																				},
																				"nativeSrc": "2166:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:7"
																		},
																		"nativeSrc": "2117:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:7"
																},
																"nativeSrc": "2104:105:7",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:7"
															},
															"nativeSrc": "2104:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:7",
														"nodeType": "YulTypedName",
														"src": "1999:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:7",
														"nodeType": "YulTypedName",
														"src": "2005:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:7",
														"nodeType": "YulTypedName",
														"src": "2013:7:7",
														"type": ""
													}
												],
												"src": "1946:269:7"
											},
											{
												"body": {
													"nativeSrc": "2270:24:7",
													"nodeType": "YulBlock",
													"src": "2270:24:7",
													"statements": [
														{
															"nativeSrc": "2280:8:7",
															"nodeType": "YulAssignment",
															"src": "2280:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:7",
																"nodeType": "YulLiteral",
																"src": "2287:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:7",
														"nodeType": "YulTypedName",
														"src": "2266:3:7",
														"type": ""
													}
												],
												"src": "2221:73:7"
											},
											{
												"body": {
													"nativeSrc": "2353:136:7",
													"nodeType": "YulBlock",
													"src": "2353:136:7",
													"statements": [
														{
															"nativeSrc": "2363:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:7"
																},
																"nativeSrc": "2377:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:7"
																},
																"nativeSrc": "2418:65:7",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:7"
															},
															"nativeSrc": "2418:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:7",
														"nodeType": "YulTypedName",
														"src": "2339:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:7",
														"nodeType": "YulTypedName",
														"src": "2345:6:7",
														"type": ""
													}
												],
												"src": "2300:189:7"
											},
											{
												"body": {
													"nativeSrc": "2545:136:7",
													"nodeType": "YulBlock",
													"src": "2545:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:7",
																"nodeType": "YulBlock",
																"src": "2612:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:7"
																			},
																			"nativeSrc": "2626:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:7"
																		},
																		"nativeSrc": "2626:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:7"
																},
																"nativeSrc": "2562:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:7"
															},
															"nativeSrc": "2555:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:7",
																"nodeType": "YulBlock",
																"src": "2577:26:7",
																"statements": [
																	{
																		"nativeSrc": "2579:22:7",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:7"
																			},
																			"nativeSrc": "2588:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:7",
																"nodeType": "YulBlock",
																"src": "2559:2:7",
																"statements": []
															},
															"src": "2555:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:7",
														"nodeType": "YulTypedName",
														"src": "2533:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:7",
														"nodeType": "YulTypedName",
														"src": "2540:3:7",
														"type": ""
													}
												],
												"src": "2495:186:7"
											},
											{
												"body": {
													"nativeSrc": "2766:464:7",
													"nodeType": "YulBlock",
													"src": "2766:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:7",
																"nodeType": "YulBlock",
																"src": "2792:431:7",
																"statements": [
																	{
																		"nativeSrc": "2806:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:7"
																			},
																			"nativeSrc": "2822:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:7",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:7"
																					},
																					"nativeSrc": "2906:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:7"
																			},
																			"nativeSrc": "2892:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:7",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:7",
																			"nodeType": "YulBlock",
																			"src": "3093:27:7",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:7",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:7",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:7"
																			},
																			"nativeSrc": "3074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:7"
																		},
																		"nativeSrc": "3071:49:7",
																		"nodeType": "YulIf",
																		"src": "3071:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:7"
																							},
																							"nativeSrc": "3189:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:7"
																					},
																					"nativeSrc": "3175:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:7"
																			},
																			"nativeSrc": "3133:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:7"
																		},
																		"nativeSrc": "3133:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:7"
																},
																"nativeSrc": "2780:11:7",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:7"
															},
															"nativeSrc": "2777:446:7",
															"nodeType": "YulIf",
															"src": "2777:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:7",
														"nodeType": "YulTypedName",
														"src": "2742:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:7",
														"nodeType": "YulTypedName",
														"src": "2749:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:7",
														"nodeType": "YulTypedName",
														"src": "2754:10:7",
														"type": ""
													}
												],
												"src": "2687:543:7"
											},
											{
												"body": {
													"nativeSrc": "3299:54:7",
													"nodeType": "YulBlock",
													"src": "3299:54:7",
													"statements": [
														{
															"nativeSrc": "3309:37:7",
															"nodeType": "YulAssignment",
															"src": "3309:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:7"
																},
																"nativeSrc": "3330:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:7",
														"nodeType": "YulTypedName",
														"src": "3274:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:7",
														"nodeType": "YulTypedName",
														"src": "3280:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:7",
														"nodeType": "YulTypedName",
														"src": "3290:8:7",
														"type": ""
													}
												],
												"src": "3236:117:7"
											},
											{
												"body": {
													"nativeSrc": "3410:118:7",
													"nodeType": "YulBlock",
													"src": "3410:118:7",
													"statements": [
														{
															"nativeSrc": "3420:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:7"
																				},
																				"nativeSrc": "3465:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:7"
																				},
																				"nativeSrc": "3480:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:7"
																		},
																		"nativeSrc": "3436:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:7"
																},
																"nativeSrc": "3432:56:7",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:7",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:7",
															"nodeType": "YulAssignment",
															"src": "3497:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:7"
																},
																"nativeSrc": "3507:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:7",
														"nodeType": "YulTypedName",
														"src": "3387:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:7",
														"nodeType": "YulTypedName",
														"src": "3393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:7",
														"nodeType": "YulTypedName",
														"src": "3403:6:7",
														"type": ""
													}
												],
												"src": "3359:169:7"
											},
											{
												"body": {
													"nativeSrc": "3614:214:7",
													"nodeType": "YulBlock",
													"src": "3614:214:7",
													"statements": [
														{
															"nativeSrc": "3747:37:7",
															"nodeType": "YulAssignment",
															"src": "3747:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:7"
																},
																"nativeSrc": "3755:29:7",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:7"
																}
															]
														},
														{
															"nativeSrc": "3793:29:7",
															"nodeType": "YulAssignment",
															"src": "3793:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:7"
																		},
																		"nativeSrc": "3810:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:7"
																},
																"nativeSrc": "3801:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:7",
														"nodeType": "YulTypedName",
														"src": "3595:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:7",
														"nodeType": "YulTypedName",
														"src": "3601:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:7",
														"nodeType": "YulTypedName",
														"src": "3609:4:7",
														"type": ""
													}
												],
												"src": "3533:295:7"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:7",
													"nodeType": "YulBlock",
													"src": "3925:1303:7",
													"statements": [
														{
															"nativeSrc": "3936:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:7"
																},
																"nativeSrc": "3950:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:7",
																"nodeType": "YulBlock",
																"src": "4072:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:7"
																			},
																			"nativeSrc": "4074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:7"
																		},
																		"nativeSrc": "4074:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:7",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:7"
																},
																"nativeSrc": "4041:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:7"
															},
															"nativeSrc": "4038:56:7",
															"nodeType": "YulIf",
															"src": "4038:56:7"
														},
														{
															"nativeSrc": "4104:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:7"
																		},
																		"nativeSrc": "4144:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:7"
																},
																"nativeSrc": "4118:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:7"
																},
																"nativeSrc": "4203:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:7"
															},
															"nativeSrc": "4203:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:7"
														},
														{
															"nativeSrc": "4280:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:7",
																"nodeType": "YulLiteral",
																"src": "4297:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:7",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:7",
															"nodeType": "YulAssignment",
															"src": "4308:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:7",
																"nodeType": "YulLiteral",
																"src": "4321:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:7",
																		"nodeType": "YulBlock",
																		"src": "4372:611:7",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:7",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:7"
																							},
																							"nativeSrc": "4413:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:7"
																					},
																					"nativeSrc": "4401:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:7",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:7"
																					},
																					"nativeSrc": "4451:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:7",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:7",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:7",
																					"nodeType": "YulBlock",
																					"src": "4569:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:7"
																												},
																												"nativeSrc": "4608:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:7"
																										},
																										"nativeSrc": "4602:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:7"
																								},
																								"nativeSrc": "4587:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:7"
																							},
																							"nativeSrc": "4587:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:7"
																						},
																						{
																							"nativeSrc": "4646:24:7",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:7",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:7"
																								},
																								"nativeSrc": "4656:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:7",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:7",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:7"
																								},
																								"nativeSrc": "4700:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:7"
																					},
																					"nativeSrc": "4532:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:7"
																				},
																				"nativeSrc": "4524:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:7",
																					"nodeType": "YulBlock",
																					"src": "4547:21:7",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:7",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:7",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:7"
																								},
																								"nativeSrc": "4554:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:7",
																					"nodeType": "YulBlock",
																					"src": "4528:3:7",
																					"statements": []
																				},
																				"src": "4524:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:7",
																					"nodeType": "YulBlock",
																					"src": "4768:156:7",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:7"
																										},
																										"nativeSrc": "4809:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:7"
																								},
																								"nativeSrc": "4803:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:7",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:7",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:7"
																												},
																												"nativeSrc": "4891:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:7"
																										},
																										"nativeSrc": "4861:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:7"
																								},
																								"nativeSrc": "4846:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:7"
																							},
																							"nativeSrc": "4846:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:7"
																					},
																					"nativeSrc": "4748:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:7"
																				},
																				"nativeSrc": "4745:179:7",
																				"nodeType": "YulIf",
																				"src": "4745:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:7",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:7"
																									},
																									"nativeSrc": "4954:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:7",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:7"
																							},
																							"nativeSrc": "4950:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:7"
																					},
																					"nativeSrc": "4937:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:7"
																				},
																				"nativeSrc": "4937:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:7"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:7",
																	"nodeType": "YulCase",
																	"src": "4365:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:7",
																		"nodeType": "YulBlock",
																		"src": "5000:222:7",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:7",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:7",
																					"nodeType": "YulBlock",
																					"src": "5051:67:7",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:7",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:7"
																										},
																										"nativeSrc": "5084:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:7"
																								},
																								"nativeSrc": "5078:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:7"
																				},
																				"nativeSrc": "5041:77:7",
																				"nodeType": "YulIf",
																				"src": "5041:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:7"
																							},
																							"nativeSrc": "5144:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:7"
																					},
																					"nativeSrc": "5131:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:7"
																				},
																				"nativeSrc": "5131:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:7"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:7",
																	"nodeType": "YulCase",
																	"src": "4992:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:7"
																},
																"nativeSrc": "4342:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:7"
															},
															"nativeSrc": "4335:887:7",
															"nodeType": "YulSwitch",
															"src": "4335:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:7",
														"nodeType": "YulTypedName",
														"src": "3914:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:7",
														"nodeType": "YulTypedName",
														"src": "3920:3:7",
														"type": ""
													}
												],
												"src": "3833:1395:7"
											},
											{
												"body": {
													"nativeSrc": "5279:81:7",
													"nodeType": "YulBlock",
													"src": "5279:81:7",
													"statements": [
														{
															"nativeSrc": "5289:65:7",
															"nodeType": "YulAssignment",
															"src": "5289:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:7",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:7"
																},
																"nativeSrc": "5300:54:7",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:7",
														"nodeType": "YulTypedName",
														"src": "5261:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:7",
														"nodeType": "YulTypedName",
														"src": "5271:7:7",
														"type": ""
													}
												],
												"src": "5234:126:7"
											},
											{
												"body": {
													"nativeSrc": "5411:51:7",
													"nodeType": "YulBlock",
													"src": "5411:51:7",
													"statements": [
														{
															"nativeSrc": "5421:35:7",
															"nodeType": "YulAssignment",
															"src": "5421:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:7"
																},
																"nativeSrc": "5432:24:7",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:7",
														"nodeType": "YulTypedName",
														"src": "5393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:7",
														"nodeType": "YulTypedName",
														"src": "5403:7:7",
														"type": ""
													}
												],
												"src": "5366:96:7"
											},
											{
												"body": {
													"nativeSrc": "5533:53:7",
													"nodeType": "YulBlock",
													"src": "5533:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:7"
																		},
																		"nativeSrc": "5555:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:7"
																},
																"nativeSrc": "5543:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:7"
															},
															"nativeSrc": "5543:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:7",
														"nodeType": "YulTypedName",
														"src": "5521:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:7",
														"nodeType": "YulTypedName",
														"src": "5528:3:7",
														"type": ""
													}
												],
												"src": "5468:118:7"
											},
											{
												"body": {
													"nativeSrc": "5690:124:7",
													"nodeType": "YulBlock",
													"src": "5690:124:7",
													"statements": [
														{
															"nativeSrc": "5700:26:7",
															"nodeType": "YulAssignment",
															"src": "5700:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:7"
																},
																"nativeSrc": "5708:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:7"
																		},
																		"nativeSrc": "5789:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:7"
																},
																"nativeSrc": "5736:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:7"
															},
															"nativeSrc": "5736:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:7",
														"nodeType": "YulTypedName",
														"src": "5662:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:7",
														"nodeType": "YulTypedName",
														"src": "5674:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:7",
														"nodeType": "YulTypedName",
														"src": "5685:4:7",
														"type": ""
													}
												],
												"src": "5592:222:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336040518060200160405280600081525060405180602001604052806000815250816003908161004191906103f1565b50806004908161005191906103f1565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c65760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100bd9190610504565b60405180910390fd5b6100d5816100db60201b60201c565b5061051f565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061022257607f821691505b602082108103610235576102346101db565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261029d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610260565b6102a78683610260565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006102ee6102e96102e4846102bf565b6102c9565b6102bf565b9050919050565b6000819050919050565b610308836102d3565b61031c610314826102f5565b84845461026d565b825550505050565b600090565b610331610324565b61033c8184846102ff565b505050565b5b8181101561036057610355600082610329565b600181019050610342565b5050565b601f8211156103a5576103768161023b565b61037f84610250565b8101602085101561038e578190505b6103a261039a85610250565b830182610341565b50505b505050565b600082821c905092915050565b60006103c8600019846008026103aa565b1980831691505092915050565b60006103e183836103b7565b9150826002028217905092915050565b6103fa826101a1565b67ffffffffffffffff811115610413576104126101ac565b5b61041d825461020a565b610428828285610364565b600060209050601f83116001811461045b5760008415610449578287015190505b61045385826103d5565b8655506104bb565b601f1984166104698661023b565b60005b828110156104915784890151825560018201915060208501945060208101905061046c565b868310156104ae57848901516104aa601f8916826103b7565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104ee826104c3565b9050919050565b6104fe816104e3565b82525050565b600060208201905061051960008301846104f5565b92915050565b6118488061052e6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb14610289578063b90497e0146102b9578063dd62ed3e146102d7578063f2fde38b1461030757610100565b806370a0823114610213578063715018a6146102435780638da5cb5b1461024d57806395d89b411461026b57610100565b8063313ce567116100d3578063313ce567146101a157806340c10f19146101bf5780634cd88b76146101db57806358e792ee146101f757610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d610323565b60405161011a9190610fad565b60405180910390f35b61013d60048036038101906101389190611077565b6103b5565b60405161014a91906110d2565b60405180910390f35b61015b6103d8565b60405161016891906110fc565b60405180910390f35b61018b60048036038101906101869190611117565b6103e2565b60405161019891906110d2565b60405180910390f35b6101a9610411565b6040516101b69190611186565b60405180910390f35b6101d960048036038101906101d49190611077565b61041a565b005b6101f560048036038101906101f091906112d6565b610430565b005b610211600480360381019061020c919061134e565b6104bf565b005b61022d60048036038101906102289190611397565b6104da565b60405161023a91906110fc565b60405180910390f35b61024b610522565b005b610255610536565b60405161026291906113d3565b60405180910390f35b610273610560565b6040516102809190610fad565b60405180910390f35b6102a3600480360381019061029e9190611077565b6105f2565b6040516102b091906110d2565b60405180910390f35b6102c1610615565b6040516102ce9190610fad565b60405180910390f35b6102f160048036038101906102ec91906113ee565b6106a3565b6040516102fe91906110fc565b60405180910390f35b610321600480360381019061031c9190611397565b61072a565b005b6060600680546103329061145d565b80601f016020809104026020016040519081016040528092919081815260200182805461035e9061145d565b80156103ab5780601f10610380576101008083540402835291602001916103ab565b820191906000526020600020905b81548152906001019060200180831161038e57829003601f168201915b5050505050905090565b6000806103c06107b0565b90506103cd8185856107b8565b600191505092915050565b6000600254905090565b6000806103ed6107b0565b90506103fa8582856107ca565b61040585858561085e565b60019150509392505050565b60006012905090565b610422610952565b61042c82826109d9565b5050565b600860009054906101000a900460ff1615610480576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610477906114da565b60405180910390fd5b816006908161048f91906116a6565b50806007908161049f91906116a6565b506001600860006101000a81548160ff0219169083151502179055505050565b6104c7610952565b80600990816104d691906116a6565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61052a610952565b6105346000610a5b565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606007805461056f9061145d565b80601f016020809104026020016040519081016040528092919081815260200182805461059b9061145d565b80156105e85780601f106105bd576101008083540402835291602001916105e8565b820191906000526020600020905b8154815290600101906020018083116105cb57829003601f168201915b5050505050905090565b6000806105fd6107b0565b905061060a81858561085e565b600191505092915050565b600980546106229061145d565b80601f016020809104026020016040519081016040528092919081815260200182805461064e9061145d565b801561069b5780601f106106705761010080835404028352916020019161069b565b820191906000526020600020905b81548152906001019060200180831161067e57829003601f168201915b505050505081565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610732610952565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107a45760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161079b91906113d3565b60405180910390fd5b6107ad81610a5b565b50565b600033905090565b6107c58383836001610b21565b505050565b60006107d684846106a3565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108585781811015610848578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161083f93929190611778565b60405180910390fd5b61085784848484036000610b21565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108d05760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108c791906113d3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109425760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161093991906113d3565b60405180910390fd5b61094d838383610cf8565b505050565b61095a6107b0565b73ffffffffffffffffffffffffffffffffffffffff16610978610536565b73ffffffffffffffffffffffffffffffffffffffff16146109d75761099b6107b0565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109ce91906113d3565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a4b5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a4291906113d3565b60405180910390fd5b610a5760008383610cf8565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b935760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b8a91906113d3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c055760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bfc91906113d3565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610cf2578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ce991906110fc565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d4a578060026000828254610d3e91906117de565b92505081905550610e1d565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610dd6578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610dcd93929190611778565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e665780600260008282540392505081905550610eb3565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f1091906110fc565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f57578082015181840152602081019050610f3c565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f7f82610f1d565b610f898185610f28565b9350610f99818560208601610f39565b610fa281610f63565b840191505092915050565b60006020820190508181036000830152610fc78184610f74565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061100e82610fe3565b9050919050565b61101e81611003565b811461102957600080fd5b50565b60008135905061103b81611015565b92915050565b6000819050919050565b61105481611041565b811461105f57600080fd5b50565b6000813590506110718161104b565b92915050565b6000806040838503121561108e5761108d610fd9565b5b600061109c8582860161102c565b92505060206110ad85828601611062565b9150509250929050565b60008115159050919050565b6110cc816110b7565b82525050565b60006020820190506110e760008301846110c3565b92915050565b6110f681611041565b82525050565b600060208201905061111160008301846110ed565b92915050565b6000806000606084860312156111305761112f610fd9565b5b600061113e8682870161102c565b935050602061114f8682870161102c565b925050604061116086828701611062565b9150509250925092565b600060ff82169050919050565b6111808161116a565b82525050565b600060208201905061119b6000830184611177565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111e382610f63565b810181811067ffffffffffffffff82111715611202576112016111ab565b5b80604052505050565b6000611215610fcf565b905061122182826111da565b919050565b600067ffffffffffffffff821115611241576112406111ab565b5b61124a82610f63565b9050602081019050919050565b82818337600083830152505050565b600061127961127484611226565b61120b565b905082815260208101848484011115611295576112946111a6565b5b6112a0848285611257565b509392505050565b600082601f8301126112bd576112bc6111a1565b5b81356112cd848260208601611266565b91505092915050565b600080604083850312156112ed576112ec610fd9565b5b600083013567ffffffffffffffff81111561130b5761130a610fde565b5b611317858286016112a8565b925050602083013567ffffffffffffffff81111561133857611337610fde565b5b611344858286016112a8565b9150509250929050565b60006020828403121561136457611363610fd9565b5b600082013567ffffffffffffffff81111561138257611381610fde565b5b61138e848285016112a8565b91505092915050565b6000602082840312156113ad576113ac610fd9565b5b60006113bb8482850161102c565b91505092915050565b6113cd81611003565b82525050565b60006020820190506113e860008301846113c4565b92915050565b6000806040838503121561140557611404610fd9565b5b60006114138582860161102c565b92505060206114248582860161102c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061147557607f821691505b6020821081036114885761148761142e565b5b50919050565b7f546f6b656e20616c726561647920696e697469616c697a656400000000000000600082015250565b60006114c4601983610f28565b91506114cf8261148e565b602082019050919050565b600060208201905081810360008301526114f3816114b7565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261155c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261151f565b611566868361151f565b95508019841693508086168417925050509392505050565b6000819050919050565b60006115a361159e61159984611041565b61157e565b611041565b9050919050565b6000819050919050565b6115bd83611588565b6115d16115c9826115aa565b84845461152c565b825550505050565b600090565b6115e66115d9565b6115f18184846115b4565b505050565b5b818110156116155761160a6000826115de565b6001810190506115f7565b5050565b601f82111561165a5761162b816114fa565b6116348461150f565b81016020851015611643578190505b61165761164f8561150f565b8301826115f6565b50505b505050565b600082821c905092915050565b600061167d6000198460080261165f565b1980831691505092915050565b6000611696838361166c565b9150826002028217905092915050565b6116af82610f1d565b67ffffffffffffffff8111156116c8576116c76111ab565b5b6116d2825461145d565b6116dd828285611619565b600060209050601f83116001811461171057600084156116fe578287015190505b611708858261168a565b865550611770565b601f19841661171e866114fa565b60005b8281101561174657848901518255600182019150602085019450602081019050611721565b86831015611763578489015161175f601f89168261166c565b8355505b6001600288020188555050505b505050505050565b600060608201905061178d60008301866113c4565b61179a60208301856110ed565b6117a760408301846110ed565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117e982611041565b91506117f483611041565b925082820190508082111561180c5761180b6117af565b5b9291505056fea2646970667358221220759fd265fb1534ddc9cfb78c17c01d8acb9c222f78cb679e4727df9e826d430c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x41 SWAP2 SWAP1 PUSH2 0x3F1 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x51 SWAP2 SWAP1 PUSH2 0x3F1 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5 DUP2 PUSH2 0xDB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x51F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x222 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x235 JUMPI PUSH2 0x234 PUSH2 0x1DB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x29D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x260 JUMP JUMPDEST PUSH2 0x2A7 DUP7 DUP4 PUSH2 0x260 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE PUSH2 0x2E9 PUSH2 0x2E4 DUP5 PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x2C9 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x308 DUP4 PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0x31C PUSH2 0x314 DUP3 PUSH2 0x2F5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x26D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x324 JUMP JUMPDEST PUSH2 0x33C DUP2 DUP5 DUP5 PUSH2 0x2FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x360 JUMPI PUSH2 0x355 PUSH1 0x0 DUP3 PUSH2 0x329 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x342 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3A5 JUMPI PUSH2 0x376 DUP2 PUSH2 0x23B JUMP JUMPDEST PUSH2 0x37F DUP5 PUSH2 0x250 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x38E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3A2 PUSH2 0x39A DUP6 PUSH2 0x250 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x341 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C8 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3AA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E1 DUP4 DUP4 PUSH2 0x3B7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3FA DUP3 PUSH2 0x1A1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x413 JUMPI PUSH2 0x412 PUSH2 0x1AC JUMP JUMPDEST JUMPDEST PUSH2 0x41D DUP3 SLOAD PUSH2 0x20A JUMP JUMPDEST PUSH2 0x428 DUP3 DUP3 DUP6 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x45B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x449 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x453 DUP6 DUP3 PUSH2 0x3D5 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x469 DUP7 PUSH2 0x23B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x491 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x46C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4AE JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4AA PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3B7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EE DUP3 PUSH2 0x4C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FE DUP2 PUSH2 0x4E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x519 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1848 DUP1 PUSH2 0x52E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xB90497E0 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x307 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26B JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x4CD88B76 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x58E792EE EQ PUSH2 0x1F7 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x323 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH2 0x4BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1397 JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH2 0x522 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH2 0x536 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x13EE JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x1397 JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x332 SWAP1 PUSH2 0x145D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x35E SWAP1 PUSH2 0x145D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3AB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x380 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3AB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x38E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3C0 PUSH2 0x7B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x3CD DUP2 DUP6 DUP6 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3ED PUSH2 0x7B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x3FA DUP6 DUP3 DUP6 PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x405 DUP6 DUP6 DUP6 PUSH2 0x85E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x422 PUSH2 0x952 JUMP JUMPDEST PUSH2 0x42C DUP3 DUP3 PUSH2 0x9D9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x480 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x477 SWAP1 PUSH2 0x14DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 SWAP1 DUP2 PUSH2 0x48F SWAP2 SWAP1 PUSH2 0x16A6 JUMP JUMPDEST POP DUP1 PUSH1 0x7 SWAP1 DUP2 PUSH2 0x49F SWAP2 SWAP1 PUSH2 0x16A6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x4C7 PUSH2 0x952 JUMP JUMPDEST DUP1 PUSH1 0x9 SWAP1 DUP2 PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0x16A6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52A PUSH2 0x952 JUMP JUMPDEST PUSH2 0x534 PUSH1 0x0 PUSH2 0xA5B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x56F SWAP1 PUSH2 0x145D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x59B SWAP1 PUSH2 0x145D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5FD PUSH2 0x7B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x60A DUP2 DUP6 DUP6 PUSH2 0x85E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x622 SWAP1 PUSH2 0x145D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x64E SWAP1 PUSH2 0x145D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x69B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x670 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x69B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x67E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x732 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7A4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79B SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7AD DUP2 PUSH2 0xA5B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7C5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB21 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D6 DUP5 DUP5 PUSH2 0x6A3 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x858 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x848 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1778 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x857 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xB21 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C7 SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x942 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x939 SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94D DUP4 DUP4 DUP4 PUSH2 0xCF8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x95A PUSH2 0x7B0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x978 PUSH2 0x536 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9D7 JUMPI PUSH2 0x99B PUSH2 0x7B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CE SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA42 SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA57 PUSH1 0x0 DUP4 DUP4 PUSH2 0xCF8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB93 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8A SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC05 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBFC SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCF2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCE9 SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD4A JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD3E SWAP2 SWAP1 PUSH2 0x17DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xDD6 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1778 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE66 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEB3 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF10 SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF57 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7F DUP3 PUSH2 0xF1D JUMP JUMPDEST PUSH2 0xF89 DUP2 DUP6 PUSH2 0xF28 JUMP JUMPDEST SWAP4 POP PUSH2 0xF99 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF39 JUMP JUMPDEST PUSH2 0xFA2 DUP2 PUSH2 0xF63 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFC7 DUP2 DUP5 PUSH2 0xF74 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100E DUP3 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x101E DUP2 PUSH2 0x1003 JUMP JUMPDEST DUP2 EQ PUSH2 0x1029 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x103B DUP2 PUSH2 0x1015 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1054 DUP2 PUSH2 0x1041 JUMP JUMPDEST DUP2 EQ PUSH2 0x105F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1071 DUP2 PUSH2 0x104B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x108E JUMPI PUSH2 0x108D PUSH2 0xFD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x109C DUP6 DUP3 DUP7 ADD PUSH2 0x102C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10AD DUP6 DUP3 DUP7 ADD PUSH2 0x1062 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CC DUP2 PUSH2 0x10B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10F6 DUP2 PUSH2 0x1041 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1111 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1130 JUMPI PUSH2 0x112F PUSH2 0xFD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x113E DUP7 DUP3 DUP8 ADD PUSH2 0x102C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x114F DUP7 DUP3 DUP8 ADD PUSH2 0x102C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1160 DUP7 DUP3 DUP8 ADD PUSH2 0x1062 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1180 DUP2 PUSH2 0x116A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x119B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1177 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x11E3 DUP3 PUSH2 0xF63 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1202 JUMPI PUSH2 0x1201 PUSH2 0x11AB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1215 PUSH2 0xFCF JUMP JUMPDEST SWAP1 POP PUSH2 0x1221 DUP3 DUP3 PUSH2 0x11DA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1241 JUMPI PUSH2 0x1240 PUSH2 0x11AB JUMP JUMPDEST JUMPDEST PUSH2 0x124A DUP3 PUSH2 0xF63 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1279 PUSH2 0x1274 DUP5 PUSH2 0x1226 JUMP JUMPDEST PUSH2 0x120B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1295 JUMPI PUSH2 0x1294 PUSH2 0x11A6 JUMP JUMPDEST JUMPDEST PUSH2 0x12A0 DUP5 DUP3 DUP6 PUSH2 0x1257 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12BD JUMPI PUSH2 0x12BC PUSH2 0x11A1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12CD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1266 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12ED JUMPI PUSH2 0x12EC PUSH2 0xFD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x130B JUMPI PUSH2 0x130A PUSH2 0xFDE JUMP JUMPDEST JUMPDEST PUSH2 0x1317 DUP6 DUP3 DUP7 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1338 JUMPI PUSH2 0x1337 PUSH2 0xFDE JUMP JUMPDEST JUMPDEST PUSH2 0x1344 DUP6 DUP3 DUP7 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1364 JUMPI PUSH2 0x1363 PUSH2 0xFD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1382 JUMPI PUSH2 0x1381 PUSH2 0xFDE JUMP JUMPDEST JUMPDEST PUSH2 0x138E DUP5 DUP3 DUP6 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13AD JUMPI PUSH2 0x13AC PUSH2 0xFD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13BB DUP5 DUP3 DUP6 ADD PUSH2 0x102C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13CD DUP2 PUSH2 0x1003 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1405 JUMPI PUSH2 0x1404 PUSH2 0xFD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1413 DUP6 DUP3 DUP7 ADD PUSH2 0x102C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1424 DUP6 DUP3 DUP7 ADD PUSH2 0x102C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1475 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x142E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20616C726561647920696E697469616C697A656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C4 PUSH1 0x19 DUP4 PUSH2 0xF28 JUMP JUMPDEST SWAP2 POP PUSH2 0x14CF DUP3 PUSH2 0x148E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14F3 DUP2 PUSH2 0x14B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x155C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x151F JUMP JUMPDEST PUSH2 0x1566 DUP7 DUP4 PUSH2 0x151F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A3 PUSH2 0x159E PUSH2 0x1599 DUP5 PUSH2 0x1041 JUMP JUMPDEST PUSH2 0x157E JUMP JUMPDEST PUSH2 0x1041 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15BD DUP4 PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x15D1 PUSH2 0x15C9 DUP3 PUSH2 0x15AA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x152C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x15E6 PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0x15F1 DUP2 DUP5 DUP5 PUSH2 0x15B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1615 JUMPI PUSH2 0x160A PUSH1 0x0 DUP3 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x15F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x165A JUMPI PUSH2 0x162B DUP2 PUSH2 0x14FA JUMP JUMPDEST PUSH2 0x1634 DUP5 PUSH2 0x150F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1643 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1657 PUSH2 0x164F DUP6 PUSH2 0x150F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x15F6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x167D PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x165F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1696 DUP4 DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16AF DUP3 PUSH2 0xF1D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16C8 JUMPI PUSH2 0x16C7 PUSH2 0x11AB JUMP JUMPDEST JUMPDEST PUSH2 0x16D2 DUP3 SLOAD PUSH2 0x145D JUMP JUMPDEST PUSH2 0x16DD DUP3 DUP3 DUP6 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1710 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x16FE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1708 DUP6 DUP3 PUSH2 0x168A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x171E DUP7 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1746 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1721 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1763 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x175F PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x166C JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x178D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x13C4 JUMP JUMPDEST PUSH2 0x179A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x17A7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10ED JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17E9 DUP3 PUSH2 0x1041 JUMP JUMPDEST SWAP2 POP PUSH2 0x17F4 DUP4 PUSH2 0x1041 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x180C JUMPI PUSH2 0x180B PUSH2 0x17AF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x9FD265FB1534DDC9CFB78C17C01D8ACB9C222F78CB67 SWAP15 SELFBALANCE 0x27 0xDF SWAP15 DUP3 PUSH14 0x430C64736F6C634300081A003300 ",
							"sourceMap": "168:1201:6:-:0;;;378:50;;;;;;;;;;414:10;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;168:1201:6;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;168:1201:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1976,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 2849,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2386,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 2521,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 1968,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 1994,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2651,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2142,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3320,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1699,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 949,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1242,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 1041,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@imageURL_949": {
									"entryPoint": 1557,
									"id": 949,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_987": {
									"entryPoint": 1072,
									"id": 987,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mint_1020": {
									"entryPoint": 1050,
									"id": 1020,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_996": {
									"entryPoint": 803,
									"id": 996,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1334,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1314,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setImageURL_1032": {
									"entryPoint": 1215,
									"id": 1032,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_1005": {
									"entryPoint": 1376,
									"id": 1005,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 984,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 994,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1834,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1522,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 4710,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 4776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 4942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 4822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_91f9a36ded9df16899312719ead5ef5c9633419e1e5ccb00e0ab9b2c948c2b2b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6008,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_91f9a36ded9df16899312719ead5ef5c9633419e1e5ccb00e0ab9b2c948c2b2b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4047,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 4646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 5370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 5657,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 4099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 5622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 5512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 5798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 4695,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3897,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 5391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 5770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 5502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 5740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6063,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5166,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4523,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 5546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4513,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 4518,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4062,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4057,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 5407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 5727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 5598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_91f9a36ded9df16899312719ead5ef5c9633419e1e5ccb00e0ab9b2c948c2b2b": {
									"entryPoint": 5262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 5420,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 5556,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 5593,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16149:7",
										"nodeType": "YulBlock",
										"src": "0:16149:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:186:7",
													"nodeType": "YulBlock",
													"src": "349:186:7",
													"statements": [
														{
															"nativeSrc": "360:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "360:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "369:1:7",
																"nodeType": "YulLiteral",
																"src": "369:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "364:1:7",
																	"nodeType": "YulTypedName",
																	"src": "364:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "429:63:7",
																"nodeType": "YulBlock",
																"src": "429:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "454:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "454:3:7"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "459:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "459:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "450:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "450:3:7"
																					},
																					"nativeSrc": "450:11:7",
																					"nodeType": "YulFunctionCall",
																					"src": "450:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "473:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "473:3:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "478:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "478:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "469:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "469:3:7"
																							},
																							"nativeSrc": "469:11:7",
																							"nodeType": "YulFunctionCall",
																							"src": "469:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "463:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "463:5:7"
																					},
																					"nativeSrc": "463:18:7",
																					"nodeType": "YulFunctionCall",
																					"src": "463:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "443:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "443:6:7"
																			},
																			"nativeSrc": "443:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "443:39:7"
																		},
																		"nativeSrc": "443:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "443:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "390:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "390:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "393:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "393:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "387:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "387:2:7"
																},
																"nativeSrc": "387:13:7",
																"nodeType": "YulFunctionCall",
																"src": "387:13:7"
															},
															"nativeSrc": "379:113:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "401:19:7",
																"nodeType": "YulBlock",
																"src": "401:19:7",
																"statements": [
																	{
																		"nativeSrc": "403:15:7",
																		"nodeType": "YulAssignment",
																		"src": "403:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "412:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "412:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "415:2:7",
																					"nodeType": "YulLiteral",
																					"src": "415:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "408:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:3:7"
																			},
																			"nativeSrc": "408:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "408:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "403:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "383:3:7",
																"nodeType": "YulBlock",
																"src": "383:3:7",
																"statements": []
															},
															"src": "379:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "512:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "512:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "517:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "517:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "508:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "508:3:7"
																		},
																		"nativeSrc": "508:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "508:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "526:1:7",
																		"nodeType": "YulLiteral",
																		"src": "526:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "501:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "501:6:7"
																},
																"nativeSrc": "501:27:7",
																"nodeType": "YulFunctionCall",
																"src": "501:27:7"
															},
															"nativeSrc": "501:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "501:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:248:7"
											},
											{
												"body": {
													"nativeSrc": "589:54:7",
													"nodeType": "YulBlock",
													"src": "589:54:7",
													"statements": [
														{
															"nativeSrc": "599:38:7",
															"nodeType": "YulAssignment",
															"src": "599:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "617:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "617:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "624:2:7",
																				"nodeType": "YulLiteral",
																				"src": "624:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "613:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "613:3:7"
																		},
																		"nativeSrc": "613:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "613:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "633:2:7",
																				"nodeType": "YulLiteral",
																				"src": "633:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "629:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "629:3:7"
																		},
																		"nativeSrc": "629:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "629:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "609:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:7"
																},
																"nativeSrc": "609:28:7",
																"nodeType": "YulFunctionCall",
																"src": "609:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "599:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "599:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "541:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "572:5:7",
														"nodeType": "YulTypedName",
														"src": "572:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "582:6:7",
														"nodeType": "YulTypedName",
														"src": "582:6:7",
														"type": ""
													}
												],
												"src": "541:102:7"
											},
											{
												"body": {
													"nativeSrc": "741:285:7",
													"nodeType": "YulBlock",
													"src": "741:285:7",
													"statements": [
														{
															"nativeSrc": "751:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "751:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "798:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "798:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "765:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "765:32:7"
																},
																"nativeSrc": "765:39:7",
																"nodeType": "YulFunctionCall",
																"src": "765:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "755:6:7",
																	"nodeType": "YulTypedName",
																	"src": "755:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "813:78:7",
															"nodeType": "YulAssignment",
															"src": "813:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "879:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "879:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "884:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "884:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "820:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "820:58:7"
																},
																"nativeSrc": "820:71:7",
																"nodeType": "YulFunctionCall",
																"src": "820:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "813:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "813:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "939:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "939:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "946:4:7",
																				"nodeType": "YulLiteral",
																				"src": "946:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "935:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "935:3:7"
																		},
																		"nativeSrc": "935:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "935:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "953:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "953:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "958:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "958:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "900:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "900:34:7"
																},
																"nativeSrc": "900:65:7",
																"nodeType": "YulFunctionCall",
																"src": "900:65:7"
															},
															"nativeSrc": "900:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "900:65:7"
														},
														{
															"nativeSrc": "974:46:7",
															"nodeType": "YulAssignment",
															"src": "974:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "985:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "985:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1012:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1012:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "990:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "990:21:7"
																		},
																		"nativeSrc": "990:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "990:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "981:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "981:3:7"
																},
																"nativeSrc": "981:39:7",
																"nodeType": "YulFunctionCall",
																"src": "981:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "974:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "974:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "649:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "722:5:7",
														"nodeType": "YulTypedName",
														"src": "722:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "729:3:7",
														"nodeType": "YulTypedName",
														"src": "729:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "737:3:7",
														"nodeType": "YulTypedName",
														"src": "737:3:7",
														"type": ""
													}
												],
												"src": "649:377:7"
											},
											{
												"body": {
													"nativeSrc": "1150:195:7",
													"nodeType": "YulBlock",
													"src": "1150:195:7",
													"statements": [
														{
															"nativeSrc": "1160:26:7",
															"nodeType": "YulAssignment",
															"src": "1160:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1172:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1172:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1183:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1183:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1168:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1168:3:7"
																},
																"nativeSrc": "1168:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1168:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1160:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1160:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1207:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1207:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1218:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1218:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1203:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1203:3:7"
																		},
																		"nativeSrc": "1203:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1203:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1226:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1226:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1232:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1232:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1222:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1222:3:7"
																		},
																		"nativeSrc": "1222:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1222:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1196:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1196:6:7"
																},
																"nativeSrc": "1196:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1196:47:7"
															},
															"nativeSrc": "1196:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1196:47:7"
														},
														{
															"nativeSrc": "1252:86:7",
															"nodeType": "YulAssignment",
															"src": "1252:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1324:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1324:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1333:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1333:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1260:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1260:63:7"
																},
																"nativeSrc": "1260:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1260:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1252:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1252:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1032:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1122:9:7",
														"nodeType": "YulTypedName",
														"src": "1122:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1134:6:7",
														"nodeType": "YulTypedName",
														"src": "1134:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1145:4:7",
														"nodeType": "YulTypedName",
														"src": "1145:4:7",
														"type": ""
													}
												],
												"src": "1032:313:7"
											},
											{
												"body": {
													"nativeSrc": "1391:35:7",
													"nodeType": "YulBlock",
													"src": "1391:35:7",
													"statements": [
														{
															"nativeSrc": "1401:19:7",
															"nodeType": "YulAssignment",
															"src": "1401:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1417:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1417:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1411:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1411:5:7"
																},
																"nativeSrc": "1411:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1411:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1401:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1351:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1384:6:7",
														"nodeType": "YulTypedName",
														"src": "1384:6:7",
														"type": ""
													}
												],
												"src": "1351:75:7"
											},
											{
												"body": {
													"nativeSrc": "1521:28:7",
													"nodeType": "YulBlock",
													"src": "1521:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1541:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1531:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:7"
																},
																"nativeSrc": "1531:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1531:12:7"
															},
															"nativeSrc": "1531:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1531:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1432:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1432:117:7"
											},
											{
												"body": {
													"nativeSrc": "1644:28:7",
													"nodeType": "YulBlock",
													"src": "1644:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1661:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1661:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1664:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1664:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1654:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1654:6:7"
																},
																"nativeSrc": "1654:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1654:12:7"
															},
															"nativeSrc": "1654:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1654:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1555:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1555:117:7"
											},
											{
												"body": {
													"nativeSrc": "1723:81:7",
													"nodeType": "YulBlock",
													"src": "1723:81:7",
													"statements": [
														{
															"nativeSrc": "1733:65:7",
															"nodeType": "YulAssignment",
															"src": "1733:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1748:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1748:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1755:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1755:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1744:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1744:3:7"
																},
																"nativeSrc": "1744:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1744:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1733:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1733:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1678:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1705:5:7",
														"nodeType": "YulTypedName",
														"src": "1705:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1715:7:7",
														"nodeType": "YulTypedName",
														"src": "1715:7:7",
														"type": ""
													}
												],
												"src": "1678:126:7"
											},
											{
												"body": {
													"nativeSrc": "1855:51:7",
													"nodeType": "YulBlock",
													"src": "1855:51:7",
													"statements": [
														{
															"nativeSrc": "1865:35:7",
															"nodeType": "YulAssignment",
															"src": "1865:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1894:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1894:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1876:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1876:17:7"
																},
																"nativeSrc": "1876:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1876:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1865:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1865:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1810:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1837:5:7",
														"nodeType": "YulTypedName",
														"src": "1837:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1847:7:7",
														"nodeType": "YulTypedName",
														"src": "1847:7:7",
														"type": ""
													}
												],
												"src": "1810:96:7"
											},
											{
												"body": {
													"nativeSrc": "1955:79:7",
													"nodeType": "YulBlock",
													"src": "1955:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2012:16:7",
																"nodeType": "YulBlock",
																"src": "2012:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2021:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2021:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2024:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2024:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2014:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2014:6:7"
																			},
																			"nativeSrc": "2014:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2014:12:7"
																		},
																		"nativeSrc": "2014:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2014:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1978:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1978:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2003:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2003:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1985:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1985:17:7"
																				},
																				"nativeSrc": "1985:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1985:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1975:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1975:2:7"
																		},
																		"nativeSrc": "1975:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1975:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1968:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1968:6:7"
																},
																"nativeSrc": "1968:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1968:43:7"
															},
															"nativeSrc": "1965:63:7",
															"nodeType": "YulIf",
															"src": "1965:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1912:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1948:5:7",
														"nodeType": "YulTypedName",
														"src": "1948:5:7",
														"type": ""
													}
												],
												"src": "1912:122:7"
											},
											{
												"body": {
													"nativeSrc": "2092:87:7",
													"nodeType": "YulBlock",
													"src": "2092:87:7",
													"statements": [
														{
															"nativeSrc": "2102:29:7",
															"nodeType": "YulAssignment",
															"src": "2102:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2124:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2124:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2111:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2111:12:7"
																},
																"nativeSrc": "2111:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2111:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2102:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2102:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2167:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2167:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2140:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2140:26:7"
																},
																"nativeSrc": "2140:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2140:33:7"
															},
															"nativeSrc": "2140:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2140:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2040:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2070:6:7",
														"nodeType": "YulTypedName",
														"src": "2070:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2078:3:7",
														"nodeType": "YulTypedName",
														"src": "2078:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2086:5:7",
														"nodeType": "YulTypedName",
														"src": "2086:5:7",
														"type": ""
													}
												],
												"src": "2040:139:7"
											},
											{
												"body": {
													"nativeSrc": "2230:32:7",
													"nodeType": "YulBlock",
													"src": "2230:32:7",
													"statements": [
														{
															"nativeSrc": "2240:16:7",
															"nodeType": "YulAssignment",
															"src": "2240:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2251:5:7",
																"nodeType": "YulIdentifier",
																"src": "2251:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2240:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2240:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2185:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2212:5:7",
														"nodeType": "YulTypedName",
														"src": "2212:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2222:7:7",
														"nodeType": "YulTypedName",
														"src": "2222:7:7",
														"type": ""
													}
												],
												"src": "2185:77:7"
											},
											{
												"body": {
													"nativeSrc": "2311:79:7",
													"nodeType": "YulBlock",
													"src": "2311:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2368:16:7",
																"nodeType": "YulBlock",
																"src": "2368:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2377:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2377:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2380:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2380:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2370:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2370:6:7"
																			},
																			"nativeSrc": "2370:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2370:12:7"
																		},
																		"nativeSrc": "2370:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2370:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2334:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2334:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2359:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2359:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2341:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2341:17:7"
																				},
																				"nativeSrc": "2341:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2341:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2331:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2331:2:7"
																		},
																		"nativeSrc": "2331:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2331:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2324:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:7"
																},
																"nativeSrc": "2324:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2324:43:7"
															},
															"nativeSrc": "2321:63:7",
															"nodeType": "YulIf",
															"src": "2321:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2268:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2304:5:7",
														"nodeType": "YulTypedName",
														"src": "2304:5:7",
														"type": ""
													}
												],
												"src": "2268:122:7"
											},
											{
												"body": {
													"nativeSrc": "2448:87:7",
													"nodeType": "YulBlock",
													"src": "2448:87:7",
													"statements": [
														{
															"nativeSrc": "2458:29:7",
															"nodeType": "YulAssignment",
															"src": "2458:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2480:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2480:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2467:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2467:12:7"
																},
																"nativeSrc": "2467:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2467:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2458:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2458:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2523:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2523:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2496:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2496:26:7"
																},
																"nativeSrc": "2496:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2496:33:7"
															},
															"nativeSrc": "2496:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2496:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2396:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2426:6:7",
														"nodeType": "YulTypedName",
														"src": "2426:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2434:3:7",
														"nodeType": "YulTypedName",
														"src": "2434:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2442:5:7",
														"nodeType": "YulTypedName",
														"src": "2442:5:7",
														"type": ""
													}
												],
												"src": "2396:139:7"
											},
											{
												"body": {
													"nativeSrc": "2624:391:7",
													"nodeType": "YulBlock",
													"src": "2624:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2670:83:7",
																"nodeType": "YulBlock",
																"src": "2670:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2672:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2672:77:7"
																			},
																			"nativeSrc": "2672:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2672:79:7"
																		},
																		"nativeSrc": "2672:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2672:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2645:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2645:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2654:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2654:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2641:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2641:3:7"
																		},
																		"nativeSrc": "2641:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2641:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2666:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2666:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2637:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2637:3:7"
																},
																"nativeSrc": "2637:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2637:32:7"
															},
															"nativeSrc": "2634:119:7",
															"nodeType": "YulIf",
															"src": "2634:119:7"
														},
														{
															"nativeSrc": "2763:117:7",
															"nodeType": "YulBlock",
															"src": "2763:117:7",
															"statements": [
																{
																	"nativeSrc": "2778:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2778:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2792:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2792:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2782:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2782:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2807:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2807:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2842:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2842:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2853:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2853:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2838:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2838:3:7"
																				},
																				"nativeSrc": "2838:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2838:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2862:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2862:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2817:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2817:20:7"
																		},
																		"nativeSrc": "2817:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2817:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2807:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2807:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2890:118:7",
															"nodeType": "YulBlock",
															"src": "2890:118:7",
															"statements": [
																{
																	"nativeSrc": "2905:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2905:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2919:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2909:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2909:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2935:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2935:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2970:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2970:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2981:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2981:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2966:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2966:3:7"
																				},
																				"nativeSrc": "2966:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2966:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2990:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2990:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2945:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2945:20:7"
																		},
																		"nativeSrc": "2945:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2945:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2935:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2935:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2541:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2586:9:7",
														"nodeType": "YulTypedName",
														"src": "2586:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2597:7:7",
														"nodeType": "YulTypedName",
														"src": "2597:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2609:6:7",
														"nodeType": "YulTypedName",
														"src": "2609:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2617:6:7",
														"nodeType": "YulTypedName",
														"src": "2617:6:7",
														"type": ""
													}
												],
												"src": "2541:474:7"
											},
											{
												"body": {
													"nativeSrc": "3063:48:7",
													"nodeType": "YulBlock",
													"src": "3063:48:7",
													"statements": [
														{
															"nativeSrc": "3073:32:7",
															"nodeType": "YulAssignment",
															"src": "3073:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3098:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3098:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3091:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3091:6:7"
																		},
																		"nativeSrc": "3091:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3091:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3084:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3084:6:7"
																},
																"nativeSrc": "3084:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3084:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3073:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3073:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3021:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3045:5:7",
														"nodeType": "YulTypedName",
														"src": "3045:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3055:7:7",
														"nodeType": "YulTypedName",
														"src": "3055:7:7",
														"type": ""
													}
												],
												"src": "3021:90:7"
											},
											{
												"body": {
													"nativeSrc": "3176:50:7",
													"nodeType": "YulBlock",
													"src": "3176:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3193:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3193:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3213:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3213:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3198:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3198:14:7"
																		},
																		"nativeSrc": "3198:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3198:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3186:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3186:6:7"
																},
																"nativeSrc": "3186:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3186:34:7"
															},
															"nativeSrc": "3186:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3186:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3117:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3164:5:7",
														"nodeType": "YulTypedName",
														"src": "3164:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3171:3:7",
														"nodeType": "YulTypedName",
														"src": "3171:3:7",
														"type": ""
													}
												],
												"src": "3117:109:7"
											},
											{
												"body": {
													"nativeSrc": "3324:118:7",
													"nodeType": "YulBlock",
													"src": "3324:118:7",
													"statements": [
														{
															"nativeSrc": "3334:26:7",
															"nodeType": "YulAssignment",
															"src": "3334:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3346:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3346:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3357:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3357:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3342:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3342:3:7"
																},
																"nativeSrc": "3342:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3342:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3334:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3334:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3408:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3408:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3421:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3432:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3432:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3417:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:7"
																		},
																		"nativeSrc": "3417:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3417:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3370:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3370:37:7"
																},
																"nativeSrc": "3370:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3370:65:7"
															},
															"nativeSrc": "3370:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3370:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3232:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3296:9:7",
														"nodeType": "YulTypedName",
														"src": "3296:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3308:6:7",
														"nodeType": "YulTypedName",
														"src": "3308:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3319:4:7",
														"nodeType": "YulTypedName",
														"src": "3319:4:7",
														"type": ""
													}
												],
												"src": "3232:210:7"
											},
											{
												"body": {
													"nativeSrc": "3513:53:7",
													"nodeType": "YulBlock",
													"src": "3513:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3530:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3530:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3553:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3553:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3535:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3535:17:7"
																		},
																		"nativeSrc": "3535:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3535:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3523:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:7"
																},
																"nativeSrc": "3523:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3523:37:7"
															},
															"nativeSrc": "3523:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3523:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3448:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3501:5:7",
														"nodeType": "YulTypedName",
														"src": "3501:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3508:3:7",
														"nodeType": "YulTypedName",
														"src": "3508:3:7",
														"type": ""
													}
												],
												"src": "3448:118:7"
											},
											{
												"body": {
													"nativeSrc": "3670:124:7",
													"nodeType": "YulBlock",
													"src": "3670:124:7",
													"statements": [
														{
															"nativeSrc": "3680:26:7",
															"nodeType": "YulAssignment",
															"src": "3680:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3692:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3692:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3703:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3703:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3688:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3688:3:7"
																},
																"nativeSrc": "3688:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3688:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3680:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3680:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3760:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3760:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3773:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3773:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3784:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3784:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3769:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3769:3:7"
																		},
																		"nativeSrc": "3769:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3769:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3716:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3716:43:7"
																},
																"nativeSrc": "3716:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3716:71:7"
															},
															"nativeSrc": "3716:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3716:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3572:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3642:9:7",
														"nodeType": "YulTypedName",
														"src": "3642:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3654:6:7",
														"nodeType": "YulTypedName",
														"src": "3654:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3665:4:7",
														"nodeType": "YulTypedName",
														"src": "3665:4:7",
														"type": ""
													}
												],
												"src": "3572:222:7"
											},
											{
												"body": {
													"nativeSrc": "3900:519:7",
													"nodeType": "YulBlock",
													"src": "3900:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3946:83:7",
																"nodeType": "YulBlock",
																"src": "3946:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3948:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3948:77:7"
																			},
																			"nativeSrc": "3948:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3948:79:7"
																		},
																		"nativeSrc": "3948:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3948:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3921:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3921:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3930:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3930:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3917:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3917:3:7"
																		},
																		"nativeSrc": "3917:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3917:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3942:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3942:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3913:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3913:3:7"
																},
																"nativeSrc": "3913:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3913:32:7"
															},
															"nativeSrc": "3910:119:7",
															"nodeType": "YulIf",
															"src": "3910:119:7"
														},
														{
															"nativeSrc": "4039:117:7",
															"nodeType": "YulBlock",
															"src": "4039:117:7",
															"statements": [
																{
																	"nativeSrc": "4054:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4054:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4068:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4068:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4058:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4058:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4083:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4083:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4118:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4118:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4129:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4129:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4114:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4114:3:7"
																				},
																				"nativeSrc": "4114:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4114:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4138:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4138:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4093:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4093:20:7"
																		},
																		"nativeSrc": "4093:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4083:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4083:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4166:118:7",
															"nodeType": "YulBlock",
															"src": "4166:118:7",
															"statements": [
																{
																	"nativeSrc": "4181:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4181:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4195:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4195:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4185:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4185:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4211:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4211:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4246:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4246:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4257:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4257:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4242:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4242:3:7"
																				},
																				"nativeSrc": "4242:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4242:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4266:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4266:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4221:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4221:20:7"
																		},
																		"nativeSrc": "4221:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4221:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4211:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4211:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4294:118:7",
															"nodeType": "YulBlock",
															"src": "4294:118:7",
															"statements": [
																{
																	"nativeSrc": "4309:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4309:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4323:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4323:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4313:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4313:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4339:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4339:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4374:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4374:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4385:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4385:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4370:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4370:3:7"
																				},
																				"nativeSrc": "4370:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4370:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4394:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4394:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4349:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4349:20:7"
																		},
																		"nativeSrc": "4349:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4339:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4339:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3800:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3854:9:7",
														"nodeType": "YulTypedName",
														"src": "3854:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3865:7:7",
														"nodeType": "YulTypedName",
														"src": "3865:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3877:6:7",
														"nodeType": "YulTypedName",
														"src": "3877:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3885:6:7",
														"nodeType": "YulTypedName",
														"src": "3885:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3893:6:7",
														"nodeType": "YulTypedName",
														"src": "3893:6:7",
														"type": ""
													}
												],
												"src": "3800:619:7"
											},
											{
												"body": {
													"nativeSrc": "4468:43:7",
													"nodeType": "YulBlock",
													"src": "4468:43:7",
													"statements": [
														{
															"nativeSrc": "4478:27:7",
															"nodeType": "YulAssignment",
															"src": "4478:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4493:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4500:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4500:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4489:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4489:3:7"
																},
																"nativeSrc": "4489:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4489:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4478:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4478:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4425:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4450:5:7",
														"nodeType": "YulTypedName",
														"src": "4450:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4460:7:7",
														"nodeType": "YulTypedName",
														"src": "4460:7:7",
														"type": ""
													}
												],
												"src": "4425:86:7"
											},
											{
												"body": {
													"nativeSrc": "4578:51:7",
													"nodeType": "YulBlock",
													"src": "4578:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4595:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4595:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4616:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4616:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4600:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4600:15:7"
																		},
																		"nativeSrc": "4600:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4600:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4588:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4588:6:7"
																},
																"nativeSrc": "4588:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4588:35:7"
															},
															"nativeSrc": "4588:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4588:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4517:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4566:5:7",
														"nodeType": "YulTypedName",
														"src": "4566:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4573:3:7",
														"nodeType": "YulTypedName",
														"src": "4573:3:7",
														"type": ""
													}
												],
												"src": "4517:112:7"
											},
											{
												"body": {
													"nativeSrc": "4729:120:7",
													"nodeType": "YulBlock",
													"src": "4729:120:7",
													"statements": [
														{
															"nativeSrc": "4739:26:7",
															"nodeType": "YulAssignment",
															"src": "4739:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4751:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4751:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4762:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4762:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4747:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4747:3:7"
																},
																"nativeSrc": "4747:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4747:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4739:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4739:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4815:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4815:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4828:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4828:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4839:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4839:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4824:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4824:3:7"
																		},
																		"nativeSrc": "4824:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4824:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4775:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4775:39:7"
																},
																"nativeSrc": "4775:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4775:67:7"
															},
															"nativeSrc": "4775:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4775:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4635:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4701:9:7",
														"nodeType": "YulTypedName",
														"src": "4701:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4713:6:7",
														"nodeType": "YulTypedName",
														"src": "4713:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4724:4:7",
														"nodeType": "YulTypedName",
														"src": "4724:4:7",
														"type": ""
													}
												],
												"src": "4635:214:7"
											},
											{
												"body": {
													"nativeSrc": "4944:28:7",
													"nodeType": "YulBlock",
													"src": "4944:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4961:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4961:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4964:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4964:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4954:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4954:6:7"
																},
																"nativeSrc": "4954:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4954:12:7"
															},
															"nativeSrc": "4954:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "4954:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4855:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4855:117:7"
											},
											{
												"body": {
													"nativeSrc": "5067:28:7",
													"nodeType": "YulBlock",
													"src": "5067:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5084:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5084:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5087:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5077:6:7"
																},
																"nativeSrc": "5077:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5077:12:7"
															},
															"nativeSrc": "5077:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5077:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "4978:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4978:117:7"
											},
											{
												"body": {
													"nativeSrc": "5129:152:7",
													"nodeType": "YulBlock",
													"src": "5129:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5146:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5146:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5149:77:7",
																		"nodeType": "YulLiteral",
																		"src": "5149:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5139:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5139:6:7"
																},
																"nativeSrc": "5139:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5139:88:7"
															},
															"nativeSrc": "5139:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5139:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5243:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5243:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5246:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5246:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5236:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5236:6:7"
																},
																"nativeSrc": "5236:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5236:15:7"
															},
															"nativeSrc": "5236:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5236:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5267:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5267:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5270:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5260:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5260:6:7"
																},
																"nativeSrc": "5260:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5260:15:7"
															},
															"nativeSrc": "5260:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5260:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5101:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5101:180:7"
											},
											{
												"body": {
													"nativeSrc": "5330:238:7",
													"nodeType": "YulBlock",
													"src": "5330:238:7",
													"statements": [
														{
															"nativeSrc": "5340:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5340:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5362:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5362:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5392:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5392:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5370:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "5370:21:7"
																		},
																		"nativeSrc": "5370:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5370:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5358:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5358:3:7"
																},
																"nativeSrc": "5358:40:7",
																"nodeType": "YulFunctionCall",
																"src": "5358:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5344:10:7",
																	"nodeType": "YulTypedName",
																	"src": "5344:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5509:22:7",
																"nodeType": "YulBlock",
																"src": "5509:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5511:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5511:16:7"
																			},
																			"nativeSrc": "5511:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5511:18:7"
																		},
																		"nativeSrc": "5511:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5511:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5452:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "5452:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5464:18:7",
																				"nodeType": "YulLiteral",
																				"src": "5464:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5449:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5449:2:7"
																		},
																		"nativeSrc": "5449:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5449:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5488:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "5488:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5500:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5500:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5485:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5485:2:7"
																		},
																		"nativeSrc": "5485:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5485:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5446:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5446:2:7"
																},
																"nativeSrc": "5446:62:7",
																"nodeType": "YulFunctionCall",
																"src": "5446:62:7"
															},
															"nativeSrc": "5443:88:7",
															"nodeType": "YulIf",
															"src": "5443:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5547:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5547:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5551:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "5551:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5540:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5540:6:7"
																},
																"nativeSrc": "5540:22:7",
																"nodeType": "YulFunctionCall",
																"src": "5540:22:7"
															},
															"nativeSrc": "5540:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "5540:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5287:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5316:6:7",
														"nodeType": "YulTypedName",
														"src": "5316:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5324:4:7",
														"nodeType": "YulTypedName",
														"src": "5324:4:7",
														"type": ""
													}
												],
												"src": "5287:281:7"
											},
											{
												"body": {
													"nativeSrc": "5615:88:7",
													"nodeType": "YulBlock",
													"src": "5615:88:7",
													"statements": [
														{
															"nativeSrc": "5625:30:7",
															"nodeType": "YulAssignment",
															"src": "5625:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5635:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5635:18:7"
																},
																"nativeSrc": "5635:20:7",
																"nodeType": "YulFunctionCall",
																"src": "5635:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5625:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5625:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5684:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5684:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5692:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5692:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5664:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "5664:19:7"
																},
																"nativeSrc": "5664:33:7",
																"nodeType": "YulFunctionCall",
																"src": "5664:33:7"
															},
															"nativeSrc": "5664:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "5664:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5574:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5599:4:7",
														"nodeType": "YulTypedName",
														"src": "5599:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5608:6:7",
														"nodeType": "YulTypedName",
														"src": "5608:6:7",
														"type": ""
													}
												],
												"src": "5574:129:7"
											},
											{
												"body": {
													"nativeSrc": "5776:241:7",
													"nodeType": "YulBlock",
													"src": "5776:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5881:22:7",
																"nodeType": "YulBlock",
																"src": "5881:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5883:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5883:16:7"
																			},
																			"nativeSrc": "5883:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5883:18:7"
																		},
																		"nativeSrc": "5883:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5883:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5853:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5853:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5861:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5861:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5850:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5850:2:7"
																},
																"nativeSrc": "5850:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5850:30:7"
															},
															"nativeSrc": "5847:56:7",
															"nodeType": "YulIf",
															"src": "5847:56:7"
														},
														{
															"nativeSrc": "5913:37:7",
															"nodeType": "YulAssignment",
															"src": "5913:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5943:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5943:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "5921:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "5921:21:7"
																},
																"nativeSrc": "5921:29:7",
																"nodeType": "YulFunctionCall",
																"src": "5921:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5913:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5913:4:7"
																}
															]
														},
														{
															"nativeSrc": "5987:23:7",
															"nodeType": "YulAssignment",
															"src": "5987:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5999:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5999:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6005:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6005:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5995:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5995:3:7"
																},
																"nativeSrc": "5995:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5995:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5987:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5987:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "5709:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5760:6:7",
														"nodeType": "YulTypedName",
														"src": "5760:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5771:4:7",
														"nodeType": "YulTypedName",
														"src": "5771:4:7",
														"type": ""
													}
												],
												"src": "5709:308:7"
											},
											{
												"body": {
													"nativeSrc": "6087:84:7",
													"nodeType": "YulBlock",
													"src": "6087:84:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6111:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6111:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6116:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6116:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6121:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6121:6:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6098:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "6098:12:7"
																},
																"nativeSrc": "6098:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6098:30:7"
															},
															"nativeSrc": "6098:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "6098:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6148:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6148:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6153:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6153:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6144:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6144:3:7"
																		},
																		"nativeSrc": "6144:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6144:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6162:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6162:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6137:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6137:6:7"
																},
																"nativeSrc": "6137:27:7",
																"nodeType": "YulFunctionCall",
																"src": "6137:27:7"
															},
															"nativeSrc": "6137:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "6137:27:7"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6023:148:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6069:3:7",
														"nodeType": "YulTypedName",
														"src": "6069:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6074:3:7",
														"nodeType": "YulTypedName",
														"src": "6074:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6079:6:7",
														"nodeType": "YulTypedName",
														"src": "6079:6:7",
														"type": ""
													}
												],
												"src": "6023:148:7"
											},
											{
												"body": {
													"nativeSrc": "6261:341:7",
													"nodeType": "YulBlock",
													"src": "6261:341:7",
													"statements": [
														{
															"nativeSrc": "6271:75:7",
															"nodeType": "YulAssignment",
															"src": "6271:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6338:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6338:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "6296:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "6296:41:7"
																		},
																		"nativeSrc": "6296:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6296:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6280:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "6280:15:7"
																},
																"nativeSrc": "6280:66:7",
																"nodeType": "YulFunctionCall",
																"src": "6280:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6271:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6271:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6362:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6362:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6369:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6369:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6355:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6355:6:7"
																},
																"nativeSrc": "6355:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6355:21:7"
															},
															"nativeSrc": "6355:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "6355:21:7"
														},
														{
															"nativeSrc": "6385:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6385:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6400:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6400:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6407:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6407:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6396:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6396:3:7"
																},
																"nativeSrc": "6396:16:7",
																"nodeType": "YulFunctionCall",
																"src": "6396:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6389:3:7",
																	"nodeType": "YulTypedName",
																	"src": "6389:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6450:83:7",
																"nodeType": "YulBlock",
																"src": "6450:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "6452:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6452:77:7"
																			},
																			"nativeSrc": "6452:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6452:79:7"
																		},
																		"nativeSrc": "6452:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6452:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6431:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6431:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6436:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6436:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6427:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6427:3:7"
																		},
																		"nativeSrc": "6427:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6427:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6445:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6445:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6424:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6424:2:7"
																},
																"nativeSrc": "6424:25:7",
																"nodeType": "YulFunctionCall",
																"src": "6424:25:7"
															},
															"nativeSrc": "6421:112:7",
															"nodeType": "YulIf",
															"src": "6421:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6579:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6579:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "6584:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6584:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6589:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6589:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "6542:36:7",
																	"nodeType": "YulIdentifier",
																	"src": "6542:36:7"
																},
																"nativeSrc": "6542:54:7",
																"nodeType": "YulFunctionCall",
																"src": "6542:54:7"
															},
															"nativeSrc": "6542:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "6542:54:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "6177:425:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6234:3:7",
														"nodeType": "YulTypedName",
														"src": "6234:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6239:6:7",
														"nodeType": "YulTypedName",
														"src": "6239:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6247:3:7",
														"nodeType": "YulTypedName",
														"src": "6247:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6255:5:7",
														"nodeType": "YulTypedName",
														"src": "6255:5:7",
														"type": ""
													}
												],
												"src": "6177:425:7"
											},
											{
												"body": {
													"nativeSrc": "6684:278:7",
													"nodeType": "YulBlock",
													"src": "6684:278:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6733:83:7",
																"nodeType": "YulBlock",
																"src": "6733:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6735:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6735:77:7"
																			},
																			"nativeSrc": "6735:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6735:79:7"
																		},
																		"nativeSrc": "6735:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6735:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6712:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6712:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6720:4:7",
																						"nodeType": "YulLiteral",
																						"src": "6720:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6708:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6708:3:7"
																				},
																				"nativeSrc": "6708:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6708:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6727:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6727:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6704:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6704:3:7"
																		},
																		"nativeSrc": "6704:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6704:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6697:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6697:6:7"
																},
																"nativeSrc": "6697:35:7",
																"nodeType": "YulFunctionCall",
																"src": "6697:35:7"
															},
															"nativeSrc": "6694:122:7",
															"nodeType": "YulIf",
															"src": "6694:122:7"
														},
														{
															"nativeSrc": "6825:34:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6825:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6852:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6852:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6839:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "6839:12:7"
																},
																"nativeSrc": "6839:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6839:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6829:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6829:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6868:88:7",
															"nodeType": "YulAssignment",
															"src": "6868:88:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6929:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6929:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6937:4:7",
																				"nodeType": "YulLiteral",
																				"src": "6937:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6925:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6925:3:7"
																		},
																		"nativeSrc": "6925:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6925:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6944:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6944:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6952:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6952:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "6877:47:7",
																	"nodeType": "YulIdentifier",
																	"src": "6877:47:7"
																},
																"nativeSrc": "6877:79:7",
																"nodeType": "YulFunctionCall",
																"src": "6877:79:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6868:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6868:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "6622:340:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6662:6:7",
														"nodeType": "YulTypedName",
														"src": "6662:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6670:3:7",
														"nodeType": "YulTypedName",
														"src": "6670:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6678:5:7",
														"nodeType": "YulTypedName",
														"src": "6678:5:7",
														"type": ""
													}
												],
												"src": "6622:340:7"
											},
											{
												"body": {
													"nativeSrc": "7071:731:7",
													"nodeType": "YulBlock",
													"src": "7071:731:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7117:83:7",
																"nodeType": "YulBlock",
																"src": "7117:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7119:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7119:77:7"
																			},
																			"nativeSrc": "7119:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7119:79:7"
																		},
																		"nativeSrc": "7119:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7119:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7092:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7092:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7101:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7101:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7088:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7088:3:7"
																		},
																		"nativeSrc": "7088:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7088:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7113:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7113:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7084:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7084:3:7"
																},
																"nativeSrc": "7084:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7084:32:7"
															},
															"nativeSrc": "7081:119:7",
															"nodeType": "YulIf",
															"src": "7081:119:7"
														},
														{
															"nativeSrc": "7210:287:7",
															"nodeType": "YulBlock",
															"src": "7210:287:7",
															"statements": [
																{
																	"nativeSrc": "7225:45:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7225:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7256:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7256:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7267:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7267:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7252:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7252:3:7"
																				},
																				"nativeSrc": "7252:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7252:17:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7239:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "7239:12:7"
																		},
																		"nativeSrc": "7239:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7239:31:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7229:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7229:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7317:83:7",
																		"nodeType": "YulBlock",
																		"src": "7317:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7319:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "7319:77:7"
																					},
																					"nativeSrc": "7319:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7319:79:7"
																				},
																				"nativeSrc": "7319:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "7319:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7289:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7289:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7297:18:7",
																				"nodeType": "YulLiteral",
																				"src": "7297:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7286:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7286:2:7"
																		},
																		"nativeSrc": "7286:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7286:30:7"
																	},
																	"nativeSrc": "7283:117:7",
																	"nodeType": "YulIf",
																	"src": "7283:117:7"
																},
																{
																	"nativeSrc": "7414:73:7",
																	"nodeType": "YulAssignment",
																	"src": "7414:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7459:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7459:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7470:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7470:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7455:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7455:3:7"
																				},
																				"nativeSrc": "7455:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7455:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7479:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7479:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7424:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "7424:30:7"
																		},
																		"nativeSrc": "7424:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7424:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7414:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7414:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7507:288:7",
															"nodeType": "YulBlock",
															"src": "7507:288:7",
															"statements": [
																{
																	"nativeSrc": "7522:46:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7522:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7553:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7553:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7564:2:7",
																						"nodeType": "YulLiteral",
																						"src": "7564:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7549:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7549:3:7"
																				},
																				"nativeSrc": "7549:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7549:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7536:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "7536:12:7"
																		},
																		"nativeSrc": "7536:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7536:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7526:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7526:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7615:83:7",
																		"nodeType": "YulBlock",
																		"src": "7615:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7617:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "7617:77:7"
																					},
																					"nativeSrc": "7617:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7617:79:7"
																				},
																				"nativeSrc": "7617:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "7617:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7587:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7587:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7595:18:7",
																				"nodeType": "YulLiteral",
																				"src": "7595:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7584:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7584:2:7"
																		},
																		"nativeSrc": "7584:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7584:30:7"
																	},
																	"nativeSrc": "7581:117:7",
																	"nodeType": "YulIf",
																	"src": "7581:117:7"
																},
																{
																	"nativeSrc": "7712:73:7",
																	"nodeType": "YulAssignment",
																	"src": "7712:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7757:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7757:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7768:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7768:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7753:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7753:3:7"
																				},
																				"nativeSrc": "7753:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7753:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7777:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7777:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7722:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "7722:30:7"
																		},
																		"nativeSrc": "7722:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7722:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7712:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7712:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr",
												"nativeSrc": "6968:834:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7033:9:7",
														"nodeType": "YulTypedName",
														"src": "7033:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7044:7:7",
														"nodeType": "YulTypedName",
														"src": "7044:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7056:6:7",
														"nodeType": "YulTypedName",
														"src": "7056:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7064:6:7",
														"nodeType": "YulTypedName",
														"src": "7064:6:7",
														"type": ""
													}
												],
												"src": "6968:834:7"
											},
											{
												"body": {
													"nativeSrc": "7884:433:7",
													"nodeType": "YulBlock",
													"src": "7884:433:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7930:83:7",
																"nodeType": "YulBlock",
																"src": "7930:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7932:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7932:77:7"
																			},
																			"nativeSrc": "7932:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7932:79:7"
																		},
																		"nativeSrc": "7932:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7932:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7905:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7905:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7914:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7914:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7901:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7901:3:7"
																		},
																		"nativeSrc": "7901:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7901:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7926:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7926:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7897:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7897:3:7"
																},
																"nativeSrc": "7897:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7897:32:7"
															},
															"nativeSrc": "7894:119:7",
															"nodeType": "YulIf",
															"src": "7894:119:7"
														},
														{
															"nativeSrc": "8023:287:7",
															"nodeType": "YulBlock",
															"src": "8023:287:7",
															"statements": [
																{
																	"nativeSrc": "8038:45:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8038:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8069:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8069:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8080:1:7",
																						"nodeType": "YulLiteral",
																						"src": "8080:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8065:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8065:3:7"
																				},
																				"nativeSrc": "8065:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8065:17:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8052:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "8052:12:7"
																		},
																		"nativeSrc": "8052:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8052:31:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8042:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8042:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8130:83:7",
																		"nodeType": "YulBlock",
																		"src": "8130:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8132:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "8132:77:7"
																					},
																					"nativeSrc": "8132:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8132:79:7"
																				},
																				"nativeSrc": "8132:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "8132:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8102:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8102:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8110:18:7",
																				"nodeType": "YulLiteral",
																				"src": "8110:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8099:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8099:2:7"
																		},
																		"nativeSrc": "8099:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8099:30:7"
																	},
																	"nativeSrc": "8096:117:7",
																	"nodeType": "YulIf",
																	"src": "8096:117:7"
																},
																{
																	"nativeSrc": "8227:73:7",
																	"nodeType": "YulAssignment",
																	"src": "8227:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8272:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8272:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8283:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8283:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8268:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8268:3:7"
																				},
																				"nativeSrc": "8268:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8268:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8292:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8292:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "8237:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "8237:30:7"
																		},
																		"nativeSrc": "8237:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8237:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8227:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8227:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "7808:509:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7854:9:7",
														"nodeType": "YulTypedName",
														"src": "7854:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7865:7:7",
														"nodeType": "YulTypedName",
														"src": "7865:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7877:6:7",
														"nodeType": "YulTypedName",
														"src": "7877:6:7",
														"type": ""
													}
												],
												"src": "7808:509:7"
											},
											{
												"body": {
													"nativeSrc": "8389:263:7",
													"nodeType": "YulBlock",
													"src": "8389:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8435:83:7",
																"nodeType": "YulBlock",
																"src": "8435:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8437:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "8437:77:7"
																			},
																			"nativeSrc": "8437:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8437:79:7"
																		},
																		"nativeSrc": "8437:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8437:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8410:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8410:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8419:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8419:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8406:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8406:3:7"
																		},
																		"nativeSrc": "8406:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8406:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8431:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8431:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8402:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8402:3:7"
																},
																"nativeSrc": "8402:32:7",
																"nodeType": "YulFunctionCall",
																"src": "8402:32:7"
															},
															"nativeSrc": "8399:119:7",
															"nodeType": "YulIf",
															"src": "8399:119:7"
														},
														{
															"nativeSrc": "8528:117:7",
															"nodeType": "YulBlock",
															"src": "8528:117:7",
															"statements": [
																{
																	"nativeSrc": "8543:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8543:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8557:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8557:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8547:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8547:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8572:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8572:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8607:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8607:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8618:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8618:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8603:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8603:3:7"
																				},
																				"nativeSrc": "8603:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8603:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8627:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8627:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8582:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8582:20:7"
																		},
																		"nativeSrc": "8582:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8582:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8572:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8572:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "8323:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8359:9:7",
														"nodeType": "YulTypedName",
														"src": "8359:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8370:7:7",
														"nodeType": "YulTypedName",
														"src": "8370:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8382:6:7",
														"nodeType": "YulTypedName",
														"src": "8382:6:7",
														"type": ""
													}
												],
												"src": "8323:329:7"
											},
											{
												"body": {
													"nativeSrc": "8723:53:7",
													"nodeType": "YulBlock",
													"src": "8723:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8740:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8740:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8763:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8763:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8745:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "8745:17:7"
																		},
																		"nativeSrc": "8745:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8745:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8733:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8733:6:7"
																},
																"nativeSrc": "8733:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8733:37:7"
															},
															"nativeSrc": "8733:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "8733:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8658:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8711:5:7",
														"nodeType": "YulTypedName",
														"src": "8711:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8718:3:7",
														"nodeType": "YulTypedName",
														"src": "8718:3:7",
														"type": ""
													}
												],
												"src": "8658:118:7"
											},
											{
												"body": {
													"nativeSrc": "8880:124:7",
													"nodeType": "YulBlock",
													"src": "8880:124:7",
													"statements": [
														{
															"nativeSrc": "8890:26:7",
															"nodeType": "YulAssignment",
															"src": "8890:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8902:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8902:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8913:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8913:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8898:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8898:3:7"
																},
																"nativeSrc": "8898:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8898:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8890:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8890:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8970:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8970:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8983:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8983:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8994:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8994:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8979:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8979:3:7"
																		},
																		"nativeSrc": "8979:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8979:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8926:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8926:43:7"
																},
																"nativeSrc": "8926:71:7",
																"nodeType": "YulFunctionCall",
																"src": "8926:71:7"
															},
															"nativeSrc": "8926:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "8926:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8782:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8852:9:7",
														"nodeType": "YulTypedName",
														"src": "8852:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8864:6:7",
														"nodeType": "YulTypedName",
														"src": "8864:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8875:4:7",
														"nodeType": "YulTypedName",
														"src": "8875:4:7",
														"type": ""
													}
												],
												"src": "8782:222:7"
											},
											{
												"body": {
													"nativeSrc": "9093:391:7",
													"nodeType": "YulBlock",
													"src": "9093:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9139:83:7",
																"nodeType": "YulBlock",
																"src": "9139:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9141:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "9141:77:7"
																			},
																			"nativeSrc": "9141:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9141:79:7"
																		},
																		"nativeSrc": "9141:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9141:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9114:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9114:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9110:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9110:3:7"
																		},
																		"nativeSrc": "9110:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9110:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9135:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9135:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9106:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9106:3:7"
																},
																"nativeSrc": "9106:32:7",
																"nodeType": "YulFunctionCall",
																"src": "9106:32:7"
															},
															"nativeSrc": "9103:119:7",
															"nodeType": "YulIf",
															"src": "9103:119:7"
														},
														{
															"nativeSrc": "9232:117:7",
															"nodeType": "YulBlock",
															"src": "9232:117:7",
															"statements": [
																{
																	"nativeSrc": "9247:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9247:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9261:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9261:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9251:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9251:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9276:63:7",
																	"nodeType": "YulAssignment",
																	"src": "9276:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9311:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9311:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9322:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9322:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9307:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9307:3:7"
																				},
																				"nativeSrc": "9307:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9307:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9331:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9331:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9286:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "9286:20:7"
																		},
																		"nativeSrc": "9286:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9286:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9276:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9276:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9359:118:7",
															"nodeType": "YulBlock",
															"src": "9359:118:7",
															"statements": [
																{
																	"nativeSrc": "9374:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9374:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9388:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9388:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9378:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9378:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9404:63:7",
																	"nodeType": "YulAssignment",
																	"src": "9404:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9439:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9439:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9450:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9450:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9435:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9435:3:7"
																				},
																				"nativeSrc": "9435:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9435:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9459:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9459:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9414:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "9414:20:7"
																		},
																		"nativeSrc": "9414:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9414:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9404:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9404:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9010:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9055:9:7",
														"nodeType": "YulTypedName",
														"src": "9055:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9066:7:7",
														"nodeType": "YulTypedName",
														"src": "9066:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9078:6:7",
														"nodeType": "YulTypedName",
														"src": "9078:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9086:6:7",
														"nodeType": "YulTypedName",
														"src": "9086:6:7",
														"type": ""
													}
												],
												"src": "9010:474:7"
											},
											{
												"body": {
													"nativeSrc": "9518:152:7",
													"nodeType": "YulBlock",
													"src": "9518:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9535:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9535:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9538:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9538:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9528:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9528:6:7"
																},
																"nativeSrc": "9528:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9528:88:7"
															},
															"nativeSrc": "9528:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9528:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9632:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9632:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9635:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9635:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9625:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9625:6:7"
																},
																"nativeSrc": "9625:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9625:15:7"
															},
															"nativeSrc": "9625:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9625:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9656:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9656:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9659:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9659:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9649:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9649:6:7"
																},
																"nativeSrc": "9649:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9649:15:7"
															},
															"nativeSrc": "9649:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9649:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9490:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9490:180:7"
											},
											{
												"body": {
													"nativeSrc": "9727:269:7",
													"nodeType": "YulBlock",
													"src": "9727:269:7",
													"statements": [
														{
															"nativeSrc": "9737:22:7",
															"nodeType": "YulAssignment",
															"src": "9737:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9751:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9751:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9757:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9757:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9747:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9747:3:7"
																},
																"nativeSrc": "9747:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9747:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9737:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9737:6:7"
																}
															]
														},
														{
															"nativeSrc": "9768:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9768:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9798:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9798:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9804:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9804:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9794:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9794:3:7"
																},
																"nativeSrc": "9794:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9794:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9772:18:7",
																	"nodeType": "YulTypedName",
																	"src": "9772:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9845:51:7",
																"nodeType": "YulBlock",
																"src": "9845:51:7",
																"statements": [
																	{
																		"nativeSrc": "9859:27:7",
																		"nodeType": "YulAssignment",
																		"src": "9859:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9873:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9873:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9881:4:7",
																					"nodeType": "YulLiteral",
																					"src": "9881:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9869:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9869:3:7"
																			},
																			"nativeSrc": "9869:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9869:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9859:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9859:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9825:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "9825:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9818:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9818:6:7"
																},
																"nativeSrc": "9818:26:7",
																"nodeType": "YulFunctionCall",
																"src": "9818:26:7"
															},
															"nativeSrc": "9815:81:7",
															"nodeType": "YulIf",
															"src": "9815:81:7"
														},
														{
															"body": {
																"nativeSrc": "9948:42:7",
																"nodeType": "YulBlock",
																"src": "9948:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9962:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9962:16:7"
																			},
																			"nativeSrc": "9962:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9962:18:7"
																		},
																		"nativeSrc": "9962:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9962:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9912:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "9912:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9935:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9935:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9943:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9943:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9932:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9932:2:7"
																		},
																		"nativeSrc": "9932:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9932:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9909:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9909:2:7"
																},
																"nativeSrc": "9909:38:7",
																"nodeType": "YulFunctionCall",
																"src": "9909:38:7"
															},
															"nativeSrc": "9906:84:7",
															"nodeType": "YulIf",
															"src": "9906:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9676:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9711:4:7",
														"nodeType": "YulTypedName",
														"src": "9711:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9720:6:7",
														"nodeType": "YulTypedName",
														"src": "9720:6:7",
														"type": ""
													}
												],
												"src": "9676:320:7"
											},
											{
												"body": {
													"nativeSrc": "10108:69:7",
													"nodeType": "YulBlock",
													"src": "10108:69:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10130:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10130:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10138:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10138:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10126:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10126:3:7"
																		},
																		"nativeSrc": "10126:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10126:14:7"
																	},
																	{
																		"hexValue": "546f6b656e20616c726561647920696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "10142:27:7",
																		"nodeType": "YulLiteral",
																		"src": "10142:27:7",
																		"type": "",
																		"value": "Token already initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10119:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10119:6:7"
																},
																"nativeSrc": "10119:51:7",
																"nodeType": "YulFunctionCall",
																"src": "10119:51:7"
															},
															"nativeSrc": "10119:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "10119:51:7"
														}
													]
												},
												"name": "store_literal_in_memory_91f9a36ded9df16899312719ead5ef5c9633419e1e5ccb00e0ab9b2c948c2b2b",
												"nativeSrc": "10002:175:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10100:6:7",
														"nodeType": "YulTypedName",
														"src": "10100:6:7",
														"type": ""
													}
												],
												"src": "10002:175:7"
											},
											{
												"body": {
													"nativeSrc": "10329:220:7",
													"nodeType": "YulBlock",
													"src": "10329:220:7",
													"statements": [
														{
															"nativeSrc": "10339:74:7",
															"nodeType": "YulAssignment",
															"src": "10339:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10405:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10405:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10410:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10410:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10346:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10346:58:7"
																},
																"nativeSrc": "10346:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10346:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10339:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10339:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10511:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10511:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_91f9a36ded9df16899312719ead5ef5c9633419e1e5ccb00e0ab9b2c948c2b2b",
																	"nativeSrc": "10422:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10422:88:7"
																},
																"nativeSrc": "10422:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10422:93:7"
															},
															"nativeSrc": "10422:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10422:93:7"
														},
														{
															"nativeSrc": "10524:19:7",
															"nodeType": "YulAssignment",
															"src": "10524:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10535:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10535:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10540:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10540:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10531:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10531:3:7"
																},
																"nativeSrc": "10531:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10531:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10524:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10524:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_91f9a36ded9df16899312719ead5ef5c9633419e1e5ccb00e0ab9b2c948c2b2b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10183:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10317:3:7",
														"nodeType": "YulTypedName",
														"src": "10317:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10325:3:7",
														"nodeType": "YulTypedName",
														"src": "10325:3:7",
														"type": ""
													}
												],
												"src": "10183:366:7"
											},
											{
												"body": {
													"nativeSrc": "10726:248:7",
													"nodeType": "YulBlock",
													"src": "10726:248:7",
													"statements": [
														{
															"nativeSrc": "10736:26:7",
															"nodeType": "YulAssignment",
															"src": "10736:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10748:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10748:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10759:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10759:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10744:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10744:3:7"
																},
																"nativeSrc": "10744:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10744:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10736:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10736:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10783:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10783:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10794:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10794:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10779:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10779:3:7"
																		},
																		"nativeSrc": "10779:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10779:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10802:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10802:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10808:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10808:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10798:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10798:3:7"
																		},
																		"nativeSrc": "10798:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10798:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10772:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10772:6:7"
																},
																"nativeSrc": "10772:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10772:47:7"
															},
															"nativeSrc": "10772:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10772:47:7"
														},
														{
															"nativeSrc": "10828:139:7",
															"nodeType": "YulAssignment",
															"src": "10828:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10962:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10962:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_91f9a36ded9df16899312719ead5ef5c9633419e1e5ccb00e0ab9b2c948c2b2b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10836:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10836:124:7"
																},
																"nativeSrc": "10836:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10836:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10828:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10828:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_91f9a36ded9df16899312719ead5ef5c9633419e1e5ccb00e0ab9b2c948c2b2b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10555:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10706:9:7",
														"nodeType": "YulTypedName",
														"src": "10706:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10721:4:7",
														"nodeType": "YulTypedName",
														"src": "10721:4:7",
														"type": ""
													}
												],
												"src": "10555:419:7"
											},
											{
												"body": {
													"nativeSrc": "11034:87:7",
													"nodeType": "YulBlock",
													"src": "11034:87:7",
													"statements": [
														{
															"nativeSrc": "11044:11:7",
															"nodeType": "YulAssignment",
															"src": "11044:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "11052:3:7",
																"nodeType": "YulIdentifier",
																"src": "11052:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11044:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11044:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11072:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11072:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "11075:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11075:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11065:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11065:6:7"
																},
																"nativeSrc": "11065:14:7",
																"nodeType": "YulFunctionCall",
																"src": "11065:14:7"
															},
															"nativeSrc": "11065:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "11065:14:7"
														},
														{
															"nativeSrc": "11088:26:7",
															"nodeType": "YulAssignment",
															"src": "11088:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11106:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11106:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11109:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11109:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "11096:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "11096:9:7"
																},
																"nativeSrc": "11096:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11096:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11088:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11088:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "10980:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11021:3:7",
														"nodeType": "YulTypedName",
														"src": "11021:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "11029:4:7",
														"nodeType": "YulTypedName",
														"src": "11029:4:7",
														"type": ""
													}
												],
												"src": "10980:141:7"
											},
											{
												"body": {
													"nativeSrc": "11171:49:7",
													"nodeType": "YulBlock",
													"src": "11171:49:7",
													"statements": [
														{
															"nativeSrc": "11181:33:7",
															"nodeType": "YulAssignment",
															"src": "11181:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11199:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "11199:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11206:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11206:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11195:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11195:3:7"
																		},
																		"nativeSrc": "11195:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11195:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11211:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11211:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11191:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11191:3:7"
																},
																"nativeSrc": "11191:23:7",
																"nodeType": "YulFunctionCall",
																"src": "11191:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "11181:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11181:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "11127:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11154:5:7",
														"nodeType": "YulTypedName",
														"src": "11154:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "11164:6:7",
														"nodeType": "YulTypedName",
														"src": "11164:6:7",
														"type": ""
													}
												],
												"src": "11127:93:7"
											},
											{
												"body": {
													"nativeSrc": "11279:54:7",
													"nodeType": "YulBlock",
													"src": "11279:54:7",
													"statements": [
														{
															"nativeSrc": "11289:37:7",
															"nodeType": "YulAssignment",
															"src": "11289:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "11314:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11314:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "11320:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11320:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "11310:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11310:3:7"
																},
																"nativeSrc": "11310:16:7",
																"nodeType": "YulFunctionCall",
																"src": "11310:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "11289:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "11289:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "11226:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "11254:4:7",
														"nodeType": "YulTypedName",
														"src": "11254:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "11260:5:7",
														"nodeType": "YulTypedName",
														"src": "11260:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "11270:8:7",
														"nodeType": "YulTypedName",
														"src": "11270:8:7",
														"type": ""
													}
												],
												"src": "11226:107:7"
											},
											{
												"body": {
													"nativeSrc": "11415:317:7",
													"nodeType": "YulBlock",
													"src": "11415:317:7",
													"statements": [
														{
															"nativeSrc": "11425:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "11425:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "11446:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "11446:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11458:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11458:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11442:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11442:3:7"
																},
																"nativeSrc": "11442:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11442:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "11429:9:7",
																	"nodeType": "YulTypedName",
																	"src": "11429:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11469:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "11469:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "11500:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11500:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11511:66:7",
																		"nodeType": "YulLiteral",
																		"src": "11511:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "11481:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "11481:18:7"
																},
																"nativeSrc": "11481:97:7",
																"nodeType": "YulFunctionCall",
																"src": "11481:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "11473:4:7",
																	"nodeType": "YulTypedName",
																	"src": "11473:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11587:51:7",
															"nodeType": "YulAssignment",
															"src": "11587:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "11618:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11618:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "11629:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "11629:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "11599:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "11599:18:7"
																},
																"nativeSrc": "11599:39:7",
																"nodeType": "YulFunctionCall",
																"src": "11599:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "11587:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "11587:8:7"
																}
															]
														},
														{
															"nativeSrc": "11647:30:7",
															"nodeType": "YulAssignment",
															"src": "11647:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11660:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11660:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "11671:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11671:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "11667:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11667:3:7"
																		},
																		"nativeSrc": "11667:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11667:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11656:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11656:3:7"
																},
																"nativeSrc": "11656:21:7",
																"nodeType": "YulFunctionCall",
																"src": "11656:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11647:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11647:5:7"
																}
															]
														},
														{
															"nativeSrc": "11686:40:7",
															"nodeType": "YulAssignment",
															"src": "11686:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11699:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11699:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "11710:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "11710:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "11720:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11720:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11706:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11706:3:7"
																		},
																		"nativeSrc": "11706:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11706:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "11696:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11696:2:7"
																},
																"nativeSrc": "11696:30:7",
																"nodeType": "YulFunctionCall",
																"src": "11696:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "11686:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11686:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "11339:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11376:5:7",
														"nodeType": "YulTypedName",
														"src": "11376:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "11383:10:7",
														"nodeType": "YulTypedName",
														"src": "11383:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "11395:8:7",
														"nodeType": "YulTypedName",
														"src": "11395:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "11408:6:7",
														"nodeType": "YulTypedName",
														"src": "11408:6:7",
														"type": ""
													}
												],
												"src": "11339:393:7"
											},
											{
												"body": {
													"nativeSrc": "11770:28:7",
													"nodeType": "YulBlock",
													"src": "11770:28:7",
													"statements": [
														{
															"nativeSrc": "11780:12:7",
															"nodeType": "YulAssignment",
															"src": "11780:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "11787:5:7",
																"nodeType": "YulIdentifier",
																"src": "11787:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11780:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11780:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "11738:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11756:5:7",
														"nodeType": "YulTypedName",
														"src": "11756:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11766:3:7",
														"nodeType": "YulTypedName",
														"src": "11766:3:7",
														"type": ""
													}
												],
												"src": "11738:60:7"
											},
											{
												"body": {
													"nativeSrc": "11864:82:7",
													"nodeType": "YulBlock",
													"src": "11864:82:7",
													"statements": [
														{
															"nativeSrc": "11874:66:7",
															"nodeType": "YulAssignment",
															"src": "11874:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11932:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11932:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "11914:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "11914:17:7"
																				},
																				"nativeSrc": "11914:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11914:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "11905:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "11905:8:7"
																		},
																		"nativeSrc": "11905:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11905:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11887:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11887:17:7"
																},
																"nativeSrc": "11887:53:7",
																"nodeType": "YulFunctionCall",
																"src": "11887:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11874:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "11874:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "11804:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11844:5:7",
														"nodeType": "YulTypedName",
														"src": "11844:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11854:9:7",
														"nodeType": "YulTypedName",
														"src": "11854:9:7",
														"type": ""
													}
												],
												"src": "11804:142:7"
											},
											{
												"body": {
													"nativeSrc": "11999:28:7",
													"nodeType": "YulBlock",
													"src": "11999:28:7",
													"statements": [
														{
															"nativeSrc": "12009:12:7",
															"nodeType": "YulAssignment",
															"src": "12009:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "12016:5:7",
																"nodeType": "YulIdentifier",
																"src": "12016:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12009:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12009:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "11952:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11985:5:7",
														"nodeType": "YulTypedName",
														"src": "11985:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11995:3:7",
														"nodeType": "YulTypedName",
														"src": "11995:3:7",
														"type": ""
													}
												],
												"src": "11952:75:7"
											},
											{
												"body": {
													"nativeSrc": "12109:193:7",
													"nodeType": "YulBlock",
													"src": "12109:193:7",
													"statements": [
														{
															"nativeSrc": "12119:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "12119:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "12174:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "12174:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "12143:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "12143:30:7"
																},
																"nativeSrc": "12143:39:7",
																"nodeType": "YulFunctionCall",
																"src": "12143:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "12123:16:7",
																	"nodeType": "YulTypedName",
																	"src": "12123:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "12198:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12198:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "12238:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "12238:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "12232:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "12232:5:7"
																				},
																				"nativeSrc": "12232:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12232:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "12245:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12245:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "12277:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "12277:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "12253:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "12253:23:7"
																				},
																				"nativeSrc": "12253:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12253:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "12204:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "12204:27:7"
																		},
																		"nativeSrc": "12204:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12204:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "12191:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12191:6:7"
																},
																"nativeSrc": "12191:105:7",
																"nodeType": "YulFunctionCall",
																"src": "12191:105:7"
															},
															"nativeSrc": "12191:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "12191:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "12033:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12086:4:7",
														"nodeType": "YulTypedName",
														"src": "12086:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "12092:6:7",
														"nodeType": "YulTypedName",
														"src": "12092:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "12100:7:7",
														"nodeType": "YulTypedName",
														"src": "12100:7:7",
														"type": ""
													}
												],
												"src": "12033:269:7"
											},
											{
												"body": {
													"nativeSrc": "12357:24:7",
													"nodeType": "YulBlock",
													"src": "12357:24:7",
													"statements": [
														{
															"nativeSrc": "12367:8:7",
															"nodeType": "YulAssignment",
															"src": "12367:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "12374:1:7",
																"nodeType": "YulLiteral",
																"src": "12374:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12367:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12367:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "12308:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12353:3:7",
														"nodeType": "YulTypedName",
														"src": "12353:3:7",
														"type": ""
													}
												],
												"src": "12308:73:7"
											},
											{
												"body": {
													"nativeSrc": "12440:136:7",
													"nodeType": "YulBlock",
													"src": "12440:136:7",
													"statements": [
														{
															"nativeSrc": "12450:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "12450:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "12464:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "12464:30:7"
																},
																"nativeSrc": "12464:32:7",
																"nodeType": "YulFunctionCall",
																"src": "12464:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "12454:6:7",
																	"nodeType": "YulTypedName",
																	"src": "12454:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "12549:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12549:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "12555:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12555:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "12563:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12563:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "12505:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "12505:43:7"
																},
																"nativeSrc": "12505:65:7",
																"nodeType": "YulFunctionCall",
																"src": "12505:65:7"
															},
															"nativeSrc": "12505:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "12505:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "12387:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12426:4:7",
														"nodeType": "YulTypedName",
														"src": "12426:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "12432:6:7",
														"nodeType": "YulTypedName",
														"src": "12432:6:7",
														"type": ""
													}
												],
												"src": "12387:189:7"
											},
											{
												"body": {
													"nativeSrc": "12632:136:7",
													"nodeType": "YulBlock",
													"src": "12632:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "12699:63:7",
																"nodeType": "YulBlock",
																"src": "12699:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "12743:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "12743:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12750:1:7",
																					"nodeType": "YulLiteral",
																					"src": "12750:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "12713:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "12713:29:7"
																			},
																			"nativeSrc": "12713:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12713:39:7"
																		},
																		"nativeSrc": "12713:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12713:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "12652:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "12652:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12659:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12659:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12649:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "12649:2:7"
																},
																"nativeSrc": "12649:14:7",
																"nodeType": "YulFunctionCall",
																"src": "12649:14:7"
															},
															"nativeSrc": "12642:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12664:26:7",
																"nodeType": "YulBlock",
																"src": "12664:26:7",
																"statements": [
																	{
																		"nativeSrc": "12666:22:7",
																		"nodeType": "YulAssignment",
																		"src": "12666:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "12679:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "12679:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12686:1:7",
																					"nodeType": "YulLiteral",
																					"src": "12686:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12675:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "12675:3:7"
																			},
																			"nativeSrc": "12675:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12675:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "12666:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "12666:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12646:2:7",
																"nodeType": "YulBlock",
																"src": "12646:2:7",
																"statements": []
															},
															"src": "12642:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "12582:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "12620:5:7",
														"nodeType": "YulTypedName",
														"src": "12620:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12627:3:7",
														"nodeType": "YulTypedName",
														"src": "12627:3:7",
														"type": ""
													}
												],
												"src": "12582:186:7"
											},
											{
												"body": {
													"nativeSrc": "12853:464:7",
													"nodeType": "YulBlock",
													"src": "12853:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "12879:431:7",
																"nodeType": "YulBlock",
																"src": "12879:431:7",
																"statements": [
																	{
																		"nativeSrc": "12893:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12893:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "12941:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "12941:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "12909:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "12909:31:7"
																			},
																			"nativeSrc": "12909:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12909:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "12897:8:7",
																				"nodeType": "YulTypedName",
																				"src": "12897:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "12960:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12960:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "12983:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "12983:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "13011:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "13011:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "12993:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "12993:17:7"
																					},
																					"nativeSrc": "12993:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "12993:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12979:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "12979:3:7"
																			},
																			"nativeSrc": "12979:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12979:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "12964:11:7",
																				"nodeType": "YulTypedName",
																				"src": "12964:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "13180:27:7",
																			"nodeType": "YulBlock",
																			"src": "13180:27:7",
																			"statements": [
																				{
																					"nativeSrc": "13182:23:7",
																					"nodeType": "YulAssignment",
																					"src": "13182:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "13197:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "13197:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "13182:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "13182:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "13164:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "13164:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13176:2:7",
																					"nodeType": "YulLiteral",
																					"src": "13176:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "13161:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "13161:2:7"
																			},
																			"nativeSrc": "13161:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13161:18:7"
																		},
																		"nativeSrc": "13158:49:7",
																		"nodeType": "YulIf",
																		"src": "13158:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "13249:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "13249:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "13266:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "13266:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "13294:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "13294:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "13276:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "13276:17:7"
																							},
																							"nativeSrc": "13276:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "13276:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "13262:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "13262:3:7"
																					},
																					"nativeSrc": "13262:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "13262:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "13220:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "13220:28:7"
																			},
																			"nativeSrc": "13220:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13220:80:7"
																		},
																		"nativeSrc": "13220:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13220:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "12870:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12870:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12875:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12875:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12867:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "12867:2:7"
																},
																"nativeSrc": "12867:11:7",
																"nodeType": "YulFunctionCall",
																"src": "12867:11:7"
															},
															"nativeSrc": "12864:446:7",
															"nodeType": "YulIf",
															"src": "12864:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "12774:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "12829:5:7",
														"nodeType": "YulTypedName",
														"src": "12829:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "12836:3:7",
														"nodeType": "YulTypedName",
														"src": "12836:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "12841:10:7",
														"nodeType": "YulTypedName",
														"src": "12841:10:7",
														"type": ""
													}
												],
												"src": "12774:543:7"
											},
											{
												"body": {
													"nativeSrc": "13386:54:7",
													"nodeType": "YulBlock",
													"src": "13386:54:7",
													"statements": [
														{
															"nativeSrc": "13396:37:7",
															"nodeType": "YulAssignment",
															"src": "13396:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "13421:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13421:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13427:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "13427:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "13417:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13417:3:7"
																},
																"nativeSrc": "13417:16:7",
																"nodeType": "YulFunctionCall",
																"src": "13417:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "13396:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "13396:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "13323:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "13361:4:7",
														"nodeType": "YulTypedName",
														"src": "13361:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "13367:5:7",
														"nodeType": "YulTypedName",
														"src": "13367:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "13377:8:7",
														"nodeType": "YulTypedName",
														"src": "13377:8:7",
														"type": ""
													}
												],
												"src": "13323:117:7"
											},
											{
												"body": {
													"nativeSrc": "13497:118:7",
													"nodeType": "YulBlock",
													"src": "13497:118:7",
													"statements": [
														{
															"nativeSrc": "13507:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "13507:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "13556:1:7",
																						"nodeType": "YulLiteral",
																						"src": "13556:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "13559:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "13559:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "13552:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "13552:3:7"
																				},
																				"nativeSrc": "13552:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13552:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "13571:1:7",
																						"nodeType": "YulLiteral",
																						"src": "13571:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "13567:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "13567:3:7"
																				},
																				"nativeSrc": "13567:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13567:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "13523:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "13523:28:7"
																		},
																		"nativeSrc": "13523:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13523:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "13519:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13519:3:7"
																},
																"nativeSrc": "13519:56:7",
																"nodeType": "YulFunctionCall",
																"src": "13519:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "13511:4:7",
																	"nodeType": "YulTypedName",
																	"src": "13511:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13584:25:7",
															"nodeType": "YulAssignment",
															"src": "13584:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13598:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13598:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "13604:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13604:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13594:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13594:3:7"
																},
																"nativeSrc": "13594:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13594:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "13584:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13584:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "13446:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13474:4:7",
														"nodeType": "YulTypedName",
														"src": "13474:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "13480:5:7",
														"nodeType": "YulTypedName",
														"src": "13480:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "13490:6:7",
														"nodeType": "YulTypedName",
														"src": "13490:6:7",
														"type": ""
													}
												],
												"src": "13446:169:7"
											},
											{
												"body": {
													"nativeSrc": "13701:214:7",
													"nodeType": "YulBlock",
													"src": "13701:214:7",
													"statements": [
														{
															"nativeSrc": "13834:37:7",
															"nodeType": "YulAssignment",
															"src": "13834:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13861:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13861:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "13867:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13867:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "13842:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "13842:18:7"
																},
																"nativeSrc": "13842:29:7",
																"nodeType": "YulFunctionCall",
																"src": "13842:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13834:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13834:4:7"
																}
															]
														},
														{
															"nativeSrc": "13880:29:7",
															"nodeType": "YulAssignment",
															"src": "13880:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13891:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13891:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13901:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13901:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "13904:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "13904:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "13897:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13897:3:7"
																		},
																		"nativeSrc": "13897:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13897:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "13888:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "13888:2:7"
																},
																"nativeSrc": "13888:21:7",
																"nodeType": "YulFunctionCall",
																"src": "13888:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "13880:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13880:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "13620:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13682:4:7",
														"nodeType": "YulTypedName",
														"src": "13682:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "13688:3:7",
														"nodeType": "YulTypedName",
														"src": "13688:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "13696:4:7",
														"nodeType": "YulTypedName",
														"src": "13696:4:7",
														"type": ""
													}
												],
												"src": "13620:295:7"
											},
											{
												"body": {
													"nativeSrc": "14012:1303:7",
													"nodeType": "YulBlock",
													"src": "14012:1303:7",
													"statements": [
														{
															"nativeSrc": "14023:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "14023:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "14070:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14070:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "14037:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "14037:32:7"
																},
																"nativeSrc": "14037:37:7",
																"nodeType": "YulFunctionCall",
																"src": "14037:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "14027:6:7",
																	"nodeType": "YulTypedName",
																	"src": "14027:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14159:22:7",
																"nodeType": "YulBlock",
																"src": "14159:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "14161:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "14161:16:7"
																			},
																			"nativeSrc": "14161:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14161:18:7"
																		},
																		"nativeSrc": "14161:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14161:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "14131:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14131:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14139:18:7",
																		"nodeType": "YulLiteral",
																		"src": "14139:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14128:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "14128:2:7"
																},
																"nativeSrc": "14128:30:7",
																"nodeType": "YulFunctionCall",
																"src": "14128:30:7"
															},
															"nativeSrc": "14125:56:7",
															"nodeType": "YulIf",
															"src": "14125:56:7"
														},
														{
															"nativeSrc": "14191:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "14191:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "14237:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14237:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "14231:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "14231:5:7"
																		},
																		"nativeSrc": "14231:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14231:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "14205:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "14205:25:7"
																},
																"nativeSrc": "14205:38:7",
																"nodeType": "YulFunctionCall",
																"src": "14205:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "14195:6:7",
																	"nodeType": "YulTypedName",
																	"src": "14195:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "14336:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14336:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "14342:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14342:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "14350:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14350:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "14290:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "14290:45:7"
																},
																"nativeSrc": "14290:67:7",
																"nodeType": "YulFunctionCall",
																"src": "14290:67:7"
															},
															"nativeSrc": "14290:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "14290:67:7"
														},
														{
															"nativeSrc": "14367:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "14367:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "14384:1:7",
																"nodeType": "YulLiteral",
																"src": "14384:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "14371:9:7",
																	"nodeType": "YulTypedName",
																	"src": "14371:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14395:17:7",
															"nodeType": "YulAssignment",
															"src": "14395:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "14408:4:7",
																"nodeType": "YulLiteral",
																"src": "14408:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "14395:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "14395:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "14459:611:7",
																		"nodeType": "YulBlock",
																		"src": "14459:611:7",
																		"statements": [
																			{
																				"nativeSrc": "14473:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "14473:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "14492:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "14492:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "14504:4:7",
																									"nodeType": "YulLiteral",
																									"src": "14504:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "14500:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "14500:3:7"
																							},
																							"nativeSrc": "14500:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "14500:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "14488:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "14488:3:7"
																					},
																					"nativeSrc": "14488:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "14488:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "14477:7:7",
																						"nodeType": "YulTypedName",
																						"src": "14477:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "14524:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "14524:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "14570:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "14570:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "14538:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "14538:31:7"
																					},
																					"nativeSrc": "14538:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "14538:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "14528:6:7",
																						"nodeType": "YulTypedName",
																						"src": "14528:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "14588:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "14588:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "14597:1:7",
																					"nodeType": "YulLiteral",
																					"src": "14597:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "14592:1:7",
																						"nodeType": "YulTypedName",
																						"src": "14592:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "14656:163:7",
																					"nodeType": "YulBlock",
																					"src": "14656:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "14681:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "14681:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "14699:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "14699:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "14704:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "14704:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "14695:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "14695:3:7"
																												},
																												"nativeSrc": "14695:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "14695:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "14689:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "14689:5:7"
																										},
																										"nativeSrc": "14689:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "14689:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "14674:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "14674:6:7"
																								},
																								"nativeSrc": "14674:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "14674:42:7"
																							},
																							"nativeSrc": "14674:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "14674:42:7"
																						},
																						{
																							"nativeSrc": "14733:24:7",
																							"nodeType": "YulAssignment",
																							"src": "14733:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "14747:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "14747:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "14755:1:7",
																										"nodeType": "YulLiteral",
																										"src": "14755:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "14743:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "14743:3:7"
																								},
																								"nativeSrc": "14743:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "14743:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "14733:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "14733:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "14774:31:7",
																							"nodeType": "YulAssignment",
																							"src": "14774:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "14791:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "14791:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "14802:2:7",
																										"nodeType": "YulLiteral",
																										"src": "14802:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "14787:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "14787:3:7"
																								},
																								"nativeSrc": "14787:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "14787:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "14774:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "14774:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "14622:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "14622:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "14625:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "14625:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "14619:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "14619:2:7"
																					},
																					"nativeSrc": "14619:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "14619:14:7"
																				},
																				"nativeSrc": "14611:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "14634:21:7",
																					"nodeType": "YulBlock",
																					"src": "14634:21:7",
																					"statements": [
																						{
																							"nativeSrc": "14636:17:7",
																							"nodeType": "YulAssignment",
																							"src": "14636:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "14645:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "14645:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "14648:4:7",
																										"nodeType": "YulLiteral",
																										"src": "14648:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "14641:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "14641:3:7"
																								},
																								"nativeSrc": "14641:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "14641:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "14636:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "14636:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "14615:3:7",
																					"nodeType": "YulBlock",
																					"src": "14615:3:7",
																					"statements": []
																				},
																				"src": "14611:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "14855:156:7",
																					"nodeType": "YulBlock",
																					"src": "14855:156:7",
																					"statements": [
																						{
																							"nativeSrc": "14873:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "14873:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "14900:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "14900:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "14905:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "14905:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "14896:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "14896:3:7"
																										},
																										"nativeSrc": "14896:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "14896:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "14890:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "14890:5:7"
																								},
																								"nativeSrc": "14890:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "14890:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "14877:9:7",
																									"nodeType": "YulTypedName",
																									"src": "14877:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "14940:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "14940:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "14967:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "14967:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "14982:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "14982:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "14990:4:7",
																														"nodeType": "YulLiteral",
																														"src": "14990:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "14978:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "14978:3:7"
																												},
																												"nativeSrc": "14978:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "14978:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "14948:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "14948:18:7"
																										},
																										"nativeSrc": "14948:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "14948:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "14933:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "14933:6:7"
																								},
																								"nativeSrc": "14933:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "14933:64:7"
																							},
																							"nativeSrc": "14933:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "14933:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "14838:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "14838:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "14847:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "14847:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "14835:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "14835:2:7"
																					},
																					"nativeSrc": "14835:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "14835:19:7"
																				},
																				"nativeSrc": "14832:179:7",
																				"nodeType": "YulIf",
																				"src": "14832:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "15031:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "15031:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "15045:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "15045:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "15053:1:7",
																											"nodeType": "YulLiteral",
																											"src": "15053:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "15041:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "15041:3:7"
																									},
																									"nativeSrc": "15041:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "15041:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "15057:1:7",
																									"nodeType": "YulLiteral",
																									"src": "15057:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "15037:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "15037:3:7"
																							},
																							"nativeSrc": "15037:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "15037:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "15024:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "15024:6:7"
																					},
																					"nativeSrc": "15024:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "15024:36:7"
																				},
																				"nativeSrc": "15024:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "15024:36:7"
																			}
																		]
																	},
																	"nativeSrc": "14452:618:7",
																	"nodeType": "YulCase",
																	"src": "14452:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14457:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14457:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "15087:222:7",
																		"nodeType": "YulBlock",
																		"src": "15087:222:7",
																		"statements": [
																			{
																				"nativeSrc": "15101:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15101:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "15114:1:7",
																					"nodeType": "YulLiteral",
																					"src": "15114:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "15105:5:7",
																						"nodeType": "YulTypedName",
																						"src": "15105:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "15138:67:7",
																					"nodeType": "YulBlock",
																					"src": "15138:67:7",
																					"statements": [
																						{
																							"nativeSrc": "15156:35:7",
																							"nodeType": "YulAssignment",
																							"src": "15156:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "15175:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "15175:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "15180:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "15180:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "15171:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "15171:3:7"
																										},
																										"nativeSrc": "15171:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "15171:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "15165:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "15165:5:7"
																								},
																								"nativeSrc": "15165:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "15165:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "15156:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "15156:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "15131:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "15131:6:7"
																				},
																				"nativeSrc": "15128:77:7",
																				"nodeType": "YulIf",
																				"src": "15128:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "15225:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "15225:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "15284:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "15284:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "15291:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "15291:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "15231:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "15231:52:7"
																							},
																							"nativeSrc": "15231:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "15231:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "15218:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "15218:6:7"
																					},
																					"nativeSrc": "15218:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "15218:81:7"
																				},
																				"nativeSrc": "15218:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "15218:81:7"
																			}
																		]
																	},
																	"nativeSrc": "15079:230:7",
																	"nodeType": "YulCase",
																	"src": "15079:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "14432:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14432:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14440:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14440:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14429:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "14429:2:7"
																},
																"nativeSrc": "14429:14:7",
																"nodeType": "YulFunctionCall",
																"src": "14429:14:7"
															},
															"nativeSrc": "14422:887:7",
															"nodeType": "YulSwitch",
															"src": "14422:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "13920:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "14001:4:7",
														"nodeType": "YulTypedName",
														"src": "14001:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "14007:3:7",
														"nodeType": "YulTypedName",
														"src": "14007:3:7",
														"type": ""
													}
												],
												"src": "13920:1395:7"
											},
											{
												"body": {
													"nativeSrc": "15475:288:7",
													"nodeType": "YulBlock",
													"src": "15475:288:7",
													"statements": [
														{
															"nativeSrc": "15485:26:7",
															"nodeType": "YulAssignment",
															"src": "15485:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15497:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15497:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15508:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15508:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15493:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15493:3:7"
																},
																"nativeSrc": "15493:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15493:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15485:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15485:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15565:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15565:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15578:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15578:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15589:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15589:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15574:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15574:3:7"
																		},
																		"nativeSrc": "15574:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15574:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15521:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15521:43:7"
																},
																"nativeSrc": "15521:71:7",
																"nodeType": "YulFunctionCall",
																"src": "15521:71:7"
															},
															"nativeSrc": "15521:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "15521:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15646:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15646:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15659:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15659:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15670:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15670:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15655:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15655:3:7"
																		},
																		"nativeSrc": "15655:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15655:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15602:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15602:43:7"
																},
																"nativeSrc": "15602:72:7",
																"nodeType": "YulFunctionCall",
																"src": "15602:72:7"
															},
															"nativeSrc": "15602:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "15602:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15728:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15728:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15741:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15741:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15752:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15752:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15737:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15737:3:7"
																		},
																		"nativeSrc": "15737:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15737:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15684:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15684:43:7"
																},
																"nativeSrc": "15684:72:7",
																"nodeType": "YulFunctionCall",
																"src": "15684:72:7"
															},
															"nativeSrc": "15684:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "15684:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15321:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15431:9:7",
														"nodeType": "YulTypedName",
														"src": "15431:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15443:6:7",
														"nodeType": "YulTypedName",
														"src": "15443:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15451:6:7",
														"nodeType": "YulTypedName",
														"src": "15451:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15459:6:7",
														"nodeType": "YulTypedName",
														"src": "15459:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15470:4:7",
														"nodeType": "YulTypedName",
														"src": "15470:4:7",
														"type": ""
													}
												],
												"src": "15321:442:7"
											},
											{
												"body": {
													"nativeSrc": "15797:152:7",
													"nodeType": "YulBlock",
													"src": "15797:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15814:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15814:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15817:77:7",
																		"nodeType": "YulLiteral",
																		"src": "15817:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15807:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15807:6:7"
																},
																"nativeSrc": "15807:88:7",
																"nodeType": "YulFunctionCall",
																"src": "15807:88:7"
															},
															"nativeSrc": "15807:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "15807:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15911:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15911:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15914:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15914:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15904:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15904:6:7"
																},
																"nativeSrc": "15904:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15904:15:7"
															},
															"nativeSrc": "15904:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15904:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15935:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15935:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15938:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15938:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15928:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15928:6:7"
																},
																"nativeSrc": "15928:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15928:15:7"
															},
															"nativeSrc": "15928:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15928:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "15769:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "15769:180:7"
											},
											{
												"body": {
													"nativeSrc": "15999:147:7",
													"nodeType": "YulBlock",
													"src": "15999:147:7",
													"statements": [
														{
															"nativeSrc": "16009:25:7",
															"nodeType": "YulAssignment",
															"src": "16009:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16032:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16032:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16014:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "16014:17:7"
																},
																"nativeSrc": "16014:20:7",
																"nodeType": "YulFunctionCall",
																"src": "16014:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16009:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "16009:1:7"
																}
															]
														},
														{
															"nativeSrc": "16043:25:7",
															"nodeType": "YulAssignment",
															"src": "16043:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16066:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16066:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16048:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "16048:17:7"
																},
																"nativeSrc": "16048:20:7",
																"nodeType": "YulFunctionCall",
																"src": "16048:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16043:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "16043:1:7"
																}
															]
														},
														{
															"nativeSrc": "16077:16:7",
															"nodeType": "YulAssignment",
															"src": "16077:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16088:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16088:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16091:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16091:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16084:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16084:3:7"
																},
																"nativeSrc": "16084:9:7",
																"nodeType": "YulFunctionCall",
																"src": "16084:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "16077:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16077:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16117:22:7",
																"nodeType": "YulBlock",
																"src": "16117:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16119:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "16119:16:7"
																			},
																			"nativeSrc": "16119:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16119:18:7"
																		},
																		"nativeSrc": "16119:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16119:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16109:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16109:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "16112:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16112:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16106:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "16106:2:7"
																},
																"nativeSrc": "16106:10:7",
																"nodeType": "YulFunctionCall",
																"src": "16106:10:7"
															},
															"nativeSrc": "16103:36:7",
															"nodeType": "YulIf",
															"src": "16103:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "15955:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15986:1:7",
														"nodeType": "YulTypedName",
														"src": "15986:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15989:1:7",
														"nodeType": "YulTypedName",
														"src": "15989:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15995:3:7",
														"nodeType": "YulTypedName",
														"src": "15995:3:7",
														"type": ""
													}
												],
												"src": "15955:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_91f9a36ded9df16899312719ead5ef5c9633419e1e5ccb00e0ab9b2c948c2b2b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token already initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_91f9a36ded9df16899312719ead5ef5c9633419e1e5ccb00e0ab9b2c948c2b2b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_91f9a36ded9df16899312719ead5ef5c9633419e1e5ccb00e0ab9b2c948c2b2b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_91f9a36ded9df16899312719ead5ef5c9633419e1e5ccb00e0ab9b2c948c2b2b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_91f9a36ded9df16899312719ead5ef5c9633419e1e5ccb00e0ab9b2c948c2b2b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb14610289578063b90497e0146102b9578063dd62ed3e146102d7578063f2fde38b1461030757610100565b806370a0823114610213578063715018a6146102435780638da5cb5b1461024d57806395d89b411461026b57610100565b8063313ce567116100d3578063313ce567146101a157806340c10f19146101bf5780634cd88b76146101db57806358e792ee146101f757610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d610323565b60405161011a9190610fad565b60405180910390f35b61013d60048036038101906101389190611077565b6103b5565b60405161014a91906110d2565b60405180910390f35b61015b6103d8565b60405161016891906110fc565b60405180910390f35b61018b60048036038101906101869190611117565b6103e2565b60405161019891906110d2565b60405180910390f35b6101a9610411565b6040516101b69190611186565b60405180910390f35b6101d960048036038101906101d49190611077565b61041a565b005b6101f560048036038101906101f091906112d6565b610430565b005b610211600480360381019061020c919061134e565b6104bf565b005b61022d60048036038101906102289190611397565b6104da565b60405161023a91906110fc565b60405180910390f35b61024b610522565b005b610255610536565b60405161026291906113d3565b60405180910390f35b610273610560565b6040516102809190610fad565b60405180910390f35b6102a3600480360381019061029e9190611077565b6105f2565b6040516102b091906110d2565b60405180910390f35b6102c1610615565b6040516102ce9190610fad565b60405180910390f35b6102f160048036038101906102ec91906113ee565b6106a3565b6040516102fe91906110fc565b60405180910390f35b610321600480360381019061031c9190611397565b61072a565b005b6060600680546103329061145d565b80601f016020809104026020016040519081016040528092919081815260200182805461035e9061145d565b80156103ab5780601f10610380576101008083540402835291602001916103ab565b820191906000526020600020905b81548152906001019060200180831161038e57829003601f168201915b5050505050905090565b6000806103c06107b0565b90506103cd8185856107b8565b600191505092915050565b6000600254905090565b6000806103ed6107b0565b90506103fa8582856107ca565b61040585858561085e565b60019150509392505050565b60006012905090565b610422610952565b61042c82826109d9565b5050565b600860009054906101000a900460ff1615610480576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610477906114da565b60405180910390fd5b816006908161048f91906116a6565b50806007908161049f91906116a6565b506001600860006101000a81548160ff0219169083151502179055505050565b6104c7610952565b80600990816104d691906116a6565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61052a610952565b6105346000610a5b565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606007805461056f9061145d565b80601f016020809104026020016040519081016040528092919081815260200182805461059b9061145d565b80156105e85780601f106105bd576101008083540402835291602001916105e8565b820191906000526020600020905b8154815290600101906020018083116105cb57829003601f168201915b5050505050905090565b6000806105fd6107b0565b905061060a81858561085e565b600191505092915050565b600980546106229061145d565b80601f016020809104026020016040519081016040528092919081815260200182805461064e9061145d565b801561069b5780601f106106705761010080835404028352916020019161069b565b820191906000526020600020905b81548152906001019060200180831161067e57829003601f168201915b505050505081565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610732610952565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107a45760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161079b91906113d3565b60405180910390fd5b6107ad81610a5b565b50565b600033905090565b6107c58383836001610b21565b505050565b60006107d684846106a3565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108585781811015610848578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161083f93929190611778565b60405180910390fd5b61085784848484036000610b21565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108d05760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108c791906113d3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109425760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161093991906113d3565b60405180910390fd5b61094d838383610cf8565b505050565b61095a6107b0565b73ffffffffffffffffffffffffffffffffffffffff16610978610536565b73ffffffffffffffffffffffffffffffffffffffff16146109d75761099b6107b0565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109ce91906113d3565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a4b5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a4291906113d3565b60405180910390fd5b610a5760008383610cf8565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b935760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b8a91906113d3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c055760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bfc91906113d3565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610cf2578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ce991906110fc565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d4a578060026000828254610d3e91906117de565b92505081905550610e1d565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610dd6578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610dcd93929190611778565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e665780600260008282540392505081905550610eb3565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f1091906110fc565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f57578082015181840152602081019050610f3c565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f7f82610f1d565b610f898185610f28565b9350610f99818560208601610f39565b610fa281610f63565b840191505092915050565b60006020820190508181036000830152610fc78184610f74565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061100e82610fe3565b9050919050565b61101e81611003565b811461102957600080fd5b50565b60008135905061103b81611015565b92915050565b6000819050919050565b61105481611041565b811461105f57600080fd5b50565b6000813590506110718161104b565b92915050565b6000806040838503121561108e5761108d610fd9565b5b600061109c8582860161102c565b92505060206110ad85828601611062565b9150509250929050565b60008115159050919050565b6110cc816110b7565b82525050565b60006020820190506110e760008301846110c3565b92915050565b6110f681611041565b82525050565b600060208201905061111160008301846110ed565b92915050565b6000806000606084860312156111305761112f610fd9565b5b600061113e8682870161102c565b935050602061114f8682870161102c565b925050604061116086828701611062565b9150509250925092565b600060ff82169050919050565b6111808161116a565b82525050565b600060208201905061119b6000830184611177565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111e382610f63565b810181811067ffffffffffffffff82111715611202576112016111ab565b5b80604052505050565b6000611215610fcf565b905061122182826111da565b919050565b600067ffffffffffffffff821115611241576112406111ab565b5b61124a82610f63565b9050602081019050919050565b82818337600083830152505050565b600061127961127484611226565b61120b565b905082815260208101848484011115611295576112946111a6565b5b6112a0848285611257565b509392505050565b600082601f8301126112bd576112bc6111a1565b5b81356112cd848260208601611266565b91505092915050565b600080604083850312156112ed576112ec610fd9565b5b600083013567ffffffffffffffff81111561130b5761130a610fde565b5b611317858286016112a8565b925050602083013567ffffffffffffffff81111561133857611337610fde565b5b611344858286016112a8565b9150509250929050565b60006020828403121561136457611363610fd9565b5b600082013567ffffffffffffffff81111561138257611381610fde565b5b61138e848285016112a8565b91505092915050565b6000602082840312156113ad576113ac610fd9565b5b60006113bb8482850161102c565b91505092915050565b6113cd81611003565b82525050565b60006020820190506113e860008301846113c4565b92915050565b6000806040838503121561140557611404610fd9565b5b60006114138582860161102c565b92505060206114248582860161102c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061147557607f821691505b6020821081036114885761148761142e565b5b50919050565b7f546f6b656e20616c726561647920696e697469616c697a656400000000000000600082015250565b60006114c4601983610f28565b91506114cf8261148e565b602082019050919050565b600060208201905081810360008301526114f3816114b7565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261155c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261151f565b611566868361151f565b95508019841693508086168417925050509392505050565b6000819050919050565b60006115a361159e61159984611041565b61157e565b611041565b9050919050565b6000819050919050565b6115bd83611588565b6115d16115c9826115aa565b84845461152c565b825550505050565b600090565b6115e66115d9565b6115f18184846115b4565b505050565b5b818110156116155761160a6000826115de565b6001810190506115f7565b5050565b601f82111561165a5761162b816114fa565b6116348461150f565b81016020851015611643578190505b61165761164f8561150f565b8301826115f6565b50505b505050565b600082821c905092915050565b600061167d6000198460080261165f565b1980831691505092915050565b6000611696838361166c565b9150826002028217905092915050565b6116af82610f1d565b67ffffffffffffffff8111156116c8576116c76111ab565b5b6116d2825461145d565b6116dd828285611619565b600060209050601f83116001811461171057600084156116fe578287015190505b611708858261168a565b865550611770565b601f19841661171e866114fa565b60005b8281101561174657848901518255600182019150602085019450602081019050611721565b86831015611763578489015161175f601f89168261166c565b8355505b6001600288020188555050505b505050505050565b600060608201905061178d60008301866113c4565b61179a60208301856110ed565b6117a760408301846110ed565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117e982611041565b91506117f483611041565b925082820190508082111561180c5761180b6117af565b5b9291505056fea2646970667358221220759fd265fb1534ddc9cfb78c17c01d8acb9c222f78cb679e4727df9e826d430c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xB90497E0 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x307 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26B JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x4CD88B76 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x58E792EE EQ PUSH2 0x1F7 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x323 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x134E JUMP JUMPDEST PUSH2 0x4BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1397 JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH2 0x522 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH2 0x536 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x13EE JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x1397 JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x332 SWAP1 PUSH2 0x145D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x35E SWAP1 PUSH2 0x145D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3AB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x380 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3AB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x38E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3C0 PUSH2 0x7B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x3CD DUP2 DUP6 DUP6 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3ED PUSH2 0x7B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x3FA DUP6 DUP3 DUP6 PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x405 DUP6 DUP6 DUP6 PUSH2 0x85E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x422 PUSH2 0x952 JUMP JUMPDEST PUSH2 0x42C DUP3 DUP3 PUSH2 0x9D9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x480 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x477 SWAP1 PUSH2 0x14DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 SWAP1 DUP2 PUSH2 0x48F SWAP2 SWAP1 PUSH2 0x16A6 JUMP JUMPDEST POP DUP1 PUSH1 0x7 SWAP1 DUP2 PUSH2 0x49F SWAP2 SWAP1 PUSH2 0x16A6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x4C7 PUSH2 0x952 JUMP JUMPDEST DUP1 PUSH1 0x9 SWAP1 DUP2 PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0x16A6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52A PUSH2 0x952 JUMP JUMPDEST PUSH2 0x534 PUSH1 0x0 PUSH2 0xA5B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x56F SWAP1 PUSH2 0x145D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x59B SWAP1 PUSH2 0x145D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5FD PUSH2 0x7B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x60A DUP2 DUP6 DUP6 PUSH2 0x85E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x622 SWAP1 PUSH2 0x145D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x64E SWAP1 PUSH2 0x145D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x69B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x670 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x69B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x67E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x732 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7A4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79B SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7AD DUP2 PUSH2 0xA5B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7C5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB21 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D6 DUP5 DUP5 PUSH2 0x6A3 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x858 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x848 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1778 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x857 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xB21 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C7 SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x942 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x939 SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94D DUP4 DUP4 DUP4 PUSH2 0xCF8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x95A PUSH2 0x7B0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x978 PUSH2 0x536 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9D7 JUMPI PUSH2 0x99B PUSH2 0x7B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CE SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA42 SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA57 PUSH1 0x0 DUP4 DUP4 PUSH2 0xCF8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB93 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8A SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC05 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBFC SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCF2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCE9 SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD4A JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD3E SWAP2 SWAP1 PUSH2 0x17DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xDD6 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1778 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE66 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEB3 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF10 SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF57 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7F DUP3 PUSH2 0xF1D JUMP JUMPDEST PUSH2 0xF89 DUP2 DUP6 PUSH2 0xF28 JUMP JUMPDEST SWAP4 POP PUSH2 0xF99 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF39 JUMP JUMPDEST PUSH2 0xFA2 DUP2 PUSH2 0xF63 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFC7 DUP2 DUP5 PUSH2 0xF74 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100E DUP3 PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x101E DUP2 PUSH2 0x1003 JUMP JUMPDEST DUP2 EQ PUSH2 0x1029 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x103B DUP2 PUSH2 0x1015 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1054 DUP2 PUSH2 0x1041 JUMP JUMPDEST DUP2 EQ PUSH2 0x105F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1071 DUP2 PUSH2 0x104B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x108E JUMPI PUSH2 0x108D PUSH2 0xFD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x109C DUP6 DUP3 DUP7 ADD PUSH2 0x102C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10AD DUP6 DUP3 DUP7 ADD PUSH2 0x1062 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CC DUP2 PUSH2 0x10B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10F6 DUP2 PUSH2 0x1041 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1111 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1130 JUMPI PUSH2 0x112F PUSH2 0xFD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x113E DUP7 DUP3 DUP8 ADD PUSH2 0x102C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x114F DUP7 DUP3 DUP8 ADD PUSH2 0x102C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1160 DUP7 DUP3 DUP8 ADD PUSH2 0x1062 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1180 DUP2 PUSH2 0x116A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x119B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1177 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x11E3 DUP3 PUSH2 0xF63 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1202 JUMPI PUSH2 0x1201 PUSH2 0x11AB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1215 PUSH2 0xFCF JUMP JUMPDEST SWAP1 POP PUSH2 0x1221 DUP3 DUP3 PUSH2 0x11DA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1241 JUMPI PUSH2 0x1240 PUSH2 0x11AB JUMP JUMPDEST JUMPDEST PUSH2 0x124A DUP3 PUSH2 0xF63 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1279 PUSH2 0x1274 DUP5 PUSH2 0x1226 JUMP JUMPDEST PUSH2 0x120B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1295 JUMPI PUSH2 0x1294 PUSH2 0x11A6 JUMP JUMPDEST JUMPDEST PUSH2 0x12A0 DUP5 DUP3 DUP6 PUSH2 0x1257 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12BD JUMPI PUSH2 0x12BC PUSH2 0x11A1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12CD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1266 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12ED JUMPI PUSH2 0x12EC PUSH2 0xFD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x130B JUMPI PUSH2 0x130A PUSH2 0xFDE JUMP JUMPDEST JUMPDEST PUSH2 0x1317 DUP6 DUP3 DUP7 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1338 JUMPI PUSH2 0x1337 PUSH2 0xFDE JUMP JUMPDEST JUMPDEST PUSH2 0x1344 DUP6 DUP3 DUP7 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1364 JUMPI PUSH2 0x1363 PUSH2 0xFD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1382 JUMPI PUSH2 0x1381 PUSH2 0xFDE JUMP JUMPDEST JUMPDEST PUSH2 0x138E DUP5 DUP3 DUP6 ADD PUSH2 0x12A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13AD JUMPI PUSH2 0x13AC PUSH2 0xFD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13BB DUP5 DUP3 DUP6 ADD PUSH2 0x102C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13CD DUP2 PUSH2 0x1003 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1405 JUMPI PUSH2 0x1404 PUSH2 0xFD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1413 DUP6 DUP3 DUP7 ADD PUSH2 0x102C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1424 DUP6 DUP3 DUP7 ADD PUSH2 0x102C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1475 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x142E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20616C726561647920696E697469616C697A656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C4 PUSH1 0x19 DUP4 PUSH2 0xF28 JUMP JUMPDEST SWAP2 POP PUSH2 0x14CF DUP3 PUSH2 0x148E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14F3 DUP2 PUSH2 0x14B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x155C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x151F JUMP JUMPDEST PUSH2 0x1566 DUP7 DUP4 PUSH2 0x151F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A3 PUSH2 0x159E PUSH2 0x1599 DUP5 PUSH2 0x1041 JUMP JUMPDEST PUSH2 0x157E JUMP JUMPDEST PUSH2 0x1041 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15BD DUP4 PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x15D1 PUSH2 0x15C9 DUP3 PUSH2 0x15AA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x152C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x15E6 PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0x15F1 DUP2 DUP5 DUP5 PUSH2 0x15B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1615 JUMPI PUSH2 0x160A PUSH1 0x0 DUP3 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x15F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x165A JUMPI PUSH2 0x162B DUP2 PUSH2 0x14FA JUMP JUMPDEST PUSH2 0x1634 DUP5 PUSH2 0x150F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1643 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1657 PUSH2 0x164F DUP6 PUSH2 0x150F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x15F6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x167D PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x165F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1696 DUP4 DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16AF DUP3 PUSH2 0xF1D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16C8 JUMPI PUSH2 0x16C7 PUSH2 0x11AB JUMP JUMPDEST JUMPDEST PUSH2 0x16D2 DUP3 SLOAD PUSH2 0x145D JUMP JUMPDEST PUSH2 0x16DD DUP3 DUP3 DUP6 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1710 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x16FE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1708 DUP6 DUP3 PUSH2 0x168A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x171E DUP7 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1746 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1721 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1763 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x175F PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x166C JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x178D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x13C4 JUMP JUMPDEST PUSH2 0x179A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x17A7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10ED JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17E9 DUP3 PUSH2 0x1041 JUMP JUMPDEST SWAP2 POP PUSH2 0x17F4 DUP4 PUSH2 0x1041 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x180C JUMPI PUSH2 0x180B PUSH2 0x17AF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x9FD265FB1534DDC9CFB78C17C01D8ACB9C222F78CB67 SWAP15 SELFBALANCE 0x27 0xDF SWAP15 DUP3 PUSH14 0x430C64736F6C634300081A003300 ",
							"sourceMap": "168:1201:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;827:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1098:95:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;525:226;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1265:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;929:100:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;309:22:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;827:96:6;873:13;905:11;898:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;827:96;:::o;4293:186:2:-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;1098:95:6:-;1531:13:0;:11;:13::i;:::-;1169:17:6::1;1175:2;1179:6;1169:5;:17::i;:::-;1098:95:::0;;:::o;525:226::-;615:11;;;;;;;;;;;614:12;606:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;680:4;666:11;:18;;;;;;:::i;:::-;;710:6;694:13;:22;;;;;;:::i;:::-;;740:4;726:11;;:18;;;;;;;;;;;;;;;;;;525:226;;:::o;1265:102::-;1531:13:0;:11;:13::i;:::-;1351:9:6::1;1340:8;:20;;;;;;:::i;:::-;;1265:102:::0;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;929:100:6:-;977:13;1009;1002:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;929:100;:::o;3610:178:2:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;309:22:6:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1351:75::-;1384:6;1417:2;1411:9;1401:19;;1351:75;:::o;1432:117::-;1541:1;1538;1531:12;1555:117;1664:1;1661;1654:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:118::-;3535:24;3553:5;3535:24;:::i;:::-;3530:3;3523:37;3448:118;;:::o;3572:222::-;3665:4;3703:2;3692:9;3688:18;3680:26;;3716:71;3784:1;3773:9;3769:17;3760:6;3716:71;:::i;:::-;3572:222;;;;:::o;3800:619::-;3877:6;3885;3893;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;3800:619;;;;;:::o;4425:86::-;4460:7;4500:4;4493:5;4489:16;4478:27;;4425:86;;;:::o;4517:112::-;4600:22;4616:5;4600:22;:::i;:::-;4595:3;4588:35;4517:112;;:::o;4635:214::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4775:67;4839:1;4828:9;4824:17;4815:6;4775:67;:::i;:::-;4635:214;;;;:::o;4855:117::-;4964:1;4961;4954:12;4978:117;5087:1;5084;5077:12;5101:180;5149:77;5146:1;5139:88;5246:4;5243:1;5236:15;5270:4;5267:1;5260:15;5287:281;5370:27;5392:4;5370:27;:::i;:::-;5362:6;5358:40;5500:6;5488:10;5485:22;5464:18;5452:10;5449:34;5446:62;5443:88;;;5511:18;;:::i;:::-;5443:88;5551:10;5547:2;5540:22;5330:238;5287:281;;:::o;5574:129::-;5608:6;5635:20;;:::i;:::-;5625:30;;5664:33;5692:4;5684:6;5664:33;:::i;:::-;5574:129;;;:::o;5709:308::-;5771:4;5861:18;5853:6;5850:30;5847:56;;;5883:18;;:::i;:::-;5847:56;5921:29;5943:6;5921:29;:::i;:::-;5913:37;;6005:4;5999;5995:15;5987:23;;5709:308;;;:::o;6023:148::-;6121:6;6116:3;6111;6098:30;6162:1;6153:6;6148:3;6144:16;6137:27;6023:148;;;:::o;6177:425::-;6255:5;6280:66;6296:49;6338:6;6296:49;:::i;:::-;6280:66;:::i;:::-;6271:75;;6369:6;6362:5;6355:21;6407:4;6400:5;6396:16;6445:3;6436:6;6431:3;6427:16;6424:25;6421:112;;;6452:79;;:::i;:::-;6421:112;6542:54;6589:6;6584:3;6579;6542:54;:::i;:::-;6261:341;6177:425;;;;;:::o;6622:340::-;6678:5;6727:3;6720:4;6712:6;6708:17;6704:27;6694:122;;6735:79;;:::i;:::-;6694:122;6852:6;6839:20;6877:79;6952:3;6944:6;6937:4;6929:6;6925:17;6877:79;:::i;:::-;6868:88;;6684:278;6622:340;;;;:::o;6968:834::-;7056:6;7064;7113:2;7101:9;7092:7;7088:23;7084:32;7081:119;;;7119:79;;:::i;:::-;7081:119;7267:1;7256:9;7252:17;7239:31;7297:18;7289:6;7286:30;7283:117;;;7319:79;;:::i;:::-;7283:117;7424:63;7479:7;7470:6;7459:9;7455:22;7424:63;:::i;:::-;7414:73;;7210:287;7564:2;7553:9;7549:18;7536:32;7595:18;7587:6;7584:30;7581:117;;;7617:79;;:::i;:::-;7581:117;7722:63;7777:7;7768:6;7757:9;7753:22;7722:63;:::i;:::-;7712:73;;7507:288;6968:834;;;;;:::o;7808:509::-;7877:6;7926:2;7914:9;7905:7;7901:23;7897:32;7894:119;;;7932:79;;:::i;:::-;7894:119;8080:1;8069:9;8065:17;8052:31;8110:18;8102:6;8099:30;8096:117;;;8132:79;;:::i;:::-;8096:117;8237:63;8292:7;8283:6;8272:9;8268:22;8237:63;:::i;:::-;8227:73;;8023:287;7808:509;;;;:::o;8323:329::-;8382:6;8431:2;8419:9;8410:7;8406:23;8402:32;8399:119;;;8437:79;;:::i;:::-;8399:119;8557:1;8582:53;8627:7;8618:6;8607:9;8603:22;8582:53;:::i;:::-;8572:63;;8528:117;8323:329;;;;:::o;8658:118::-;8745:24;8763:5;8745:24;:::i;:::-;8740:3;8733:37;8658:118;;:::o;8782:222::-;8875:4;8913:2;8902:9;8898:18;8890:26;;8926:71;8994:1;8983:9;8979:17;8970:6;8926:71;:::i;:::-;8782:222;;;;:::o;9010:474::-;9078:6;9086;9135:2;9123:9;9114:7;9110:23;9106:32;9103:119;;;9141:79;;:::i;:::-;9103:119;9261:1;9286:53;9331:7;9322:6;9311:9;9307:22;9286:53;:::i;:::-;9276:63;;9232:117;9388:2;9414:53;9459:7;9450:6;9439:9;9435:22;9414:53;:::i;:::-;9404:63;;9359:118;9010:474;;;;;:::o;9490:180::-;9538:77;9535:1;9528:88;9635:4;9632:1;9625:15;9659:4;9656:1;9649:15;9676:320;9720:6;9757:1;9751:4;9747:12;9737:22;;9804:1;9798:4;9794:12;9825:18;9815:81;;9881:4;9873:6;9869:17;9859:27;;9815:81;9943:2;9935:6;9932:14;9912:18;9909:38;9906:84;;9962:18;;:::i;:::-;9906:84;9727:269;9676:320;;;:::o;10002:175::-;10142:27;10138:1;10130:6;10126:14;10119:51;10002:175;:::o;10183:366::-;10325:3;10346:67;10410:2;10405:3;10346:67;:::i;:::-;10339:74;;10422:93;10511:3;10422:93;:::i;:::-;10540:2;10535:3;10531:12;10524:19;;10183:366;;;:::o;10555:419::-;10721:4;10759:2;10748:9;10744:18;10736:26;;10808:9;10802:4;10798:20;10794:1;10783:9;10779:17;10772:47;10836:131;10962:4;10836:131;:::i;:::-;10828:139;;10555:419;;;:::o;10980:141::-;11029:4;11052:3;11044:11;;11075:3;11072:1;11065:14;11109:4;11106:1;11096:18;11088:26;;10980:141;;;:::o;11127:93::-;11164:6;11211:2;11206;11199:5;11195:14;11191:23;11181:33;;11127:93;;;:::o;11226:107::-;11270:8;11320:5;11314:4;11310:16;11289:37;;11226:107;;;;:::o;11339:393::-;11408:6;11458:1;11446:10;11442:18;11481:97;11511:66;11500:9;11481:97;:::i;:::-;11599:39;11629:8;11618:9;11599:39;:::i;:::-;11587:51;;11671:4;11667:9;11660:5;11656:21;11647:30;;11720:4;11710:8;11706:19;11699:5;11696:30;11686:40;;11415:317;;11339:393;;;;;:::o;11738:60::-;11766:3;11787:5;11780:12;;11738:60;;;:::o;11804:142::-;11854:9;11887:53;11905:34;11914:24;11932:5;11914:24;:::i;:::-;11905:34;:::i;:::-;11887:53;:::i;:::-;11874:66;;11804:142;;;:::o;11952:75::-;11995:3;12016:5;12009:12;;11952:75;;;:::o;12033:269::-;12143:39;12174:7;12143:39;:::i;:::-;12204:91;12253:41;12277:16;12253:41;:::i;:::-;12245:6;12238:4;12232:11;12204:91;:::i;:::-;12198:4;12191:105;12109:193;12033:269;;;:::o;12308:73::-;12353:3;12308:73;:::o;12387:189::-;12464:32;;:::i;:::-;12505:65;12563:6;12555;12549:4;12505:65;:::i;:::-;12440:136;12387:189;;:::o;12582:186::-;12642:120;12659:3;12652:5;12649:14;12642:120;;;12713:39;12750:1;12743:5;12713:39;:::i;:::-;12686:1;12679:5;12675:13;12666:22;;12642:120;;;12582:186;;:::o;12774:543::-;12875:2;12870:3;12867:11;12864:446;;;12909:38;12941:5;12909:38;:::i;:::-;12993:29;13011:10;12993:29;:::i;:::-;12983:8;12979:44;13176:2;13164:10;13161:18;13158:49;;;13197:8;13182:23;;13158:49;13220:80;13276:22;13294:3;13276:22;:::i;:::-;13266:8;13262:37;13249:11;13220:80;:::i;:::-;12879:431;;12864:446;12774:543;;;:::o;13323:117::-;13377:8;13427:5;13421:4;13417:16;13396:37;;13323:117;;;;:::o;13446:169::-;13490:6;13523:51;13571:1;13567:6;13559:5;13556:1;13552:13;13523:51;:::i;:::-;13519:56;13604:4;13598;13594:15;13584:25;;13497:118;13446:169;;;;:::o;13620:295::-;13696:4;13842:29;13867:3;13861:4;13842:29;:::i;:::-;13834:37;;13904:3;13901:1;13897:11;13891:4;13888:21;13880:29;;13620:295;;;;:::o;13920:1395::-;14037:37;14070:3;14037:37;:::i;:::-;14139:18;14131:6;14128:30;14125:56;;;14161:18;;:::i;:::-;14125:56;14205:38;14237:4;14231:11;14205:38;:::i;:::-;14290:67;14350:6;14342;14336:4;14290:67;:::i;:::-;14384:1;14408:4;14395:17;;14440:2;14432:6;14429:14;14457:1;14452:618;;;;15114:1;15131:6;15128:77;;;15180:9;15175:3;15171:19;15165:26;15156:35;;15128:77;15231:67;15291:6;15284:5;15231:67;:::i;:::-;15225:4;15218:81;15087:222;14422:887;;14452:618;14504:4;14500:9;14492:6;14488:22;14538:37;14570:4;14538:37;:::i;:::-;14597:1;14611:208;14625:7;14622:1;14619:14;14611:208;;;14704:9;14699:3;14695:19;14689:26;14681:6;14674:42;14755:1;14747:6;14743:14;14733:24;;14802:2;14791:9;14787:18;14774:31;;14648:4;14645:1;14641:12;14636:17;;14611:208;;;14847:6;14838:7;14835:19;14832:179;;;14905:9;14900:3;14896:19;14890:26;14948:48;14990:4;14982:6;14978:17;14967:9;14948:48;:::i;:::-;14940:6;14933:64;14855:156;14832:179;15057:1;15053;15045:6;15041:14;15037:22;15031:4;15024:36;14459:611;;;14422:887;;14012:1303;;;13920:1395;;:::o;15321:442::-;15470:4;15508:2;15497:9;15493:18;15485:26;;15521:71;15589:1;15578:9;15574:17;15565:6;15521:71;:::i;:::-;15602:72;15670:2;15659:9;15655:18;15646:6;15602:72;:::i;:::-;15684;15752:2;15741:9;15737:18;15728:6;15684:72;:::i;:::-;15321:442;;;;;;:::o;15769:180::-;15817:77;15814:1;15807:88;15914:4;15911:1;15904:15;15938:4;15935:1;15928:15;15955:191;15995:3;16014:20;16032:1;16014:20;:::i;:::-;16009:25;;16048:20;16066:1;16048:20;:::i;:::-;16043:25;;16091:1;16088;16084:9;16077:16;;16112:3;16109:1;16106:10;16103:36;;;16119:18;;:::i;:::-;16103:36;15955:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1243200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2864",
								"decimals()": "366",
								"imageURL()": "infinite",
								"initialize(string,string)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2589",
								"renounceOwnership()": "infinite",
								"setImageURL(string)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2505",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 168,
									"end": 1369,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 378,
									"end": 428,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 378,
									"end": 428,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 378,
									"end": 428,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 378,
									"end": 428,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 378,
									"end": 428,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 378,
									"end": 428,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 428,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 378,
									"end": 428,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 378,
									"end": 428,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 378,
									"end": 428,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 378,
									"end": 428,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 414,
									"end": 424,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220759fd265fb1534ddc9cfb78c17c01d8acb9c222f78cb679e4727df9e826d430c64736f6c634300081a0033",
									".code": [
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "B90497E0"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "4CD88B76"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "58E792EE"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 827,
											"end": 923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 827,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 827,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 827,
											"end": 923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 923,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 827,
											"end": 923,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 827,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 827,
											"end": 923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 923,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1098,
											"end": 1193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1098,
											"end": 1193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 525,
											"end": 751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 525,
											"end": 751,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 525,
											"end": 751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 525,
											"end": 751,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 525,
											"end": 751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 525,
											"end": 751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 525,
											"end": 751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 525,
											"end": 751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1265,
											"end": 1367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1265,
											"end": 1367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 929,
											"end": 1029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 929,
											"end": 1029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 309,
											"end": 331,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 309,
											"end": 331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 309,
											"end": 331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 923,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 827,
											"end": 923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 873,
											"end": 886,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 905,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 898,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 898,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1175,
											"end": 1177,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1179,
											"end": 1185,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1169,
											"end": 1186,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1186,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1169,
											"end": 1186,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 525,
											"end": 751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 615,
											"end": 626,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 615,
											"end": 626,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 615,
											"end": 626,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 615,
											"end": 626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 615,
											"end": 626,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 615,
											"end": 626,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 615,
											"end": 626,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 615,
											"end": 626,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 615,
											"end": 626,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 614,
											"end": 626,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 606,
											"end": 656,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 606,
											"end": 656,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 606,
											"end": 656,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 606,
											"end": 656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 606,
											"end": 656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 606,
											"end": 656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 606,
											"end": 656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 606,
											"end": 656,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 606,
											"end": 656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 680,
											"end": 684,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 666,
											"end": 677,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 666,
											"end": 684,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 666,
											"end": 684,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 666,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 666,
											"end": 684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 666,
											"end": 684,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 666,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 666,
											"end": 684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 666,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 666,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 666,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 710,
											"end": 716,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 694,
											"end": 707,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 694,
											"end": 716,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 694,
											"end": 716,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 694,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 694,
											"end": 716,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 694,
											"end": 716,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 694,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 694,
											"end": 716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 694,
											"end": 716,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 694,
											"end": 716,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 694,
											"end": 716,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 740,
											"end": 744,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 726,
											"end": 737,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 726,
											"end": 737,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1360,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1340,
											"end": 1360,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1360,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1340,
											"end": 1360,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1360,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1340,
											"end": 1360,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1360,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1340,
											"end": 1360,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1360,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 977,
											"end": 990,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1009,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1002,
											"end": 1022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1002,
											"end": 1022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 929,
											"end": 1029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 309,
											"end": 331,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 309,
											"end": 331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 309,
											"end": 331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 535,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 287,
											"end": 535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 370,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 393,
											"end": 399,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 390,
											"end": 391,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 387,
											"end": 400,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 379,
											"end": 492,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 478,
											"end": 479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 473,
											"end": 476,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 469,
											"end": 480,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 463,
											"end": 481,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 459,
											"end": 460,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 454,
											"end": 457,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 450,
											"end": 461,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 443,
											"end": 482,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 415,
											"end": 417,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 408,
											"end": 418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 403,
											"end": 418,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 403,
											"end": 418,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 523,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 512,
											"end": 515,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 508,
											"end": 524,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 501,
											"end": 528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 349,
											"end": 535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 541,
											"end": 643,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 541,
											"end": 643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 582,
											"end": 588,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 629,
											"end": 636,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 617,
											"end": 622,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 613,
											"end": 627,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 609,
											"end": 637,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 599,
											"end": 637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 599,
											"end": 637,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 541,
											"end": 643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 541,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 737,
											"end": 740,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 798,
											"end": 803,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 765,
											"end": 804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 765,
											"end": 804,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 879,
											"end": 882,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 820,
											"end": 891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 820,
											"end": 891,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 820,
											"end": 891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 813,
											"end": 891,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 813,
											"end": 891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 958,
											"end": 964,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 953,
											"end": 956,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 946,
											"end": 950,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 944,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 935,
											"end": 951,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 900,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 900,
											"end": 965,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 900,
											"end": 965,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 990,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 985,
											"end": 988,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1020,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 741,
											"end": 1026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1185,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1243,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1333,
											"end": 1337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1324,
											"end": 1330,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1260,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1351,
											"end": 1426,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 1351,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1384,
											"end": 1390,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1419,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1351,
											"end": 1426,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1351,
											"end": 1426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1542,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1539,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1543,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1672,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 1555,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1665,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1662,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1654,
											"end": 1666,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1797,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1798,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1733,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1733,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 1854,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 1985,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2010,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2026,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 2034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2086,
											"end": 2091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2130,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2131,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 2167,
											"end": 2172,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2140,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2256,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2341,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2334,
											"end": 2339,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2366,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2523,
											"end": 2528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2496,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 2668,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2654,
											"end": 2663,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2645,
											"end": 2652,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 2664,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2637,
											"end": 2669,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2672,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2862,
											"end": 2869,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2838,
											"end": 2860,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2817,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 2880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 2988,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2945,
											"end": 2998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3062,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3103,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3091,
											"end": 3104,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3105,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3073,
											"end": 3105,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3073,
											"end": 3105,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 3213,
											"end": 3218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3198,
											"end": 3219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3193,
											"end": 3196,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3186,
											"end": 3220,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3319,
											"end": 3323,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3359,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3355,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3360,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3360,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 3432,
											"end": 3433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3430,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3434,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3414,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3370,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 3553,
											"end": 3558,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3535,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3530,
											"end": 3533,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3560,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3665,
											"end": 3669,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3703,
											"end": 3705,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3692,
											"end": 3701,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 3706,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 3784,
											"end": 3785,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3782,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3760,
											"end": 3766,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3716,
											"end": 3787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3891,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3893,
											"end": 3899,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3944,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3930,
											"end": 3939,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 3928,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3917,
											"end": 3940,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3945,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3948,
											"end": 4027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 4138,
											"end": 4145,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4135,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4118,
											"end": 4127,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4136,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 4093,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4156,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4197,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4263,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4246,
											"end": 4255,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4242,
											"end": 4264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 4221,
											"end": 4274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4211,
											"end": 4274,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4211,
											"end": 4274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4284,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4325,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 4394,
											"end": 4401,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4374,
											"end": 4383,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4370,
											"end": 4392,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4349,
											"end": 4402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4339,
											"end": 4402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4339,
											"end": 4402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4460,
											"end": 4467,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4500,
											"end": 4504,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4493,
											"end": 4498,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4489,
											"end": 4505,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4478,
											"end": 4505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4478,
											"end": 4505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 4616,
											"end": 4621,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 4600,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4598,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4623,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4724,
											"end": 4728,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4764,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4751,
											"end": 4760,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4747,
											"end": 4765,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4739,
											"end": 4765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4739,
											"end": 4765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4837,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4824,
											"end": 4841,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4815,
											"end": 4821,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 4775,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4972,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 4855,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4965,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4962,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 4966,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4978,
											"end": 5095,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4978,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5084,
											"end": 5085,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5077,
											"end": 5089,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5101,
											"end": 5281,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5101,
											"end": 5281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5226,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5146,
											"end": 5147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5139,
											"end": 5227,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5246,
											"end": 5250,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 5243,
											"end": 5244,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5236,
											"end": 5251,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5270,
											"end": 5274,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5267,
											"end": 5268,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5260,
											"end": 5275,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5287,
											"end": 5568,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5287,
											"end": 5568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5370,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 5392,
											"end": 5396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5370,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 5370,
											"end": 5397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5370,
											"end": 5397,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 5370,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5362,
											"end": 5368,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5398,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5488,
											"end": 5498,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5507,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 5482,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5452,
											"end": 5462,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5449,
											"end": 5483,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5446,
											"end": 5508,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5531,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 5443,
											"end": 5531,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5511,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 5511,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5511,
											"end": 5529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5511,
											"end": 5529,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 5511,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5443,
											"end": 5531,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 5443,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5561,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5549,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5540,
											"end": 5562,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5568,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5287,
											"end": 5568,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5287,
											"end": 5568,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5287,
											"end": 5568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5703,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 5574,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5608,
											"end": 5614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5635,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 5635,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 5635,
											"end": 5655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5655,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 5635,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5625,
											"end": 5655,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5625,
											"end": 5655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 5692,
											"end": 5696,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5690,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5664,
											"end": 5697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5697,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 5664,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5703,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5703,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5703,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 6017,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 5709,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5771,
											"end": 5775,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5861,
											"end": 5879,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5853,
											"end": 5859,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5880,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 5903,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 5847,
											"end": 5903,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5883,
											"end": 5901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5847,
											"end": 5903,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 5847,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5921,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 5943,
											"end": 5949,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5921,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 5921,
											"end": 5950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5921,
											"end": 5950,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 5921,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5950,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5950,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6005,
											"end": 6009,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5999,
											"end": 6003,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5995,
											"end": 6010,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5987,
											"end": 6010,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5987,
											"end": 6010,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 6017,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 6017,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 6017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 6017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6171,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 6023,
											"end": 6171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6121,
											"end": 6127,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6116,
											"end": 6119,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6111,
											"end": 6114,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6098,
											"end": 6128,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 6162,
											"end": 6163,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6153,
											"end": 6159,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6148,
											"end": 6151,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6144,
											"end": 6160,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6137,
											"end": 6164,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6171,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6171,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6171,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6602,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 6177,
											"end": 6602,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6260,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6280,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 6296,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 6338,
											"end": 6344,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 6296,
											"end": 6345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6345,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 6296,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6280,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 6280,
											"end": 6346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6280,
											"end": 6346,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 6280,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6271,
											"end": 6346,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6271,
											"end": 6346,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6369,
											"end": 6375,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6362,
											"end": 6367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6376,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6400,
											"end": 6405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6396,
											"end": 6412,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6445,
											"end": 6448,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6436,
											"end": 6442,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6434,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6427,
											"end": 6443,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6424,
											"end": 6449,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6421,
											"end": 6533,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6421,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 6421,
											"end": 6533,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6452,
											"end": 6531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 6452,
											"end": 6531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 6452,
											"end": 6531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6452,
											"end": 6531,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 6452,
											"end": 6531,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6421,
											"end": 6533,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 6421,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6542,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 6589,
											"end": 6595,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6584,
											"end": 6587,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6579,
											"end": 6582,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6542,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 6542,
											"end": 6596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6542,
											"end": 6596,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 6542,
											"end": 6596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6261,
											"end": 6602,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6602,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6602,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6602,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6602,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6602,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6622,
											"end": 6962,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6622,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6678,
											"end": 6683,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6727,
											"end": 6730,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6720,
											"end": 6724,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6712,
											"end": 6718,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6708,
											"end": 6725,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6704,
											"end": 6731,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6694,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 6694,
											"end": 6816,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6735,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 6735,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 6735,
											"end": 6814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6735,
											"end": 6814,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 6735,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6694,
											"end": 6816,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 6694,
											"end": 6816,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6858,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6839,
											"end": 6859,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6877,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 6952,
											"end": 6955,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6950,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6937,
											"end": 6941,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6929,
											"end": 6935,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6942,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6877,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 6877,
											"end": 6956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6877,
											"end": 6956,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 6877,
											"end": 6956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6868,
											"end": 6956,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6868,
											"end": 6956,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6622,
											"end": 6962,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6622,
											"end": 6962,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6622,
											"end": 6962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6622,
											"end": 6962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6622,
											"end": 6962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 7802,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 6968,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7056,
											"end": 7062,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7064,
											"end": 7070,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7113,
											"end": 7115,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7101,
											"end": 7110,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7092,
											"end": 7099,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7088,
											"end": 7111,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7084,
											"end": 7116,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7081,
											"end": 7200,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7081,
											"end": 7200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 7081,
											"end": 7200,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 7119,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 7119,
											"end": 7198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7198,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 7119,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7081,
											"end": 7200,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 7081,
											"end": 7200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7268,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7256,
											"end": 7265,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7252,
											"end": 7269,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7239,
											"end": 7270,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 7297,
											"end": 7315,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7289,
											"end": 7295,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7316,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7400,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 7283,
											"end": 7400,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7319,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 7319,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 7319,
											"end": 7398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7319,
											"end": 7398,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 7319,
											"end": 7398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7400,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 7283,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7424,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 7479,
											"end": 7486,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7470,
											"end": 7476,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7459,
											"end": 7468,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7424,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 7424,
											"end": 7487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7424,
											"end": 7487,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 7424,
											"end": 7487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7414,
											"end": 7487,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7414,
											"end": 7487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7210,
											"end": 7497,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7564,
											"end": 7566,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7553,
											"end": 7562,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7549,
											"end": 7567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7568,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 7595,
											"end": 7613,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7587,
											"end": 7593,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7584,
											"end": 7614,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7581,
											"end": 7698,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7581,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 7581,
											"end": 7698,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 7617,
											"end": 7696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 7617,
											"end": 7696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7696,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 7617,
											"end": 7696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7581,
											"end": 7698,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 7581,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7722,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 7777,
											"end": 7784,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7768,
											"end": 7774,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7766,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7753,
											"end": 7775,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7722,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 7722,
											"end": 7785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7722,
											"end": 7785,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 7722,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7712,
											"end": 7785,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7712,
											"end": 7785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7507,
											"end": 7795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 7802,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 7802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 7802,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 7802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 7802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 7802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 8317,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 7808,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7877,
											"end": 7883,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7926,
											"end": 7928,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7914,
											"end": 7923,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7905,
											"end": 7912,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7924,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7897,
											"end": 7929,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7894,
											"end": 8013,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7894,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 7894,
											"end": 8013,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7932,
											"end": 8011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 7932,
											"end": 8011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 7932,
											"end": 8011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7932,
											"end": 8011,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 7932,
											"end": 8011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7894,
											"end": 8013,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 7894,
											"end": 8013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8080,
											"end": 8081,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8069,
											"end": 8078,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8065,
											"end": 8082,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8052,
											"end": 8083,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8128,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8102,
											"end": 8108,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8099,
											"end": 8129,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8096,
											"end": 8213,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8096,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 8096,
											"end": 8213,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8132,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 8132,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 8132,
											"end": 8211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8132,
											"end": 8211,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 8132,
											"end": 8211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8096,
											"end": 8213,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 8096,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8237,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 8292,
											"end": 8299,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8283,
											"end": 8289,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8272,
											"end": 8281,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8268,
											"end": 8290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8237,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 8237,
											"end": 8300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8237,
											"end": 8300,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 8237,
											"end": 8300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8227,
											"end": 8300,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8227,
											"end": 8300,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8023,
											"end": 8310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 8317,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 8317,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 8317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 8317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 8317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8323,
											"end": 8652,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 8323,
											"end": 8652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8382,
											"end": 8388,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8431,
											"end": 8433,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8419,
											"end": 8428,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8410,
											"end": 8417,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8406,
											"end": 8429,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 8434,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8518,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 8399,
											"end": 8518,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8437,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 8437,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 8437,
											"end": 8516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8437,
											"end": 8516,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 8437,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8518,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 8399,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8558,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8582,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 8627,
											"end": 8634,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8618,
											"end": 8624,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8607,
											"end": 8616,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8603,
											"end": 8625,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8582,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 8582,
											"end": 8635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8582,
											"end": 8635,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 8582,
											"end": 8635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8572,
											"end": 8635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8572,
											"end": 8635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8528,
											"end": 8645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8323,
											"end": 8652,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8323,
											"end": 8652,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8323,
											"end": 8652,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8323,
											"end": 8652,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8323,
											"end": 8652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8776,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 8658,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8745,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 8763,
											"end": 8768,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8745,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 8745,
											"end": 8769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8745,
											"end": 8769,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 8745,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8740,
											"end": 8743,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8733,
											"end": 8770,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8776,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8776,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 9004,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 8782,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8875,
											"end": 8879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8915,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8902,
											"end": 8911,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8898,
											"end": 8916,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8890,
											"end": 8916,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8890,
											"end": 8916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8926,
											"end": 8997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 8994,
											"end": 8995,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8983,
											"end": 8992,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8979,
											"end": 8996,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8970,
											"end": 8976,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8926,
											"end": 8997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 8926,
											"end": 8997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8926,
											"end": 8997,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 8926,
											"end": 8997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 9004,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 9004,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 9004,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 9004,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8782,
											"end": 9004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9010,
											"end": 9484,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 9010,
											"end": 9484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9078,
											"end": 9084,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9086,
											"end": 9092,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9135,
											"end": 9137,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9123,
											"end": 9132,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9114,
											"end": 9121,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9110,
											"end": 9133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9106,
											"end": 9138,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9103,
											"end": 9222,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9103,
											"end": 9222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 9103,
											"end": 9222,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9141,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 9141,
											"end": 9220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 9141,
											"end": 9220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9141,
											"end": 9220,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 9141,
											"end": 9220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9103,
											"end": 9222,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 9103,
											"end": 9222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9261,
											"end": 9262,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9286,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 9331,
											"end": 9338,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9322,
											"end": 9328,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9311,
											"end": 9320,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9307,
											"end": 9329,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9286,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 9286,
											"end": 9339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9286,
											"end": 9339,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 9286,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9276,
											"end": 9339,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9276,
											"end": 9339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9390,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9414,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 9459,
											"end": 9466,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9450,
											"end": 9456,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9439,
											"end": 9448,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9435,
											"end": 9457,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9414,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 9414,
											"end": 9467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9414,
											"end": 9467,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 9414,
											"end": 9467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9404,
											"end": 9467,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9404,
											"end": 9467,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9359,
											"end": 9477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9010,
											"end": 9484,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9010,
											"end": 9484,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9010,
											"end": 9484,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9010,
											"end": 9484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9010,
											"end": 9484,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9010,
											"end": 9484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9490,
											"end": 9670,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 9490,
											"end": 9670,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9538,
											"end": 9615,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9535,
											"end": 9536,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9528,
											"end": 9616,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9635,
											"end": 9639,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 9632,
											"end": 9633,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9625,
											"end": 9640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9659,
											"end": 9663,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9656,
											"end": 9657,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9649,
											"end": 9664,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9996,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 9676,
											"end": 9996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9720,
											"end": 9726,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9757,
											"end": 9758,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 9751,
											"end": 9755,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9747,
											"end": 9759,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9804,
											"end": 9805,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9794,
											"end": 9806,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9825,
											"end": 9843,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9815,
											"end": 9896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 9815,
											"end": 9896,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9881,
											"end": 9885,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 9873,
											"end": 9879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9869,
											"end": 9886,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9859,
											"end": 9886,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9859,
											"end": 9886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9815,
											"end": 9896,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 9815,
											"end": 9896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9943,
											"end": 9945,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9935,
											"end": 9941,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9932,
											"end": 9946,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9912,
											"end": 9930,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9909,
											"end": 9947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9906,
											"end": 9990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 9906,
											"end": 9990,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9962,
											"end": 9980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 9962,
											"end": 9980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 9962,
											"end": 9980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9962,
											"end": 9980,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 9962,
											"end": 9980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9906,
											"end": 9990,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 9906,
											"end": 9990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9727,
											"end": 9996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9996,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9676,
											"end": 9996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10002,
											"end": 10177,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 10002,
											"end": 10177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10142,
											"end": 10169,
											"name": "PUSH",
											"source": 7,
											"value": "546F6B656E20616C726561647920696E697469616C697A656400000000000000"
										},
										{
											"begin": 10138,
											"end": 10139,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10130,
											"end": 10136,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10126,
											"end": 10140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10119,
											"end": 10170,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10002,
											"end": 10177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10002,
											"end": 10177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10183,
											"end": 10549,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 10183,
											"end": 10549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10325,
											"end": 10328,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10346,
											"end": 10413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 10410,
											"end": 10412,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 10405,
											"end": 10408,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10346,
											"end": 10413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 10346,
											"end": 10413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10346,
											"end": 10413,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 10346,
											"end": 10413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10339,
											"end": 10413,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10339,
											"end": 10413,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10422,
											"end": 10515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 10511,
											"end": 10514,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10422,
											"end": 10515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 10422,
											"end": 10515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10422,
											"end": 10515,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 10422,
											"end": 10515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10540,
											"end": 10542,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10535,
											"end": 10538,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10531,
											"end": 10543,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10524,
											"end": 10543,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10524,
											"end": 10543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10183,
											"end": 10549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10183,
											"end": 10549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10183,
											"end": 10549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10183,
											"end": 10549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10555,
											"end": 10974,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 10555,
											"end": 10974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10721,
											"end": 10725,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10759,
											"end": 10761,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10748,
											"end": 10757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10736,
											"end": 10762,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10736,
											"end": 10762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10808,
											"end": 10817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10802,
											"end": 10806,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10798,
											"end": 10818,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10794,
											"end": 10795,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10783,
											"end": 10792,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10779,
											"end": 10796,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10772,
											"end": 10819,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10836,
											"end": 10967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 10962,
											"end": 10966,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10836,
											"end": 10967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 10836,
											"end": 10967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10836,
											"end": 10967,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 10836,
											"end": 10967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10967,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10555,
											"end": 10974,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10555,
											"end": 10974,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10555,
											"end": 10974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10555,
											"end": 10974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10980,
											"end": 11121,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 10980,
											"end": 11121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11029,
											"end": 11033,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11055,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11044,
											"end": 11055,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11044,
											"end": 11055,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11075,
											"end": 11078,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11072,
											"end": 11073,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11065,
											"end": 11079,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11113,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11106,
											"end": 11107,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11096,
											"end": 11114,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10980,
											"end": 11121,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10980,
											"end": 11121,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10980,
											"end": 11121,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10980,
											"end": 11121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11127,
											"end": 11220,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 11127,
											"end": 11220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11170,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11211,
											"end": 11213,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11206,
											"end": 11208,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 11199,
											"end": 11204,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11195,
											"end": 11209,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11191,
											"end": 11214,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 11181,
											"end": 11214,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11181,
											"end": 11214,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11127,
											"end": 11220,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11127,
											"end": 11220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11127,
											"end": 11220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11127,
											"end": 11220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11226,
											"end": 11333,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 11226,
											"end": 11333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11270,
											"end": 11278,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11320,
											"end": 11325,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11314,
											"end": 11318,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11310,
											"end": 11326,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 11289,
											"end": 11326,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11289,
											"end": 11326,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11226,
											"end": 11333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11226,
											"end": 11333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11226,
											"end": 11333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11226,
											"end": 11333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11226,
											"end": 11333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11339,
											"end": 11732,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 11339,
											"end": 11732,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11408,
											"end": 11414,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11458,
											"end": 11459,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 11446,
											"end": 11456,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11442,
											"end": 11460,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 11481,
											"end": 11578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 11511,
											"end": 11577,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11500,
											"end": 11509,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11481,
											"end": 11578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 11481,
											"end": 11578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11481,
											"end": 11578,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 11481,
											"end": 11578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11599,
											"end": 11638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 11629,
											"end": 11637,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11618,
											"end": 11627,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11599,
											"end": 11638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 11599,
											"end": 11638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11599,
											"end": 11638,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 11599,
											"end": 11638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11587,
											"end": 11638,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 11587,
											"end": 11638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11671,
											"end": 11675,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11667,
											"end": 11676,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 11660,
											"end": 11665,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11656,
											"end": 11677,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11647,
											"end": 11677,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 11647,
											"end": 11677,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11720,
											"end": 11724,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11710,
											"end": 11718,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11706,
											"end": 11725,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11699,
											"end": 11704,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11696,
											"end": 11726,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 11686,
											"end": 11726,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11686,
											"end": 11726,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11415,
											"end": 11732,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11415,
											"end": 11732,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11339,
											"end": 11732,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 11339,
											"end": 11732,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11339,
											"end": 11732,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11339,
											"end": 11732,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11339,
											"end": 11732,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11339,
											"end": 11732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11738,
											"end": 11798,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 11738,
											"end": 11798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11766,
											"end": 11769,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11787,
											"end": 11792,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11780,
											"end": 11792,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11780,
											"end": 11792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11738,
											"end": 11798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11738,
											"end": 11798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11738,
											"end": 11798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11738,
											"end": 11798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11804,
											"end": 11946,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 11804,
											"end": 11946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11854,
											"end": 11863,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 11905,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 11914,
											"end": 11938,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 11932,
											"end": 11937,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11914,
											"end": 11938,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 11914,
											"end": 11938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11914,
											"end": 11938,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 11914,
											"end": 11938,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11905,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 11905,
											"end": 11939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11905,
											"end": 11939,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 11905,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 11887,
											"end": 11940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11874,
											"end": 11940,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11874,
											"end": 11940,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11804,
											"end": 11946,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11804,
											"end": 11946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11804,
											"end": 11946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11804,
											"end": 11946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11952,
											"end": 12027,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 11952,
											"end": 12027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11995,
											"end": 11998,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12016,
											"end": 12021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12009,
											"end": 12021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12009,
											"end": 12021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11952,
											"end": 12027,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11952,
											"end": 12027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11952,
											"end": 12027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11952,
											"end": 12027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12033,
											"end": 12302,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 12033,
											"end": 12302,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12143,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 12174,
											"end": 12181,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12143,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 12143,
											"end": 12182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12143,
											"end": 12182,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 12143,
											"end": 12182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12204,
											"end": 12295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 12253,
											"end": 12294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 12277,
											"end": 12293,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12253,
											"end": 12294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 12253,
											"end": 12294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12253,
											"end": 12294,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 12253,
											"end": 12294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12245,
											"end": 12251,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12238,
											"end": 12242,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12232,
											"end": 12243,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 12204,
											"end": 12295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 12204,
											"end": 12295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12204,
											"end": 12295,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 12204,
											"end": 12295,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12198,
											"end": 12202,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12191,
											"end": 12296,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 12109,
											"end": 12302,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12033,
											"end": 12302,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12033,
											"end": 12302,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12033,
											"end": 12302,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12033,
											"end": 12302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12308,
											"end": 12381,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 12308,
											"end": 12381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12353,
											"end": 12356,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12308,
											"end": 12381,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12308,
											"end": 12381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12387,
											"end": 12576,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 12387,
											"end": 12576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12464,
											"end": 12496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 12464,
											"end": 12496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 12464,
											"end": 12496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12464,
											"end": 12496,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 12464,
											"end": 12496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12505,
											"end": 12570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 12563,
											"end": 12569,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12555,
											"end": 12561,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12549,
											"end": 12553,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12505,
											"end": 12570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 12505,
											"end": 12570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12505,
											"end": 12570,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 12505,
											"end": 12570,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12440,
											"end": 12576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12387,
											"end": 12576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12387,
											"end": 12576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12387,
											"end": 12576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12582,
											"end": 12768,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 12582,
											"end": 12768,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12642,
											"end": 12762,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 12642,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12659,
											"end": 12662,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12652,
											"end": 12657,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12649,
											"end": 12663,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 12642,
											"end": 12762,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12642,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 12642,
											"end": 12762,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12713,
											"end": 12752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 12750,
											"end": 12751,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12743,
											"end": 12748,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12713,
											"end": 12752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 12713,
											"end": 12752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12713,
											"end": 12752,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 12713,
											"end": 12752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12686,
											"end": 12687,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 12679,
											"end": 12684,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12675,
											"end": 12688,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12666,
											"end": 12688,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12666,
											"end": 12688,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12642,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 12642,
											"end": 12762,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12642,
											"end": 12762,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 12642,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12582,
											"end": 12768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12582,
											"end": 12768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12582,
											"end": 12768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12774,
											"end": 13317,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 12774,
											"end": 13317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12875,
											"end": 12877,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 12870,
											"end": 12873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12867,
											"end": 12878,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 12864,
											"end": 13310,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12864,
											"end": 13310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 12864,
											"end": 13310,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12909,
											"end": 12947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 12941,
											"end": 12946,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12909,
											"end": 12947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 12909,
											"end": 12947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12909,
											"end": 12947,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 12909,
											"end": 12947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12993,
											"end": 13022,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 13011,
											"end": 13021,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12993,
											"end": 13022,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 12993,
											"end": 13022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12993,
											"end": 13022,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 12993,
											"end": 13022,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12983,
											"end": 12991,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12979,
											"end": 13023,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13176,
											"end": 13178,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13164,
											"end": 13174,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13161,
											"end": 13179,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 13158,
											"end": 13207,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13158,
											"end": 13207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 13158,
											"end": 13207,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13197,
											"end": 13205,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13182,
											"end": 13205,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13182,
											"end": 13205,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13158,
											"end": 13207,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 13158,
											"end": 13207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13220,
											"end": 13300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 13276,
											"end": 13298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 13294,
											"end": 13297,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13276,
											"end": 13298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 13276,
											"end": 13298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13276,
											"end": 13298,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 13276,
											"end": 13298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13266,
											"end": 13274,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13262,
											"end": 13299,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13249,
											"end": 13260,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13220,
											"end": 13300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 13220,
											"end": 13300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13220,
											"end": 13300,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 13220,
											"end": 13300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12879,
											"end": 13310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12879,
											"end": 13310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12864,
											"end": 13310,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 12864,
											"end": 13310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12774,
											"end": 13317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12774,
											"end": 13317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12774,
											"end": 13317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12774,
											"end": 13317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13323,
											"end": 13440,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 13323,
											"end": 13440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13377,
											"end": 13385,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13427,
											"end": 13432,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13421,
											"end": 13425,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13417,
											"end": 13433,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 13396,
											"end": 13433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13396,
											"end": 13433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13323,
											"end": 13440,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13323,
											"end": 13440,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13323,
											"end": 13440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13323,
											"end": 13440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13323,
											"end": 13440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13446,
											"end": 13615,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 13446,
											"end": 13615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13490,
											"end": 13496,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13523,
											"end": 13574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 13571,
											"end": 13572,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13567,
											"end": 13573,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 13559,
											"end": 13564,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13556,
											"end": 13557,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 13552,
											"end": 13565,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 13523,
											"end": 13574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 13523,
											"end": 13574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13523,
											"end": 13574,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 13523,
											"end": 13574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13519,
											"end": 13575,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 13604,
											"end": 13608,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13598,
											"end": 13602,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13594,
											"end": 13609,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13584,
											"end": 13609,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13584,
											"end": 13609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13497,
											"end": 13615,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13446,
											"end": 13615,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13446,
											"end": 13615,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13446,
											"end": 13615,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13446,
											"end": 13615,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13446,
											"end": 13615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13620,
											"end": 13915,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 13620,
											"end": 13915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13696,
											"end": 13700,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13842,
											"end": 13871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 13867,
											"end": 13870,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13861,
											"end": 13865,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13842,
											"end": 13871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 13842,
											"end": 13871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13842,
											"end": 13871,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 13842,
											"end": 13871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13834,
											"end": 13871,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13834,
											"end": 13871,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13904,
											"end": 13907,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13901,
											"end": 13902,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 13897,
											"end": 13908,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 13891,
											"end": 13895,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13888,
											"end": 13909,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 13880,
											"end": 13909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13880,
											"end": 13909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13620,
											"end": 13915,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13620,
											"end": 13915,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13620,
											"end": 13915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13620,
											"end": 13915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13620,
											"end": 13915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13920,
											"end": 15315,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 13920,
											"end": 15315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14037,
											"end": 14074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 14070,
											"end": 14073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14037,
											"end": 14074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 14037,
											"end": 14074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14037,
											"end": 14074,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 14037,
											"end": 14074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14139,
											"end": 14157,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14131,
											"end": 14137,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14128,
											"end": 14158,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 14125,
											"end": 14181,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14125,
											"end": 14181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 14125,
											"end": 14181,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14161,
											"end": 14179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 14161,
											"end": 14179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 14161,
											"end": 14179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14161,
											"end": 14179,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 14161,
											"end": 14179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14125,
											"end": 14181,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 14125,
											"end": 14181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14205,
											"end": 14243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 14237,
											"end": 14241,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14231,
											"end": 14242,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14205,
											"end": 14243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 14205,
											"end": 14243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14205,
											"end": 14243,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 14205,
											"end": 14243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14290,
											"end": 14357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 14350,
											"end": 14356,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14342,
											"end": 14348,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14336,
											"end": 14340,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14290,
											"end": 14357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 14290,
											"end": 14357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14290,
											"end": 14357,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 14290,
											"end": 14357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14384,
											"end": 14385,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14408,
											"end": 14412,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14395,
											"end": 14412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14395,
											"end": 14412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14440,
											"end": 14442,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 14432,
											"end": 14438,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14429,
											"end": 14443,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 14457,
											"end": 14458,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 14452,
											"end": 15070,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14452,
											"end": 15070,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 14452,
											"end": 15070,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 14452,
											"end": 15070,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15114,
											"end": 15115,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15131,
											"end": 15137,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15128,
											"end": 15205,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15128,
											"end": 15205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 15128,
											"end": 15205,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15180,
											"end": 15189,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15175,
											"end": 15178,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 15171,
											"end": 15190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15165,
											"end": 15191,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 15156,
											"end": 15191,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15156,
											"end": 15191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15128,
											"end": 15205,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 15128,
											"end": 15205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15231,
											"end": 15298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 15291,
											"end": 15297,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15284,
											"end": 15289,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15231,
											"end": 15298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 15231,
											"end": 15298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15231,
											"end": 15298,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 15231,
											"end": 15298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15225,
											"end": 15229,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 15218,
											"end": 15299,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 15087,
											"end": 15309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14422,
											"end": 15309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 14422,
											"end": 15309,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14452,
											"end": 15070,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 14452,
											"end": 15070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14504,
											"end": 14508,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 14500,
											"end": 14509,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 14492,
											"end": 14498,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14488,
											"end": 14510,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14538,
											"end": 14575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 14570,
											"end": 14574,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14538,
											"end": 14575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 14538,
											"end": 14575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14538,
											"end": 14575,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 14538,
											"end": 14575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14597,
											"end": 14598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14611,
											"end": 14819,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 14611,
											"end": 14819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14625,
											"end": 14632,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14622,
											"end": 14623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14619,
											"end": 14633,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 14611,
											"end": 14819,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14611,
											"end": 14819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 14611,
											"end": 14819,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14704,
											"end": 14713,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14699,
											"end": 14702,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 14695,
											"end": 14714,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14689,
											"end": 14715,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14681,
											"end": 14687,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14674,
											"end": 14716,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 14755,
											"end": 14756,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 14747,
											"end": 14753,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14743,
											"end": 14757,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14733,
											"end": 14757,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14733,
											"end": 14757,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14802,
											"end": 14804,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14791,
											"end": 14800,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14787,
											"end": 14805,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 14774,
											"end": 14805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14648,
											"end": 14652,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14645,
											"end": 14646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14641,
											"end": 14653,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14636,
											"end": 14653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14636,
											"end": 14653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14611,
											"end": 14819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 14611,
											"end": 14819,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14611,
											"end": 14819,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 14611,
											"end": 14819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14847,
											"end": 14853,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14838,
											"end": 14845,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14835,
											"end": 14854,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 14832,
											"end": 15011,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14832,
											"end": 15011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 14832,
											"end": 15011,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14905,
											"end": 14914,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14900,
											"end": 14903,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 14896,
											"end": 14915,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14890,
											"end": 14916,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14948,
											"end": 14996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 14990,
											"end": 14994,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 14982,
											"end": 14988,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 14978,
											"end": 14995,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14967,
											"end": 14976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14948,
											"end": 14996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 14948,
											"end": 14996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14948,
											"end": 14996,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 14948,
											"end": 14996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14940,
											"end": 14946,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14933,
											"end": 14997,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 14855,
											"end": 15011,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14832,
											"end": 15011,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 14832,
											"end": 15011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15057,
											"end": 15058,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 15053,
											"end": 15054,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 15045,
											"end": 15051,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 15041,
											"end": 15055,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 15037,
											"end": 15059,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15031,
											"end": 15035,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 15024,
											"end": 15060,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 14459,
											"end": 15070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14459,
											"end": 15070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14459,
											"end": 15070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14422,
											"end": 15309,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 14422,
											"end": 15309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14422,
											"end": 15309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14012,
											"end": 15315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14012,
											"end": 15315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14012,
											"end": 15315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13920,
											"end": 15315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13920,
											"end": 15315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13920,
											"end": 15315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15321,
											"end": 15763,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 15321,
											"end": 15763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15470,
											"end": 15474,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15508,
											"end": 15510,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 15497,
											"end": 15506,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15493,
											"end": 15511,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15485,
											"end": 15511,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15485,
											"end": 15511,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15521,
											"end": 15592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 15589,
											"end": 15590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15578,
											"end": 15587,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15574,
											"end": 15591,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15565,
											"end": 15571,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 15521,
											"end": 15592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 15521,
											"end": 15592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15521,
											"end": 15592,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 15521,
											"end": 15592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15602,
											"end": 15674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 15670,
											"end": 15672,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15659,
											"end": 15668,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15655,
											"end": 15673,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15646,
											"end": 15652,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15602,
											"end": 15674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 15602,
											"end": 15674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15602,
											"end": 15674,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 15602,
											"end": 15674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15684,
											"end": 15756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 15752,
											"end": 15754,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15741,
											"end": 15750,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15737,
											"end": 15755,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15728,
											"end": 15734,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15684,
											"end": 15756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 15684,
											"end": 15756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15684,
											"end": 15756,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 15684,
											"end": 15756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15321,
											"end": 15763,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 15321,
											"end": 15763,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 15321,
											"end": 15763,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15321,
											"end": 15763,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15321,
											"end": 15763,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15321,
											"end": 15763,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15321,
											"end": 15763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15769,
											"end": 15949,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 15769,
											"end": 15949,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15817,
											"end": 15894,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15814,
											"end": 15815,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15807,
											"end": 15895,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15914,
											"end": 15918,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 15911,
											"end": 15912,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15904,
											"end": 15919,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15938,
											"end": 15942,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15935,
											"end": 15936,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15928,
											"end": 15943,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 15955,
											"end": 16146,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 15955,
											"end": 16146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15995,
											"end": 15998,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16014,
											"end": 16034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 16032,
											"end": 16033,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16014,
											"end": 16034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 16014,
											"end": 16034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16014,
											"end": 16034,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 16014,
											"end": 16034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16009,
											"end": 16034,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16009,
											"end": 16034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16048,
											"end": 16068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 16066,
											"end": 16067,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16048,
											"end": 16068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 16048,
											"end": 16068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16048,
											"end": 16068,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 16048,
											"end": 16068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16043,
											"end": 16068,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16043,
											"end": 16068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16091,
											"end": 16092,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16088,
											"end": 16089,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16084,
											"end": 16093,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16093,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16112,
											"end": 16115,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16109,
											"end": 16110,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16106,
											"end": 16116,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16103,
											"end": 16139,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16103,
											"end": 16139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 16103,
											"end": 16139,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16119,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 16119,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 16119,
											"end": 16137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16119,
											"end": 16137,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 16119,
											"end": 16137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16103,
											"end": 16139,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 16103,
											"end": 16139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15955,
											"end": 16146,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15955,
											"end": 16146,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15955,
											"end": 16146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15955,
											"end": 16146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15955,
											"end": 16146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/token factory/CustomToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"imageURL()": "b90497e0",
							"initialize(string,string)": "4cd88b76",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setImageURL(string)": "58e792ee",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"imageURL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_imageURL\",\"type\":\"string\"}],\"name\":\"setImageURL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token factory/CustomToken.sol\":\"CustomToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x4ce6e9f30dba5ae30f26321dc851b669caf3f953f8c832304d05df2a523f1af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb24de66bbfa42093a20d448cb2564655525cba0342035a42a37654e5d922deb\",\"dweb:/ipfs/QmYgnFHamrgy5qurrxVLR1qDb7MirvGEoxCVwqiF1YvDMf\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/token factory/CustomToken.sol\":{\"keccak256\":\"0x30dbc416bdf2dabb4893e6fa2f27b1c19d6744e3f1ebfdec0f8272b4fe82be4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0e8f50296bad4367a365de9976a2cacbe36908b4f457226cc9fb1a4521bf593\",\"dweb:/ipfs/QmZ5p75TqSbyQzbakbYbdQvdBWeiKSBAtzFQrLSRKVk7tJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/token factory/CustomToken.sol:CustomToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/token factory/CustomToken.sol:CustomToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/token factory/CustomToken.sol:CustomToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/token factory/CustomToken.sol:CustomToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/token factory/CustomToken.sol:CustomToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/token factory/CustomToken.sol:CustomToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 943,
								"contract": "contracts/token factory/CustomToken.sol:CustomToken",
								"label": "_customName",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 945,
								"contract": "contracts/token factory/CustomToken.sol:CustomToken",
								"label": "_customSymbol",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							},
							{
								"astId": 947,
								"contract": "contracts/token factory/CustomToken.sol:CustomToken",
								"label": "initialized",
								"offset": 0,
								"slot": "8",
								"type": "t_bool"
							},
							{
								"astId": 949,
								"contract": "contracts/token factory/CustomToken.sol:CustomToken",
								"label": "imageURL",
								"offset": 0,
								"slot": "9",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> contracts/token factory/CustomToken.sol:16:25:\n   |\n16 |     function initialize(string memory name, string memory symbol) external {\n   |                         ^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/token factory/CustomToken.sol:24:5:\n   |\n24 |     function name() public view override returns (string memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 923,
						"file": "contracts/token factory/CustomToken.sol",
						"message": "The shadowed declaration is here:",
						"start": 827
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 563,
					"file": "contracts/token factory/CustomToken.sol",
					"start": 545
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> contracts/token factory/CustomToken.sol:16:45:\n   |\n16 |     function initialize(string memory name, string memory symbol) external {\n   |                                             ^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/token factory/CustomToken.sol:28:5:\n   |\n28 |     function symbol() public view override returns (string memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 1029,
						"file": "contracts/token factory/CustomToken.sol",
						"message": "The shadowed declaration is here:",
						"start": 929
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 585,
					"file": "contracts/token factory/CustomToken.sol",
					"start": 565
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/token factory/CustomToken.sol": {
				"ast": {
					"absolutePath": "contracts/token factory/CustomToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"CustomToken": [
							1033
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						]
					},
					"id": 1034,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1034,
							"sourceUnit": 800,
							"src": "58:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1034,
							"sourceUnit": 148,
							"src": "114:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"192:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "192:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "192:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"199:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "199:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "199:7:6"
								}
							],
							"canonicalName": "CustomToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1033,
							"linearizedBaseContracts": [
								1033,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "CustomToken",
							"nameLocation": "177:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 943,
									"mutability": "mutable",
									"name": "_customName",
									"nameLocation": "228:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "213:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 942,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "213:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 945,
									"mutability": "mutable",
									"name": "_customSymbol",
									"nameLocation": "260:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "245:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 944,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "245:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 947,
									"mutability": "mutable",
									"name": "initialized",
									"nameLocation": "292:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "279:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 946,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "279:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "b90497e0",
									"id": 949,
									"mutability": "mutable",
									"name": "imageURL",
									"nameLocation": "323:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "309:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 948,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "309:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "426:2:6",
										"statements": []
									},
									"id": 961,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "",
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "398:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												{
													"hexValue": "",
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "402:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												}
											],
											"id": 954,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 951,
												"name": "ERC20",
												"nameLocations": [
													"392:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "392:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "392:13:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 956,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "414:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "418:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "414:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 958,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 955,
												"name": "Ownable",
												"nameLocations": [
													"406:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "406:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "406:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "389:2:6"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "426:0:6"
									},
									"scope": 1033,
									"src": "378:50:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "596:155:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "614:12:6",
															"subExpression": {
																"id": 969,
																"name": "initialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "615:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616c726561647920696e697469616c697a6564",
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "628:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91f9a36ded9df16899312719ead5ef5c9633419e1e5ccb00e0ab9b2c948c2b2b",
																"typeString": "literal_string \"Token already initialized\""
															},
															"value": "Token already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91f9a36ded9df16899312719ead5ef5c9633419e1e5ccb00e0ab9b2c948c2b2b",
																"typeString": "literal_string \"Token already initialized\""
															}
														],
														"id": 968,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "606:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "606:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "606:50:6"
											},
											{
												"expression": {
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 974,
														"name": "_customName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "666:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 975,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "680:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "666:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "666:18:6"
											},
											{
												"expression": {
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 978,
														"name": "_customSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "694:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 979,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "710:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "694:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "694:22:6"
											},
											{
												"expression": {
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 982,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "726:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "740:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "726:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "726:18:6"
											}
										]
									},
									"functionSelector": "4cd88b76",
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "534:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "545:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 962,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "545:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "579:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "565:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 964,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:42:6"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "596:0:6"
									},
									"scope": 1033,
									"src": "525:226:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "888:35:6",
										"statements": [
											{
												"expression": {
													"id": 993,
													"name": "_customName",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 943,
													"src": "905:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 992,
												"id": 994,
												"nodeType": "Return",
												"src": "898:18:6"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "836:4:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 989,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "855:8:6"
									},
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "840:2:6"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "873:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 990,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "873:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "872:15:6"
									},
									"scope": 1033,
									"src": "827:96:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										354
									],
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "992:37:6",
										"statements": [
											{
												"expression": {
													"id": 1002,
													"name": "_customSymbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 945,
													"src": "1009:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1001,
												"id": 1003,
												"nodeType": "Return",
												"src": "1002:20:6"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "938:6:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 998,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "959:8:6"
									},
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "944:2:6"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "977:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 999,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "977:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:15:6"
									},
									"scope": 1033,
									"src": "929:100:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "1159:34:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1015,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "1175:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1016,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "1179:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1014,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1169:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1169:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "1169:17:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1012,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1011,
												"name": "onlyOwner",
												"nameLocations": [
													"1149:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1149:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "1107:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1120:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1112:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1132:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1124:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:28:6"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1159:0:6"
									},
									"scope": 1033,
									"src": "1098:95:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "1330:37:6",
										"statements": [
											{
												"expression": {
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1027,
														"name": "imageURL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "1340:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1028,
														"name": "_imageURL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "1351:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1340:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "1340:20:6"
											}
										]
									},
									"functionSelector": "58e792ee",
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1025,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1024,
												"name": "onlyOwner",
												"nameLocations": [
													"1320:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1320:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1320:9:6"
										}
									],
									"name": "setImageURL",
									"nameLocation": "1274:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "_imageURL",
												"nameLocation": "1300:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "1286:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1021,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1286:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1285:25:6"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1330:0:6"
									},
									"scope": 1033,
									"src": "1265:102:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1034,
							"src": "168:1201:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "32:1338:6"
				},
				"id": 6
			}
		}
	}
}