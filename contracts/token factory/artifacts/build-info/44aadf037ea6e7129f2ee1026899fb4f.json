{
	"id": "44aadf037ea6e7129f2ee1026899fb4f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/token factory/LiquidityPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\ncontract LiquidityPool is ReentrancyGuard {\n    address public token0; // Adresse du token ERC20\n    address public tokenFactory; // Adresse du contrat TokenFactory\n    uint256 public reserve0; // Réserve de tokens ERC20\n    uint256 public reserve1; // Réserve de la cryptomonnaie native (par exemple, Ether)\n    uint256 public buyTax = 0; // Taxe d'achat en millièmes (par défaut 0%)\n    uint256 public sellTax = 10; // Taxe de vente en millièmes (par défaut 1%)\n    address public devAddress; // Adresse dédiée pour recevoir les taxes\n    uint256 public penaltyThreshold = 200; // Seuil de 20% (200/1000) pour appliquer la pénalité\n    bool public penaltiesEnabled = false; // Indique si les pénalités sont activées\n\n    modifier onlyFactory() {\n        require(msg.sender == tokenFactory, \"Caller is not the TokenFactory\");\n        _;\n    }\n\n    event BuyToken(address indexed buyer, uint256 etherAmount, uint256 tokenAmount);\n    event SellToken(address indexed seller, uint256 tokenAmount, uint256 etherAmount);\n    event LiquidityAdded(address indexed provider, uint256 amountToken, uint256 amountNative);\n    event BuyTaxUpdated(uint256 newBuyTax);\n    event SellTaxUpdated(uint256 newSellTax);\n    event PenaltyApplied(address indexed trader, uint256 penaltyAmount, uint256 newAmountOut);\n    event PenaltiesStatusUpdated(bool enabled);\n\n    constructor(address _devAddress, address _tokenFactory) {\n        require(_devAddress != address(0), \"Developer address cannot be zero address\");\n        require(_tokenFactory != address(0), \"TokenFactory address cannot be zero address\");\n        devAddress = _devAddress;\n        tokenFactory = _tokenFactory;\n    }\n\n    /// @notice Initialise la pool avec des réserves et les taxes par défaut\n    function initialize(\n        address _token0,\n        uint256 _initialTokenReserve\n    ) external payable nonReentrant onlyFactory {\n        require(token0 == address(0), \"Pool already initialized\");\n        require(msg.value > 0, \"Initial native token amount must be greater than zero\");\n\n        token0 = _token0;\n        reserve0 = _initialTokenReserve;\n        reserve1 = msg.value;\n\n        emit LiquidityAdded(msg.sender, _initialTokenReserve, msg.value);\n    }\n\n    /// @notice Mise à jour de la taxe d'achat\n    function updateBuyTax(uint256 newBuyTax) external onlyFactory {\n        require(newBuyTax + sellTax <= 50, \"Total tax cannot exceed 5%\");\n        buyTax = newBuyTax;\n        emit BuyTaxUpdated(newBuyTax);\n    }\n\n    /// @notice Mise à jour de la taxe de vente\n    function updateSellTax(uint256 newSellTax) external onlyFactory {\n        require(buyTax + newSellTax <= 50, \"Total tax cannot exceed 5%\");\n        sellTax = newSellTax;\n        emit SellTaxUpdated(newSellTax);\n    }\n\n    /// @notice Achat de tokens avec de l'Ether\n    function buyToken() external payable nonReentrant returns (uint256 amountOut) {\n        require(msg.value > 0, \"Must send Ether to buy tokens\");\n\n        uint256 tax = (msg.value * buyTax) / 1000;\n        uint256 amountInAfterTax = msg.value - tax;\n\n        (bool taxSent, ) = devAddress.call{value: tax}(\"\");\n        require(taxSent, \"Failed to send tax to dev address\");\n\n        uint256 newReserve1 = reserve1 + amountInAfterTax;\n        amountOut = reserve0 - (reserve0 * reserve1) / newReserve1;\n\n        reserve1 = newReserve1;\n        reserve0 -= amountOut;\n\n        IERC20(token0).transfer(msg.sender, amountOut);\n\n        emit BuyToken(msg.sender, msg.value, amountOut);\n    }\n\n    /// @notice Vente de tokens pour de l'Ether\n    function sellToken(uint256 amountIn) external nonReentrant returns (uint256 amountOut) {\n        require(amountIn > 0, \"Must sell some tokens\");\n\n        uint256 tax = (amountIn * sellTax) / 1000;\n        uint256 amountInAfterTax = amountIn - tax;\n\n        IERC20(token0).transferFrom(msg.sender, address(this), amountIn);\n        IERC20(token0).transfer(devAddress, tax);\n\n        uint256 newReserve0 = reserve0 + amountInAfterTax;\n        amountOut = reserve1 - (reserve0 * reserve1) / newReserve0;\n\n        reserve0 = newReserve0;\n        reserve1 -= amountOut;\n\n        (bool success, ) = msg.sender.call{value: amountOut}(\"\");\n        require(success, \"Ether transfer failed\");\n\n        emit SellToken(msg.sender, amountIn, amountOut);\n    }\n\n    /// @notice Calcule le prix des tokens pour un montant donné en Ether\n    function calculatePriceForTokens(uint256 etherAmount) public view returns (uint256 tokenAmount) {\n        uint256 amountInAfterTax = etherAmount - (etherAmount * buyTax) / 1000;\n        uint256 newReserve1 = reserve1 + amountInAfterTax;\n        tokenAmount = reserve0 - (reserve0 * reserve1) / newReserve1;\n    }\n\n    /// @notice Calcule le prix de l'Ether pour un nombre donné de tokens\n    function calculatePriceForEther(uint256 tokenAmount) public view returns (uint256 etherAmount) {\n        uint256 amountInAfterTax = tokenAmount - (tokenAmount * sellTax) / 1000;\n        uint256 newReserve0 = reserve0 + amountInAfterTax;\n        etherAmount = reserve1 - (reserve0 * reserve1) / newReserve0;\n    }\n\n    /// @notice Active ou désactive les pénalités\n    function togglePenalties(bool enable) external onlyFactory {\n        penaltiesEnabled = enable;\n        emit PenaltiesStatusUpdated(enable);\n    }\n\n    /// @notice Calcule la pénalité pour une vente importante\n    function calculatePenalty(uint256 amountIn) public view returns (uint256 penaltyAmount, uint256 penaltyPercentage) {\n        uint256 circulatingSupply = IERC20(token0).totalSupply();\n        uint256 sellPercentage = (amountIn * 1000) / circulatingSupply;\n\n        if (penaltiesEnabled && sellPercentage > penaltyThreshold) {\n            penaltyPercentage = sellPercentage - penaltyThreshold;\n            penaltyAmount = (penaltyPercentage * amountIn) / 1000;\n        } else {\n            penaltyAmount = 0;\n            penaltyPercentage = 0;\n        }\n\n        return (penaltyAmount, penaltyPercentage);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x4ce6e9f30dba5ae30f26321dc851b669caf3f953f8c832304d05df2a523f1af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb24de66bbfa42093a20d448cb2564655525cba0342035a42a37654e5d922deb\",\"dweb:/ipfs/QmYgnFHamrgy5qurrxVLR1qDb7MirvGEoxCVwqiF1YvDMf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 88,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token factory/LiquidityPool.sol": {
				"LiquidityPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_devAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenFactory",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBuyTax",
									"type": "uint256"
								}
							],
							"name": "BuyTaxUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "etherAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "BuyToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountNative",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								}
							],
							"name": "PenaltiesStatusUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "trader",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "penaltyAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAmountOut",
									"type": "uint256"
								}
							],
							"name": "PenaltyApplied",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newSellTax",
									"type": "uint256"
								}
							],
							"name": "SellTaxUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "etherAmount",
									"type": "uint256"
								}
							],
							"name": "SellToken",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "buyTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "calculatePenalty",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "penaltyAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "penaltyPercentage",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "calculatePriceForEther",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "etherAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "etherAmount",
									"type": "uint256"
								}
							],
							"name": "calculatePriceForTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "devAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_initialTokenReserve",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "penaltiesEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "penaltyThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "sellToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "enable",
									"type": "bool"
								}
							],
							"name": "togglePenalties",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newBuyTax",
									"type": "uint256"
								}
							],
							"name": "updateBuyTax",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newSellTax",
									"type": "uint256"
								}
							],
							"name": "updateSellTax",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/token factory/LiquidityPool.sol\":176:6153  contract LiquidityPool is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/token factory/LiquidityPool.sol\":515:516  0 */\n  0x00\n    /* \"contracts/token factory/LiquidityPool.sol\":491:516  uint256 public buyTax = 0 */\n  0x05\n  sstore\n    /* \"contracts/token factory/LiquidityPool.sol\":594:596  10 */\n  0x0a\n    /* \"contracts/token factory/LiquidityPool.sol\":569:596  uint256 public sellTax = 10 */\n  0x06\n  sstore\n    /* \"contracts/token factory/LiquidityPool.sol\":759:762  200 */\n  0xc8\n    /* \"contracts/token factory/LiquidityPool.sol\":725:762  uint256 public penaltyThreshold = 200 */\n  0x08\n  sstore\n    /* \"contracts/token factory/LiquidityPool.sol\":824:860  bool public penaltiesEnabled = false */\n  0x09\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"contracts/token factory/LiquidityPool.sol\":1539:1855  constructor(address _devAddress, address _tokenFactory) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2068  _status */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/token factory/LiquidityPool.sol\":1613:1638  _devAddress != address(0) */\n  dup3\n  and\n    /* \"contracts/token factory/LiquidityPool.sol\":1605:1683  require(_devAddress != address(0), \"Developer address cannot be zero address\") */\n  tag_8\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":696:698   */\n  0x20\n    /* \"contracts/token factory/LiquidityPool.sol\":1605:1683  require(_devAddress != address(0), \"Developer address cannot be zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":678:699   */\n  mstore\n    /* \"#utility.yul\":735:737   */\n  0x28\n    /* \"#utility.yul\":715:733   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":708:738   */\n  mstore\n    /* \"#utility.yul\":774:808   */\n  0x446576656c6f70657220616464726573732063616e6e6f74206265207a65726f\n    /* \"#utility.yul\":754:772   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":747:809   */\n  mstore\n  shl(0xc0, 0x2061646472657373)\n    /* \"#utility.yul\":825:843   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":818:856   */\n  mstore\n    /* \"#utility.yul\":873:892   */\n  0x84\n  add\n    /* \"contracts/token factory/LiquidityPool.sol\":1605:1683  require(_devAddress != address(0), \"Developer address cannot be zero address\") */\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/token factory/LiquidityPool.sol\":1701:1728  _tokenFactory != address(0) */\n  dup2\n  and\n    /* \"contracts/token factory/LiquidityPool.sol\":1693:1776  require(_tokenFactory != address(0), \"TokenFactory address cannot be zero address\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1105:1107   */\n  0x20\n    /* \"contracts/token factory/LiquidityPool.sol\":1693:1776  require(_tokenFactory != address(0), \"TokenFactory address cannot be zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1087:1108   */\n  mstore\n    /* \"#utility.yul\":1144:1146   */\n  0x2b\n    /* \"#utility.yul\":1124:1142   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1117:1147   */\n  mstore\n    /* \"#utility.yul\":1183:1217   */\n  0x546f6b656e466163746f727920616464726573732063616e6e6f74206265207a\n    /* \"#utility.yul\":1163:1181   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1156:1218   */\n  mstore\n  shl(0xa8, 0x65726f2061646472657373)\n    /* \"#utility.yul\":1234:1252   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1227:1268   */\n  mstore\n    /* \"#utility.yul\":1285:1304   */\n  0x84\n  add\n    /* \"contracts/token factory/LiquidityPool.sol\":1693:1776  require(_tokenFactory != address(0), \"TokenFactory address cannot be zero address\") */\n  tag_9\n    /* \"#utility.yul\":903:1310   */\n  jump\n    /* \"contracts/token factory/LiquidityPool.sol\":1693:1776  require(_tokenFactory != address(0), \"TokenFactory address cannot be zero address\") */\ntag_11:\n    /* \"contracts/token factory/LiquidityPool.sol\":1786:1796  devAddress */\n  0x07\n    /* \"contracts/token factory/LiquidityPool.sol\":1786:1810  devAddress = _devAddress */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/token factory/LiquidityPool.sol\":1820:1832  tokenFactory */\n  0x02\n    /* \"contracts/token factory/LiquidityPool.sol\":1820:1848  tokenFactory = _tokenFactory */\n  dup1\n  sload\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/token factory/LiquidityPool.sol\":176:6153  contract LiquidityPool is ReentrancyGuard {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:191   */\ntag_15:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_18:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_20:\n    /* \"#utility.yul\":375:415   */\n  tag_21\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_22\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_15\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":903:1310   */\ntag_16:\n    /* \"contracts/token factory/LiquidityPool.sol\":176:6153  contract LiquidityPool is ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/token factory/LiquidityPool.sol\":176:6153  contract LiquidityPool is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4f7041a5\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xaac8e6a4\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xaac8e6a4\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc91e5149\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xcc1776d3\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xcd6dc687\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe77772fe\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x4f7041a5\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5a76f25e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x88e22f7f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa4821719\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x3ad10ef6\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x3ad10ef6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x436d3340\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x443cb4bc\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x465fa408\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4ecce451\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x0dfe1681\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x12185a39\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2397e4d7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23e18ddd\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/token factory/LiquidityPool.sol\":224:245  address public token0 */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      sload(0x01)\n      tag_24\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_24:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/token factory/LiquidityPool.sol\":224:245  address public token0 */\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token factory/LiquidityPool.sol\":2726:2942  function updateSellTax(uint256 newSellTax) external onlyFactory {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/token factory/LiquidityPool.sol\":3735:4481  function sellToken(uint256 amountIn) external nonReentrant returns (uint256 amountOut) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":599:624   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":587:589   */\n      0x20\n        /* \"#utility.yul\":572:590   */\n      add\n        /* \"contracts/token factory/LiquidityPool.sol\":3735:4481  function sellToken(uint256 amountIn) external nonReentrant returns (uint256 amountOut) {... */\n      tag_26\n        /* \"#utility.yul\":453:630   */\n      jump\n        /* \"contracts/token factory/LiquidityPool.sol\":5326:5472  function togglePenalties(bool enable) external onlyFactory {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_29\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"contracts/token factory/LiquidityPool.sol\":650:675  address public devAddress */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      sload(0x07)\n      tag_24\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/token factory/LiquidityPool.sol\":2461:2671  function updateBuyTax(uint256 newBuyTax) external onlyFactory {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_29\n      tag_50\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"contracts/token factory/LiquidityPool.sol\":345:368  uint256 public reserve0 */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_34\n      sload(0x03)\n      dup2\n      jump\n        /* \"contracts/token factory/LiquidityPool.sol\":4562:4874  function calculatePriceForTokens(uint256 etherAmount) public view returns (uint256 tokenAmount) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_34\n      tag_58\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n        /* \"contracts/token factory/LiquidityPool.sol\":5542:6151  function calculatePenalty(uint256 amountIn) public view returns (uint256 penaltyAmount, uint256 penaltyPercentage) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1178:1203   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1234:1236   */\n      0x20\n        /* \"#utility.yul\":1219:1237   */\n      dup4\n      add\n        /* \"#utility.yul\":1212:1246   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1151:1169   */\n      add\n        /* \"contracts/token factory/LiquidityPool.sol\":5542:6151  function calculatePenalty(uint256 amountIn) public view returns (uint256 penaltyAmount, uint256 penaltyPercentage) {... */\n      tag_26\n        /* \"#utility.yul\":1004:1252   */\n      jump\n        /* \"contracts/token factory/LiquidityPool.sol\":491:516  uint256 public buyTax = 0 */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_34\n      sload(0x05)\n      dup2\n      jump\n        /* \"contracts/token factory/LiquidityPool.sol\":402:425  uint256 public reserve1 */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_34\n      sload(0x04)\n      dup2\n      jump\n        /* \"contracts/token factory/LiquidityPool.sol\":824:860  bool public penaltiesEnabled = false */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      sload(0x09)\n      tag_76\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_76:\n      mload(0x40)\n        /* \"#utility.yul\":1422:1436   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1415:1437   */\n      iszero\n        /* \"#utility.yul\":1397:1438   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1385:1387   */\n      0x20\n        /* \"#utility.yul\":1370:1388   */\n      add\n        /* \"contracts/token factory/LiquidityPool.sol\":824:860  bool public penaltiesEnabled = false */\n      tag_26\n        /* \"#utility.yul\":1257:1444   */\n      jump\n        /* \"contracts/token factory/LiquidityPool.sol\":2996:3681  function buyToken() external payable nonReentrant returns (uint256 amountOut) {... */\n    tag_14:\n      tag_34\n      tag_81\n      jump\t// in\n        /* \"contracts/token factory/LiquidityPool.sol\":4955:5267  function calculatePriceForEther(uint256 tokenAmount) public view returns (uint256 etherAmount) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_34\n      tag_85\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"contracts/token factory/LiquidityPool.sol\":725:762  uint256 public penaltyThreshold = 200 */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_34\n      sload(0x08)\n      dup2\n      jump\n        /* \"contracts/token factory/LiquidityPool.sol\":569:596  uint256 public sellTax = 10 */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_34\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/token factory/LiquidityPool.sol\":1940:2407  function initialize(... */\n    tag_18:\n      tag_29\n      tag_97\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n        /* \"contracts/token factory/LiquidityPool.sol\":277:304  address public tokenFactory */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      sload(0x02)\n      tag_24\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/token factory/LiquidityPool.sol\":2726:2942  function updateSellTax(uint256 newSellTax) external onlyFactory {... */\n    tag_32:\n        /* \"contracts/token factory/LiquidityPool.sol\":967:979  tokenFactory */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/token factory/LiquidityPool.sol\":953:963  msg.sender */\n      caller\n        /* \"contracts/token factory/LiquidityPool.sol\":953:979  msg.sender == tokenFactory */\n      eq\n        /* \"contracts/token factory/LiquidityPool.sol\":945:1014  require(msg.sender == tokenFactory, \"Caller is not the TokenFactory\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"contracts/token factory/LiquidityPool.sol\":2831:2833  50 */\n      0x32\n        /* \"contracts/token factory/LiquidityPool.sol\":2817:2827  newSellTax */\n      dup2\n        /* \"contracts/token factory/LiquidityPool.sol\":2808:2814  buyTax */\n      sload(0x05)\n        /* \"contracts/token factory/LiquidityPool.sol\":2808:2827  buyTax + newSellTax */\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"contracts/token factory/LiquidityPool.sol\":2808:2833  buyTax + newSellTax <= 50 */\n      gt\n      iszero\n        /* \"contracts/token factory/LiquidityPool.sol\":2800:2864  require(buyTax + newSellTax <= 50, \"Total tax cannot exceed 5%\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2683:2685   */\n      0x20\n        /* \"contracts/token factory/LiquidityPool.sol\":2800:2864  require(buyTax + newSellTax <= 50, \"Total tax cannot exceed 5%\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2665:2686   */\n      mstore\n        /* \"#utility.yul\":2722:2724   */\n      0x1a\n        /* \"#utility.yul\":2702:2720   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2695:2725   */\n      mstore\n        /* \"#utility.yul\":2761:2789   */\n      0x546f74616c207461782063616e6e6f7420657863656564203525000000000000\n        /* \"#utility.yul\":2741:2759   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2734:2790   */\n      mstore\n        /* \"#utility.yul\":2807:2825   */\n      0x64\n      add\n        /* \"contracts/token factory/LiquidityPool.sol\":2800:2864  require(buyTax + newSellTax <= 50, \"Total tax cannot exceed 5%\") */\n      tag_106\n        /* \"#utility.yul\":2481:2831   */\n      jump\n        /* \"contracts/token factory/LiquidityPool.sol\":2800:2864  require(buyTax + newSellTax <= 50, \"Total tax cannot exceed 5%\") */\n    tag_111:\n        /* \"contracts/token factory/LiquidityPool.sol\":2874:2881  sellTax */\n      0x06\n        /* \"contracts/token factory/LiquidityPool.sol\":2874:2894  sellTax = newSellTax */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/token factory/LiquidityPool.sol\":2909:2935  SellTaxUpdated(newSellTax) */\n      mload(0x40)\n        /* \"#utility.yul\":599:624   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/token factory/LiquidityPool.sol\":2909:2935  SellTaxUpdated(newSellTax) */\n      0xa6255338a5f732d64ceba7f4c18182567f9d1067eb984b46d478b37d72a52d11\n      swap1\n        /* \"#utility.yul\":587:589   */\n      0x20\n        /* \"#utility.yul\":572:590   */\n      add\n        /* \"contracts/token factory/LiquidityPool.sol\":2909:2935  SellTaxUpdated(newSellTax) */\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/token factory/LiquidityPool.sol\":2726:2942  function updateSellTax(uint256 newSellTax) external onlyFactory {... */\n      pop\n      jump\t// out\n        /* \"contracts/token factory/LiquidityPool.sol\":3735:4481  function sellToken(uint256 amountIn) external nonReentrant returns (uint256 amountOut) {... */\n    tag_36:\n        /* \"contracts/token factory/LiquidityPool.sol\":3803:3820  uint256 amountOut */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_116\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_117\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_116:\n        /* \"contracts/token factory/LiquidityPool.sol\":3851:3852  0 */\n      0x00\n        /* \"contracts/token factory/LiquidityPool.sol\":3840:3848  amountIn */\n      dup3\n        /* \"contracts/token factory/LiquidityPool.sol\":3840:3852  amountIn > 0 */\n      gt\n        /* \"contracts/token factory/LiquidityPool.sol\":3832:3878  require(amountIn > 0, \"Must sell some tokens\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3038:3040   */\n      0x20\n        /* \"contracts/token factory/LiquidityPool.sol\":3832:3878  require(amountIn > 0, \"Must sell some tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3020:3041   */\n      mstore\n        /* \"#utility.yul\":3077:3079   */\n      0x15\n        /* \"#utility.yul\":3057:3075   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3050:3080   */\n      mstore\n      shl(0x58, 0x4d7573742073656c6c20736f6d6520746f6b656e73)\n        /* \"#utility.yul\":3096:3114   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3089:3140   */\n      mstore\n        /* \"#utility.yul\":3157:3175   */\n      0x64\n      add\n        /* \"contracts/token factory/LiquidityPool.sol\":3832:3878  require(amountIn > 0, \"Must sell some tokens\") */\n      tag_106\n        /* \"#utility.yul\":2836:3181   */\n      jump\n        /* \"contracts/token factory/LiquidityPool.sol\":3832:3878  require(amountIn > 0, \"Must sell some tokens\") */\n    tag_119:\n        /* \"contracts/token factory/LiquidityPool.sol\":3889:3900  uint256 tax */\n      0x00\n        /* \"contracts/token factory/LiquidityPool.sol\":3926:3930  1000 */\n      0x03e8\n        /* \"contracts/token factory/LiquidityPool.sol\":3915:3922  sellTax */\n      sload(0x06)\n        /* \"contracts/token factory/LiquidityPool.sol\":3904:3912  amountIn */\n      dup5\n        /* \"contracts/token factory/LiquidityPool.sol\":3904:3922  amountIn * sellTax */\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"contracts/token factory/LiquidityPool.sol\":3903:3930  (amountIn * sellTax) / 1000 */\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"contracts/token factory/LiquidityPool.sol\":3889:3930  uint256 tax = (amountIn * sellTax) / 1000 */\n      swap1\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":3940:3964  uint256 amountInAfterTax */\n      0x00\n        /* \"contracts/token factory/LiquidityPool.sol\":3967:3981  amountIn - tax */\n      tag_126\n        /* \"contracts/token factory/LiquidityPool.sol\":3889:3930  uint256 tax = (amountIn * sellTax) / 1000 */\n      dup3\n        /* \"contracts/token factory/LiquidityPool.sol\":3967:3975  amountIn */\n      dup6\n        /* \"contracts/token factory/LiquidityPool.sol\":3967:3981  amountIn - tax */\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"contracts/token factory/LiquidityPool.sol\":3999:4005  token0 */\n      sload(0x01)\n        /* \"contracts/token factory/LiquidityPool.sol\":3992:4056  IERC20(token0).transferFrom(msg.sender, address(this), amountIn) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/token factory/LiquidityPool.sol\":4020:4030  msg.sender */\n      caller\n        /* \"contracts/token factory/LiquidityPool.sol\":3992:4056  IERC20(token0).transferFrom(msg.sender, address(this), amountIn) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3916:3967   */\n      mstore\n        /* \"contracts/token factory/LiquidityPool.sol\":4040:4044  this */\n      address\n        /* \"#utility.yul\":3983:4001   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3976:4036   */\n      mstore\n        /* \"#utility.yul\":4052:4070   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4045:4079   */\n      dup8\n      swap1\n      mstore\n        /* \"contracts/token factory/LiquidityPool.sol\":3940:3981  uint256 amountInAfterTax = amountIn - tax */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/LiquidityPool.sol\":3999:4005  token0 */\n      and\n      swap1\n        /* \"contracts/token factory/LiquidityPool.sol\":3992:4019  IERC20(token0).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":3889:3907   */\n      0x64\n      add\n        /* \"contracts/token factory/LiquidityPool.sol\":3992:4056  IERC20(token0).transferFrom(msg.sender, address(this), amountIn) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":4073:4079  token0 */\n      sload(0x01)\n        /* \"contracts/token factory/LiquidityPool.sol\":4090:4100  devAddress */\n      sload(0x07)\n        /* \"contracts/token factory/LiquidityPool.sol\":4066:4106  IERC20(token0).transfer(devAddress, tax) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/LiquidityPool.sol\":4090:4100  devAddress */\n      swap2\n      dup3\n      and\n        /* \"contracts/token factory/LiquidityPool.sol\":4066:4106  IERC20(token0).transfer(devAddress, tax) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4514:4565   */\n      mstore\n        /* \"#utility.yul\":4581:4599   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4574:4608   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/token factory/LiquidityPool.sol\":4073:4079  token0 */\n      swap2\n      and\n      swap1\n        /* \"contracts/token factory/LiquidityPool.sol\":4066:4089  IERC20(token0).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4487:4505   */\n      0x44\n      add\n        /* \"contracts/token factory/LiquidityPool.sol\":4066:4106  IERC20(token0).transfer(devAddress, tax) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_138:\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":4117:4136  uint256 newReserve0 */\n      0x00\n        /* \"contracts/token factory/LiquidityPool.sol\":4150:4166  amountInAfterTax */\n      dup2\n        /* \"contracts/token factory/LiquidityPool.sol\":4139:4147  reserve0 */\n      sload(0x03)\n        /* \"contracts/token factory/LiquidityPool.sol\":4139:4166  reserve0 + amountInAfterTax */\n      tag_139\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_139:\n        /* \"contracts/token factory/LiquidityPool.sol\":4117:4166  uint256 newReserve0 = reserve0 + amountInAfterTax */\n      swap1\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":4223:4234  newReserve0 */\n      dup1\n        /* \"contracts/token factory/LiquidityPool.sol\":4211:4219  reserve1 */\n      sload(0x04)\n        /* \"contracts/token factory/LiquidityPool.sol\":4200:4208  reserve0 */\n      sload(0x03)\n        /* \"contracts/token factory/LiquidityPool.sol\":4200:4219  reserve0 * reserve1 */\n      tag_140\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_140:\n        /* \"contracts/token factory/LiquidityPool.sol\":4199:4234  (reserve0 * reserve1) / newReserve0 */\n      tag_141\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_141:\n        /* \"contracts/token factory/LiquidityPool.sol\":4188:4196  reserve1 */\n      sload(0x04)\n        /* \"contracts/token factory/LiquidityPool.sol\":4188:4234  reserve1 - (reserve0 * reserve1) / newReserve0 */\n      tag_142\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_142:\n        /* \"contracts/token factory/LiquidityPool.sol\":4176:4234  amountOut = reserve1 - (reserve0 * reserve1) / newReserve0 */\n      swap4\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":4256:4267  newReserve0 */\n      dup1\n        /* \"contracts/token factory/LiquidityPool.sol\":4245:4253  reserve0 */\n      0x03\n        /* \"contracts/token factory/LiquidityPool.sol\":4245:4267  reserve0 = newReserve0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":4289:4298  amountOut */\n      dup4\n        /* \"contracts/token factory/LiquidityPool.sol\":4277:4285  reserve1 */\n      0x04\n      0x00\n        /* \"contracts/token factory/LiquidityPool.sol\":4277:4298  reserve1 -= amountOut */\n      dup3\n      dup3\n      sload\n      tag_143\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_143:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":4328:4365  msg.sender.call{value: amountOut}(\"\") */\n      mload(0x40)\n        /* \"contracts/token factory/LiquidityPool.sol\":4310:4322  bool success */\n      0x00\n      swap1\n        /* \"contracts/token factory/LiquidityPool.sol\":4328:4338  msg.sender */\n      caller\n      swap1\n        /* \"contracts/token factory/LiquidityPool.sol\":4351:4360  amountOut */\n      dup7\n      swap1\n        /* \"contracts/token factory/LiquidityPool.sol\":4310:4322  bool success */\n      dup4\n        /* \"contracts/token factory/LiquidityPool.sol\":4328:4365  msg.sender.call{value: amountOut}(\"\") */\n      dup2\n        /* \"contracts/token factory/LiquidityPool.sol\":4310:4322  bool success */\n      dup2\n        /* \"contracts/token factory/LiquidityPool.sol\":4328:4365  msg.sender.call{value: amountOut}(\"\") */\n      dup2\n        /* \"contracts/token factory/LiquidityPool.sol\":4351:4360  amountOut */\n      dup6\n        /* \"contracts/token factory/LiquidityPool.sol\":4328:4338  msg.sender */\n      dup8\n        /* \"contracts/token factory/LiquidityPool.sol\":4328:4365  msg.sender.call{value: amountOut}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_148\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_147)\n    tag_148:\n      0x60\n      swap2\n      pop\n    tag_147:\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":4309:4365  (bool success, ) = msg.sender.call{value: amountOut}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":4383:4390  success */\n      dup1\n        /* \"contracts/token factory/LiquidityPool.sol\":4375:4416  require(success, \"Ether transfer failed\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5031:5033   */\n      0x20\n        /* \"contracts/token factory/LiquidityPool.sol\":4375:4416  require(success, \"Ether transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5013:5034   */\n      mstore\n        /* \"#utility.yul\":5070:5072   */\n      0x15\n        /* \"#utility.yul\":5050:5068   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5043:5073   */\n      mstore\n      shl(0x5a, 0x115d1a195c881d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":5089:5107   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5082:5133   */\n      mstore\n        /* \"#utility.yul\":5150:5168   */\n      0x64\n      add\n        /* \"contracts/token factory/LiquidityPool.sol\":4375:4416  require(success, \"Ether transfer failed\") */\n      tag_106\n        /* \"#utility.yul\":4829:5174   */\n      jump\n        /* \"contracts/token factory/LiquidityPool.sol\":4375:4416  require(success, \"Ether transfer failed\") */\n    tag_149:\n        /* \"contracts/token factory/LiquidityPool.sol\":4432:4474  SellToken(msg.sender, amountIn, amountOut) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1178:1203   */\n      dup8\n      dup2\n      mstore\n        /* \"#utility.yul\":1234:1236   */\n      0x20\n        /* \"#utility.yul\":1219:1237   */\n      dup2\n      add\n        /* \"#utility.yul\":1212:1246   */\n      dup8\n      swap1\n      mstore\n        /* \"contracts/token factory/LiquidityPool.sol\":4442:4452  msg.sender */\n      caller\n      swap2\n        /* \"contracts/token factory/LiquidityPool.sol\":4432:4474  SellToken(msg.sender, amountIn, amountOut) */\n      0xa8ff15eb642b39da3ab82bb74a87b76cc3e1aef2b82b70bc2a35458386db29aa\n      swap2\n        /* \"#utility.yul\":1151:1169   */\n      add\n        /* \"contracts/token factory/LiquidityPool.sol\":4432:4474  SellToken(msg.sender, amountIn, amountOut) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/token factory/LiquidityPool.sol\":3822:4481  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_153\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3075  _status */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n    tag_153:\n        /* \"contracts/token factory/LiquidityPool.sol\":3735:4481  function sellToken(uint256 amountIn) external nonReentrant returns (uint256 amountOut) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/token factory/LiquidityPool.sol\":5326:5472  function togglePenalties(bool enable) external onlyFactory {... */\n    tag_43:\n        /* \"contracts/token factory/LiquidityPool.sol\":967:979  tokenFactory */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/token factory/LiquidityPool.sol\":953:963  msg.sender */\n      caller\n        /* \"contracts/token factory/LiquidityPool.sol\":953:979  msg.sender == tokenFactory */\n      eq\n        /* \"contracts/token factory/LiquidityPool.sol\":945:1014  require(msg.sender == tokenFactory, \"Caller is not the TokenFactory\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_156:\n        /* \"contracts/token factory/LiquidityPool.sol\":5395:5411  penaltiesEnabled */\n      0x09\n        /* \"contracts/token factory/LiquidityPool.sol\":5395:5420  penaltiesEnabled = enable */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup3\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/token factory/LiquidityPool.sol\":5435:5465  PenaltiesStatusUpdated(enable) */\n      mload(0x40)\n        /* \"#utility.yul\":1397:1438   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/token factory/LiquidityPool.sol\":5435:5465  PenaltiesStatusUpdated(enable) */\n      0xec615c5e0f8d777f63be66955c04b8f91b4a878f984f8e1b9afa7255e83f0ef3\n      swap1\n        /* \"#utility.yul\":1385:1387   */\n      0x20\n        /* \"#utility.yul\":1370:1388   */\n      add\n        /* \"contracts/token factory/LiquidityPool.sol\":5435:5465  PenaltiesStatusUpdated(enable) */\n      tag_114\n        /* \"#utility.yul\":1257:1444   */\n      jump\n        /* \"contracts/token factory/LiquidityPool.sol\":2461:2671  function updateBuyTax(uint256 newBuyTax) external onlyFactory {... */\n    tag_51:\n        /* \"contracts/token factory/LiquidityPool.sol\":967:979  tokenFactory */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/token factory/LiquidityPool.sol\":953:963  msg.sender */\n      caller\n        /* \"contracts/token factory/LiquidityPool.sol\":953:979  msg.sender == tokenFactory */\n      eq\n        /* \"contracts/token factory/LiquidityPool.sol\":945:1014  require(msg.sender == tokenFactory, \"Caller is not the TokenFactory\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_161:\n        /* \"contracts/token factory/LiquidityPool.sol\":2564:2566  50 */\n      0x32\n        /* \"contracts/token factory/LiquidityPool.sol\":2553:2560  sellTax */\n      sload(0x06)\n        /* \"contracts/token factory/LiquidityPool.sol\":2541:2550  newBuyTax */\n      dup3\n        /* \"contracts/token factory/LiquidityPool.sol\":2541:2560  newBuyTax + sellTax */\n      tag_164\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_164:\n        /* \"contracts/token factory/LiquidityPool.sol\":2541:2566  newBuyTax + sellTax <= 50 */\n      gt\n      iszero\n        /* \"contracts/token factory/LiquidityPool.sol\":2533:2597  require(newBuyTax + sellTax <= 50, \"Total tax cannot exceed 5%\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2683:2685   */\n      0x20\n        /* \"contracts/token factory/LiquidityPool.sol\":2533:2597  require(newBuyTax + sellTax <= 50, \"Total tax cannot exceed 5%\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2665:2686   */\n      mstore\n        /* \"#utility.yul\":2722:2724   */\n      0x1a\n        /* \"#utility.yul\":2702:2720   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2695:2725   */\n      mstore\n        /* \"#utility.yul\":2761:2789   */\n      0x546f74616c207461782063616e6e6f7420657863656564203525000000000000\n        /* \"#utility.yul\":2741:2759   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2734:2790   */\n      mstore\n        /* \"#utility.yul\":2807:2825   */\n      0x64\n      add\n        /* \"contracts/token factory/LiquidityPool.sol\":2533:2597  require(newBuyTax + sellTax <= 50, \"Total tax cannot exceed 5%\") */\n      tag_106\n        /* \"#utility.yul\":2481:2831   */\n      jump\n        /* \"contracts/token factory/LiquidityPool.sol\":2533:2597  require(newBuyTax + sellTax <= 50, \"Total tax cannot exceed 5%\") */\n    tag_165:\n        /* \"contracts/token factory/LiquidityPool.sol\":2607:2613  buyTax */\n      0x05\n        /* \"contracts/token factory/LiquidityPool.sol\":2607:2625  buyTax = newBuyTax */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/token factory/LiquidityPool.sol\":2640:2664  BuyTaxUpdated(newBuyTax) */\n      mload(0x40)\n        /* \"#utility.yul\":599:624   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/token factory/LiquidityPool.sol\":2640:2664  BuyTaxUpdated(newBuyTax) */\n      0x7a758dc8e99047b028278b3e2ff1416d8493a7aacee7a5dc30b6bf93270eccce\n      swap1\n        /* \"#utility.yul\":587:589   */\n      0x20\n        /* \"#utility.yul\":572:590   */\n      add\n        /* \"contracts/token factory/LiquidityPool.sol\":2640:2664  BuyTaxUpdated(newBuyTax) */\n      tag_114\n        /* \"#utility.yul\":453:630   */\n      jump\n        /* \"contracts/token factory/LiquidityPool.sol\":4562:4874  function calculatePriceForTokens(uint256 etherAmount) public view returns (uint256 tokenAmount) {... */\n    tag_59:\n        /* \"contracts/token factory/LiquidityPool.sol\":4637:4656  uint256 tokenAmount */\n      0x00\n        /* \"contracts/token factory/LiquidityPool.sol\":4668:4692  uint256 amountInAfterTax */\n      dup1\n        /* \"contracts/token factory/LiquidityPool.sol\":4734:4738  1000 */\n      0x03e8\n        /* \"contracts/token factory/LiquidityPool.sol\":4724:4730  buyTax */\n      sload(0x05)\n        /* \"contracts/token factory/LiquidityPool.sol\":4710:4721  etherAmount */\n      dup5\n        /* \"contracts/token factory/LiquidityPool.sol\":4710:4730  etherAmount * buyTax */\n      tag_169\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_169:\n        /* \"contracts/token factory/LiquidityPool.sol\":4709:4738  (etherAmount * buyTax) / 1000 */\n      tag_170\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_170:\n        /* \"contracts/token factory/LiquidityPool.sol\":4695:4738  etherAmount - (etherAmount * buyTax) / 1000 */\n      tag_171\n      swap1\n        /* \"contracts/token factory/LiquidityPool.sol\":4695:4706  etherAmount */\n      dup5\n        /* \"contracts/token factory/LiquidityPool.sol\":4695:4738  etherAmount - (etherAmount * buyTax) / 1000 */\n      tag_127\n      jump\t// in\n    tag_171:\n        /* \"contracts/token factory/LiquidityPool.sol\":4668:4738  uint256 amountInAfterTax = etherAmount - (etherAmount * buyTax) / 1000 */\n      swap1\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":4748:4767  uint256 newReserve1 */\n      0x00\n        /* \"contracts/token factory/LiquidityPool.sol\":4781:4797  amountInAfterTax */\n      dup2\n        /* \"contracts/token factory/LiquidityPool.sol\":4770:4778  reserve1 */\n      sload(0x04)\n        /* \"contracts/token factory/LiquidityPool.sol\":4770:4797  reserve1 + amountInAfterTax */\n      tag_172\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_172:\n        /* \"contracts/token factory/LiquidityPool.sol\":4748:4797  uint256 newReserve1 = reserve1 + amountInAfterTax */\n      swap1\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":4856:4867  newReserve1 */\n      dup1\n        /* \"contracts/token factory/LiquidityPool.sol\":4844:4852  reserve1 */\n      sload(0x04)\n        /* \"contracts/token factory/LiquidityPool.sol\":4833:4841  reserve0 */\n      sload(0x03)\n        /* \"contracts/token factory/LiquidityPool.sol\":4833:4852  reserve0 * reserve1 */\n      tag_173\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_173:\n        /* \"contracts/token factory/LiquidityPool.sol\":4832:4867  (reserve0 * reserve1) / newReserve1 */\n      tag_174\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_174:\n        /* \"contracts/token factory/LiquidityPool.sol\":4821:4829  reserve0 */\n      sload(0x03)\n        /* \"contracts/token factory/LiquidityPool.sol\":4821:4867  reserve0 - (reserve0 * reserve1) / newReserve1 */\n      tag_175\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_175:\n        /* \"contracts/token factory/LiquidityPool.sol\":4807:4867  tokenAmount = reserve0 - (reserve0 * reserve1) / newReserve1 */\n      swap5\n        /* \"contracts/token factory/LiquidityPool.sol\":4562:4874  function calculatePriceForTokens(uint256 etherAmount) public view returns (uint256 tokenAmount) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token factory/LiquidityPool.sol\":5542:6151  function calculatePenalty(uint256 amountIn) public view returns (uint256 penaltyAmount, uint256 penaltyPercentage) {... */\n    tag_64:\n        /* \"contracts/token factory/LiquidityPool.sol\":5607:5628  uint256 penaltyAmount */\n      0x00\n        /* \"contracts/token factory/LiquidityPool.sol\":5630:5655  uint256 penaltyPercentage */\n      dup1\n        /* \"contracts/token factory/LiquidityPool.sol\":5667:5692  uint256 circulatingSupply */\n      0x00\n        /* \"contracts/token factory/LiquidityPool.sol\":5702:5708  token0 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/LiquidityPool.sol\":5695:5721  IERC20(token0).totalSupply */\n      and\n      0x18160ddd\n        /* \"contracts/token factory/LiquidityPool.sol\":5695:5723  IERC20(token0).totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_179\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"contracts/token factory/LiquidityPool.sol\":5667:5723  uint256 circulatingSupply = IERC20(token0).totalSupply() */\n      swap1\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":5733:5755  uint256 sellPercentage */\n      0x00\n        /* \"contracts/token factory/LiquidityPool.sol\":5667:5723  uint256 circulatingSupply = IERC20(token0).totalSupply() */\n      dup2\n        /* \"contracts/token factory/LiquidityPool.sol\":5759:5774  amountIn * 1000 */\n      tag_181\n        /* \"contracts/token factory/LiquidityPool.sol\":5759:5767  amountIn */\n      dup7\n        /* \"contracts/token factory/LiquidityPool.sol\":5770:5774  1000 */\n      0x03e8\n        /* \"contracts/token factory/LiquidityPool.sol\":5759:5774  amountIn * 1000 */\n      tag_123\n      jump\t// in\n    tag_181:\n        /* \"contracts/token factory/LiquidityPool.sol\":5758:5795  (amountIn * 1000) / circulatingSupply */\n      tag_182\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_182:\n        /* \"contracts/token factory/LiquidityPool.sol\":5810:5826  penaltiesEnabled */\n      sload(0x09)\n        /* \"contracts/token factory/LiquidityPool.sol\":5733:5795  uint256 sellPercentage = (amountIn * 1000) / circulatingSupply */\n      swap1\n      swap2\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":5810:5826  penaltiesEnabled */\n      0xff\n      and\n        /* \"contracts/token factory/LiquidityPool.sol\":5810:5863  penaltiesEnabled && sellPercentage > penaltyThreshold */\n      dup1\n      iszero\n      tag_183\n      jumpi\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":5847:5863  penaltyThreshold */\n      sload(0x08)\n        /* \"contracts/token factory/LiquidityPool.sol\":5830:5844  sellPercentage */\n      dup2\n        /* \"contracts/token factory/LiquidityPool.sol\":5830:5863  sellPercentage > penaltyThreshold */\n      gt\n        /* \"contracts/token factory/LiquidityPool.sol\":5810:5863  penaltiesEnabled && sellPercentage > penaltyThreshold */\n    tag_183:\n        /* \"contracts/token factory/LiquidityPool.sol\":5806:6093  if (penaltiesEnabled && sellPercentage > penaltyThreshold) {... */\n      iszero\n      tag_184\n      jumpi\n        /* \"contracts/token factory/LiquidityPool.sol\":5916:5932  penaltyThreshold */\n      sload(0x08)\n        /* \"contracts/token factory/LiquidityPool.sol\":5899:5932  sellPercentage - penaltyThreshold */\n      tag_185\n      swap1\n        /* \"contracts/token factory/LiquidityPool.sol\":5899:5913  sellPercentage */\n      dup3\n        /* \"contracts/token factory/LiquidityPool.sol\":5899:5932  sellPercentage - penaltyThreshold */\n      tag_127\n      jump\t// in\n    tag_185:\n        /* \"contracts/token factory/LiquidityPool.sol\":5879:5932  penaltyPercentage = sellPercentage - penaltyThreshold */\n      swap3\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":5995:5999  1000 */\n      0x03e8\n        /* \"contracts/token factory/LiquidityPool.sol\":5963:5991  penaltyPercentage * amountIn */\n      tag_186\n        /* \"contracts/token factory/LiquidityPool.sol\":5983:5991  amountIn */\n      dup7\n        /* \"contracts/token factory/LiquidityPool.sol\":5879:5932  penaltyPercentage = sellPercentage - penaltyThreshold */\n      dup6\n        /* \"contracts/token factory/LiquidityPool.sol\":5963:5991  penaltyPercentage * amountIn */\n      tag_123\n      jump\t// in\n    tag_186:\n        /* \"contracts/token factory/LiquidityPool.sol\":5962:5999  (penaltyPercentage * amountIn) / 1000 */\n      tag_187\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_187:\n        /* \"contracts/token factory/LiquidityPool.sol\":5946:5999  penaltyAmount = (penaltyPercentage * amountIn) / 1000 */\n      swap4\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":5806:6093  if (penaltiesEnabled && sellPercentage > penaltyThreshold) {... */\n      jump(tag_188)\n    tag_184:\n        /* \"contracts/token factory/LiquidityPool.sol\":6046:6047  0 */\n      0x00\n        /* \"contracts/token factory/LiquidityPool.sol\":6030:6047  penaltyAmount = 0 */\n      swap4\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":6081:6082  0 */\n      0x00\n        /* \"contracts/token factory/LiquidityPool.sol\":6061:6082  penaltyPercentage = 0 */\n      swap3\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":5806:6093  if (penaltiesEnabled && sellPercentage > penaltyThreshold) {... */\n    tag_188:\n        /* \"contracts/token factory/LiquidityPool.sol\":6103:6144  return (penaltyAmount, penaltyPercentage) */\n      pop\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":5542:6151  function calculatePenalty(uint256 amountIn) public view returns (uint256 penaltyAmount, uint256 penaltyPercentage) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/token factory/LiquidityPool.sol\":2996:3681  function buyToken() external payable nonReentrant returns (uint256 amountOut) {... */\n    tag_81:\n        /* \"contracts/token factory/LiquidityPool.sol\":3055:3072  uint256 amountOut */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_190\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_117\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_190:\n        /* \"contracts/token factory/LiquidityPool.sol\":3104:3105  0 */\n      0x00\n        /* \"contracts/token factory/LiquidityPool.sol\":3092:3101  msg.value */\n      callvalue\n        /* \"contracts/token factory/LiquidityPool.sol\":3092:3105  msg.value > 0 */\n      gt\n        /* \"contracts/token factory/LiquidityPool.sol\":3084:3139  require(msg.value > 0, \"Must send Ether to buy tokens\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5570:5572   */\n      0x20\n        /* \"contracts/token factory/LiquidityPool.sol\":3084:3139  require(msg.value > 0, \"Must send Ether to buy tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5552:5573   */\n      mstore\n        /* \"#utility.yul\":5609:5611   */\n      0x1d\n        /* \"#utility.yul\":5589:5607   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5582:5612   */\n      mstore\n        /* \"#utility.yul\":5648:5679   */\n      0x4d7573742073656e6420457468657220746f2062757920746f6b656e73000000\n        /* \"#utility.yul\":5628:5646   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5621:5680   */\n      mstore\n        /* \"#utility.yul\":5697:5715   */\n      0x64\n      add\n        /* \"contracts/token factory/LiquidityPool.sol\":3084:3139  require(msg.value > 0, \"Must send Ether to buy tokens\") */\n      tag_106\n        /* \"#utility.yul\":5368:5721   */\n      jump\n        /* \"contracts/token factory/LiquidityPool.sol\":3084:3139  require(msg.value > 0, \"Must send Ether to buy tokens\") */\n    tag_192:\n        /* \"contracts/token factory/LiquidityPool.sol\":3150:3161  uint256 tax */\n      0x00\n        /* \"contracts/token factory/LiquidityPool.sol\":3187:3191  1000 */\n      0x03e8\n        /* \"contracts/token factory/LiquidityPool.sol\":3177:3183  buyTax */\n      sload(0x05)\n        /* \"contracts/token factory/LiquidityPool.sol\":3165:3174  msg.value */\n      callvalue\n        /* \"contracts/token factory/LiquidityPool.sol\":3165:3183  msg.value * buyTax */\n      tag_195\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_195:\n        /* \"contracts/token factory/LiquidityPool.sol\":3164:3191  (msg.value * buyTax) / 1000 */\n      tag_196\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_196:\n        /* \"contracts/token factory/LiquidityPool.sol\":3150:3191  uint256 tax = (msg.value * buyTax) / 1000 */\n      swap1\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":3201:3225  uint256 amountInAfterTax */\n      0x00\n        /* \"contracts/token factory/LiquidityPool.sol\":3228:3243  msg.value - tax */\n      tag_197\n        /* \"contracts/token factory/LiquidityPool.sol\":3150:3191  uint256 tax = (msg.value * buyTax) / 1000 */\n      dup3\n        /* \"contracts/token factory/LiquidityPool.sol\":3228:3237  msg.value */\n      callvalue\n        /* \"contracts/token factory/LiquidityPool.sol\":3228:3243  msg.value - tax */\n      tag_127\n      jump\t// in\n    tag_197:\n        /* \"contracts/token factory/LiquidityPool.sol\":3273:3283  devAddress */\n      sload(0x07)\n        /* \"contracts/token factory/LiquidityPool.sol\":3273:3304  devAddress.call{value: tax}(\"\") */\n      mload(0x40)\n        /* \"contracts/token factory/LiquidityPool.sol\":3201:3243  uint256 amountInAfterTax = msg.value - tax */\n      swap2\n      swap3\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":3255:3267  bool taxSent */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/LiquidityPool.sol\":3273:3283  devAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/token factory/LiquidityPool.sol\":3296:3299  tax */\n      dup5\n      swap1\n        /* \"contracts/token factory/LiquidityPool.sol\":3255:3267  bool taxSent */\n      dup4\n        /* \"contracts/token factory/LiquidityPool.sol\":3273:3304  devAddress.call{value: tax}(\"\") */\n      dup2\n        /* \"contracts/token factory/LiquidityPool.sol\":3255:3267  bool taxSent */\n      dup2\n        /* \"contracts/token factory/LiquidityPool.sol\":3273:3304  devAddress.call{value: tax}(\"\") */\n      dup2\n        /* \"contracts/token factory/LiquidityPool.sol\":3296:3299  tax */\n      dup6\n        /* \"contracts/token factory/LiquidityPool.sol\":3273:3283  devAddress */\n      dup8\n        /* \"contracts/token factory/LiquidityPool.sol\":3273:3304  devAddress.call{value: tax}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_201\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_200)\n    tag_201:\n      0x60\n      swap2\n      pop\n    tag_200:\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":3254:3304  (bool taxSent, ) = devAddress.call{value: tax}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":3322:3329  taxSent */\n      dup1\n        /* \"contracts/token factory/LiquidityPool.sol\":3314:3367  require(taxSent, \"Failed to send tax to dev address\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5928:5930   */\n      0x20\n        /* \"contracts/token factory/LiquidityPool.sol\":3314:3367  require(taxSent, \"Failed to send tax to dev address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5910:5931   */\n      mstore\n        /* \"#utility.yul\":5967:5969   */\n      0x21\n        /* \"#utility.yul\":5947:5965   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5940:5970   */\n      mstore\n        /* \"#utility.yul\":6006:6040   */\n      0x4661696c656420746f2073656e642074617820746f2064657620616464726573\n        /* \"#utility.yul\":5986:6004   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5979:6041   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":6057:6075   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6050:6081   */\n      mstore\n        /* \"#utility.yul\":6098:6117   */\n      0x84\n      add\n        /* \"contracts/token factory/LiquidityPool.sol\":3314:3367  require(taxSent, \"Failed to send tax to dev address\") */\n      tag_106\n        /* \"#utility.yul\":5726:6123   */\n      jump\n        /* \"contracts/token factory/LiquidityPool.sol\":3314:3367  require(taxSent, \"Failed to send tax to dev address\") */\n    tag_202:\n        /* \"contracts/token factory/LiquidityPool.sol\":3378:3397  uint256 newReserve1 */\n      0x00\n        /* \"contracts/token factory/LiquidityPool.sol\":3411:3427  amountInAfterTax */\n      dup3\n        /* \"contracts/token factory/LiquidityPool.sol\":3400:3408  reserve1 */\n      sload(0x04)\n        /* \"contracts/token factory/LiquidityPool.sol\":3400:3427  reserve1 + amountInAfterTax */\n      tag_205\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_205:\n        /* \"contracts/token factory/LiquidityPool.sol\":3378:3427  uint256 newReserve1 = reserve1 + amountInAfterTax */\n      swap1\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":3484:3495  newReserve1 */\n      dup1\n        /* \"contracts/token factory/LiquidityPool.sol\":3472:3480  reserve1 */\n      sload(0x04)\n        /* \"contracts/token factory/LiquidityPool.sol\":3461:3469  reserve0 */\n      sload(0x03)\n        /* \"contracts/token factory/LiquidityPool.sol\":3461:3480  reserve0 * reserve1 */\n      tag_206\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_206:\n        /* \"contracts/token factory/LiquidityPool.sol\":3460:3495  (reserve0 * reserve1) / newReserve1 */\n      tag_207\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_207:\n        /* \"contracts/token factory/LiquidityPool.sol\":3449:3457  reserve0 */\n      sload(0x03)\n        /* \"contracts/token factory/LiquidityPool.sol\":3449:3495  reserve0 - (reserve0 * reserve1) / newReserve1 */\n      tag_208\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_208:\n        /* \"contracts/token factory/LiquidityPool.sol\":3437:3495  amountOut = reserve0 - (reserve0 * reserve1) / newReserve1 */\n      swap5\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":3517:3528  newReserve1 */\n      dup1\n        /* \"contracts/token factory/LiquidityPool.sol\":3506:3514  reserve1 */\n      0x04\n        /* \"contracts/token factory/LiquidityPool.sol\":3506:3528  reserve1 = newReserve1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":3550:3559  amountOut */\n      dup5\n        /* \"contracts/token factory/LiquidityPool.sol\":3538:3546  reserve0 */\n      0x03\n      0x00\n        /* \"contracts/token factory/LiquidityPool.sol\":3538:3559  reserve0 -= amountOut */\n      dup3\n      dup3\n      sload\n      tag_209\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_209:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":3577:3583  token0 */\n      sload(0x01)\n        /* \"contracts/token factory/LiquidityPool.sol\":3570:3616  IERC20(token0).transfer(msg.sender, amountOut) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/token factory/LiquidityPool.sol\":3594:3604  msg.sender */\n      caller\n        /* \"contracts/token factory/LiquidityPool.sol\":3570:3616  IERC20(token0).transfer(msg.sender, amountOut) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4514:4565   */\n      mstore\n        /* \"#utility.yul\":4581:4599   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4574:4608   */\n      dup8\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/LiquidityPool.sol\":3577:3583  token0 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/token factory/LiquidityPool.sol\":3570:3593  IERC20(token0).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4487:4505   */\n      0x44\n      add\n        /* \"contracts/token factory/LiquidityPool.sol\":3570:3616  IERC20(token0).transfer(msg.sender, amountOut) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_212\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_212:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_213\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_213:\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":3632:3674  BuyToken(msg.sender, msg.value, amountOut) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/token factory/LiquidityPool.sol\":3653:3662  msg.value */\n      callvalue\n        /* \"#utility.yul\":1178:1203   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1234:1236   */\n      0x20\n        /* \"#utility.yul\":1219:1237   */\n      dup2\n      add\n        /* \"#utility.yul\":1212:1246   */\n      dup8\n      swap1\n      mstore\n        /* \"contracts/token factory/LiquidityPool.sol\":3641:3651  msg.sender */\n      caller\n      swap2\n        /* \"contracts/token factory/LiquidityPool.sol\":3632:3674  BuyToken(msg.sender, msg.value, amountOut) */\n      0xf6f342132c7de5e5a1e99c8efae544c94731f3ff093f5c3c97c6973d9415cdfb\n      swap2\n        /* \"#utility.yul\":1151:1169   */\n      add\n        /* \"contracts/token factory/LiquidityPool.sol\":3632:3674  BuyToken(msg.sender, msg.value, amountOut) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/token factory/LiquidityPool.sol\":3074:3681  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_215\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3075  _status */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n    tag_215:\n        /* \"contracts/token factory/LiquidityPool.sol\":2996:3681  function buyToken() external payable nonReentrant returns (uint256 amountOut) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token factory/LiquidityPool.sol\":4955:5267  function calculatePriceForEther(uint256 tokenAmount) public view returns (uint256 etherAmount) {... */\n    tag_86:\n        /* \"contracts/token factory/LiquidityPool.sol\":5029:5048  uint256 etherAmount */\n      0x00\n        /* \"contracts/token factory/LiquidityPool.sol\":5060:5084  uint256 amountInAfterTax */\n      dup1\n        /* \"contracts/token factory/LiquidityPool.sol\":5127:5131  1000 */\n      0x03e8\n        /* \"contracts/token factory/LiquidityPool.sol\":5116:5123  sellTax */\n      sload(0x06)\n        /* \"contracts/token factory/LiquidityPool.sol\":5102:5113  tokenAmount */\n      dup5\n        /* \"contracts/token factory/LiquidityPool.sol\":5102:5123  tokenAmount * sellTax */\n      tag_217\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_217:\n        /* \"contracts/token factory/LiquidityPool.sol\":5101:5131  (tokenAmount * sellTax) / 1000 */\n      tag_218\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_218:\n        /* \"contracts/token factory/LiquidityPool.sol\":5087:5131  tokenAmount - (tokenAmount * sellTax) / 1000 */\n      tag_219\n      swap1\n        /* \"contracts/token factory/LiquidityPool.sol\":5087:5098  tokenAmount */\n      dup5\n        /* \"contracts/token factory/LiquidityPool.sol\":5087:5131  tokenAmount - (tokenAmount * sellTax) / 1000 */\n      tag_127\n      jump\t// in\n    tag_219:\n        /* \"contracts/token factory/LiquidityPool.sol\":5060:5131  uint256 amountInAfterTax = tokenAmount - (tokenAmount * sellTax) / 1000 */\n      swap1\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":5141:5160  uint256 newReserve0 */\n      0x00\n        /* \"contracts/token factory/LiquidityPool.sol\":5174:5190  amountInAfterTax */\n      dup2\n        /* \"contracts/token factory/LiquidityPool.sol\":5163:5171  reserve0 */\n      sload(0x03)\n        /* \"contracts/token factory/LiquidityPool.sol\":5163:5190  reserve0 + amountInAfterTax */\n      tag_220\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_220:\n        /* \"contracts/token factory/LiquidityPool.sol\":5141:5190  uint256 newReserve0 = reserve0 + amountInAfterTax */\n      swap1\n      pop\n        /* \"contracts/token factory/LiquidityPool.sol\":5249:5260  newReserve0 */\n      dup1\n        /* \"contracts/token factory/LiquidityPool.sol\":5237:5245  reserve1 */\n      sload(0x04)\n        /* \"contracts/token factory/LiquidityPool.sol\":5226:5234  reserve0 */\n      sload(0x03)\n        /* \"contracts/token factory/LiquidityPool.sol\":5226:5245  reserve0 * reserve1 */\n      tag_221\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_221:\n        /* \"contracts/token factory/LiquidityPool.sol\":5225:5260  (reserve0 * reserve1) / newReserve0 */\n      tag_222\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_222:\n        /* \"contracts/token factory/LiquidityPool.sol\":5214:5222  reserve1 */\n      sload(0x04)\n        /* \"contracts/token factory/LiquidityPool.sol\":5214:5260  reserve1 - (reserve0 * reserve1) / newReserve0 */\n      tag_175\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n        /* \"contracts/token factory/LiquidityPool.sol\":1940:2407  function initialize(... */\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_225\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_117\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_225:\n        /* \"contracts/token factory/LiquidityPool.sol\":967:979  tokenFactory */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/token factory/LiquidityPool.sol\":953:963  msg.sender */\n      caller\n        /* \"contracts/token factory/LiquidityPool.sol\":953:979  msg.sender == tokenFactory */\n      eq\n        /* \"contracts/token factory/LiquidityPool.sol\":945:1014  require(msg.sender == tokenFactory, \"Caller is not the TokenFactory\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_227:\n        /* \"contracts/token factory/LiquidityPool.sol\":2089:2095  token0 */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/token factory/LiquidityPool.sol\":2089:2109  token0 == address(0) */\n      iszero\n        /* \"contracts/token factory/LiquidityPool.sol\":2081:2138  require(token0 == address(0), \"Pool already initialized\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6330:6332   */\n      0x20\n        /* \"contracts/token factory/LiquidityPool.sol\":2081:2138  require(token0 == address(0), \"Pool already initialized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6312:6333   */\n      mstore\n        /* \"#utility.yul\":6369:6371   */\n      0x18\n        /* \"#utility.yul\":6349:6367   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6342:6372   */\n      mstore\n        /* \"#utility.yul\":6408:6434   */\n      0x506f6f6c20616c726561647920696e697469616c697a65640000000000000000\n        /* \"#utility.yul\":6388:6406   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6381:6435   */\n      mstore\n        /* \"#utility.yul\":6452:6470   */\n      0x64\n      add\n        /* \"contracts/token factory/LiquidityPool.sol\":2081:2138  require(token0 == address(0), \"Pool already initialized\") */\n      tag_106\n        /* \"#utility.yul\":6128:6476   */\n      jump\n        /* \"contracts/token factory/LiquidityPool.sol\":2081:2138  require(token0 == address(0), \"Pool already initialized\") */\n    tag_230:\n        /* \"contracts/token factory/LiquidityPool.sol\":2168:2169  0 */\n      0x00\n        /* \"contracts/token factory/LiquidityPool.sol\":2156:2165  msg.value */\n      callvalue\n        /* \"contracts/token factory/LiquidityPool.sol\":2156:2169  msg.value > 0 */\n      gt\n        /* \"contracts/token factory/LiquidityPool.sol\":2148:2227  require(msg.value > 0, \"Initial native token amount must be greater than zero\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6683:6685   */\n      0x20\n        /* \"contracts/token factory/LiquidityPool.sol\":2148:2227  require(msg.value > 0, \"Initial native token amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6665:6686   */\n      mstore\n        /* \"#utility.yul\":6722:6724   */\n      0x35\n        /* \"#utility.yul\":6702:6720   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6695:6725   */\n      mstore\n        /* \"#utility.yul\":6761:6795   */\n      0x496e697469616c206e617469766520746f6b656e20616d6f756e74206d757374\n        /* \"#utility.yul\":6741:6759   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6734:6796   */\n      mstore\n      shl(0x58, 0x2062652067726561746572207468616e207a65726f)\n        /* \"#utility.yul\":6812:6830   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6805:6856   */\n      mstore\n        /* \"#utility.yul\":6873:6892   */\n      0x84\n      add\n        /* \"contracts/token factory/LiquidityPool.sol\":2148:2227  require(msg.value > 0, \"Initial native token amount must be greater than zero\") */\n      tag_106\n        /* \"#utility.yul\":6481:6898   */\n      jump\n        /* \"contracts/token factory/LiquidityPool.sol\":2148:2227  require(msg.value > 0, \"Initial native token amount must be greater than zero\") */\n    tag_233:\n        /* \"contracts/token factory/LiquidityPool.sol\":2238:2244  token0 */\n      0x01\n        /* \"contracts/token factory/LiquidityPool.sol\":2238:2254  token0 = _token0 */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/token factory/LiquidityPool.sol\":2264:2272  reserve0 */\n      0x03\n        /* \"contracts/token factory/LiquidityPool.sol\":2264:2295  reserve0 = _initialTokenReserve */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/token factory/LiquidityPool.sol\":2316:2325  msg.value */\n      callvalue\n        /* \"contracts/token factory/LiquidityPool.sol\":2305:2313  reserve1 */\n      0x04\n        /* \"contracts/token factory/LiquidityPool.sol\":2305:2325  reserve1 = msg.value */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/token factory/LiquidityPool.sol\":2341:2400  LiquidityAdded(msg.sender, _initialTokenReserve, msg.value) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1178:1203   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":1234:1236   */\n      0x20\n        /* \"#utility.yul\":1219:1237   */\n      dup2\n      add\n        /* \"#utility.yul\":1212:1246   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/token factory/LiquidityPool.sol\":2356:2366  msg.sender */\n      caller\n      swap2\n        /* \"contracts/token factory/LiquidityPool.sol\":2341:2400  LiquidityAdded(msg.sender, _initialTokenReserve, msg.value) */\n      0xac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee45\n      swap2\n        /* \"#utility.yul\":1151:1169   */\n      add\n        /* \"contracts/token factory/LiquidityPool.sol\":2341:2400  LiquidityAdded(msg.sender, _initialTokenReserve, msg.value) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_237\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3075  _status */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n    tag_237:\n        /* \"contracts/token factory/LiquidityPool.sol\":1940:2407  function initialize(... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2720  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2865  _status */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2875  _status = ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"#utility.yul\":222:448   */\n    tag_31:\n        /* \"#utility.yul\":281:287   */\n      0x00\n        /* \"#utility.yul\":334:336   */\n      0x20\n        /* \"#utility.yul\":322:331   */\n      dup3\n        /* \"#utility.yul\":313:320   */\n      dup5\n        /* \"#utility.yul\":309:332   */\n      sub\n        /* \"#utility.yul\":305:337   */\n      slt\n        /* \"#utility.yul\":302:354   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":350:351   */\n      0x00\n        /* \"#utility.yul\":347:348   */\n      dup1\n        /* \"#utility.yul\":340:352   */\n      revert\n        /* \"#utility.yul\":302:354   */\n    tag_246:\n      pop\n        /* \"#utility.yul\":395:418   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":222:448   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":635:753   */\n    tag_241:\n        /* \"#utility.yul\":721:726   */\n      dup1\n        /* \"#utility.yul\":714:727   */\n      iszero\n        /* \"#utility.yul\":707:728   */\n      iszero\n        /* \"#utility.yul\":700:705   */\n      dup2\n        /* \"#utility.yul\":697:729   */\n      eq\n        /* \"#utility.yul\":687:747   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":743:744   */\n      0x00\n        /* \"#utility.yul\":740:741   */\n      dup1\n        /* \"#utility.yul\":733:745   */\n      revert\n        /* \"#utility.yul\":687:747   */\n    tag_249:\n        /* \"#utility.yul\":635:753   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:999   */\n    tag_42:\n        /* \"#utility.yul\":814:820   */\n      0x00\n        /* \"#utility.yul\":867:869   */\n      0x20\n        /* \"#utility.yul\":855:864   */\n      dup3\n        /* \"#utility.yul\":846:853   */\n      dup5\n        /* \"#utility.yul\":842:865   */\n      sub\n        /* \"#utility.yul\":838:870   */\n      slt\n        /* \"#utility.yul\":835:887   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":880:881   */\n      dup1\n        /* \"#utility.yul\":873:885   */\n      revert\n        /* \"#utility.yul\":835:887   */\n    tag_251:\n        /* \"#utility.yul\":922:931   */\n      dup2\n        /* \"#utility.yul\":909:932   */\n      calldataload\n        /* \"#utility.yul\":941:969   */\n      tag_252\n        /* \"#utility.yul\":963:968   */\n      dup2\n        /* \"#utility.yul\":941:969   */\n      tag_241\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":988:993   */\n      swap4\n        /* \"#utility.yul\":758:999   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1449:1855   */\n    tag_98:\n        /* \"#utility.yul\":1517:1523   */\n      0x00\n        /* \"#utility.yul\":1525:1531   */\n      dup1\n        /* \"#utility.yul\":1578:1580   */\n      0x40\n        /* \"#utility.yul\":1566:1575   */\n      dup4\n        /* \"#utility.yul\":1557:1564   */\n      dup6\n        /* \"#utility.yul\":1553:1576   */\n      sub\n        /* \"#utility.yul\":1549:1581   */\n      slt\n        /* \"#utility.yul\":1546:1598   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":1594:1595   */\n      0x00\n        /* \"#utility.yul\":1591:1592   */\n      dup1\n        /* \"#utility.yul\":1584:1596   */\n      revert\n        /* \"#utility.yul\":1546:1598   */\n    tag_256:\n        /* \"#utility.yul\":1620:1643   */\n      dup3\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1672:1703   */\n      dup2\n      and\n        /* \"#utility.yul\":1662:1704   */\n      dup2\n      eq\n        /* \"#utility.yul\":1652:1722   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":1718:1719   */\n      0x00\n        /* \"#utility.yul\":1715:1716   */\n      dup1\n        /* \"#utility.yul\":1708:1720   */\n      revert\n        /* \"#utility.yul\":1652:1722   */\n    tag_257:\n        /* \"#utility.yul\":1741:1746   */\n      swap5\n        /* \"#utility.yul\":1819:1821   */\n      0x20\n        /* \"#utility.yul\":1804:1822   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1791:1823   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1449:1855   */\n      jump\t// out\n        /* \"#utility.yul\":1860:2214   */\n    tag_107:\n        /* \"#utility.yul\":2062:2064   */\n      0x20\n        /* \"#utility.yul\":2044:2065   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2101:2103   */\n      0x1e\n        /* \"#utility.yul\":2081:2099   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2074:2104   */\n      mstore\n        /* \"#utility.yul\":2140:2172   */\n      0x43616c6c6572206973206e6f742074686520546f6b656e466163746f72790000\n        /* \"#utility.yul\":2135:2137   */\n      0x40\n        /* \"#utility.yul\":2120:2138   */\n      dup3\n      add\n        /* \"#utility.yul\":2113:2173   */\n      mstore\n        /* \"#utility.yul\":2205:2207   */\n      0x60\n        /* \"#utility.yul\":2190:2208   */\n      add\n      swap1\n        /* \"#utility.yul\":1860:2214   */\n      jump\t// out\n        /* \"#utility.yul\":2219:2346   */\n    tag_242:\n        /* \"#utility.yul\":2280:2290   */\n      0x4e487b71\n        /* \"#utility.yul\":2275:2278   */\n      0xe0\n        /* \"#utility.yul\":2271:2291   */\n      shl\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2292   */\n      mstore\n        /* \"#utility.yul\":2311:2315   */\n      0x11\n        /* \"#utility.yul\":2308:2309   */\n      0x04\n        /* \"#utility.yul\":2301:2316   */\n      mstore\n        /* \"#utility.yul\":2335:2339   */\n      0x24\n        /* \"#utility.yul\":2332:2333   */\n      0x00\n        /* \"#utility.yul\":2325:2340   */\n      revert\n        /* \"#utility.yul\":2351:2476   */\n    tag_110:\n        /* \"#utility.yul\":2416:2425   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2437:2447   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2434:2470   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":2450:2468   */\n      tag_262\n      tag_242\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":2351:2476   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3186:3354   */\n    tag_123:\n        /* \"#utility.yul\":3259:3268   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3290:3299   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3307:3322   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3301:3323   */\n      dup5\n      eq\n        /* \"#utility.yul\":3287:3324   */\n      or\n        /* \"#utility.yul\":3277:3348   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":3328:3346   */\n      tag_262\n      tag_242\n      jump\t// in\n        /* \"#utility.yul\":3359:3576   */\n    tag_125:\n        /* \"#utility.yul\":3399:3400   */\n      0x00\n        /* \"#utility.yul\":3425:3426   */\n      dup3\n        /* \"#utility.yul\":3415:3547   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":3469:3479   */\n      0x4e487b71\n        /* \"#utility.yul\":3464:3467   */\n      0xe0\n        /* \"#utility.yul\":3460:3480   */\n      shl\n        /* \"#utility.yul\":3457:3458   */\n      0x00\n        /* \"#utility.yul\":3450:3481   */\n      mstore\n        /* \"#utility.yul\":3504:3508   */\n      0x12\n        /* \"#utility.yul\":3501:3502   */\n      0x04\n        /* \"#utility.yul\":3494:3509   */\n      mstore\n        /* \"#utility.yul\":3532:3536   */\n      0x24\n        /* \"#utility.yul\":3529:3530   */\n      0x00\n        /* \"#utility.yul\":3522:3537   */\n      revert\n        /* \"#utility.yul\":3415:3547   */\n    tag_269:\n      pop\n        /* \"#utility.yul\":3561:3570   */\n      div\n      swap1\n        /* \"#utility.yul\":3359:3576   */\n      jump\t// out\n        /* \"#utility.yul\":3581:3709   */\n    tag_127:\n        /* \"#utility.yul\":3648:3657   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3669:3680   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3666:3703   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":3683:3701   */\n      tag_262\n      tag_242\n      jump\t// in\n        /* \"#utility.yul\":4090:4335   */\n    tag_133:\n        /* \"#utility.yul\":4157:4163   */\n      0x00\n        /* \"#utility.yul\":4210:4212   */\n      0x20\n        /* \"#utility.yul\":4198:4207   */\n      dup3\n        /* \"#utility.yul\":4189:4196   */\n      dup5\n        /* \"#utility.yul\":4185:4208   */\n      sub\n        /* \"#utility.yul\":4181:4213   */\n      slt\n        /* \"#utility.yul\":4178:4230   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":4226:4227   */\n      0x00\n        /* \"#utility.yul\":4223:4224   */\n      dup1\n        /* \"#utility.yul\":4216:4228   */\n      revert\n        /* \"#utility.yul\":4178:4230   */\n    tag_275:\n        /* \"#utility.yul\":4258:4267   */\n      dup2\n        /* \"#utility.yul\":4252:4268   */\n      mload\n        /* \"#utility.yul\":4277:4305   */\n      tag_252\n        /* \"#utility.yul\":4299:4304   */\n      dup2\n        /* \"#utility.yul\":4277:4305   */\n      tag_241\n      jump\t// in\n        /* \"#utility.yul\":5179:5363   */\n    tag_180:\n        /* \"#utility.yul\":5249:5255   */\n      0x00\n        /* \"#utility.yul\":5302:5304   */\n      0x20\n        /* \"#utility.yul\":5290:5299   */\n      dup3\n        /* \"#utility.yul\":5281:5288   */\n      dup5\n        /* \"#utility.yul\":5277:5300   */\n      sub\n        /* \"#utility.yul\":5273:5305   */\n      slt\n        /* \"#utility.yul\":5270:5322   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":5318:5319   */\n      0x00\n        /* \"#utility.yul\":5315:5316   */\n      dup1\n        /* \"#utility.yul\":5308:5320   */\n      revert\n        /* \"#utility.yul\":5270:5322   */\n    tag_281:\n      pop\n        /* \"#utility.yul\":5341:5357   */\n      mload\n      swap2\n        /* \"#utility.yul\":5179:5363   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204e76a95c89dce39850e6626dfb579857ccb6e6f17d9e7e37ba0e638b7aa0a28b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_266": {
									"entryPoint": null,
									"id": 266,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_99": {
									"entryPoint": null,
									"id": 99,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_stringliteral_4a1087fb8160fa1ddbd680305a05eb02a778f98c14ed012d48b8922ad2bbec04__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9e321b68ccddc3bd009fbbc32b5fce044022d300eea9f17cc6d9f0cc34773948__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1312:3",
										"nodeType": "YulBlock",
										"src": "0:1312:3",
										"statements": [
											{
												"nativeSrc": "6:3:3",
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:3",
													"nodeType": "YulBlock",
													"src": "74:117:3",
													"statements": [
														{
															"nativeSrc": "84:22:3",
															"nodeType": "YulAssignment",
															"src": "84:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:3"
																},
																"nativeSrc": "93:13:3",
																"nodeType": "YulFunctionCall",
																"src": "93:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:3",
																"nodeType": "YulBlock",
																"src": "169:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:3",
																					"nodeType": "YulLiteral",
																					"src": "178:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:3",
																					"nodeType": "YulLiteral",
																					"src": "181:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:3"
																			},
																			"nativeSrc": "171:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:3"
																		},
																		"nativeSrc": "171:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:3",
																										"nodeType": "YulLiteral",
																										"src": "154:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:3",
																										"nodeType": "YulLiteral",
																										"src": "159:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:3"
																								},
																								"nativeSrc": "150:11:3",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:3"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:3",
																								"nodeType": "YulLiteral",
																								"src": "163:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:3"
																						},
																						"nativeSrc": "146:19:3",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:3"
																				},
																				"nativeSrc": "135:31:3",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:3"
																		},
																		"nativeSrc": "125:42:3",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:3"
																},
																"nativeSrc": "118:50:3",
																"nodeType": "YulFunctionCall",
																"src": "118:50:3"
															},
															"nativeSrc": "115:70:3",
															"nodeType": "YulIf",
															"src": "115:70:3"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:3",
														"nodeType": "YulTypedName",
														"src": "53:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:3",
														"nodeType": "YulTypedName",
														"src": "64:5:3",
														"type": ""
													}
												],
												"src": "14:177:3"
											},
											{
												"body": {
													"nativeSrc": "294:195:3",
													"nodeType": "YulBlock",
													"src": "294:195:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:3",
																"nodeType": "YulBlock",
																"src": "340:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:3",
																					"nodeType": "YulLiteral",
																					"src": "349:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:3",
																					"nodeType": "YulLiteral",
																					"src": "352:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:3"
																			},
																			"nativeSrc": "342:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:3"
																		},
																		"nativeSrc": "342:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:3"
																		},
																		"nativeSrc": "311:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:3",
																		"nodeType": "YulLiteral",
																		"src": "336:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:3"
																},
																"nativeSrc": "307:32:3",
																"nodeType": "YulFunctionCall",
																"src": "307:32:3"
															},
															"nativeSrc": "304:52:3",
															"nodeType": "YulIf",
															"src": "304:52:3"
														},
														{
															"nativeSrc": "365:50:3",
															"nodeType": "YulAssignment",
															"src": "365:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:3",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:3"
																},
																"nativeSrc": "375:40:3",
																"nodeType": "YulFunctionCall",
																"src": "375:40:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:3"
																}
															]
														},
														{
															"nativeSrc": "424:59:3",
															"nodeType": "YulAssignment",
															"src": "424:59:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:3",
																				"nodeType": "YulLiteral",
																				"src": "479:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:3"
																		},
																		"nativeSrc": "464:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:3",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:3"
																},
																"nativeSrc": "434:49:3",
																"nodeType": "YulFunctionCall",
																"src": "434:49:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:3",
														"nodeType": "YulTypedName",
														"src": "252:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:3",
														"nodeType": "YulTypedName",
														"src": "263:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:3",
														"nodeType": "YulTypedName",
														"src": "275:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:3",
														"nodeType": "YulTypedName",
														"src": "283:6:3",
														"type": ""
													}
												],
												"src": "196:293:3"
											},
											{
												"body": {
													"nativeSrc": "668:230:3",
													"nodeType": "YulBlock",
													"src": "668:230:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "685:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "685:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "696:2:3",
																		"nodeType": "YulLiteral",
																		"src": "696:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "678:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "678:6:3"
																},
																"nativeSrc": "678:21:3",
																"nodeType": "YulFunctionCall",
																"src": "678:21:3"
															},
															"nativeSrc": "678:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "678:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "719:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "719:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "730:2:3",
																				"nodeType": "YulLiteral",
																				"src": "730:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "715:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "715:3:3"
																		},
																		"nativeSrc": "715:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "715:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "735:2:3",
																		"nodeType": "YulLiteral",
																		"src": "735:2:3",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "708:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "708:6:3"
																},
																"nativeSrc": "708:30:3",
																"nodeType": "YulFunctionCall",
																"src": "708:30:3"
															},
															"nativeSrc": "708:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "708:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "758:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "758:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "769:2:3",
																				"nodeType": "YulLiteral",
																				"src": "769:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "754:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "754:3:3"
																		},
																		"nativeSrc": "754:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "754:18:3"
																	},
																	{
																		"hexValue": "446576656c6f70657220616464726573732063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "774:34:3",
																		"nodeType": "YulLiteral",
																		"src": "774:34:3",
																		"type": "",
																		"value": "Developer address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "747:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "747:6:3"
																},
																"nativeSrc": "747:62:3",
																"nodeType": "YulFunctionCall",
																"src": "747:62:3"
															},
															"nativeSrc": "747:62:3",
															"nodeType": "YulExpressionStatement",
															"src": "747:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "829:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "829:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "840:2:3",
																				"nodeType": "YulLiteral",
																				"src": "840:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "825:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "825:3:3"
																		},
																		"nativeSrc": "825:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "825:18:3"
																	},
																	{
																		"hexValue": "2061646472657373",
																		"kind": "string",
																		"nativeSrc": "845:10:3",
																		"nodeType": "YulLiteral",
																		"src": "845:10:3",
																		"type": "",
																		"value": " address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "818:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "818:6:3"
																},
																"nativeSrc": "818:38:3",
																"nodeType": "YulFunctionCall",
																"src": "818:38:3"
															},
															"nativeSrc": "818:38:3",
															"nodeType": "YulExpressionStatement",
															"src": "818:38:3"
														},
														{
															"nativeSrc": "865:27:3",
															"nodeType": "YulAssignment",
															"src": "865:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "877:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "877:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "888:3:3",
																		"nodeType": "YulLiteral",
																		"src": "888:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "873:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "873:3:3"
																},
																"nativeSrc": "873:19:3",
																"nodeType": "YulFunctionCall",
																"src": "873:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "865:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "865:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9e321b68ccddc3bd009fbbc32b5fce044022d300eea9f17cc6d9f0cc34773948__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "494:404:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "645:9:3",
														"nodeType": "YulTypedName",
														"src": "645:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "659:4:3",
														"nodeType": "YulTypedName",
														"src": "659:4:3",
														"type": ""
													}
												],
												"src": "494:404:3"
											},
											{
												"body": {
													"nativeSrc": "1077:233:3",
													"nodeType": "YulBlock",
													"src": "1077:233:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1094:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1094:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1105:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1105:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:3"
																},
																"nativeSrc": "1087:21:3",
																"nodeType": "YulFunctionCall",
																"src": "1087:21:3"
															},
															"nativeSrc": "1087:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "1087:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1128:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1128:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1139:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1139:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1124:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1124:3:3"
																		},
																		"nativeSrc": "1124:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1124:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1144:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1144:2:3",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1117:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1117:6:3"
																},
																"nativeSrc": "1117:30:3",
																"nodeType": "YulFunctionCall",
																"src": "1117:30:3"
															},
															"nativeSrc": "1117:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "1117:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1167:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1167:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1178:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1178:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1163:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:3"
																		},
																		"nativeSrc": "1163:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:18:3"
																	},
																	{
																		"hexValue": "546f6b656e466163746f727920616464726573732063616e6e6f74206265207a",
																		"kind": "string",
																		"nativeSrc": "1183:34:3",
																		"nodeType": "YulLiteral",
																		"src": "1183:34:3",
																		"type": "",
																		"value": "TokenFactory address cannot be z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1156:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1156:6:3"
																},
																"nativeSrc": "1156:62:3",
																"nodeType": "YulFunctionCall",
																"src": "1156:62:3"
															},
															"nativeSrc": "1156:62:3",
															"nodeType": "YulExpressionStatement",
															"src": "1156:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1238:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1238:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1249:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1249:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1234:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1234:3:3"
																		},
																		"nativeSrc": "1234:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1234:18:3"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "1254:13:3",
																		"nodeType": "YulLiteral",
																		"src": "1254:13:3",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1227:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1227:6:3"
																},
																"nativeSrc": "1227:41:3",
																"nodeType": "YulFunctionCall",
																"src": "1227:41:3"
															},
															"nativeSrc": "1227:41:3",
															"nodeType": "YulExpressionStatement",
															"src": "1227:41:3"
														},
														{
															"nativeSrc": "1277:27:3",
															"nodeType": "YulAssignment",
															"src": "1277:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1289:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1289:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1300:3:3",
																		"nodeType": "YulLiteral",
																		"src": "1300:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1285:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1285:3:3"
																},
																"nativeSrc": "1285:19:3",
																"nodeType": "YulFunctionCall",
																"src": "1285:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1277:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1277:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4a1087fb8160fa1ddbd680305a05eb02a778f98c14ed012d48b8922ad2bbec04__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "903:407:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1054:9:3",
														"nodeType": "YulTypedName",
														"src": "1054:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1068:4:3",
														"nodeType": "YulTypedName",
														"src": "1068:4:3",
														"type": ""
													}
												],
												"src": "903:407:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_9e321b68ccddc3bd009fbbc32b5fce044022d300eea9f17cc6d9f0cc34773948__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Developer address cannot be zero\")\n        mstore(add(headStart, 96), \" address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4a1087fb8160fa1ddbd680305a05eb02a778f98c14ed012d48b8922ad2bbec04__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"TokenFactory address cannot be z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH1 0xA PUSH1 0x6 SSTORE PUSH1 0xC8 PUSH1 0x8 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x10DF CODESIZE SUB DUP1 PUSH2 0x10DF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x48 SWAP2 PUSH2 0x170 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446576656C6F70657220616464726573732063616E6E6F74206265207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2061646472657373 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x123 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E466163746F727920616464726573732063616E6E6F74206265207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x1A3 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18C DUP4 PUSH2 0x154 JUMP JUMPDEST SWAP2 POP PUSH2 0x19A PUSH1 0x20 DUP5 ADD PUSH2 0x154 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xF2D DUP1 PUSH2 0x1B2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F7041A5 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xAAC8E6A4 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAAC8E6A4 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xC91E5149 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xCC1776D3 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xE77772FE EQ PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F7041A5 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x88E22F7F EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xA4821719 EQ PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3AD10EF6 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x3AD10EF6 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x436D3340 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x465FA408 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x4ECCE451 EQ PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x12185A39 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x2397E4D7 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x23E18DDD EQ PUSH2 0x19B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x12E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x343 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x6BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x12E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x1F6 CALLDATASIZE PUSH1 0x4 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x7E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2AC SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x93F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0xB92 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x12E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x376 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36D SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x32 DUP2 PUSH1 0x5 SLOAD PUSH2 0x386 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST GT ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C207461782063616E6E6F7420657863656564203525000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xA6255338A5F732D64CEBA7F4C18182567F9D1067EB984B46D478B37D72A52D11 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41A PUSH2 0xD5F JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x462 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4D7573742073656C6C20736F6D6520746F6B656E73 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x6 SLOAD DUP5 PUSH2 0x475 SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0x47F SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x48D DUP3 DUP6 PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x509 SWAP2 SWAP1 PUSH2 0xEC1 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x55F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x583 SWAP2 SWAP1 PUSH2 0xEC1 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x3 SLOAD PUSH2 0x594 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x5BE SWAP2 SWAP1 PUSH2 0xEAE JUMP JUMPDEST SWAP4 POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5D9 SWAP2 SWAP1 PUSH2 0xEAE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 DUP7 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x625 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x66E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x115D1A195C881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xA8FF15EB642B39DA3AB82BB74A87B76CC3E1AEF2B82B70BC2A35458386DB29AA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP PUSH2 0x6B7 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36D SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xEC615C5E0F8D777F63BE66955C04B8F91B4A878F984F8E1B9AFA7255E83F0EF3 SWAP1 PUSH1 0x20 ADD PUSH2 0x405 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x751 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36D SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x32 PUSH1 0x6 SLOAD DUP3 PUSH2 0x761 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST GT ISZERO PUSH2 0x7AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C207461782063616E6E6F7420657863656564203525000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x7A758DC8E99047B028278B3E2FF1416D8493A7AACEE7A5DC30B6BF93270ECCCE SWAP1 PUSH1 0x20 ADD PUSH2 0x405 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3E8 PUSH1 0x5 SLOAD DUP5 PUSH2 0x7F8 SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0x802 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x80C SWAP1 DUP5 PUSH2 0xEAE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 SLOAD PUSH2 0x81E SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x831 SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0x83B SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x848 SWAP2 SWAP1 PUSH2 0xEAE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CC SWAP2 SWAP1 PUSH2 0xEDE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x8DD DUP7 PUSH2 0x3E8 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0x8E7 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x8FD JUMPI POP PUSH1 0x8 SLOAD DUP2 GT JUMPDEST ISZERO PUSH2 0x92F JUMPI PUSH1 0x8 SLOAD PUSH2 0x90F SWAP1 DUP3 PUSH2 0xEAE JUMP JUMPDEST SWAP3 POP PUSH2 0x3E8 PUSH2 0x91E DUP7 DUP6 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0x928 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST SWAP4 POP PUSH2 0x938 JUMP JUMPDEST PUSH1 0x0 SWAP4 POP PUSH1 0x0 SWAP3 POP JUMPDEST POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x949 PUSH2 0xD5F JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x999 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073656E6420457468657220746F2062757920746F6B656E73000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x5 SLOAD CALLVALUE PUSH2 0x9AC SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0x9B6 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9C4 DUP3 CALLVALUE PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA16 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E642074617820746F2064657620616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x4 SLOAD PUSH2 0xA86 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xA99 SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0xAA3 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xAB0 SWAP2 SWAP1 PUSH2 0xEAE JUMP JUMPDEST SWAP5 POP DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xACB SWAP2 SWAP1 PUSH2 0xEAE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB45 SWAP2 SWAP1 PUSH2 0xEC1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xF6F342132C7DE5E5A1E99C8EFAE544C94731F3FF093F5C3C97C6973D9415CDFB SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP PUSH2 0xB8F PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3E8 PUSH1 0x6 SLOAD DUP5 PUSH2 0xBA6 SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0xBB0 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0xBBA SWAP1 DUP5 PUSH2 0xEAE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x3 SLOAD PUSH2 0xBCC SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xBDF SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0xBE9 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x848 SWAP2 SWAP1 PUSH2 0xEAE JUMP JUMPDEST PUSH2 0xBFE PUSH2 0xD5F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36D SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xC81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20616C726561647920696E697469616C697A65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0xCEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C206E617469766520746F6B656E20616D6F756E74206D757374 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x2062652067726561746572207468616E207A65726F PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH1 0x3 DUP2 SWAP1 SSTORE CALLVALUE PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER SWAP2 PUSH32 0xAC1D76749E5447B7B16F5AB61447E1BD502F3BB4807AF3B28E620D1700A6EE45 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xD5B PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xD82 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDD0 DUP2 PUSH2 0xDA2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742074686520546F6B656E466163746F72790000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xE6F JUMPI PUSH2 0xE6F PUSH2 0xE46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xE6F JUMPI PUSH2 0xE6F PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEA9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xE6F JUMPI PUSH2 0xE6F PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDD0 DUP2 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E PUSH23 0xA95C89DCE39850E6626DFB579857CCB6E6F17D9E7E37BA 0xE PUSH4 0x8B7AA0A2 DUP12 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "176:5977:2:-:0;;;515:1;491:25;;594:2;569:27;;759:3;725:37;;824:36;;;-1:-1:-1;;824:36:2;;;1539:316;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1857:1:1;2061:7;:21;-1:-1:-1;;;;;1613:25:2;;1605:78;;;;-1:-1:-1;;;1605:78:2;;696:2:3;1605:78:2;;;678:21:3;735:2;715:18;;;708:30;774:34;754:18;;;747:62;-1:-1:-1;;;825:18:3;;;818:38;873:19;;1605:78:2;;;;;;;;;-1:-1:-1;;;;;1701:27:2;;1693:83;;;;-1:-1:-1;;;1693:83:2;;1105:2:3;1693:83:2;;;1087:21:3;1144:2;1124:18;;;1117:30;1183:34;1163:18;;;1156:62;-1:-1:-1;;;1234:18:3;;;1227:41;1285:19;;1693:83:2;903:407:3;1693:83:2;1786:10;:24;;-1:-1:-1;;;;;1786:24:2;;;-1:-1:-1;;;;;;1786:24:2;;;;;;;1820:12;:28;;;;;;;;;;;176:5977;;14:177:3;93:13;;-1:-1:-1;;;;;135:31:3;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;903:407::-;176:5977:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_nonReentrantAfter_134": {
									"entryPoint": null,
									"id": 134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_126": {
									"entryPoint": 3423,
									"id": 126,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyTax_163": {
									"entryPoint": null,
									"id": 163,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyToken_460": {
									"entryPoint": 2367,
									"id": 460,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@calculatePenalty_715": {
									"entryPoint": 2128,
									"id": 715,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@calculatePriceForEther_635": {
									"entryPoint": 2962,
									"id": 635,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculatePriceForTokens_598": {
									"entryPoint": 2020,
									"id": 598,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@devAddress_168": {
									"entryPoint": null,
									"id": 168,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_318": {
									"entryPoint": 3062,
									"id": 318,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@penaltiesEnabled_174": {
									"entryPoint": null,
									"id": 174,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@penaltyThreshold_171": {
									"entryPoint": null,
									"id": 171,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserve0_158": {
									"entryPoint": null,
									"id": 158,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserve1_160": {
									"entryPoint": null,
									"id": 160,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellTax_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellToken_561": {
									"entryPoint": 1040,
									"id": 561,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@togglePenalties_652": {
									"entryPoint": 1724,
									"id": 652,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@token0_154": {
									"entryPoint": null,
									"id": 154,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenFactory_156": {
									"entryPoint": null,
									"id": 156,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateBuyTax_344": {
									"entryPoint": 1831,
									"id": 344,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateSellTax_370": {
									"entryPoint": 835,
									"id": 370,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 3507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3a043fa2cdaa46687fc14c42d2ff479d15d8b04d3705d1434247f8c2ff3c5464__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_800f8b110ecf89d81c829aed87c641aaec4e62de6f9a2192992b7e9a1db6fe77__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b0484cda00f5ce0a67b245b24fbbebd616543c38f2e954e168cb776c8eceb4bc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b7b83c9e2ce178fbea0fac09eaf176164e6c77ff25594c5d5e1160e0d61e1c10__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b8ea75a0f3a9e6012a5af112995bbcc8ce3975458fe2563873da1857fe3c491c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3c53b421f0380174af9aa0c2340735c620f8ea9a00cdf4f39196d23bb404824__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d870e9ea7e8ae072dc4fb122bdca67cbc638e412fb9e2679cef14b441dc80a6c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3654,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 3490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6900:3",
										"nodeType": "YulBlock",
										"src": "0:6900:3",
										"statements": [
											{
												"nativeSrc": "6:3:3",
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:3",
													"nodeType": "YulBlock",
													"src": "115:102:3",
													"statements": [
														{
															"nativeSrc": "125:26:3",
															"nodeType": "YulAssignment",
															"src": "125:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:3",
																		"nodeType": "YulLiteral",
																		"src": "148:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:3"
																},
																"nativeSrc": "133:18:3",
																"nodeType": "YulFunctionCall",
																"src": "133:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:3",
																								"nodeType": "YulLiteral",
																								"src": "198:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:3",
																								"nodeType": "YulLiteral",
																								"src": "203:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:3"
																						},
																						"nativeSrc": "194:11:3",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:3",
																						"nodeType": "YulLiteral",
																						"src": "207:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:3"
																				},
																				"nativeSrc": "190:19:3",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:3"
																		},
																		"nativeSrc": "178:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:3"
																},
																"nativeSrc": "160:51:3",
																"nodeType": "YulFunctionCall",
																"src": "160:51:3"
															},
															"nativeSrc": "160:51:3",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:3",
														"nodeType": "YulTypedName",
														"src": "84:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:3",
														"nodeType": "YulTypedName",
														"src": "95:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:3",
														"nodeType": "YulTypedName",
														"src": "106:4:3",
														"type": ""
													}
												],
												"src": "14:203:3"
											},
											{
												"body": {
													"nativeSrc": "292:156:3",
													"nodeType": "YulBlock",
													"src": "292:156:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "338:16:3",
																"nodeType": "YulBlock",
																"src": "338:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "347:1:3",
																					"nodeType": "YulLiteral",
																					"src": "347:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "350:1:3",
																					"nodeType": "YulLiteral",
																					"src": "350:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "340:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "340:6:3"
																			},
																			"nativeSrc": "340:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "340:12:3"
																		},
																		"nativeSrc": "340:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "340:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "313:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "313:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "322:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "322:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "309:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "309:3:3"
																		},
																		"nativeSrc": "309:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "309:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "334:2:3",
																		"nodeType": "YulLiteral",
																		"src": "334:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "305:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "305:3:3"
																},
																"nativeSrc": "305:32:3",
																"nodeType": "YulFunctionCall",
																"src": "305:32:3"
															},
															"nativeSrc": "302:52:3",
															"nodeType": "YulIf",
															"src": "302:52:3"
														},
														{
															"nativeSrc": "363:14:3",
															"nodeType": "YulVariableDeclaration",
															"src": "363:14:3",
															"value": {
																"kind": "number",
																"nativeSrc": "376:1:3",
																"nodeType": "YulLiteral",
																"src": "376:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "367:5:3",
																	"nodeType": "YulTypedName",
																	"src": "367:5:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "386:32:3",
															"nodeType": "YulAssignment",
															"src": "386:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "408:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "408:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "395:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "395:12:3"
																},
																"nativeSrc": "395:23:3",
																"nodeType": "YulFunctionCall",
																"src": "395:23:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "386:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "386:5:3"
																}
															]
														},
														{
															"nativeSrc": "427:15:3",
															"nodeType": "YulAssignment",
															"src": "427:15:3",
															"value": {
																"name": "value",
																"nativeSrc": "437:5:3",
																"nodeType": "YulIdentifier",
																"src": "437:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "427:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "427:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "222:226:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "258:9:3",
														"nodeType": "YulTypedName",
														"src": "258:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "269:7:3",
														"nodeType": "YulTypedName",
														"src": "269:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "281:6:3",
														"nodeType": "YulTypedName",
														"src": "281:6:3",
														"type": ""
													}
												],
												"src": "222:226:3"
											},
											{
												"body": {
													"nativeSrc": "554:76:3",
													"nodeType": "YulBlock",
													"src": "554:76:3",
													"statements": [
														{
															"nativeSrc": "564:26:3",
															"nodeType": "YulAssignment",
															"src": "564:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "576:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "576:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "587:2:3",
																		"nodeType": "YulLiteral",
																		"src": "587:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "572:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "572:3:3"
																},
																"nativeSrc": "572:18:3",
																"nodeType": "YulFunctionCall",
																"src": "572:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "564:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "564:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "606:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "606:9:3"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "617:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "617:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "599:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "599:6:3"
																},
																"nativeSrc": "599:25:3",
																"nodeType": "YulFunctionCall",
																"src": "599:25:3"
															},
															"nativeSrc": "599:25:3",
															"nodeType": "YulExpressionStatement",
															"src": "599:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "453:177:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "523:9:3",
														"nodeType": "YulTypedName",
														"src": "523:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "534:6:3",
														"nodeType": "YulTypedName",
														"src": "534:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "545:4:3",
														"nodeType": "YulTypedName",
														"src": "545:4:3",
														"type": ""
													}
												],
												"src": "453:177:3"
											},
											{
												"body": {
													"nativeSrc": "677:76:3",
													"nodeType": "YulBlock",
													"src": "677:76:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "731:16:3",
																"nodeType": "YulBlock",
																"src": "731:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "740:1:3",
																					"nodeType": "YulLiteral",
																					"src": "740:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "743:1:3",
																					"nodeType": "YulLiteral",
																					"src": "743:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "733:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "733:6:3"
																			},
																			"nativeSrc": "733:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "733:12:3"
																		},
																		"nativeSrc": "733:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "733:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "700:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "721:5:3",
																								"nodeType": "YulIdentifier",
																								"src": "721:5:3"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "714:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "714:6:3"
																						},
																						"nativeSrc": "714:13:3",
																						"nodeType": "YulFunctionCall",
																						"src": "714:13:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "707:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "707:6:3"
																				},
																				"nativeSrc": "707:21:3",
																				"nodeType": "YulFunctionCall",
																				"src": "707:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "697:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:3"
																		},
																		"nativeSrc": "697:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "697:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "690:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:3"
																},
																"nativeSrc": "690:40:3",
																"nodeType": "YulFunctionCall",
																"src": "690:40:3"
															},
															"nativeSrc": "687:60:3",
															"nodeType": "YulIf",
															"src": "687:60:3"
														}
													]
												},
												"name": "validator_revert_bool",
												"nativeSrc": "635:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "666:5:3",
														"nodeType": "YulTypedName",
														"src": "666:5:3",
														"type": ""
													}
												],
												"src": "635:118:3"
											},
											{
												"body": {
													"nativeSrc": "825:174:3",
													"nodeType": "YulBlock",
													"src": "825:174:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "871:16:3",
																"nodeType": "YulBlock",
																"src": "871:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "880:1:3",
																					"nodeType": "YulLiteral",
																					"src": "880:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "883:1:3",
																					"nodeType": "YulLiteral",
																					"src": "883:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "873:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "873:6:3"
																			},
																			"nativeSrc": "873:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "873:12:3"
																		},
																		"nativeSrc": "873:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "873:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "846:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "846:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "855:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "855:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "842:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "842:3:3"
																		},
																		"nativeSrc": "842:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "842:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "867:2:3",
																		"nodeType": "YulLiteral",
																		"src": "867:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "838:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "838:3:3"
																},
																"nativeSrc": "838:32:3",
																"nodeType": "YulFunctionCall",
																"src": "838:32:3"
															},
															"nativeSrc": "835:52:3",
															"nodeType": "YulIf",
															"src": "835:52:3"
														},
														{
															"nativeSrc": "896:36:3",
															"nodeType": "YulVariableDeclaration",
															"src": "896:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "922:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "922:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "909:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "909:12:3"
																},
																"nativeSrc": "909:23:3",
																"nodeType": "YulFunctionCall",
																"src": "909:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "900:5:3",
																	"nodeType": "YulTypedName",
																	"src": "900:5:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "963:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "963:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "941:21:3",
																	"nodeType": "YulIdentifier",
																	"src": "941:21:3"
																},
																"nativeSrc": "941:28:3",
																"nodeType": "YulFunctionCall",
																"src": "941:28:3"
															},
															"nativeSrc": "941:28:3",
															"nodeType": "YulExpressionStatement",
															"src": "941:28:3"
														},
														{
															"nativeSrc": "978:15:3",
															"nodeType": "YulAssignment",
															"src": "978:15:3",
															"value": {
																"name": "value",
																"nativeSrc": "988:5:3",
																"nodeType": "YulIdentifier",
																"src": "988:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "978:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "978:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "758:241:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "791:9:3",
														"nodeType": "YulTypedName",
														"src": "791:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "802:7:3",
														"nodeType": "YulTypedName",
														"src": "802:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "814:6:3",
														"nodeType": "YulTypedName",
														"src": "814:6:3",
														"type": ""
													}
												],
												"src": "758:241:3"
											},
											{
												"body": {
													"nativeSrc": "1133:119:3",
													"nodeType": "YulBlock",
													"src": "1133:119:3",
													"statements": [
														{
															"nativeSrc": "1143:26:3",
															"nodeType": "YulAssignment",
															"src": "1143:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1155:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1155:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1166:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1166:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1151:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1151:3:3"
																},
																"nativeSrc": "1151:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1151:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1185:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1185:9:3"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1196:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1196:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1178:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1178:6:3"
																},
																"nativeSrc": "1178:25:3",
																"nodeType": "YulFunctionCall",
																"src": "1178:25:3"
															},
															"nativeSrc": "1178:25:3",
															"nodeType": "YulExpressionStatement",
															"src": "1178:25:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1223:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1223:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1234:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1234:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1219:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1219:3:3"
																		},
																		"nativeSrc": "1219:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1219:18:3"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "1239:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1239:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1212:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:3"
																},
																"nativeSrc": "1212:34:3",
																"nodeType": "YulFunctionCall",
																"src": "1212:34:3"
															},
															"nativeSrc": "1212:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "1212:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1004:248:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1094:9:3",
														"nodeType": "YulTypedName",
														"src": "1094:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1105:6:3",
														"nodeType": "YulTypedName",
														"src": "1105:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1113:6:3",
														"nodeType": "YulTypedName",
														"src": "1113:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1124:4:3",
														"nodeType": "YulTypedName",
														"src": "1124:4:3",
														"type": ""
													}
												],
												"src": "1004:248:3"
											},
											{
												"body": {
													"nativeSrc": "1352:92:3",
													"nodeType": "YulBlock",
													"src": "1352:92:3",
													"statements": [
														{
															"nativeSrc": "1362:26:3",
															"nodeType": "YulAssignment",
															"src": "1362:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1374:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1374:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1385:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1385:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1370:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1370:3:3"
																},
																"nativeSrc": "1370:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1370:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1362:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1362:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1404:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1404:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1429:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1429:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1422:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "1422:6:3"
																				},
																				"nativeSrc": "1422:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1422:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1415:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1415:6:3"
																		},
																		"nativeSrc": "1415:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1397:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1397:6:3"
																},
																"nativeSrc": "1397:41:3",
																"nodeType": "YulFunctionCall",
																"src": "1397:41:3"
															},
															"nativeSrc": "1397:41:3",
															"nodeType": "YulExpressionStatement",
															"src": "1397:41:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1257:187:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1321:9:3",
														"nodeType": "YulTypedName",
														"src": "1321:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1332:6:3",
														"nodeType": "YulTypedName",
														"src": "1332:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1343:4:3",
														"nodeType": "YulTypedName",
														"src": "1343:4:3",
														"type": ""
													}
												],
												"src": "1257:187:3"
											},
											{
												"body": {
													"nativeSrc": "1536:319:3",
													"nodeType": "YulBlock",
													"src": "1536:319:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1582:16:3",
																"nodeType": "YulBlock",
																"src": "1582:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1591:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1591:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1594:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1594:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1584:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1584:6:3"
																			},
																			"nativeSrc": "1584:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1584:12:3"
																		},
																		"nativeSrc": "1584:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1584:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1557:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1557:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1566:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1553:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1553:3:3"
																		},
																		"nativeSrc": "1553:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1553:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1578:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1578:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1549:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1549:3:3"
																},
																"nativeSrc": "1549:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1549:32:3"
															},
															"nativeSrc": "1546:52:3",
															"nodeType": "YulIf",
															"src": "1546:52:3"
														},
														{
															"nativeSrc": "1607:36:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1607:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1633:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1633:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1620:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1620:12:3"
																},
																"nativeSrc": "1620:23:3",
																"nodeType": "YulFunctionCall",
																"src": "1620:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1611:5:3",
																	"nodeType": "YulTypedName",
																	"src": "1611:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1706:16:3",
																"nodeType": "YulBlock",
																"src": "1706:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1715:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1715:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1718:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1718:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1708:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1708:6:3"
																			},
																			"nativeSrc": "1708:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1708:12:3"
																		},
																		"nativeSrc": "1708:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1708:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1665:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1665:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1676:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1676:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1691:3:3",
																										"nodeType": "YulLiteral",
																										"src": "1691:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1696:1:3",
																										"nodeType": "YulLiteral",
																										"src": "1696:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1687:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "1687:3:3"
																								},
																								"nativeSrc": "1687:11:3",
																								"nodeType": "YulFunctionCall",
																								"src": "1687:11:3"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1700:1:3",
																								"nodeType": "YulLiteral",
																								"src": "1700:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1683:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "1683:3:3"
																						},
																						"nativeSrc": "1683:19:3",
																						"nodeType": "YulFunctionCall",
																						"src": "1683:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1672:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1672:3:3"
																				},
																				"nativeSrc": "1672:31:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1672:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1662:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1662:2:3"
																		},
																		"nativeSrc": "1662:42:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1662:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1655:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1655:6:3"
																},
																"nativeSrc": "1655:50:3",
																"nodeType": "YulFunctionCall",
																"src": "1655:50:3"
															},
															"nativeSrc": "1652:70:3",
															"nodeType": "YulIf",
															"src": "1652:70:3"
														},
														{
															"nativeSrc": "1731:15:3",
															"nodeType": "YulAssignment",
															"src": "1731:15:3",
															"value": {
																"name": "value",
																"nativeSrc": "1741:5:3",
																"nodeType": "YulIdentifier",
																"src": "1741:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1731:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1731:6:3"
																}
															]
														},
														{
															"nativeSrc": "1755:16:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1755:16:3",
															"value": {
																"kind": "number",
																"nativeSrc": "1770:1:3",
																"nodeType": "YulLiteral",
																"src": "1770:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1759:7:3",
																	"nodeType": "YulTypedName",
																	"src": "1759:7:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1780:43:3",
															"nodeType": "YulAssignment",
															"src": "1780:43:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1808:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1808:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1819:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1819:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1804:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1804:3:3"
																		},
																		"nativeSrc": "1804:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1804:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1791:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1791:12:3"
																},
																"nativeSrc": "1791:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1791:32:3"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1780:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1780:7:3"
																}
															]
														},
														{
															"nativeSrc": "1832:17:3",
															"nodeType": "YulAssignment",
															"src": "1832:17:3",
															"value": {
																"name": "value_1",
																"nativeSrc": "1842:7:3",
																"nodeType": "YulIdentifier",
																"src": "1842:7:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1832:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1832:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1449:406:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1494:9:3",
														"nodeType": "YulTypedName",
														"src": "1494:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1505:7:3",
														"nodeType": "YulTypedName",
														"src": "1505:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1517:6:3",
														"nodeType": "YulTypedName",
														"src": "1517:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1525:6:3",
														"nodeType": "YulTypedName",
														"src": "1525:6:3",
														"type": ""
													}
												],
												"src": "1449:406:3"
											},
											{
												"body": {
													"nativeSrc": "2034:180:3",
													"nodeType": "YulBlock",
													"src": "2034:180:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2051:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2051:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2062:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2062:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2044:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2044:6:3"
																},
																"nativeSrc": "2044:21:3",
																"nodeType": "YulFunctionCall",
																"src": "2044:21:3"
															},
															"nativeSrc": "2044:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "2044:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2085:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2085:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2096:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2096:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2081:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2081:3:3"
																		},
																		"nativeSrc": "2081:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2081:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2101:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2101:2:3",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2074:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2074:6:3"
																},
																"nativeSrc": "2074:30:3",
																"nodeType": "YulFunctionCall",
																"src": "2074:30:3"
															},
															"nativeSrc": "2074:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "2074:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2124:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2124:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2135:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2135:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2120:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2120:3:3"
																		},
																		"nativeSrc": "2120:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2120:18:3"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f742074686520546f6b656e466163746f7279",
																		"kind": "string",
																		"nativeSrc": "2140:32:3",
																		"nodeType": "YulLiteral",
																		"src": "2140:32:3",
																		"type": "",
																		"value": "Caller is not the TokenFactory"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2113:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2113:6:3"
																},
																"nativeSrc": "2113:60:3",
																"nodeType": "YulFunctionCall",
																"src": "2113:60:3"
															},
															"nativeSrc": "2113:60:3",
															"nodeType": "YulExpressionStatement",
															"src": "2113:60:3"
														},
														{
															"nativeSrc": "2182:26:3",
															"nodeType": "YulAssignment",
															"src": "2182:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2194:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2194:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2205:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2205:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2190:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2190:3:3"
																},
																"nativeSrc": "2190:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2190:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2182:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2182:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b8ea75a0f3a9e6012a5af112995bbcc8ce3975458fe2563873da1857fe3c491c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1860:354:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2011:9:3",
														"nodeType": "YulTypedName",
														"src": "2011:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2025:4:3",
														"nodeType": "YulTypedName",
														"src": "2025:4:3",
														"type": ""
													}
												],
												"src": "1860:354:3"
											},
											{
												"body": {
													"nativeSrc": "2251:95:3",
													"nodeType": "YulBlock",
													"src": "2251:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2268:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2268:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2275:3:3",
																				"nodeType": "YulLiteral",
																				"src": "2275:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2280:10:3",
																				"nodeType": "YulLiteral",
																				"src": "2280:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2271:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2271:3:3"
																		},
																		"nativeSrc": "2271:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2271:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2261:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2261:6:3"
																},
																"nativeSrc": "2261:31:3",
																"nodeType": "YulFunctionCall",
																"src": "2261:31:3"
															},
															"nativeSrc": "2261:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "2261:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2308:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2308:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2311:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2311:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2301:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2301:6:3"
																},
																"nativeSrc": "2301:15:3",
																"nodeType": "YulFunctionCall",
																"src": "2301:15:3"
															},
															"nativeSrc": "2301:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "2301:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2332:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2332:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2335:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2335:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2325:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2325:6:3"
																},
																"nativeSrc": "2325:15:3",
																"nodeType": "YulFunctionCall",
																"src": "2325:15:3"
															},
															"nativeSrc": "2325:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "2325:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2219:127:3",
												"nodeType": "YulFunctionDefinition",
												"src": "2219:127:3"
											},
											{
												"body": {
													"nativeSrc": "2399:77:3",
													"nodeType": "YulBlock",
													"src": "2399:77:3",
													"statements": [
														{
															"nativeSrc": "2409:16:3",
															"nodeType": "YulAssignment",
															"src": "2409:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2420:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2420:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2423:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2423:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2416:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2416:3:3"
																},
																"nativeSrc": "2416:9:3",
																"nodeType": "YulFunctionCall",
																"src": "2416:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2409:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2409:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2448:22:3",
																"nodeType": "YulBlock",
																"src": "2448:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2450:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "2450:16:3"
																			},
																			"nativeSrc": "2450:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2450:18:3"
																		},
																		"nativeSrc": "2450:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2450:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2440:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2440:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2443:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2443:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2437:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "2437:2:3"
																},
																"nativeSrc": "2437:10:3",
																"nodeType": "YulFunctionCall",
																"src": "2437:10:3"
															},
															"nativeSrc": "2434:36:3",
															"nodeType": "YulIf",
															"src": "2434:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2351:125:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2382:1:3",
														"nodeType": "YulTypedName",
														"src": "2382:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2385:1:3",
														"nodeType": "YulTypedName",
														"src": "2385:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2391:3:3",
														"nodeType": "YulTypedName",
														"src": "2391:3:3",
														"type": ""
													}
												],
												"src": "2351:125:3"
											},
											{
												"body": {
													"nativeSrc": "2655:176:3",
													"nodeType": "YulBlock",
													"src": "2655:176:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2672:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2672:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2683:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2683:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2665:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2665:6:3"
																},
																"nativeSrc": "2665:21:3",
																"nodeType": "YulFunctionCall",
																"src": "2665:21:3"
															},
															"nativeSrc": "2665:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "2665:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2706:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2706:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2717:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2717:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2702:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2702:3:3"
																		},
																		"nativeSrc": "2702:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2702:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2722:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2722:2:3",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2695:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2695:6:3"
																},
																"nativeSrc": "2695:30:3",
																"nodeType": "YulFunctionCall",
																"src": "2695:30:3"
															},
															"nativeSrc": "2695:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "2695:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2745:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2745:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2756:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2756:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2741:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2741:3:3"
																		},
																		"nativeSrc": "2741:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2741:18:3"
																	},
																	{
																		"hexValue": "546f74616c207461782063616e6e6f7420657863656564203525",
																		"kind": "string",
																		"nativeSrc": "2761:28:3",
																		"nodeType": "YulLiteral",
																		"src": "2761:28:3",
																		"type": "",
																		"value": "Total tax cannot exceed 5%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2734:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2734:6:3"
																},
																"nativeSrc": "2734:56:3",
																"nodeType": "YulFunctionCall",
																"src": "2734:56:3"
															},
															"nativeSrc": "2734:56:3",
															"nodeType": "YulExpressionStatement",
															"src": "2734:56:3"
														},
														{
															"nativeSrc": "2799:26:3",
															"nodeType": "YulAssignment",
															"src": "2799:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2811:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2811:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2822:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2822:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2807:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2807:3:3"
																},
																"nativeSrc": "2807:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2807:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2799:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2799:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d870e9ea7e8ae072dc4fb122bdca67cbc638e412fb9e2679cef14b441dc80a6c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2481:350:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2632:9:3",
														"nodeType": "YulTypedName",
														"src": "2632:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2646:4:3",
														"nodeType": "YulTypedName",
														"src": "2646:4:3",
														"type": ""
													}
												],
												"src": "2481:350:3"
											},
											{
												"body": {
													"nativeSrc": "3010:171:3",
													"nodeType": "YulBlock",
													"src": "3010:171:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3027:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3027:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3038:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3038:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3020:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3020:6:3"
																},
																"nativeSrc": "3020:21:3",
																"nodeType": "YulFunctionCall",
																"src": "3020:21:3"
															},
															"nativeSrc": "3020:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "3020:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3061:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3061:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3072:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3072:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3057:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3057:3:3"
																		},
																		"nativeSrc": "3057:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3057:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3077:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3077:2:3",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3050:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3050:6:3"
																},
																"nativeSrc": "3050:30:3",
																"nodeType": "YulFunctionCall",
																"src": "3050:30:3"
															},
															"nativeSrc": "3050:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "3050:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3100:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3100:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3111:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3111:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3096:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3096:3:3"
																		},
																		"nativeSrc": "3096:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3096:18:3"
																	},
																	{
																		"hexValue": "4d7573742073656c6c20736f6d6520746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "3116:23:3",
																		"nodeType": "YulLiteral",
																		"src": "3116:23:3",
																		"type": "",
																		"value": "Must sell some tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3089:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3089:6:3"
																},
																"nativeSrc": "3089:51:3",
																"nodeType": "YulFunctionCall",
																"src": "3089:51:3"
															},
															"nativeSrc": "3089:51:3",
															"nodeType": "YulExpressionStatement",
															"src": "3089:51:3"
														},
														{
															"nativeSrc": "3149:26:3",
															"nodeType": "YulAssignment",
															"src": "3149:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3161:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3161:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3172:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3172:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3157:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3157:3:3"
																},
																"nativeSrc": "3157:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3157:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3149:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3149:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3a043fa2cdaa46687fc14c42d2ff479d15d8b04d3705d1434247f8c2ff3c5464__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2836:345:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2987:9:3",
														"nodeType": "YulTypedName",
														"src": "2987:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3001:4:3",
														"nodeType": "YulTypedName",
														"src": "3001:4:3",
														"type": ""
													}
												],
												"src": "2836:345:3"
											},
											{
												"body": {
													"nativeSrc": "3238:116:3",
													"nodeType": "YulBlock",
													"src": "3238:116:3",
													"statements": [
														{
															"nativeSrc": "3248:20:3",
															"nodeType": "YulAssignment",
															"src": "3248:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3263:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3263:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3266:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3266:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3259:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3259:3:3"
																},
																"nativeSrc": "3259:9:3",
																"nodeType": "YulFunctionCall",
																"src": "3259:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3248:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "3248:7:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3326:22:3",
																"nodeType": "YulBlock",
																"src": "3326:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3328:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "3328:16:3"
																			},
																			"nativeSrc": "3328:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3328:18:3"
																		},
																		"nativeSrc": "3328:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3328:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3297:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "3297:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3290:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "3290:6:3"
																				},
																				"nativeSrc": "3290:9:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3290:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3304:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "3304:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3311:7:3",
																								"nodeType": "YulIdentifier",
																								"src": "3311:7:3"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3320:1:3",
																								"nodeType": "YulIdentifier",
																								"src": "3320:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3307:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "3307:3:3"
																						},
																						"nativeSrc": "3307:15:3",
																						"nodeType": "YulFunctionCall",
																						"src": "3307:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3301:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "3301:2:3"
																				},
																				"nativeSrc": "3301:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3301:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3287:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "3287:2:3"
																		},
																		"nativeSrc": "3287:37:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3287:37:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3280:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3280:6:3"
																},
																"nativeSrc": "3280:45:3",
																"nodeType": "YulFunctionCall",
																"src": "3280:45:3"
															},
															"nativeSrc": "3277:71:3",
															"nodeType": "YulIf",
															"src": "3277:71:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3186:168:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3217:1:3",
														"nodeType": "YulTypedName",
														"src": "3217:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3220:1:3",
														"nodeType": "YulTypedName",
														"src": "3220:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3226:7:3",
														"nodeType": "YulTypedName",
														"src": "3226:7:3",
														"type": ""
													}
												],
												"src": "3186:168:3"
											},
											{
												"body": {
													"nativeSrc": "3405:171:3",
													"nodeType": "YulBlock",
													"src": "3405:171:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "3436:111:3",
																"nodeType": "YulBlock",
																"src": "3436:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3457:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3457:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3464:3:3",
																							"nodeType": "YulLiteral",
																							"src": "3464:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3469:10:3",
																							"nodeType": "YulLiteral",
																							"src": "3469:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3460:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "3460:3:3"
																					},
																					"nativeSrc": "3460:20:3",
																					"nodeType": "YulFunctionCall",
																					"src": "3460:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3450:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3450:6:3"
																			},
																			"nativeSrc": "3450:31:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3450:31:3"
																		},
																		"nativeSrc": "3450:31:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3450:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3501:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3501:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3504:4:3",
																					"nodeType": "YulLiteral",
																					"src": "3504:4:3",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3494:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3494:6:3"
																			},
																			"nativeSrc": "3494:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3494:15:3"
																		},
																		"nativeSrc": "3494:15:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3494:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3529:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3529:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3532:4:3",
																					"nodeType": "YulLiteral",
																					"src": "3532:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3522:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3522:6:3"
																			},
																			"nativeSrc": "3522:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3522:15:3"
																		},
																		"nativeSrc": "3522:15:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3522:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3425:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3425:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3418:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3418:6:3"
																},
																"nativeSrc": "3418:9:3",
																"nodeType": "YulFunctionCall",
																"src": "3418:9:3"
															},
															"nativeSrc": "3415:132:3",
															"nodeType": "YulIf",
															"src": "3415:132:3"
														},
														{
															"nativeSrc": "3556:14:3",
															"nodeType": "YulAssignment",
															"src": "3556:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3565:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3565:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3568:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3568:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3561:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3561:3:3"
																},
																"nativeSrc": "3561:9:3",
																"nodeType": "YulFunctionCall",
																"src": "3561:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3556:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "3556:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "3359:217:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3390:1:3",
														"nodeType": "YulTypedName",
														"src": "3390:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3393:1:3",
														"nodeType": "YulTypedName",
														"src": "3393:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3399:1:3",
														"nodeType": "YulTypedName",
														"src": "3399:1:3",
														"type": ""
													}
												],
												"src": "3359:217:3"
											},
											{
												"body": {
													"nativeSrc": "3630:79:3",
													"nodeType": "YulBlock",
													"src": "3630:79:3",
													"statements": [
														{
															"nativeSrc": "3640:17:3",
															"nodeType": "YulAssignment",
															"src": "3640:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3652:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3652:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3655:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3655:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3648:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3648:3:3"
																},
																"nativeSrc": "3648:9:3",
																"nodeType": "YulFunctionCall",
																"src": "3648:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3640:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3640:4:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3681:22:3",
																"nodeType": "YulBlock",
																"src": "3681:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3683:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "3683:16:3"
																			},
																			"nativeSrc": "3683:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3683:18:3"
																		},
																		"nativeSrc": "3683:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3683:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3672:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "3672:4:3"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3678:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3678:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3669:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "3669:2:3"
																},
																"nativeSrc": "3669:11:3",
																"nodeType": "YulFunctionCall",
																"src": "3669:11:3"
															},
															"nativeSrc": "3666:37:3",
															"nodeType": "YulIf",
															"src": "3666:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3581:128:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3612:1:3",
														"nodeType": "YulTypedName",
														"src": "3612:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3615:1:3",
														"nodeType": "YulTypedName",
														"src": "3615:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3621:4:3",
														"nodeType": "YulTypedName",
														"src": "3621:4:3",
														"type": ""
													}
												],
												"src": "3581:128:3"
											},
											{
												"body": {
													"nativeSrc": "3871:214:3",
													"nodeType": "YulBlock",
													"src": "3871:214:3",
													"statements": [
														{
															"nativeSrc": "3881:26:3",
															"nodeType": "YulAssignment",
															"src": "3881:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3893:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3893:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3904:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3904:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3889:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3889:3:3"
																},
																"nativeSrc": "3889:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3889:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3881:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3881:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3923:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3923:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3938:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3938:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3954:3:3",
																								"nodeType": "YulLiteral",
																								"src": "3954:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3959:1:3",
																								"nodeType": "YulLiteral",
																								"src": "3959:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3950:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "3950:3:3"
																						},
																						"nativeSrc": "3950:11:3",
																						"nodeType": "YulFunctionCall",
																						"src": "3950:11:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3963:1:3",
																						"nodeType": "YulLiteral",
																						"src": "3963:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3946:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3946:3:3"
																				},
																				"nativeSrc": "3946:19:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3946:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3934:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3934:3:3"
																		},
																		"nativeSrc": "3934:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3934:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3916:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3916:6:3"
																},
																"nativeSrc": "3916:51:3",
																"nodeType": "YulFunctionCall",
																"src": "3916:51:3"
															},
															"nativeSrc": "3916:51:3",
															"nodeType": "YulExpressionStatement",
															"src": "3916:51:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3987:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3987:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3998:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3998:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3983:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3983:3:3"
																		},
																		"nativeSrc": "3983:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3983:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "4007:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4007:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4023:3:3",
																								"nodeType": "YulLiteral",
																								"src": "4023:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4028:1:3",
																								"nodeType": "YulLiteral",
																								"src": "4028:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4019:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "4019:3:3"
																						},
																						"nativeSrc": "4019:11:3",
																						"nodeType": "YulFunctionCall",
																						"src": "4019:11:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4032:1:3",
																						"nodeType": "YulLiteral",
																						"src": "4032:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4015:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "4015:3:3"
																				},
																				"nativeSrc": "4015:19:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4015:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4003:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4003:3:3"
																		},
																		"nativeSrc": "4003:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4003:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3976:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3976:6:3"
																},
																"nativeSrc": "3976:60:3",
																"nodeType": "YulFunctionCall",
																"src": "3976:60:3"
															},
															"nativeSrc": "3976:60:3",
															"nodeType": "YulExpressionStatement",
															"src": "3976:60:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4056:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4056:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4067:2:3",
																				"nodeType": "YulLiteral",
																				"src": "4067:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4052:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4052:3:3"
																		},
																		"nativeSrc": "4052:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4052:18:3"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4072:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4072:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4045:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:3"
																},
																"nativeSrc": "4045:34:3",
																"nodeType": "YulFunctionCall",
																"src": "4045:34:3"
															},
															"nativeSrc": "4045:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "4045:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3714:371:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3824:9:3",
														"nodeType": "YulTypedName",
														"src": "3824:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3835:6:3",
														"nodeType": "YulTypedName",
														"src": "3835:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3843:6:3",
														"nodeType": "YulTypedName",
														"src": "3843:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3851:6:3",
														"nodeType": "YulTypedName",
														"src": "3851:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3862:4:3",
														"nodeType": "YulTypedName",
														"src": "3862:4:3",
														"type": ""
													}
												],
												"src": "3714:371:3"
											},
											{
												"body": {
													"nativeSrc": "4168:167:3",
													"nodeType": "YulBlock",
													"src": "4168:167:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "4214:16:3",
																"nodeType": "YulBlock",
																"src": "4214:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4223:1:3",
																					"nodeType": "YulLiteral",
																					"src": "4223:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4226:1:3",
																					"nodeType": "YulLiteral",
																					"src": "4226:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4216:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4216:6:3"
																			},
																			"nativeSrc": "4216:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4216:12:3"
																		},
																		"nativeSrc": "4216:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4216:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4189:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "4189:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4198:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4198:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4185:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4185:3:3"
																		},
																		"nativeSrc": "4185:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4185:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4210:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4210:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4181:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4181:3:3"
																},
																"nativeSrc": "4181:32:3",
																"nodeType": "YulFunctionCall",
																"src": "4181:32:3"
															},
															"nativeSrc": "4178:52:3",
															"nodeType": "YulIf",
															"src": "4178:52:3"
														},
														{
															"nativeSrc": "4239:29:3",
															"nodeType": "YulVariableDeclaration",
															"src": "4239:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4258:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4258:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4252:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "4252:5:3"
																},
																"nativeSrc": "4252:16:3",
																"nodeType": "YulFunctionCall",
																"src": "4252:16:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4243:5:3",
																	"nodeType": "YulTypedName",
																	"src": "4243:5:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4299:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "4299:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "4277:21:3",
																	"nodeType": "YulIdentifier",
																	"src": "4277:21:3"
																},
																"nativeSrc": "4277:28:3",
																"nodeType": "YulFunctionCall",
																"src": "4277:28:3"
															},
															"nativeSrc": "4277:28:3",
															"nodeType": "YulExpressionStatement",
															"src": "4277:28:3"
														},
														{
															"nativeSrc": "4314:15:3",
															"nodeType": "YulAssignment",
															"src": "4314:15:3",
															"value": {
																"name": "value",
																"nativeSrc": "4324:5:3",
																"nodeType": "YulIdentifier",
																"src": "4324:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4314:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4314:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "4090:245:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4134:9:3",
														"nodeType": "YulTypedName",
														"src": "4134:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4145:7:3",
														"nodeType": "YulTypedName",
														"src": "4145:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4157:6:3",
														"nodeType": "YulTypedName",
														"src": "4157:6:3",
														"type": ""
													}
												],
												"src": "4090:245:3"
											},
											{
												"body": {
													"nativeSrc": "4469:145:3",
													"nodeType": "YulBlock",
													"src": "4469:145:3",
													"statements": [
														{
															"nativeSrc": "4479:26:3",
															"nodeType": "YulAssignment",
															"src": "4479:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4491:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4491:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4502:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4502:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4487:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:3"
																},
																"nativeSrc": "4487:18:3",
																"nodeType": "YulFunctionCall",
																"src": "4487:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4479:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4479:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4521:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4521:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4536:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4536:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4552:3:3",
																								"nodeType": "YulLiteral",
																								"src": "4552:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4557:1:3",
																								"nodeType": "YulLiteral",
																								"src": "4557:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4548:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "4548:3:3"
																						},
																						"nativeSrc": "4548:11:3",
																						"nodeType": "YulFunctionCall",
																						"src": "4548:11:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4561:1:3",
																						"nodeType": "YulLiteral",
																						"src": "4561:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4544:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "4544:3:3"
																				},
																				"nativeSrc": "4544:19:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4544:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4532:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4532:3:3"
																		},
																		"nativeSrc": "4532:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4532:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4514:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4514:6:3"
																},
																"nativeSrc": "4514:51:3",
																"nodeType": "YulFunctionCall",
																"src": "4514:51:3"
															},
															"nativeSrc": "4514:51:3",
															"nodeType": "YulExpressionStatement",
															"src": "4514:51:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4585:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4585:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4596:2:3",
																				"nodeType": "YulLiteral",
																				"src": "4596:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4581:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4581:3:3"
																		},
																		"nativeSrc": "4581:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4581:18:3"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4601:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4601:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4574:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4574:6:3"
																},
																"nativeSrc": "4574:34:3",
																"nodeType": "YulFunctionCall",
																"src": "4574:34:3"
															},
															"nativeSrc": "4574:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "4574:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4340:274:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4430:9:3",
														"nodeType": "YulTypedName",
														"src": "4430:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4441:6:3",
														"nodeType": "YulTypedName",
														"src": "4441:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4449:6:3",
														"nodeType": "YulTypedName",
														"src": "4449:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4460:4:3",
														"nodeType": "YulTypedName",
														"src": "4460:4:3",
														"type": ""
													}
												],
												"src": "4340:274:3"
											},
											{
												"body": {
													"nativeSrc": "4810:14:3",
													"nodeType": "YulBlock",
													"src": "4810:14:3",
													"statements": [
														{
															"nativeSrc": "4812:10:3",
															"nodeType": "YulAssignment",
															"src": "4812:10:3",
															"value": {
																"name": "pos",
																"nativeSrc": "4819:3:3",
																"nodeType": "YulIdentifier",
																"src": "4819:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4812:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4812:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "4619:205:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4794:3:3",
														"nodeType": "YulTypedName",
														"src": "4794:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4802:3:3",
														"nodeType": "YulTypedName",
														"src": "4802:3:3",
														"type": ""
													}
												],
												"src": "4619:205:3"
											},
											{
												"body": {
													"nativeSrc": "5003:171:3",
													"nodeType": "YulBlock",
													"src": "5003:171:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5020:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5020:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5031:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5031:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5013:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5013:6:3"
																},
																"nativeSrc": "5013:21:3",
																"nodeType": "YulFunctionCall",
																"src": "5013:21:3"
															},
															"nativeSrc": "5013:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "5013:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5065:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:3"
																		},
																		"nativeSrc": "5050:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5070:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5070:2:3",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5043:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5043:6:3"
																},
																"nativeSrc": "5043:30:3",
																"nodeType": "YulFunctionCall",
																"src": "5043:30:3"
															},
															"nativeSrc": "5043:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "5043:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5093:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5093:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5104:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5104:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5089:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5089:3:3"
																		},
																		"nativeSrc": "5089:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5089:18:3"
																	},
																	{
																		"hexValue": "4574686572207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "5109:23:3",
																		"nodeType": "YulLiteral",
																		"src": "5109:23:3",
																		"type": "",
																		"value": "Ether transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5082:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5082:6:3"
																},
																"nativeSrc": "5082:51:3",
																"nodeType": "YulFunctionCall",
																"src": "5082:51:3"
															},
															"nativeSrc": "5082:51:3",
															"nodeType": "YulExpressionStatement",
															"src": "5082:51:3"
														},
														{
															"nativeSrc": "5142:26:3",
															"nodeType": "YulAssignment",
															"src": "5142:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5154:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5154:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5165:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5165:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5150:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5150:3:3"
																},
																"nativeSrc": "5150:18:3",
																"nodeType": "YulFunctionCall",
																"src": "5150:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5142:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5142:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4829:345:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4980:9:3",
														"nodeType": "YulTypedName",
														"src": "4980:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4994:4:3",
														"nodeType": "YulTypedName",
														"src": "4994:4:3",
														"type": ""
													}
												],
												"src": "4829:345:3"
											},
											{
												"body": {
													"nativeSrc": "5260:103:3",
													"nodeType": "YulBlock",
													"src": "5260:103:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "5306:16:3",
																"nodeType": "YulBlock",
																"src": "5306:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5315:1:3",
																					"nodeType": "YulLiteral",
																					"src": "5315:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5318:1:3",
																					"nodeType": "YulLiteral",
																					"src": "5318:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5308:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5308:6:3"
																			},
																			"nativeSrc": "5308:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5308:12:3"
																		},
																		"nativeSrc": "5308:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5308:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5281:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "5281:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5290:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5290:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5277:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:3"
																		},
																		"nativeSrc": "5277:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5277:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5302:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5302:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5273:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5273:3:3"
																},
																"nativeSrc": "5273:32:3",
																"nodeType": "YulFunctionCall",
																"src": "5273:32:3"
															},
															"nativeSrc": "5270:52:3",
															"nodeType": "YulIf",
															"src": "5270:52:3"
														},
														{
															"nativeSrc": "5331:26:3",
															"nodeType": "YulAssignment",
															"src": "5331:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5347:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5347:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5341:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "5341:5:3"
																},
																"nativeSrc": "5341:16:3",
																"nodeType": "YulFunctionCall",
																"src": "5341:16:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5331:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5331:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "5179:184:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5226:9:3",
														"nodeType": "YulTypedName",
														"src": "5226:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5237:7:3",
														"nodeType": "YulTypedName",
														"src": "5237:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5249:6:3",
														"nodeType": "YulTypedName",
														"src": "5249:6:3",
														"type": ""
													}
												],
												"src": "5179:184:3"
											},
											{
												"body": {
													"nativeSrc": "5542:179:3",
													"nodeType": "YulBlock",
													"src": "5542:179:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5559:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5559:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5570:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5570:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5552:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5552:6:3"
																},
																"nativeSrc": "5552:21:3",
																"nodeType": "YulFunctionCall",
																"src": "5552:21:3"
															},
															"nativeSrc": "5552:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "5552:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5593:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5593:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5604:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5604:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5589:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5589:3:3"
																		},
																		"nativeSrc": "5589:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5589:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5609:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5609:2:3",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5582:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5582:6:3"
																},
																"nativeSrc": "5582:30:3",
																"nodeType": "YulFunctionCall",
																"src": "5582:30:3"
															},
															"nativeSrc": "5582:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "5582:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5632:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5632:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5643:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5643:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5628:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5628:3:3"
																		},
																		"nativeSrc": "5628:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5628:18:3"
																	},
																	{
																		"hexValue": "4d7573742073656e6420457468657220746f2062757920746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "5648:31:3",
																		"nodeType": "YulLiteral",
																		"src": "5648:31:3",
																		"type": "",
																		"value": "Must send Ether to buy tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5621:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5621:6:3"
																},
																"nativeSrc": "5621:59:3",
																"nodeType": "YulFunctionCall",
																"src": "5621:59:3"
															},
															"nativeSrc": "5621:59:3",
															"nodeType": "YulExpressionStatement",
															"src": "5621:59:3"
														},
														{
															"nativeSrc": "5689:26:3",
															"nodeType": "YulAssignment",
															"src": "5689:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5701:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5701:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5712:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5712:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5697:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5697:3:3"
																},
																"nativeSrc": "5697:18:3",
																"nodeType": "YulFunctionCall",
																"src": "5697:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5689:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5689:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_800f8b110ecf89d81c829aed87c641aaec4e62de6f9a2192992b7e9a1db6fe77__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5368:353:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5519:9:3",
														"nodeType": "YulTypedName",
														"src": "5519:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5533:4:3",
														"nodeType": "YulTypedName",
														"src": "5533:4:3",
														"type": ""
													}
												],
												"src": "5368:353:3"
											},
											{
												"body": {
													"nativeSrc": "5900:223:3",
													"nodeType": "YulBlock",
													"src": "5900:223:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5917:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5917:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5928:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5928:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5910:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5910:6:3"
																},
																"nativeSrc": "5910:21:3",
																"nodeType": "YulFunctionCall",
																"src": "5910:21:3"
															},
															"nativeSrc": "5910:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "5910:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5951:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5951:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5962:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5962:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5947:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5947:3:3"
																		},
																		"nativeSrc": "5947:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5947:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5967:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5967:2:3",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5940:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5940:6:3"
																},
																"nativeSrc": "5940:30:3",
																"nodeType": "YulFunctionCall",
																"src": "5940:30:3"
															},
															"nativeSrc": "5940:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "5940:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5990:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5990:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6001:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6001:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5986:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5986:3:3"
																		},
																		"nativeSrc": "5986:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5986:18:3"
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e642074617820746f2064657620616464726573",
																		"kind": "string",
																		"nativeSrc": "6006:34:3",
																		"nodeType": "YulLiteral",
																		"src": "6006:34:3",
																		"type": "",
																		"value": "Failed to send tax to dev addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5979:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5979:6:3"
																},
																"nativeSrc": "5979:62:3",
																"nodeType": "YulFunctionCall",
																"src": "5979:62:3"
															},
															"nativeSrc": "5979:62:3",
															"nodeType": "YulExpressionStatement",
															"src": "5979:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6061:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6061:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6072:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6072:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6057:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6057:3:3"
																		},
																		"nativeSrc": "6057:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6057:18:3"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nativeSrc": "6077:3:3",
																		"nodeType": "YulLiteral",
																		"src": "6077:3:3",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6050:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6050:6:3"
																},
																"nativeSrc": "6050:31:3",
																"nodeType": "YulFunctionCall",
																"src": "6050:31:3"
															},
															"nativeSrc": "6050:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "6050:31:3"
														},
														{
															"nativeSrc": "6090:27:3",
															"nodeType": "YulAssignment",
															"src": "6090:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6102:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6102:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6113:3:3",
																		"nodeType": "YulLiteral",
																		"src": "6113:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6098:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6098:3:3"
																},
																"nativeSrc": "6098:19:3",
																"nodeType": "YulFunctionCall",
																"src": "6098:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6090:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6090:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b0484cda00f5ce0a67b245b24fbbebd616543c38f2e954e168cb776c8eceb4bc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5726:397:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5877:9:3",
														"nodeType": "YulTypedName",
														"src": "5877:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5891:4:3",
														"nodeType": "YulTypedName",
														"src": "5891:4:3",
														"type": ""
													}
												],
												"src": "5726:397:3"
											},
											{
												"body": {
													"nativeSrc": "6302:174:3",
													"nodeType": "YulBlock",
													"src": "6302:174:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6319:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6319:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6330:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6330:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6312:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6312:6:3"
																},
																"nativeSrc": "6312:21:3",
																"nodeType": "YulFunctionCall",
																"src": "6312:21:3"
															},
															"nativeSrc": "6312:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "6312:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6353:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6353:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6364:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6364:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6349:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6349:3:3"
																		},
																		"nativeSrc": "6349:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6349:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6369:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6369:2:3",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6342:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6342:6:3"
																},
																"nativeSrc": "6342:30:3",
																"nodeType": "YulFunctionCall",
																"src": "6342:30:3"
															},
															"nativeSrc": "6342:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "6342:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6392:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6392:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6403:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6403:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6388:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6388:3:3"
																		},
																		"nativeSrc": "6388:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6388:18:3"
																	},
																	{
																		"hexValue": "506f6f6c20616c726561647920696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "6408:26:3",
																		"nodeType": "YulLiteral",
																		"src": "6408:26:3",
																		"type": "",
																		"value": "Pool already initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6381:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6381:6:3"
																},
																"nativeSrc": "6381:54:3",
																"nodeType": "YulFunctionCall",
																"src": "6381:54:3"
															},
															"nativeSrc": "6381:54:3",
															"nodeType": "YulExpressionStatement",
															"src": "6381:54:3"
														},
														{
															"nativeSrc": "6444:26:3",
															"nodeType": "YulAssignment",
															"src": "6444:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6456:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6456:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6467:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6467:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6452:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6452:3:3"
																},
																"nativeSrc": "6452:18:3",
																"nodeType": "YulFunctionCall",
																"src": "6452:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6444:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6444:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3c53b421f0380174af9aa0c2340735c620f8ea9a00cdf4f39196d23bb404824__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6128:348:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6279:9:3",
														"nodeType": "YulTypedName",
														"src": "6279:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6293:4:3",
														"nodeType": "YulTypedName",
														"src": "6293:4:3",
														"type": ""
													}
												],
												"src": "6128:348:3"
											},
											{
												"body": {
													"nativeSrc": "6655:243:3",
													"nodeType": "YulBlock",
													"src": "6655:243:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6672:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6672:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6683:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6683:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6665:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6665:6:3"
																},
																"nativeSrc": "6665:21:3",
																"nodeType": "YulFunctionCall",
																"src": "6665:21:3"
															},
															"nativeSrc": "6665:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "6665:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6706:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6706:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6717:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6717:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6702:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6702:3:3"
																		},
																		"nativeSrc": "6702:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6702:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6722:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6722:2:3",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6695:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6695:6:3"
																},
																"nativeSrc": "6695:30:3",
																"nodeType": "YulFunctionCall",
																"src": "6695:30:3"
															},
															"nativeSrc": "6695:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "6695:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6745:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6745:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6756:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6756:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6741:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6741:3:3"
																		},
																		"nativeSrc": "6741:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6741:18:3"
																	},
																	{
																		"hexValue": "496e697469616c206e617469766520746f6b656e20616d6f756e74206d757374",
																		"kind": "string",
																		"nativeSrc": "6761:34:3",
																		"nodeType": "YulLiteral",
																		"src": "6761:34:3",
																		"type": "",
																		"value": "Initial native token amount must"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6734:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6734:6:3"
																},
																"nativeSrc": "6734:62:3",
																"nodeType": "YulFunctionCall",
																"src": "6734:62:3"
															},
															"nativeSrc": "6734:62:3",
															"nodeType": "YulExpressionStatement",
															"src": "6734:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6816:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6816:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6827:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6827:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6812:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6812:3:3"
																		},
																		"nativeSrc": "6812:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6812:18:3"
																	},
																	{
																		"hexValue": "2062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "6832:23:3",
																		"nodeType": "YulLiteral",
																		"src": "6832:23:3",
																		"type": "",
																		"value": " be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6805:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6805:6:3"
																},
																"nativeSrc": "6805:51:3",
																"nodeType": "YulFunctionCall",
																"src": "6805:51:3"
															},
															"nativeSrc": "6805:51:3",
															"nodeType": "YulExpressionStatement",
															"src": "6805:51:3"
														},
														{
															"nativeSrc": "6865:27:3",
															"nodeType": "YulAssignment",
															"src": "6865:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6877:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6877:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6888:3:3",
																		"nodeType": "YulLiteral",
																		"src": "6888:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6873:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6873:3:3"
																},
																"nativeSrc": "6873:19:3",
																"nodeType": "YulFunctionCall",
																"src": "6873:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6865:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6865:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b7b83c9e2ce178fbea0fac09eaf176164e6c77ff25594c5d5e1160e0d61e1c10__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6481:417:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6632:9:3",
														"nodeType": "YulTypedName",
														"src": "6632:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:3",
														"nodeType": "YulTypedName",
														"src": "6646:4:3",
														"type": ""
													}
												],
												"src": "6481:417:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_b8ea75a0f3a9e6012a5af112995bbcc8ce3975458fe2563873da1857fe3c491c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Caller is not the TokenFactory\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_d870e9ea7e8ae072dc4fb122bdca67cbc638e412fb9e2679cef14b441dc80a6c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Total tax cannot exceed 5%\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3a043fa2cdaa46687fc14c42d2ff479d15d8b04d3705d1434247f8c2ff3c5464__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Must sell some tokens\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Ether transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_800f8b110ecf89d81c829aed87c641aaec4e62de6f9a2192992b7e9a1db6fe77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Must send Ether to buy tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b0484cda00f5ce0a67b245b24fbbebd616543c38f2e954e168cb776c8eceb4bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Failed to send tax to dev addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d3c53b421f0380174af9aa0c2340735c620f8ea9a00cdf4f39196d23bb404824__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Pool already initialized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b7b83c9e2ce178fbea0fac09eaf176164e6c77ff25594c5d5e1160e0d61e1c10__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"Initial native token amount must\")\n        mstore(add(headStart, 96), \" be greater than zero\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101095760003560e01c80634f7041a511610095578063aac8e6a411610064578063aac8e6a4146102c4578063c91e5149146102e4578063cc1776d3146102fa578063cd6dc68714610310578063e77772fe1461032357600080fd5b80634f7041a5146102665780635a76f25e1461027c57806388e22f7f14610292578063a4821719146102bc57600080fd5b80633ad10ef6116100dc5780633ad10ef6146101bb578063436d3340146101db578063443cb4bc146101fb578063465fa408146102115780634ecce4511461023157600080fd5b80630dfe16811461010e57806312185a391461014b5780632397e4d71461016d57806323e18ddd1461019b575b600080fd5b34801561011a57600080fd5b5060015461012e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561015757600080fd5b5061016b610166366004610d89565b610343565b005b34801561017957600080fd5b5061018d610188366004610d89565b610410565b604051908152602001610142565b3480156101a757600080fd5b5061016b6101b6366004610db3565b6106bc565b3480156101c757600080fd5b5060075461012e906001600160a01b031681565b3480156101e757600080fd5b5061016b6101f6366004610d89565b610727565b34801561020757600080fd5b5061018d60035481565b34801561021d57600080fd5b5061018d61022c366004610d89565b6107e4565b34801561023d57600080fd5b5061025161024c366004610d89565b610850565b60408051928352602083019190915201610142565b34801561027257600080fd5b5061018d60055481565b34801561028857600080fd5b5061018d60045481565b34801561029e57600080fd5b506009546102ac9060ff1681565b6040519015158152602001610142565b61018d61093f565b3480156102d057600080fd5b5061018d6102df366004610d89565b610b92565b3480156102f057600080fd5b5061018d60085481565b34801561030657600080fd5b5061018d60065481565b61016b61031e366004610dd7565b610bf6565b34801561032f57600080fd5b5060025461012e906001600160a01b031681565b6002546001600160a01b031633146103765760405162461bcd60e51b815260040161036d90610e0f565b60405180910390fd5b6032816005546103869190610e5c565b11156103d45760405162461bcd60e51b815260206004820152601a60248201527f546f74616c207461782063616e6e6f7420657863656564203525000000000000604482015260640161036d565b60068190556040518181527fa6255338a5f732d64ceba7f4c18182567f9d1067eb984b46d478b37d72a52d11906020015b60405180910390a150565b600061041a610d5f565b600082116104625760405162461bcd60e51b81526020600482015260156024820152744d7573742073656c6c20736f6d6520746f6b656e7360581b604482015260640161036d565b60006103e8600654846104759190610e75565b61047f9190610e8c565b9050600061048d8285610eae565b6001546040516323b872dd60e01b8152336004820152306024820152604481018790529192506001600160a01b0316906323b872dd906064016020604051808303816000875af11580156104e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105099190610ec1565b5060015460075460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303816000875af115801561055f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105839190610ec1565b506000816003546105949190610e5c565b9050806004546003546105a79190610e75565b6105b19190610e8c565b6004546105be9190610eae565b93508060038190555083600460008282546105d99190610eae565b9091555050604051600090339086908381818185875af1925050503d8060008114610620576040519150601f19603f3d011682016040523d82523d6000602084013e610625565b606091505b505090508061066e5760405162461bcd60e51b8152602060048201526015602482015274115d1a195c881d1c985b9cd9995c8819985a5b1959605a1b604482015260640161036d565b604080518781526020810187905233917fa8ff15eb642b39da3ab82bb74a87b76cc3e1aef2b82b70bc2a35458386db29aa910160405180910390a2505050506106b76001600055565b919050565b6002546001600160a01b031633146106e65760405162461bcd60e51b815260040161036d90610e0f565b6009805460ff19168215159081179091556040519081527fec615c5e0f8d777f63be66955c04b8f91b4a878f984f8e1b9afa7255e83f0ef390602001610405565b6002546001600160a01b031633146107515760405162461bcd60e51b815260040161036d90610e0f565b6032600654826107619190610e5c565b11156107af5760405162461bcd60e51b815260206004820152601a60248201527f546f74616c207461782063616e6e6f7420657863656564203525000000000000604482015260640161036d565b60058190556040518181527f7a758dc8e99047b028278b3e2ff1416d8493a7aacee7a5dc30b6bf93270eccce90602001610405565b6000806103e8600554846107f89190610e75565b6108029190610e8c565b61080c9084610eae565b905060008160045461081e9190610e5c565b9050806004546003546108319190610e75565b61083b9190610e8c565b6003546108489190610eae565b949350505050565b6000806000600160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cc9190610ede565b90506000816108dd866103e8610e75565b6108e79190610e8c565b60095490915060ff1680156108fd575060085481115b1561092f5760085461090f9082610eae565b92506103e861091e8685610e75565b6109289190610e8c565b9350610938565b60009350600092505b5050915091565b6000610949610d5f565b600034116109995760405162461bcd60e51b815260206004820152601d60248201527f4d7573742073656e6420457468657220746f2062757920746f6b656e73000000604482015260640161036d565b60006103e8600554346109ac9190610e75565b6109b69190610e8c565b905060006109c48234610eae565b6007546040519192506000916001600160a01b039091169084908381818185875af1925050503d8060008114610a16576040519150601f19603f3d011682016040523d82523d6000602084013e610a1b565b606091505b5050905080610a765760405162461bcd60e51b815260206004820152602160248201527f4661696c656420746f2073656e642074617820746f20646576206164647265736044820152607360f81b606482015260840161036d565b600082600454610a869190610e5c565b905080600454600354610a999190610e75565b610aa39190610e8c565b600354610ab09190610eae565b9450806004819055508460036000828254610acb9190610eae565b909155505060015460405163a9059cbb60e01b8152336004820152602481018790526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610b21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b459190610ec1565b50604080513481526020810187905233917ff6f342132c7de5e5a1e99c8efae544c94731f3ff093f5c3c97c6973d9415cdfb910160405180910390a250505050610b8f6001600055565b90565b6000806103e860065484610ba69190610e75565b610bb09190610e8c565b610bba9084610eae565b9050600081600354610bcc9190610e5c565b905080600454600354610bdf9190610e75565b610be99190610e8c565b6004546108489190610eae565b610bfe610d5f565b6002546001600160a01b03163314610c285760405162461bcd60e51b815260040161036d90610e0f565b6001546001600160a01b031615610c815760405162461bcd60e51b815260206004820152601860248201527f506f6f6c20616c726561647920696e697469616c697a65640000000000000000604482015260640161036d565b60003411610cef5760405162461bcd60e51b815260206004820152603560248201527f496e697469616c206e617469766520746f6b656e20616d6f756e74206d7573746044820152742062652067726561746572207468616e207a65726f60581b606482015260840161036d565b600180546001600160a01b0319166001600160a01b038416179055600381905534600481905560408051838152602081019290925233917fac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee45910160405180910390a2610d5b6001600055565b5050565b600260005403610d8257604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b600060208284031215610d9b57600080fd5b5035919050565b8015158114610db057600080fd5b50565b600060208284031215610dc557600080fd5b8135610dd081610da2565b9392505050565b60008060408385031215610dea57600080fd5b82356001600160a01b0381168114610e0157600080fd5b946020939093013593505050565b6020808252601e908201527f43616c6c6572206973206e6f742074686520546f6b656e466163746f72790000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610e6f57610e6f610e46565b92915050565b8082028115828204841417610e6f57610e6f610e46565b600082610ea957634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610e6f57610e6f610e46565b600060208284031215610ed357600080fd5b8151610dd081610da2565b600060208284031215610ef057600080fd5b505191905056fea26469706673582212204e76a95c89dce39850e6626dfb579857ccb6e6f17d9e7e37ba0e638b7aa0a28b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F7041A5 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xAAC8E6A4 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAAC8E6A4 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xC91E5149 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xCC1776D3 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xE77772FE EQ PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F7041A5 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x88E22F7F EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xA4821719 EQ PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3AD10EF6 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x3AD10EF6 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x436D3340 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x443CB4BC EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x465FA408 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x4ECCE451 EQ PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x12185A39 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x2397E4D7 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x23E18DDD EQ PUSH2 0x19B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x12E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x343 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x6BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x12E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x1F6 CALLDATASIZE PUSH1 0x4 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x7E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2AC SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x93F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0xB92 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x12E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x376 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36D SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x32 DUP2 PUSH1 0x5 SLOAD PUSH2 0x386 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST GT ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C207461782063616E6E6F7420657863656564203525000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xA6255338A5F732D64CEBA7F4C18182567F9D1067EB984B46D478B37D72A52D11 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41A PUSH2 0xD5F JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x462 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4D7573742073656C6C20736F6D6520746F6B656E73 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x6 SLOAD DUP5 PUSH2 0x475 SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0x47F SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x48D DUP3 DUP6 PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x509 SWAP2 SWAP1 PUSH2 0xEC1 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x55F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x583 SWAP2 SWAP1 PUSH2 0xEC1 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x3 SLOAD PUSH2 0x594 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x5BE SWAP2 SWAP1 PUSH2 0xEAE JUMP JUMPDEST SWAP4 POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5D9 SWAP2 SWAP1 PUSH2 0xEAE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 DUP7 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x620 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x625 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x66E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x115D1A195C881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xA8FF15EB642B39DA3AB82BB74A87B76CC3E1AEF2B82B70BC2A35458386DB29AA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP PUSH2 0x6B7 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36D SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xEC615C5E0F8D777F63BE66955C04B8F91B4A878F984F8E1B9AFA7255E83F0EF3 SWAP1 PUSH1 0x20 ADD PUSH2 0x405 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x751 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36D SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x32 PUSH1 0x6 SLOAD DUP3 PUSH2 0x761 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST GT ISZERO PUSH2 0x7AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C207461782063616E6E6F7420657863656564203525000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x7A758DC8E99047B028278B3E2FF1416D8493A7AACEE7A5DC30B6BF93270ECCCE SWAP1 PUSH1 0x20 ADD PUSH2 0x405 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3E8 PUSH1 0x5 SLOAD DUP5 PUSH2 0x7F8 SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0x802 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x80C SWAP1 DUP5 PUSH2 0xEAE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 SLOAD PUSH2 0x81E SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x831 SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0x83B SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x848 SWAP2 SWAP1 PUSH2 0xEAE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CC SWAP2 SWAP1 PUSH2 0xEDE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x8DD DUP7 PUSH2 0x3E8 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0x8E7 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x8FD JUMPI POP PUSH1 0x8 SLOAD DUP2 GT JUMPDEST ISZERO PUSH2 0x92F JUMPI PUSH1 0x8 SLOAD PUSH2 0x90F SWAP1 DUP3 PUSH2 0xEAE JUMP JUMPDEST SWAP3 POP PUSH2 0x3E8 PUSH2 0x91E DUP7 DUP6 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0x928 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST SWAP4 POP PUSH2 0x938 JUMP JUMPDEST PUSH1 0x0 SWAP4 POP PUSH1 0x0 SWAP3 POP JUMPDEST POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x949 PUSH2 0xD5F JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x999 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073656E6420457468657220746F2062757920746F6B656E73000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH1 0x5 SLOAD CALLVALUE PUSH2 0x9AC SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0x9B6 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9C4 DUP3 CALLVALUE PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA16 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2073656E642074617820746F2064657620616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x4 SLOAD PUSH2 0xA86 SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xA99 SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0xAA3 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xAB0 SWAP2 SWAP1 PUSH2 0xEAE JUMP JUMPDEST SWAP5 POP DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xACB SWAP2 SWAP1 PUSH2 0xEAE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB45 SWAP2 SWAP1 PUSH2 0xEC1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xF6F342132C7DE5E5A1E99C8EFAE544C94731F3FF093F5C3C97C6973D9415CDFB SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP PUSH2 0xB8F PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3E8 PUSH1 0x6 SLOAD DUP5 PUSH2 0xBA6 SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0xBB0 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0xBBA SWAP1 DUP5 PUSH2 0xEAE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x3 SLOAD PUSH2 0xBCC SWAP2 SWAP1 PUSH2 0xE5C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xBDF SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0xBE9 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x848 SWAP2 SWAP1 PUSH2 0xEAE JUMP JUMPDEST PUSH2 0xBFE PUSH2 0xD5F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36D SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xC81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20616C726561647920696E697469616C697A65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0xCEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C206E617469766520746F6B656E20616D6F756E74206D757374 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x2062652067726561746572207468616E207A65726F PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x36D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH1 0x3 DUP2 SWAP1 SSTORE CALLVALUE PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER SWAP2 PUSH32 0xAC1D76749E5447B7B16F5AB61447E1BD502F3BB4807AF3B28E620D1700A6EE45 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xD5B PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xD82 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDD0 DUP2 PUSH2 0xDA2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742074686520546F6B656E466163746F72790000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xE6F JUMPI PUSH2 0xE6F PUSH2 0xE46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xE6F JUMPI PUSH2 0xE6F PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEA9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xE6F JUMPI PUSH2 0xE6F PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDD0 DUP2 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E PUSH23 0xA95C89DCE39850E6626DFB579857CCB6E6F17D9E7E37BA 0xE PUSH4 0x8B7AA0A2 DUP12 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "176:5977:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;224:21;;;;;;;;;;-1:-1:-1;224:21:2;;;;-1:-1:-1;;;;;224:21:2;;;;;;-1:-1:-1;;;;;178:32:3;;;160:51;;148:2;133:18;224:21:2;;;;;;;;2726:216;;;;;;;;;;-1:-1:-1;2726:216:2;;;;;:::i;:::-;;:::i;:::-;;3735:746;;;;;;;;;;-1:-1:-1;3735:746:2;;;;;:::i;:::-;;:::i;:::-;;;599:25:3;;;587:2;572:18;3735:746:2;453:177:3;5326:146:2;;;;;;;;;;-1:-1:-1;5326:146:2;;;;;:::i;:::-;;:::i;650:25::-;;;;;;;;;;-1:-1:-1;650:25:2;;;;-1:-1:-1;;;;;650:25:2;;;2461:210;;;;;;;;;;-1:-1:-1;2461:210:2;;;;;:::i;:::-;;:::i;345:23::-;;;;;;;;;;;;;;;;4562:312;;;;;;;;;;-1:-1:-1;4562:312:2;;;;;:::i;:::-;;:::i;5542:609::-;;;;;;;;;;-1:-1:-1;5542:609:2;;;;;:::i;:::-;;:::i;:::-;;;;1178:25:3;;;1234:2;1219:18;;1212:34;;;;1151:18;5542:609:2;1004:248:3;491:25:2;;;;;;;;;;;;;;;;402:23;;;;;;;;;;;;;;;;824:36;;;;;;;;;;-1:-1:-1;824:36:2;;;;;;;;;;;1422:14:3;;1415:22;1397:41;;1385:2;1370:18;824:36:2;1257:187:3;2996:685:2;;;:::i;4955:312::-;;;;;;;;;;-1:-1:-1;4955:312:2;;;;;:::i;:::-;;:::i;725:37::-;;;;;;;;;;;;;;;;569:27;;;;;;;;;;;;;;;;1940:467;;;;;;:::i;:::-;;:::i;277:27::-;;;;;;;;;;-1:-1:-1;277:27:2;;;;-1:-1:-1;;;;;277:27:2;;;2726:216;967:12;;-1:-1:-1;;;;;967:12:2;953:10;:26;945:69;;;;-1:-1:-1;;;945:69:2;;;;;;;:::i;:::-;;;;;;;;;2831:2:::1;2817:10;2808:6;;:19;;;;:::i;:::-;:25;;2800:64;;;::::0;-1:-1:-1;;;2800:64:2;;2683:2:3;2800:64:2::1;::::0;::::1;2665:21:3::0;2722:2;2702:18;;;2695:30;2761:28;2741:18;;;2734:56;2807:18;;2800:64:2::1;2481:350:3::0;2800:64:2::1;2874:7;:20:::0;;;2909:26:::1;::::0;599:25:3;;;2909:26:2::1;::::0;587:2:3;572:18;2909:26:2::1;;;;;;;;2726:216:::0;:::o;3735:746::-;3803:17;2500:21:1;:19;:21::i;:::-;3851:1:2::1;3840:8;:12;3832:46;;;::::0;-1:-1:-1;;;3832:46:2;;3038:2:3;3832:46:2::1;::::0;::::1;3020:21:3::0;3077:2;3057:18;;;3050:30;-1:-1:-1;;;3096:18:3;;;3089:51;3157:18;;3832:46:2::1;2836:345:3::0;3832:46:2::1;3889:11;3926:4;3915:7;;3904:8;:18;;;;:::i;:::-;3903:27;;;;:::i;:::-;3889:41:::0;-1:-1:-1;3940:24:2::1;3967:14;3889:41:::0;3967:8;:14:::1;:::i;:::-;3999:6;::::0;3992:64:::1;::::0;-1:-1:-1;;;3992:64:2;;4020:10:::1;3992:64;::::0;::::1;3916:51:3::0;4040:4:2::1;3983:18:3::0;;;3976:60;4052:18;;;4045:34;;;3940:41:2;;-1:-1:-1;;;;;;3999:6:2::1;::::0;3992:27:::1;::::0;3889:18:3;;3992:64:2::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4073:6:2::1;::::0;4090:10:::1;::::0;4066:40:::1;::::0;-1:-1:-1;;;4066:40:2;;-1:-1:-1;;;;;4090:10:2;;::::1;4066:40;::::0;::::1;4514:51:3::0;4581:18;;;4574:34;;;4073:6:2;::::1;::::0;4066:23:::1;::::0;4487:18:3;;4066:40:2::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4117:19;4150:16;4139:8;;:27;;;;:::i;:::-;4117:49;;4223:11;4211:8;;4200;;:19;;;;:::i;:::-;4199:35;;;;:::i;:::-;4188:8;;:46;;;;:::i;:::-;4176:58;;4256:11;4245:8;:22;;;;4289:9;4277:8;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4328:37:2::1;::::0;4310:12:::1;::::0;4328:10:::1;::::0;4351:9;;4310:12;4328:37;4310:12;4328:37;4351:9;4328:10;:37:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4309:56;;;4383:7;4375:41;;;::::0;-1:-1:-1;;;4375:41:2;;5031:2:3;4375:41:2::1;::::0;::::1;5013:21:3::0;5070:2;5050:18;;;5043:30;-1:-1:-1;;;5089:18:3;;;5082:51;5150:18;;4375:41:2::1;4829:345:3::0;4375:41:2::1;4432:42;::::0;;1178:25:3;;;1234:2;1219:18;;1212:34;;;4442:10:2::1;::::0;4432:42:::1;::::0;1151:18:3;4432:42:2::1;;;;;;;3822:659;;;;2542:20:1::0;1857:1;3068:7;:21;2888:208;2542:20;3735:746:2;;;:::o;5326:146::-;967:12;;-1:-1:-1;;;;;967:12:2;953:10;:26;945:69;;;;-1:-1:-1;;;945:69:2;;;;;;;:::i;:::-;5395:16:::1;:25:::0;;-1:-1:-1;;5395:25:2::1;::::0;::::1;;::::0;;::::1;::::0;;;5435:30:::1;::::0;1397:41:3;;;5435:30:2::1;::::0;1385:2:3;1370:18;5435:30:2::1;1257:187:3::0;2461:210:2;967:12;;-1:-1:-1;;;;;967:12:2;953:10;:26;945:69;;;;-1:-1:-1;;;945:69:2;;;;;;;:::i;:::-;2564:2:::1;2553:7;;2541:9;:19;;;;:::i;:::-;:25;;2533:64;;;::::0;-1:-1:-1;;;2533:64:2;;2683:2:3;2533:64:2::1;::::0;::::1;2665:21:3::0;2722:2;2702:18;;;2695:30;2761:28;2741:18;;;2734:56;2807:18;;2533:64:2::1;2481:350:3::0;2533:64:2::1;2607:6;:18:::0;;;2640:24:::1;::::0;599:25:3;;;2640:24:2::1;::::0;587:2:3;572:18;2640:24:2::1;453:177:3::0;4562:312:2;4637:19;4668:24;4734:4;4724:6;;4710:11;:20;;;;:::i;:::-;4709:29;;;;:::i;:::-;4695:43;;:11;:43;:::i;:::-;4668:70;;4748:19;4781:16;4770:8;;:27;;;;:::i;:::-;4748:49;;4856:11;4844:8;;4833;;:19;;;;:::i;:::-;4832:35;;;;:::i;:::-;4821:8;;:46;;;;:::i;:::-;4807:60;4562:312;-1:-1:-1;;;;4562:312:2:o;5542:609::-;5607:21;5630:25;5667;5702:6;;;;;;;;;-1:-1:-1;;;;;5702:6:2;-1:-1:-1;;;;;5695:26:2;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5667:56;-1:-1:-1;5733:22:2;5667:56;5759:15;:8;5770:4;5759:15;:::i;:::-;5758:37;;;;:::i;:::-;5810:16;;5733:62;;-1:-1:-1;5810:16:2;;:53;;;;;5847:16;;5830:14;:33;5810:53;5806:287;;;5916:16;;5899:33;;:14;:33;:::i;:::-;5879:53;-1:-1:-1;5995:4:2;5963:28;5983:8;5879:53;5963:28;:::i;:::-;5962:37;;;;:::i;:::-;5946:53;;5806:287;;;6046:1;6030:17;;6081:1;6061:21;;5806:287;6103:41;;5542:609;;;:::o;2996:685::-;3055:17;2500:21:1;:19;:21::i;:::-;3104:1:2::1;3092:9;:13;3084:55;;;::::0;-1:-1:-1;;;3084:55:2;;5570:2:3;3084:55:2::1;::::0;::::1;5552:21:3::0;5609:2;5589:18;;;5582:30;5648:31;5628:18;;;5621:59;5697:18;;3084:55:2::1;5368:353:3::0;3084:55:2::1;3150:11;3187:4;3177:6;;3165:9;:18;;;;:::i;:::-;3164:27;;;;:::i;:::-;3150:41:::0;-1:-1:-1;3201:24:2::1;3228:15;3150:41:::0;3228:9:::1;:15;:::i;:::-;3273:10;::::0;:31:::1;::::0;3201:42;;-1:-1:-1;3255:12:2::1;::::0;-1:-1:-1;;;;;3273:10:2;;::::1;::::0;3296:3;;3255:12;3273:31;3255:12;3273:31;3296:3;3273:10;:31:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3254:50;;;3322:7;3314:53;;;::::0;-1:-1:-1;;;3314:53:2;;5928:2:3;3314:53:2::1;::::0;::::1;5910:21:3::0;5967:2;5947:18;;;5940:30;6006:34;5986:18;;;5979:62;-1:-1:-1;;;6057:18:3;;;6050:31;6098:19;;3314:53:2::1;5726:397:3::0;3314:53:2::1;3378:19;3411:16;3400:8;;:27;;;;:::i;:::-;3378:49;;3484:11;3472:8;;3461;;:19;;;;:::i;:::-;3460:35;;;;:::i;:::-;3449:8;;:46;;;;:::i;:::-;3437:58;;3517:11;3506:8;:22;;;;3550:9;3538:8;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3577:6:2::1;::::0;3570:46:::1;::::0;-1:-1:-1;;;3570:46:2;;3594:10:::1;3570:46;::::0;::::1;4514:51:3::0;4581:18;;;4574:34;;;-1:-1:-1;;;;;3577:6:2;;::::1;::::0;3570:23:::1;::::0;4487:18:3;;3570:46:2::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3632:42:2::1;::::0;;3653:9:::1;1178:25:3::0;;1234:2;1219:18;;1212:34;;;3641:10:2::1;::::0;3632:42:::1;::::0;1151:18:3;3632:42:2::1;;;;;;;3074:607;;;;2542:20:1::0;1857:1;3068:7;:21;2888:208;2542:20;2996:685:2;:::o;4955:312::-;5029:19;5060:24;5127:4;5116:7;;5102:11;:21;;;;:::i;:::-;5101:30;;;;:::i;:::-;5087:44;;:11;:44;:::i;:::-;5060:71;;5141:19;5174:16;5163:8;;:27;;;;:::i;:::-;5141:49;;5249:11;5237:8;;5226;;:19;;;;:::i;:::-;5225:35;;;;:::i;:::-;5214:8;;:46;;;;:::i;1940:467::-;2500:21:1;:19;:21::i;:::-;967:12:2::1;::::0;-1:-1:-1;;;;;967:12:2::1;953:10;:26;945:69;;;;-1:-1:-1::0;;;945:69:2::1;;;;;;;:::i;:::-;2089:6:::2;::::0;-1:-1:-1;;;;;2089:6:2::2;:20:::0;2081:57:::2;;;::::0;-1:-1:-1;;;2081:57:2;;6330:2:3;2081:57:2::2;::::0;::::2;6312:21:3::0;6369:2;6349:18;;;6342:30;6408:26;6388:18;;;6381:54;6452:18;;2081:57:2::2;6128:348:3::0;2081:57:2::2;2168:1;2156:9;:13;2148:79;;;::::0;-1:-1:-1;;;2148:79:2;;6683:2:3;2148:79:2::2;::::0;::::2;6665:21:3::0;6722:2;6702:18;;;6695:30;6761:34;6741:18;;;6734:62;-1:-1:-1;;;6812:18:3;;;6805:51;6873:19;;2148:79:2::2;6481:417:3::0;2148:79:2::2;2238:6;:16:::0;;-1:-1:-1;;;;;;2238:16:2::2;-1:-1:-1::0;;;;;2238:16:2;::::2;;::::0;;2264:8:::2;:31:::0;;;2316:9:::2;2305:8;:20:::0;;;2341:59:::2;::::0;;1178:25:3;;;1234:2;1219:18;;1212:34;;;;2356:10:2::2;::::0;2341:59:::2;::::0;1151:18:3;2341:59:2::2;;;;;;;2542:20:1::0;1857:1;3068:7;:21;2888:208;2542:20;1940:467:2;;:::o;2575:307:1:-;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:1;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;222:226:3:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;-1:-1:-1;395:23:3;;222:226;-1:-1:-1;222:226:3:o;635:118::-;721:5;714:13;707:21;700:5;697:32;687:60;;743:1;740;733:12;687:60;635:118;:::o;758:241::-;814:6;867:2;855:9;846:7;842:23;838:32;835:52;;;883:1;880;873:12;835:52;922:9;909:23;941:28;963:5;941:28;:::i;:::-;988:5;758:241;-1:-1:-1;;;758:241:3:o;1449:406::-;1517:6;1525;1578:2;1566:9;1557:7;1553:23;1549:32;1546:52;;;1594:1;1591;1584:12;1546:52;1620:23;;-1:-1:-1;;;;;1672:31:3;;1662:42;;1652:70;;1718:1;1715;1708:12;1652:70;1741:5;1819:2;1804:18;;;;1791:32;;-1:-1:-1;;;1449:406:3:o;1860:354::-;2062:2;2044:21;;;2101:2;2081:18;;;2074:30;2140:32;2135:2;2120:18;;2113:60;2205:2;2190:18;;1860:354::o;2219:127::-;2280:10;2275:3;2271:20;2268:1;2261:31;2311:4;2308:1;2301:15;2335:4;2332:1;2325:15;2351:125;2416:9;;;2437:10;;;2434:36;;;2450:18;;:::i;:::-;2351:125;;;;:::o;3186:168::-;3259:9;;;3290;;3307:15;;;3301:22;;3287:37;3277:71;;3328:18;;:::i;3359:217::-;3399:1;3425;3415:132;;3469:10;3464:3;3460:20;3457:1;3450:31;3504:4;3501:1;3494:15;3532:4;3529:1;3522:15;3415:132;-1:-1:-1;3561:9:3;;3359:217::o;3581:128::-;3648:9;;;3669:11;;;3666:37;;;3683:18;;:::i;4090:245::-;4157:6;4210:2;4198:9;4189:7;4185:23;4181:32;4178:52;;;4226:1;4223;4216:12;4178:52;4258:9;4252:16;4277:28;4299:5;4277:28;:::i;5179:184::-;5249:6;5302:2;5290:9;5281:7;5277:23;5273:32;5270:52;;;5318:1;5315;5308:12;5270:52;-1:-1:-1;5341:16:3;;5179:184;-1:-1:-1;5179:184:3:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "777000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyTax()": "2318",
								"buyToken()": "infinite",
								"calculatePenalty(uint256)": "infinite",
								"calculatePriceForEther(uint256)": "infinite",
								"calculatePriceForTokens(uint256)": "infinite",
								"devAddress()": "2349",
								"initialize(address,uint256)": "104118",
								"penaltiesEnabled()": "2377",
								"penaltyThreshold()": "2339",
								"reserve0()": "2362",
								"reserve1()": "2340",
								"sellTax()": "2361",
								"sellToken(uint256)": "infinite",
								"togglePenalties(bool)": "27824",
								"token0()": "2350",
								"tokenFactory()": "2436",
								"updateBuyTax(uint256)": "27790",
								"updateSellTax(uint256)": "27780"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 176,
									"end": 6153,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 176,
									"end": 6153,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 176,
									"end": 6153,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 515,
									"end": 516,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 491,
									"end": 516,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 491,
									"end": 516,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 594,
									"end": 596,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 569,
									"end": 596,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 569,
									"end": 596,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 759,
									"end": 762,
									"name": "PUSH",
									"source": 2,
									"value": "C8"
								},
								{
									"begin": 725,
									"end": 762,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 725,
									"end": 762,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 824,
									"end": 860,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 824,
									"end": 860,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 824,
									"end": 860,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 824,
									"end": 860,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 824,
									"end": 860,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 824,
									"end": 860,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1539,
									"end": 1855,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1539,
									"end": 1855,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2068,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1613,
									"end": 1638,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1613,
									"end": 1638,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1605,
									"end": 1683,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1605,
									"end": 1683,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1605,
									"end": 1683,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1605,
									"end": 1683,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1605,
									"end": 1683,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1605,
									"end": 1683,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 696,
									"end": 698,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1605,
									"end": 1683,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1605,
									"end": 1683,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1605,
									"end": 1683,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 678,
									"end": 699,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 735,
									"end": 737,
									"name": "PUSH",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 715,
									"end": 733,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 708,
									"end": 738,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 774,
									"end": 808,
									"name": "PUSH",
									"source": 3,
									"value": "446576656C6F70657220616464726573732063616E6E6F74206265207A65726F"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 754,
									"end": 772,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 747,
									"end": 809,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2061646472657373"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 825,
									"end": 843,
									"name": "PUSH",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 825,
									"end": 843,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 825,
									"end": 843,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 818,
									"end": 856,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 873,
									"end": 892,
									"name": "PUSH",
									"source": 3,
									"value": "84"
								},
								{
									"begin": 873,
									"end": 892,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1605,
									"end": 1683,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1605,
									"end": 1683,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1605,
									"end": 1683,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1605,
									"end": 1683,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1605,
									"end": 1683,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1605,
									"end": 1683,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1605,
									"end": 1683,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1605,
									"end": 1683,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1605,
									"end": 1683,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1605,
									"end": 1683,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1605,
									"end": 1683,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1701,
									"end": 1728,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1728,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1693,
									"end": 1776,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1693,
									"end": 1776,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1693,
									"end": 1776,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1693,
									"end": 1776,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1693,
									"end": 1776,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1693,
									"end": 1776,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1107,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1693,
									"end": 1776,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1693,
									"end": 1776,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1693,
									"end": 1776,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1087,
									"end": 1108,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1144,
									"end": 1146,
									"name": "PUSH",
									"source": 3,
									"value": "2B"
								},
								{
									"begin": 1124,
									"end": 1142,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1124,
									"end": 1142,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1124,
									"end": 1142,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1117,
									"end": 1147,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1183,
									"end": 1217,
									"name": "PUSH",
									"source": 3,
									"value": "546F6B656E466163746F727920616464726573732063616E6E6F74206265207A"
								},
								{
									"begin": 1163,
									"end": 1181,
									"name": "PUSH",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 1163,
									"end": 1181,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1163,
									"end": 1181,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1156,
									"end": 1218,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "65726F2061646472657373"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1234,
									"end": 1252,
									"name": "PUSH",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 1234,
									"end": 1252,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1234,
									"end": 1252,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1227,
									"end": 1268,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1285,
									"end": 1304,
									"name": "PUSH",
									"source": 3,
									"value": "84"
								},
								{
									"begin": 1285,
									"end": 1304,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1693,
									"end": 1776,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 903,
									"end": 1310,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1693,
									"end": 1776,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1693,
									"end": 1776,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1786,
									"end": 1796,
									"name": "PUSH",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1786,
									"end": 1810,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1786,
									"end": 1810,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1786,
									"end": 1810,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1786,
									"end": 1810,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1786,
									"end": 1810,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1786,
									"end": 1810,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1786,
									"end": 1810,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1786,
									"end": 1810,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1786,
									"end": 1810,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1786,
									"end": 1810,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1786,
									"end": 1810,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1786,
									"end": 1810,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1820,
									"end": 1832,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1820,
									"end": 1848,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1820,
									"end": 1848,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1820,
									"end": 1848,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1820,
									"end": 1848,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1820,
									"end": 1848,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1820,
									"end": 1848,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1820,
									"end": 1848,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1820,
									"end": 1848,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1820,
									"end": 1848,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1820,
									"end": 1848,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1820,
									"end": 1848,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 176,
									"end": 6153,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 176,
									"end": 6153,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 903,
									"end": 1310,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 903,
									"end": 1310,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 176,
									"end": 6153,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 176,
									"end": 6153,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 176,
									"end": 6153,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 176,
									"end": 6153,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 6153,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 176,
									"end": 6153,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 6153,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204e76a95c89dce39850e6626dfb579857ccb6e6f17d9e7e37ba0e638b7aa0a28b64736f6c634300081a0033",
									".code": [
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "4F7041A5"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "AAC8E6A4"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "AAC8E6A4"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "C91E5149"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "CC1776D3"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "CD6DC687"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "E77772FE"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "4F7041A5"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "5A76F25E"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "88E22F7F"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "A4821719"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "3AD10EF6"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "3AD10EF6"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "436D3340"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "443CB4BC"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "465FA408"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "4ECCE451"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "DFE1681"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "12185A39"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "2397E4D7"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "23E18DDD"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 176,
											"end": 6153,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 224,
											"end": 245,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 224,
											"end": 245,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 224,
											"end": 245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 245,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 224,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 224,
											"end": 245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 224,
											"end": 245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 245,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 224,
											"end": 245,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 224,
											"end": 245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 224,
											"end": 245,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 245,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 224,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 224,
											"end": 245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 224,
											"end": 245,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 224,
											"end": 245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 224,
											"end": 245,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 224,
											"end": 245,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 224,
											"end": 245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 224,
											"end": 245,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 245,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 224,
											"end": 245,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 224,
											"end": 245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 224,
											"end": 245,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 245,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 224,
											"end": 245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 224,
											"end": 245,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 224,
											"end": 245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 224,
											"end": 245,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2726,
											"end": 2942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2726,
											"end": 2942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3735,
											"end": 4481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3735,
											"end": 4481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 599,
											"end": 624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 599,
											"end": 624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 599,
											"end": 624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 587,
											"end": 589,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 572,
											"end": 590,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 453,
											"end": 630,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5326,
											"end": 5472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5326,
											"end": 5472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 650,
											"end": 675,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 650,
											"end": 675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 650,
											"end": 675,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 650,
											"end": 675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 650,
											"end": 675,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 650,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 650,
											"end": 675,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 650,
											"end": 675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 650,
											"end": 675,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 650,
											"end": 675,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 650,
											"end": 675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 650,
											"end": 675,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 650,
											"end": 675,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 650,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 650,
											"end": 675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 650,
											"end": 675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 650,
											"end": 675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 650,
											"end": 675,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2461,
											"end": 2671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2461,
											"end": 2671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 345,
											"end": 368,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 345,
											"end": 368,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 345,
											"end": 368,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 345,
											"end": 368,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 345,
											"end": 368,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 345,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 345,
											"end": 368,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 345,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 368,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 345,
											"end": 368,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 345,
											"end": 368,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 345,
											"end": 368,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 345,
											"end": 368,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 345,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 345,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 345,
											"end": 368,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 345,
											"end": 368,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 345,
											"end": 368,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4562,
											"end": 4874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4562,
											"end": 4874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5542,
											"end": 6151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5542,
											"end": 6151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1203,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1203,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1203,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1234,
											"end": 1236,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1237,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1237,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1246,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1246,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1246,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1246,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1151,
											"end": 1169,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1004,
											"end": 1252,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 491,
											"end": 516,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 491,
											"end": 516,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 516,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 491,
											"end": 516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 516,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 491,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 491,
											"end": 516,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 491,
											"end": 516,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 491,
											"end": 516,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 491,
											"end": 516,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 491,
											"end": 516,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 491,
											"end": 516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 491,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 491,
											"end": 516,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 491,
											"end": 516,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 491,
											"end": 516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 491,
											"end": 516,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 402,
											"end": 425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 402,
											"end": 425,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 425,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 402,
											"end": 425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 402,
											"end": 425,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 402,
											"end": 425,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 402,
											"end": 425,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 824,
											"end": 860,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 824,
											"end": 860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 824,
											"end": 860,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 824,
											"end": 860,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 824,
											"end": 860,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 824,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 824,
											"end": 860,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 824,
											"end": 860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 860,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 824,
											"end": 860,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 824,
											"end": 860,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 824,
											"end": 860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 824,
											"end": 860,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 824,
											"end": 860,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 824,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 824,
											"end": 860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 824,
											"end": 860,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 824,
											"end": 860,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 824,
											"end": 860,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 824,
											"end": 860,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 824,
											"end": 860,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 824,
											"end": 860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 824,
											"end": 860,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 860,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1436,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1415,
											"end": 1437,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1438,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1438,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1387,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 1388,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 824,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1257,
											"end": 1444,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2996,
											"end": 3681,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2996,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2996,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2996,
											"end": 3681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4955,
											"end": 5267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4955,
											"end": 5267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 725,
											"end": 762,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 725,
											"end": 762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 725,
											"end": 762,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 725,
											"end": 762,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 725,
											"end": 762,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 725,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 725,
											"end": 762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 725,
											"end": 762,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 762,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 725,
											"end": 762,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 725,
											"end": 762,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 725,
											"end": 762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 725,
											"end": 762,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 725,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 725,
											"end": 762,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 725,
											"end": 762,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 725,
											"end": 762,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 725,
											"end": 762,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 569,
											"end": 596,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 569,
											"end": 596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 569,
											"end": 596,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 569,
											"end": 596,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 569,
											"end": 596,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 569,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 569,
											"end": 596,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 569,
											"end": 596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 596,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 569,
											"end": 596,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 569,
											"end": 596,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 569,
											"end": 596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 569,
											"end": 596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 569,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 569,
											"end": 596,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 569,
											"end": 596,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 569,
											"end": 596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 569,
											"end": 596,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2407,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1940,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1940,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1940,
											"end": 2407,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2407,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1940,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1940,
											"end": 2407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2407,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1940,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1940,
											"end": 2407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 277,
											"end": 304,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 277,
											"end": 304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 277,
											"end": 304,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 277,
											"end": 304,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 277,
											"end": 304,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 277,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 277,
											"end": 304,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 277,
											"end": 304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 277,
											"end": 304,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 277,
											"end": 304,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 277,
											"end": 304,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 277,
											"end": 304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 277,
											"end": 304,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 277,
											"end": 304,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 277,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 277,
											"end": 304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 277,
											"end": 304,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 277,
											"end": 304,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 277,
											"end": 304,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 967,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 967,
											"end": 979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 953,
											"end": 963,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 953,
											"end": 979,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 945,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2831,
											"end": 2833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2817,
											"end": 2827,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2808,
											"end": 2814,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2808,
											"end": 2827,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2808,
											"end": 2827,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2827,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2808,
											"end": 2827,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2833,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2833,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2800,
											"end": 2864,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2800,
											"end": 2864,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2800,
											"end": 2864,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2864,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2683,
											"end": 2685,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2800,
											"end": 2864,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2864,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2722,
											"end": 2724,
											"name": "PUSH",
											"source": 3,
											"value": "1A"
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2695,
											"end": 2725,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2761,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "546F74616C207461782063616E6E6F7420657863656564203525000000000000"
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2734,
											"end": 2790,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2825,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2807,
											"end": 2825,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2800,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2481,
											"end": 2831,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2800,
											"end": 2864,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2800,
											"end": 2864,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2874,
											"end": 2894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2894,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2909,
											"end": 2935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 599,
											"end": 624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 599,
											"end": 624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 599,
											"end": 624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 2935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "A6255338A5F732D64CEBA7F4C18182567F9D1067EB984B46D478B37D72A52D11"
										},
										{
											"begin": 2909,
											"end": 2935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 587,
											"end": 589,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 572,
											"end": 590,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 2935,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2909,
											"end": 2935,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2909,
											"end": 2935,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2935,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2935,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2935,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2935,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2909,
											"end": 2935,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3848,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3852,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3832,
											"end": 3878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3832,
											"end": 3878,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3832,
											"end": 3878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3832,
											"end": 3878,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3832,
											"end": 3878,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3832,
											"end": 3878,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3038,
											"end": 3040,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3832,
											"end": 3878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3832,
											"end": 3878,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3832,
											"end": 3878,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3041,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3079,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3057,
											"end": 3075,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3057,
											"end": 3075,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3057,
											"end": 3075,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3080,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D7573742073656C6C20736F6D6520746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3096,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3096,
											"end": 3114,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3096,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3140,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3157,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3157,
											"end": 3175,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3832,
											"end": 3878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2836,
											"end": 3181,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3832,
											"end": 3878,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3832,
											"end": 3878,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3889,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 3915,
											"end": 3922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3915,
											"end": 3922,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3912,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3922,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3904,
											"end": 3922,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3922,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3922,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3904,
											"end": 3922,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3922,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3904,
											"end": 3922,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3903,
											"end": 3930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3903,
											"end": 3930,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3903,
											"end": 3930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3903,
											"end": 3930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3889,
											"end": 3930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3940,
											"end": 3964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3889,
											"end": 3930,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3967,
											"end": 3975,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3967,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3967,
											"end": 3981,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3967,
											"end": 3981,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3967,
											"end": 3981,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3999,
											"end": 4005,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3992,
											"end": 4056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3992,
											"end": 4056,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4020,
											"end": 4030,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3992,
											"end": 4056,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 3967,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4040,
											"end": 4044,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 4036,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4045,
											"end": 4079,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4045,
											"end": 4079,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4045,
											"end": 4079,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 3981,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3940,
											"end": 3981,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3999,
											"end": 4005,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 3992,
											"end": 4019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3889,
											"end": 3907,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3889,
											"end": 3907,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3992,
											"end": 4056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3992,
											"end": 4056,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3992,
											"end": 4056,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4073,
											"end": 4079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4090,
											"end": 4100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4090,
											"end": 4100,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4106,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4066,
											"end": 4106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4090,
											"end": 4100,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4090,
											"end": 4100,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4090,
											"end": 4100,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4066,
											"end": 4106,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4565,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4581,
											"end": 4599,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4581,
											"end": 4599,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4581,
											"end": 4599,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4608,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4608,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4073,
											"end": 4079,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 4066,
											"end": 4089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4487,
											"end": 4505,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4487,
											"end": 4505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4066,
											"end": 4106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4066,
											"end": 4106,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4106,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4117,
											"end": 4136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4166,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4139,
											"end": 4147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4139,
											"end": 4147,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4139,
											"end": 4166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4139,
											"end": 4166,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4139,
											"end": 4166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4139,
											"end": 4166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4139,
											"end": 4166,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4139,
											"end": 4166,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4139,
											"end": 4166,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4117,
											"end": 4166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4117,
											"end": 4166,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4223,
											"end": 4234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4211,
											"end": 4219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4211,
											"end": 4219,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4200,
											"end": 4208,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4219,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4200,
											"end": 4219,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4219,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4219,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4200,
											"end": 4219,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4219,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4200,
											"end": 4219,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4199,
											"end": 4234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4199,
											"end": 4234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4199,
											"end": 4234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4199,
											"end": 4234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4199,
											"end": 4234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4199,
											"end": 4234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4199,
											"end": 4234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4188,
											"end": 4196,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4188,
											"end": 4234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4188,
											"end": 4234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4188,
											"end": 4234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4176,
											"end": 4234,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4176,
											"end": 4234,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4256,
											"end": 4267,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4245,
											"end": 4253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4245,
											"end": 4267,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4245,
											"end": 4267,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4245,
											"end": 4267,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4245,
											"end": 4267,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4289,
											"end": 4298,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4277,
											"end": 4285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4277,
											"end": 4298,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4298,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4298,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4298,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4277,
											"end": 4298,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4298,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4298,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4277,
											"end": 4298,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4298,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4277,
											"end": 4298,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4277,
											"end": 4298,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4328,
											"end": 4365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4310,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4310,
											"end": 4322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4338,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4360,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4310,
											"end": 4322,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4310,
											"end": 4322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4360,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4338,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4365,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 4365,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 4365,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 4365,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4383,
											"end": 4390,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4375,
											"end": 4416,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4375,
											"end": 4416,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4375,
											"end": 4416,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5031,
											"end": 5033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4375,
											"end": 4416,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5070,
											"end": 5072,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 5050,
											"end": 5068,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5050,
											"end": 5068,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5068,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5073,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115D1A195C881D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5089,
											"end": 5107,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5089,
											"end": 5107,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5089,
											"end": 5107,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5082,
											"end": 5133,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5150,
											"end": 5168,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5150,
											"end": 5168,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4829,
											"end": 5174,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4375,
											"end": 4416,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4432,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4432,
											"end": 4474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4432,
											"end": 4474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1203,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1203,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1234,
											"end": 1236,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1237,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1237,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1246,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1246,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1246,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4442,
											"end": 4452,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4442,
											"end": 4452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4432,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "A8FF15EB642B39DA3AB82BB74A87B76CC3E1AEF2B82B70BC2A35458386DB29AA"
										},
										{
											"begin": 4432,
											"end": 4474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1151,
											"end": 1169,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4432,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4432,
											"end": 4474,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4432,
											"end": 4474,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4432,
											"end": 4474,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4432,
											"end": 4474,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4432,
											"end": 4474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4432,
											"end": 4474,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 3822,
											"end": 4481,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3822,
											"end": 4481,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3822,
											"end": 4481,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3822,
											"end": 4481,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 4481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 4481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5326,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 967,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 967,
											"end": 979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 953,
											"end": 963,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 953,
											"end": 979,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 945,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5395,
											"end": 5411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 5395,
											"end": 5420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5395,
											"end": 5420,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5395,
											"end": 5420,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5395,
											"end": 5420,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5395,
											"end": 5420,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5395,
											"end": 5420,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5395,
											"end": 5420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5395,
											"end": 5420,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5395,
											"end": 5420,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5395,
											"end": 5420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5395,
											"end": 5420,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5395,
											"end": 5420,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5435,
											"end": 5465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5435,
											"end": 5465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1438,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1438,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1438,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5435,
											"end": 5465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "EC615C5E0F8D777F63BE66955C04B8F91B4A878F984F8E1B9AFA7255E83F0EF3"
										},
										{
											"begin": 5435,
											"end": 5465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1387,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 1388,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5435,
											"end": 5465,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1257,
											"end": 1444,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2461,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 967,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 967,
											"end": 979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 953,
											"end": 963,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 953,
											"end": 979,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 945,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 945,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2564,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2553,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2553,
											"end": 2560,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2550,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2541,
											"end": 2560,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2541,
											"end": 2560,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2560,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2541,
											"end": 2560,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2566,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2566,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2597,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2533,
											"end": 2597,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2533,
											"end": 2597,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2533,
											"end": 2597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2597,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2683,
											"end": 2685,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2533,
											"end": 2597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2533,
											"end": 2597,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2597,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2722,
											"end": 2724,
											"name": "PUSH",
											"source": 3,
											"value": "1A"
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2695,
											"end": 2725,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2761,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "546F74616C207461782063616E6E6F7420657863656564203525000000000000"
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2734,
											"end": 2790,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2825,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2807,
											"end": 2825,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2597,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2481,
											"end": 2831,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2597,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2533,
											"end": 2597,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2607,
											"end": 2625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2625,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2640,
											"end": 2664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2640,
											"end": 2664,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 599,
											"end": 624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 599,
											"end": 624,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 599,
											"end": 624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "7A758DC8E99047B028278B3E2FF1416D8493A7AACEE7A5DC30B6BF93270ECCCE"
										},
										{
											"begin": 2640,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 587,
											"end": 589,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 572,
											"end": 590,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 453,
											"end": 630,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4637,
											"end": 4656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4668,
											"end": 4692,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4734,
											"end": 4738,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 4724,
											"end": 4730,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4724,
											"end": 4730,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4710,
											"end": 4721,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4710,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 4710,
											"end": 4730,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4710,
											"end": 4730,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4710,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4710,
											"end": 4730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4710,
											"end": 4730,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 4710,
											"end": 4730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4709,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4709,
											"end": 4738,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4709,
											"end": 4738,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4709,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4709,
											"end": 4738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4709,
											"end": 4738,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4709,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4695,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 4695,
											"end": 4738,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4695,
											"end": 4706,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4695,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4695,
											"end": 4738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4695,
											"end": 4738,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 4695,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4668,
											"end": 4738,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4668,
											"end": 4738,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4778,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4778,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 4770,
											"end": 4797,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4770,
											"end": 4797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4797,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 4770,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4748,
											"end": 4797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4856,
											"end": 4867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4852,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4844,
											"end": 4852,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4833,
											"end": 4841,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4833,
											"end": 4841,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4833,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 4833,
											"end": 4852,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4833,
											"end": 4852,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4833,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4833,
											"end": 4852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4833,
											"end": 4852,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 4833,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4832,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 4832,
											"end": 4867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4832,
											"end": 4867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4832,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 4832,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4832,
											"end": 4867,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 4832,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4821,
											"end": 4829,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4821,
											"end": 4829,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4821,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 4821,
											"end": 4867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4821,
											"end": 4867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4821,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4821,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4821,
											"end": 4867,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 4821,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4807,
											"end": 4867,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4874,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4562,
											"end": 4874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5607,
											"end": 5628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5630,
											"end": 5655,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5667,
											"end": 5692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5695,
											"end": 5721,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5721,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 5695,
											"end": 5723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 5695,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5667,
											"end": 5723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5733,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5667,
											"end": 5723,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5759,
											"end": 5774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 5759,
											"end": 5767,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5770,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 5759,
											"end": 5774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5759,
											"end": 5774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5759,
											"end": 5774,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 5759,
											"end": 5774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 5758,
											"end": 5795,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5795,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5758,
											"end": 5795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5758,
											"end": 5795,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 5758,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5810,
											"end": 5826,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 5810,
											"end": 5826,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5733,
											"end": 5795,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5733,
											"end": 5795,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5810,
											"end": 5826,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5810,
											"end": 5826,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5810,
											"end": 5863,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5810,
											"end": 5863,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5810,
											"end": 5863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 5810,
											"end": 5863,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5810,
											"end": 5863,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5847,
											"end": 5863,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5847,
											"end": 5863,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5863,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5810,
											"end": 5863,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 5810,
											"end": 5863,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5806,
											"end": 6093,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5806,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 5806,
											"end": 6093,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5932,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5916,
											"end": 5932,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5899,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 5899,
											"end": 5932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5899,
											"end": 5913,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5899,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5899,
											"end": 5932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5899,
											"end": 5932,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 5899,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5879,
											"end": 5932,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5995,
											"end": 5999,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 5963,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 5983,
											"end": 5991,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5879,
											"end": 5932,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5963,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5963,
											"end": 5991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5963,
											"end": 5991,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 5963,
											"end": 5991,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5962,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 5962,
											"end": 5999,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5962,
											"end": 5999,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5962,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5962,
											"end": 5999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5962,
											"end": 5999,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 5962,
											"end": 5999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5806,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 5806,
											"end": 6093,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5806,
											"end": 6093,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 5806,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6046,
											"end": 6047,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6030,
											"end": 6047,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6047,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6081,
											"end": 6082,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6061,
											"end": 6082,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6061,
											"end": 6082,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5806,
											"end": 6093,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 5806,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6103,
											"end": 6144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6103,
											"end": 6144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 6151,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 6151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3681,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2996,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3055,
											"end": 3072,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3101,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3092,
											"end": 3105,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3084,
											"end": 3139,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 3084,
											"end": 3139,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3084,
											"end": 3139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3084,
											"end": 3139,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3084,
											"end": 3139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3084,
											"end": 3139,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5570,
											"end": 5572,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3084,
											"end": 3139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3084,
											"end": 3139,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3084,
											"end": 3139,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5573,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5611,
											"name": "PUSH",
											"source": 3,
											"value": "1D"
										},
										{
											"begin": 5589,
											"end": 5607,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5589,
											"end": 5607,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5582,
											"end": 5612,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5648,
											"end": 5679,
											"name": "PUSH",
											"source": 3,
											"value": "4D7573742073656E6420457468657220746F2062757920746F6B656E73000000"
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5621,
											"end": 5680,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5697,
											"end": 5715,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5697,
											"end": 5715,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3084,
											"end": 3139,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5368,
											"end": 5721,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3084,
											"end": 3139,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 3084,
											"end": 3139,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3150,
											"end": 3161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3187,
											"end": 3191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 3177,
											"end": 3183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3177,
											"end": 3183,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3165,
											"end": 3174,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3165,
											"end": 3183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 3165,
											"end": 3183,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3165,
											"end": 3183,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3165,
											"end": 3183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3165,
											"end": 3183,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3165,
											"end": 3183,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 3165,
											"end": 3183,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3164,
											"end": 3191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 3164,
											"end": 3191,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3164,
											"end": 3191,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3164,
											"end": 3191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3164,
											"end": 3191,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3164,
											"end": 3191,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 3164,
											"end": 3191,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3150,
											"end": 3191,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3201,
											"end": 3225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3228,
											"end": 3243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 3150,
											"end": 3191,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3237,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3228,
											"end": 3243,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3243,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 3228,
											"end": 3243,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3273,
											"end": 3283,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3273,
											"end": 3304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3201,
											"end": 3243,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3201,
											"end": 3243,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3255,
											"end": 3267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3267,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3273,
											"end": 3283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3283,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3299,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3267,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3267,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3299,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3283,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3304,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3254,
											"end": 3304,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3254,
											"end": 3304,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3254,
											"end": 3304,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3322,
											"end": 3329,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3314,
											"end": 3367,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 3314,
											"end": 3367,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3314,
											"end": 3367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3314,
											"end": 3367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3314,
											"end": 3367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3314,
											"end": 3367,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5928,
											"end": 5930,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3314,
											"end": 3367,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3314,
											"end": 3367,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5910,
											"end": 5931,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5967,
											"end": 5969,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 5947,
											"end": 5965,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5947,
											"end": 5965,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5947,
											"end": 5965,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5940,
											"end": 5970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6040,
											"name": "PUSH",
											"source": 3,
											"value": "4661696C656420746F2073656E642074617820746F2064657620616464726573"
										},
										{
											"begin": 5986,
											"end": 6004,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5986,
											"end": 6004,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5986,
											"end": 6004,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5979,
											"end": 6041,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6057,
											"end": 6075,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 6057,
											"end": 6075,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6057,
											"end": 6075,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6050,
											"end": 6081,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6098,
											"end": 6117,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6098,
											"end": 6117,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3314,
											"end": 3367,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5726,
											"end": 6123,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3314,
											"end": 3367,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 3314,
											"end": 3367,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3378,
											"end": 3397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3411,
											"end": 3427,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3400,
											"end": 3408,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 3400,
											"end": 3427,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3427,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3400,
											"end": 3427,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 3400,
											"end": 3427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3378,
											"end": 3427,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3378,
											"end": 3427,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3484,
											"end": 3495,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3472,
											"end": 3480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3472,
											"end": 3480,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3461,
											"end": 3469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3461,
											"end": 3469,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3461,
											"end": 3480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 3461,
											"end": 3480,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3461,
											"end": 3480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3461,
											"end": 3480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3461,
											"end": 3480,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3461,
											"end": 3480,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 3461,
											"end": 3480,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 3460,
											"end": 3495,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3495,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3460,
											"end": 3495,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3495,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 3460,
											"end": 3495,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3449,
											"end": 3457,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 3449,
											"end": 3495,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3495,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3449,
											"end": 3495,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3495,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 3449,
											"end": 3495,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3437,
											"end": 3495,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3437,
											"end": 3495,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3517,
											"end": 3528,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3506,
											"end": 3528,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3528,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3528,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3506,
											"end": 3528,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3550,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3538,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 3538,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3538,
											"end": 3559,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3559,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 3538,
											"end": 3559,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3559,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3577,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3577,
											"end": 3583,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3570,
											"end": 3616,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3570,
											"end": 3616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3594,
											"end": 3604,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3570,
											"end": 3616,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4565,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4581,
											"end": 4599,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4581,
											"end": 4599,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4581,
											"end": 4599,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4608,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4608,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3577,
											"end": 3583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3577,
											"end": 3583,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3577,
											"end": 3583,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3577,
											"end": 3583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 3570,
											"end": 3593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4487,
											"end": 4505,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4487,
											"end": 4505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3616,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3570,
											"end": 3616,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 3570,
											"end": 3616,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3632,
											"end": 3674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3632,
											"end": 3674,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3632,
											"end": 3674,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3653,
											"end": 3662,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1203,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1234,
											"end": 1236,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1237,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1237,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1246,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1246,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1246,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3641,
											"end": 3651,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3632,
											"end": 3674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "F6F342132C7DE5E5A1E99C8EFAE544C94731F3FF093F5C3C97C6973D9415CDFB"
										},
										{
											"begin": 3632,
											"end": 3674,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1151,
											"end": 1169,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3632,
											"end": 3674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3632,
											"end": 3674,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3632,
											"end": 3674,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3632,
											"end": 3674,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3632,
											"end": 3674,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3632,
											"end": 3674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3632,
											"end": 3674,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3681,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3681,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3681,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3681,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3681,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4955,
											"end": 5267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5029,
											"end": 5048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5060,
											"end": 5084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5127,
											"end": 5131,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 5116,
											"end": 5123,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5116,
											"end": 5123,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5113,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 5102,
											"end": 5123,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5123,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5102,
											"end": 5123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5123,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 5102,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 5101,
											"end": 5131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5101,
											"end": 5131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5131,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 5101,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5087,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 5087,
											"end": 5131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5087,
											"end": 5098,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5087,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5087,
											"end": 5131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5087,
											"end": 5131,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 5087,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5060,
											"end": 5131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5060,
											"end": 5131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5160,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5174,
											"end": 5190,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5163,
											"end": 5171,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 5163,
											"end": 5171,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5163,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 5163,
											"end": 5190,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5163,
											"end": 5190,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5163,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5163,
											"end": 5190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5163,
											"end": 5190,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 5163,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5190,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5141,
											"end": 5190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5237,
											"end": 5245,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5237,
											"end": 5245,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5226,
											"end": 5234,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 5226,
											"end": 5234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5226,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 5226,
											"end": 5245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5226,
											"end": 5245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5226,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5226,
											"end": 5245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5226,
											"end": 5245,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 5226,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5225,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 5225,
											"end": 5260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5225,
											"end": 5260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5225,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5225,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5225,
											"end": 5260,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 5225,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5214,
											"end": 5222,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5214,
											"end": 5222,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5214,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 5214,
											"end": 5260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5214,
											"end": 5260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5214,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5214,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2407,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1940,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 967,
											"end": 979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 967,
											"end": 979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 967,
											"end": 979,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 953,
											"end": 963,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 953,
											"end": 979,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 945,
											"end": 1014,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 1014,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 945,
											"end": 1014,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 945,
											"end": 1014,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 945,
											"end": 1014,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 945,
											"end": 1014,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 945,
											"end": 1014,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 945,
											"end": 1014,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2095,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2089,
											"end": 2095,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2089,
											"end": 2095,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2109,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2138,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 2081,
											"end": 2138,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2138,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2081,
											"end": 2138,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2081,
											"end": 2138,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2138,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6330,
											"end": 6332,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2081,
											"end": 2138,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2138,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2138,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6333,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6369,
											"end": 6371,
											"name": "PUSH",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 6349,
											"end": 6367,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6349,
											"end": 6367,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6349,
											"end": 6367,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6342,
											"end": 6372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6408,
											"end": 6434,
											"name": "PUSH",
											"source": 3,
											"value": "506F6F6C20616C726561647920696E697469616C697A65640000000000000000"
										},
										{
											"begin": 6388,
											"end": 6406,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 6388,
											"end": 6406,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6388,
											"end": 6406,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6381,
											"end": 6435,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6452,
											"end": 6470,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 6452,
											"end": 6470,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2138,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 6128,
											"end": 6476,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2138,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 2081,
											"end": 2138,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2169,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2165,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2156,
											"end": 2169,
											"modifierDepth": 2,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2227,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2148,
											"end": 2227,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2227,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2148,
											"end": 2227,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2148,
											"end": 2227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2227,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6683,
											"end": 6685,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2227,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2148,
											"end": 2227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2227,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6665,
											"end": 6686,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6722,
											"end": 6724,
											"name": "PUSH",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 6702,
											"end": 6720,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6702,
											"end": 6720,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6702,
											"end": 6720,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6695,
											"end": 6725,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6761,
											"end": 6795,
											"name": "PUSH",
											"source": 3,
											"value": "496E697469616C206E617469766520746F6B656E20616D6F756E74206D757374"
										},
										{
											"begin": 6741,
											"end": 6759,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 6741,
											"end": 6759,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6741,
											"end": 6759,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6734,
											"end": 6796,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2062652067726561746572207468616E207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6812,
											"end": 6830,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 6812,
											"end": 6830,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6812,
											"end": 6830,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6805,
											"end": 6856,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6873,
											"end": 6892,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6873,
											"end": 6892,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2148,
											"end": 2227,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 6481,
											"end": 6898,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2148,
											"end": 2227,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2148,
											"end": 2227,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2244,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2238,
											"end": 2254,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2254,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2254,
											"modifierDepth": 2,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2264,
											"end": 2272,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2264,
											"end": 2295,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2264,
											"end": 2295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2264,
											"end": 2295,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2325,
											"modifierDepth": 2,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2313,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2305,
											"end": 2325,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2325,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2400,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2341,
											"end": 2400,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2400,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1178,
											"end": 1203,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1178,
											"end": 1203,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1234,
											"end": 1236,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1237,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1237,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1246,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1246,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1246,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1246,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2356,
											"end": 2366,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2366,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2400,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "AC1D76749E5447B7B16F5AB61447E1BD502F3BB4807AF3B28E620D1700A6EE45"
										},
										{
											"begin": 2341,
											"end": 2400,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1151,
											"end": 1169,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2341,
											"end": 2400,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2341,
											"end": 2400,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2400,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2400,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2400,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2400,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2400,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2407,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2407,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 222,
											"end": 448,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 222,
											"end": 448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 281,
											"end": 287,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 336,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 322,
											"end": 331,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 313,
											"end": 320,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 309,
											"end": 332,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 305,
											"end": 337,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 302,
											"end": 354,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 302,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 350,
											"end": 351,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 348,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 340,
											"end": 352,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 302,
											"end": 354,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 395,
											"end": 418,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 395,
											"end": 418,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 222,
											"end": 448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 635,
											"end": 753,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 635,
											"end": 753,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 721,
											"end": 726,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 714,
											"end": 727,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 707,
											"end": 728,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 700,
											"end": 705,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 697,
											"end": 729,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 687,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 687,
											"end": 747,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 743,
											"end": 744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 741,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 733,
											"end": 745,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 687,
											"end": 747,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 687,
											"end": 747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 635,
											"end": 753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 635,
											"end": 753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 758,
											"end": 999,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 758,
											"end": 999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 814,
											"end": 820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 867,
											"end": 869,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 846,
											"end": 853,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 842,
											"end": 865,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 838,
											"end": 870,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 835,
											"end": 887,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 835,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 835,
											"end": 887,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 881,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 873,
											"end": 885,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 835,
											"end": 887,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 835,
											"end": 887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 922,
											"end": 931,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 909,
											"end": 932,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 941,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 963,
											"end": 968,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 941,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 941,
											"end": 969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 941,
											"end": 969,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 941,
											"end": 969,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 988,
											"end": 993,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 758,
											"end": 999,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 758,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1855,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1449,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1523,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1531,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1580,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1557,
											"end": 1564,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1553,
											"end": 1576,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1549,
											"end": 1581,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1598,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 1546,
											"end": 1598,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1595,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1591,
											"end": 1592,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1598,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 1546,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1620,
											"end": 1643,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1620,
											"end": 1643,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1672,
											"end": 1703,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1672,
											"end": 1703,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1704,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 1652,
											"end": 1722,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1718,
											"end": 1719,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1716,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1708,
											"end": 1720,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1722,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 1652,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 1746,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1804,
											"end": 1822,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1822,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1822,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1823,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1823,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1449,
											"end": 1855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 2214,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1860,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2062,
											"end": 2064,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2044,
											"end": 2065,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2065,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2065,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2103,
											"name": "PUSH",
											"source": 3,
											"value": "1E"
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2104,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2172,
											"name": "PUSH",
											"source": 3,
											"value": "43616C6C6572206973206E6F742074686520546F6B656E466163746F72790000"
										},
										{
											"begin": 2135,
											"end": 2137,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2120,
											"end": 2138,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2120,
											"end": 2138,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2173,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2207,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2190,
											"end": 2208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2190,
											"end": 2208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1860,
											"end": 2214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2346,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 2219,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2280,
											"end": 2290,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 2275,
											"end": 2278,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2271,
											"end": 2291,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2292,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2311,
											"end": 2315,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2308,
											"end": 2309,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2339,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2332,
											"end": 2333,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2340,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2351,
											"end": 2476,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2351,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2437,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2437,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2437,
											"end": 2447,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2470,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 2434,
											"end": 2470,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 2450,
											"end": 2468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2351,
											"end": 2476,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2351,
											"end": 2476,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2351,
											"end": 2476,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2351,
											"end": 2476,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2351,
											"end": 2476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3354,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3186,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3259,
											"end": 3268,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3259,
											"end": 3268,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3259,
											"end": 3268,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3299,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3299,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3322,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3322,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3322,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3301,
											"end": 3323,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3301,
											"end": 3323,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3287,
											"end": 3324,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3277,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 3277,
											"end": 3348,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3328,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 3328,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 3328,
											"end": 3346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3576,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3359,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3426,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 3415,
											"end": 3547,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3469,
											"end": 3479,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 3464,
											"end": 3467,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3460,
											"end": 3480,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3457,
											"end": 3458,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3481,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3501,
											"end": 3502,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3494,
											"end": 3509,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3536,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3529,
											"end": 3530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3522,
											"end": 3537,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3547,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 3415,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3561,
											"end": 3570,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3570,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3581,
											"end": 3709,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3581,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3648,
											"end": 3657,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3648,
											"end": 3657,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3648,
											"end": 3657,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3669,
											"end": 3680,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3669,
											"end": 3680,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3669,
											"end": 3680,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3666,
											"end": 3703,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3666,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 3666,
											"end": 3703,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3683,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 3683,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 3683,
											"end": 3701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4090,
											"end": 4335,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 4090,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4157,
											"end": 4163,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4210,
											"end": 4212,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4198,
											"end": 4207,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4189,
											"end": 4196,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4208,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4181,
											"end": 4213,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4178,
											"end": 4230,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4178,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 4178,
											"end": 4230,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4226,
											"end": 4227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4223,
											"end": 4224,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4216,
											"end": 4228,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4178,
											"end": 4230,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 4178,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4267,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4252,
											"end": 4268,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4277,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 4299,
											"end": 4304,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4277,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 4277,
											"end": 4305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5179,
											"end": 5363,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 5179,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5249,
											"end": 5255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5302,
											"end": 5304,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5290,
											"end": 5299,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5281,
											"end": 5288,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5277,
											"end": 5300,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5273,
											"end": 5305,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5270,
											"end": 5322,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5270,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 5270,
											"end": 5322,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5318,
											"end": 5319,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5308,
											"end": 5320,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5270,
											"end": 5322,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 5270,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5341,
											"end": 5357,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5357,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5179,
											"end": 5363,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5179,
											"end": 5363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"contracts/token factory/LiquidityPool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyTax()": "4f7041a5",
							"buyToken()": "a4821719",
							"calculatePenalty(uint256)": "4ecce451",
							"calculatePriceForEther(uint256)": "aac8e6a4",
							"calculatePriceForTokens(uint256)": "465fa408",
							"devAddress()": "3ad10ef6",
							"initialize(address,uint256)": "cd6dc687",
							"penaltiesEnabled()": "88e22f7f",
							"penaltyThreshold()": "c91e5149",
							"reserve0()": "443cb4bc",
							"reserve1()": "5a76f25e",
							"sellTax()": "cc1776d3",
							"sellToken(uint256)": "2397e4d7",
							"togglePenalties(bool)": "23e18ddd",
							"token0()": "0dfe1681",
							"tokenFactory()": "e77772fe",
							"updateBuyTax(uint256)": "436d3340",
							"updateSellTax(uint256)": "12185a39"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBuyTax\",\"type\":\"uint256\"}],\"name\":\"BuyTaxUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"etherAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"BuyToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountNative\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"PenaltiesStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"penaltyAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmountOut\",\"type\":\"uint256\"}],\"name\":\"PenaltyApplied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSellTax\",\"type\":\"uint256\"}],\"name\":\"SellTaxUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"etherAmount\",\"type\":\"uint256\"}],\"name\":\"SellToken\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buyTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"calculatePenalty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"penaltyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penaltyPercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"calculatePriceForEther\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"etherAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"etherAmount\",\"type\":\"uint256\"}],\"name\":\"calculatePriceForTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_initialTokenReserve\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"penaltiesEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"penaltyThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"sellToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"togglePenalties\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBuyTax\",\"type\":\"uint256\"}],\"name\":\"updateBuyTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSellTax\",\"type\":\"uint256\"}],\"name\":\"updateSellTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyToken()\":{\"notice\":\"Achat de tokens avec de l'Ether\"},\"calculatePenalty(uint256)\":{\"notice\":\"Calcule la p\\u00e9nalit\\u00e9 pour une vente importante\"},\"calculatePriceForEther(uint256)\":{\"notice\":\"Calcule le prix de l'Ether pour un nombre donn\\u00e9 de tokens\"},\"calculatePriceForTokens(uint256)\":{\"notice\":\"Calcule le prix des tokens pour un montant donn\\u00e9 en Ether\"},\"initialize(address,uint256)\":{\"notice\":\"Initialise la pool avec des r\\u00e9serves et les taxes par d\\u00e9faut\"},\"sellToken(uint256)\":{\"notice\":\"Vente de tokens pour de l'Ether\"},\"togglePenalties(bool)\":{\"notice\":\"Active ou d\\u00e9sactive les p\\u00e9nalit\\u00e9s\"},\"updateBuyTax(uint256)\":{\"notice\":\"Mise \\u00e0 jour de la taxe d'achat\"},\"updateSellTax(uint256)\":{\"notice\":\"Mise \\u00e0 jour de la taxe de vente\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token factory/LiquidityPool.sol\":\"LiquidityPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x4ce6e9f30dba5ae30f26321dc851b669caf3f953f8c832304d05df2a523f1af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb24de66bbfa42093a20d448cb2564655525cba0342035a42a37654e5d922deb\",\"dweb:/ipfs/QmYgnFHamrgy5qurrxVLR1qDb7MirvGEoxCVwqiF1YvDMf\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/token factory/LiquidityPool.sol\":{\"keccak256\":\"0x48911d527b2e8755b285b03ba746c9e13ad9f5ef29f2fd84a43a398fdc4e8324\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5140e1b490fd77541bf612cbf91fcb11f25661168a093eecd73f7e584256f98b\",\"dweb:/ipfs/QmRwBXjaZQqhbchCDQcAA5TZzi4iPEpxTUPU2cUNWB9c3i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 88,
								"contract": "contracts/token factory/LiquidityPool.sol:LiquidityPool",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 154,
								"contract": "contracts/token factory/LiquidityPool.sol:LiquidityPool",
								"label": "token0",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 156,
								"contract": "contracts/token factory/LiquidityPool.sol:LiquidityPool",
								"label": "tokenFactory",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 158,
								"contract": "contracts/token factory/LiquidityPool.sol:LiquidityPool",
								"label": "reserve0",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 160,
								"contract": "contracts/token factory/LiquidityPool.sol:LiquidityPool",
								"label": "reserve1",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 163,
								"contract": "contracts/token factory/LiquidityPool.sol:LiquidityPool",
								"label": "buyTax",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 166,
								"contract": "contracts/token factory/LiquidityPool.sol:LiquidityPool",
								"label": "sellTax",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 168,
								"contract": "contracts/token factory/LiquidityPool.sol:LiquidityPool",
								"label": "devAddress",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 171,
								"contract": "contracts/token factory/LiquidityPool.sol:LiquidityPool",
								"label": "penaltyThreshold",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 174,
								"contract": "contracts/token factory/LiquidityPool.sol:LiquidityPool",
								"label": "penaltiesEnabled",
								"offset": 0,
								"slot": "9",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"buyToken()": {
								"notice": "Achat de tokens avec de l'Ether"
							},
							"calculatePenalty(uint256)": {
								"notice": "Calcule la pénalité pour une vente importante"
							},
							"calculatePriceForEther(uint256)": {
								"notice": "Calcule le prix de l'Ether pour un nombre donné de tokens"
							},
							"calculatePriceForTokens(uint256)": {
								"notice": "Calcule le prix des tokens pour un montant donné en Ether"
							},
							"initialize(address,uint256)": {
								"notice": "Initialise la pool avec des réserves et les taxes par défaut"
							},
							"sellToken(uint256)": {
								"notice": "Vente de tokens pour de l'Ether"
							},
							"togglePenalties(bool)": {
								"notice": "Active ou désactive les pénalités"
							},
							"updateBuyTax(uint256)": {
								"notice": "Mise à jour de la taxe d'achat"
							},
							"updateSellTax(uint256)": {
								"notice": "Mise à jour de la taxe de vente"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							146
						]
					},
					"id": 147,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "135:894:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 146,
							"linearizedBaseContracts": [
								146
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1048:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 83,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1843:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 146,
									"src": "1818:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 81,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 82,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 86,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1889:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 146,
									"src": "1864:36:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 84,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 85,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1899:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 88,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1923:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 146,
									"src": "1907:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 87,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "1937:52:1",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 91,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2000:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:1"
									},
									"src": "1994:37:1"
								},
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "2051:38:1",
										"statements": [
											{
												"expression": {
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 94,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "2061:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 95,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "2071:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:1"
											}
										]
									},
									"id": 99,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:1"
									},
									"scope": 146,
									"src": "2037:52:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "2490:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 102,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "2500:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2500:21:1"
											},
											{
												"id": 105,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 106,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "2542:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "2542:20:1"
											}
										]
									},
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "2095:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 110,
									"name": "nonReentrant",
									"nameLocation": "2475:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:1"
									},
									"src": "2466:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2614:268:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 113,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "2702:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 114,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2713:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2698:86:1",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2722:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 116,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "2743:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2736:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 121,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "2858:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 122,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2868:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:1"
											}
										]
									},
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2584:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:0:1"
									},
									"scope": 146,
									"src": "2575:307:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "2926:170:1",
										"statements": [
											{
												"expression": {
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 129,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "3068:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 130,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "3078:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "3068:21:1"
											}
										]
									},
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2897:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:1"
									},
									"scope": 146,
									"src": "2888:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "3339:42:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 140,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "3356:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 141,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "3367:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 139,
												"id": 143,
												"nodeType": "Return",
												"src": "3349:25:1"
											}
										]
									},
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "3102:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3284:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "3333:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3333:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:6:1"
									},
									"scope": 146,
									"src": "3275:106:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 147,
							"src": "1030:2353:1",
							"usedErrors": [
								91
							],
							"usedEvents": []
						}
					],
					"src": "109:3275:1"
				},
				"id": 1
			},
			"contracts/token factory/LiquidityPool.sol": {
				"ast": {
					"absolutePath": "contracts/token factory/LiquidityPool.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"LiquidityPool": [
							716
						],
						"ReentrancyGuard": [
							146
						]
					},
					"id": 717,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 148,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 717,
							"sourceUnit": 78,
							"src": "58:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 150,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 717,
							"sourceUnit": 147,
							"src": "115:59:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 151,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"202:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 146,
										"src": "202:15:2"
									},
									"id": 152,
									"nodeType": "InheritanceSpecifier",
									"src": "202:15:2"
								}
							],
							"canonicalName": "LiquidityPool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 716,
							"linearizedBaseContracts": [
								716,
								146
							],
							"name": "LiquidityPool",
							"nameLocation": "185:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 154,
									"mutability": "mutable",
									"name": "token0",
									"nameLocation": "239:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 716,
									"src": "224:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 153,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "224:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e77772fe",
									"id": 156,
									"mutability": "mutable",
									"name": "tokenFactory",
									"nameLocation": "292:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 716,
									"src": "277:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 155,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "277:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "443cb4bc",
									"id": 158,
									"mutability": "mutable",
									"name": "reserve0",
									"nameLocation": "360:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 716,
									"src": "345:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "345:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5a76f25e",
									"id": 160,
									"mutability": "mutable",
									"name": "reserve1",
									"nameLocation": "417:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 716,
									"src": "402:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 159,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "402:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4f7041a5",
									"id": 163,
									"mutability": "mutable",
									"name": "buyTax",
									"nameLocation": "506:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 716,
									"src": "491:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 161,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "491:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 162,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "515:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc1776d3",
									"id": 166,
									"mutability": "mutable",
									"name": "sellTax",
									"nameLocation": "584:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 716,
									"src": "569:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 164,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "569:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 165,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "594:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3ad10ef6",
									"id": 168,
									"mutability": "mutable",
									"name": "devAddress",
									"nameLocation": "665:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 716,
									"src": "650:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 167,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "650:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c91e5149",
									"id": 171,
									"mutability": "mutable",
									"name": "penaltyThreshold",
									"nameLocation": "740:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 716,
									"src": "725:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 169,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "725:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323030",
										"id": 170,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "759:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200_by_1",
											"typeString": "int_const 200"
										},
										"value": "200"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "88e22f7f",
									"id": 174,
									"mutability": "mutable",
									"name": "penaltiesEnabled",
									"nameLocation": "836:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 716,
									"src": "824:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 172,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "824:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 173,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "855:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "935:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 177,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "953:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "957:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "953:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 179,
																"name": "tokenFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "967:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "953:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f742074686520546f6b656e466163746f7279",
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "981:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b8ea75a0f3a9e6012a5af112995bbcc8ce3975458fe2563873da1857fe3c491c",
																"typeString": "literal_string \"Caller is not the TokenFactory\""
															},
															"value": "Caller is not the TokenFactory"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b8ea75a0f3a9e6012a5af112995bbcc8ce3975458fe2563873da1857fe3c491c",
																"typeString": "literal_string \"Caller is not the TokenFactory\""
															}
														],
														"id": 176,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "945:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "945:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "945:69:2"
											},
											{
												"id": 184,
												"nodeType": "PlaceholderStatement",
												"src": "1024:1:2"
											}
										]
									},
									"id": 186,
									"name": "onlyFactory",
									"nameLocation": "921:11:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:2:2"
									},
									"src": "912:120:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "f6f342132c7de5e5a1e99c8efae544c94731f3ff093f5c3c97c6973d9415cdfb",
									"id": 194,
									"name": "BuyToken",
									"nameLocation": "1044:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1069:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "1053:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"indexed": false,
												"mutability": "mutable",
												"name": "etherAmount",
												"nameLocation": "1084:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "1076:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1076:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "1105:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "1097:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1052:65:2"
									},
									"src": "1038:80:2"
								},
								{
									"anonymous": false,
									"eventSelector": "a8ff15eb642b39da3ab82bb74a87b76cc3e1aef2b82b70bc2a35458386db29aa",
									"id": 202,
									"name": "SellToken",
									"nameLocation": "1129:9:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"indexed": true,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "1155:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1139:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "1171:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1163:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1163:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": false,
												"mutability": "mutable",
												"name": "etherAmount",
												"nameLocation": "1192:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1184:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1184:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1138:66:2"
									},
									"src": "1123:82:2"
								},
								{
									"anonymous": false,
									"eventSelector": "ac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee45",
									"id": 210,
									"name": "LiquidityAdded",
									"nameLocation": "1216:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "1247:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1231:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1231:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1265:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1257:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1257:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountNative",
												"nameLocation": "1286:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1278:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1278:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1230:69:2"
									},
									"src": "1210:90:2"
								},
								{
									"anonymous": false,
									"eventSelector": "7a758dc8e99047b028278b3e2ff1416d8493a7aacee7a5dc30b6bf93270eccce",
									"id": 214,
									"name": "BuyTaxUpdated",
									"nameLocation": "1311:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBuyTax",
												"nameLocation": "1333:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1325:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1325:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:19:2"
									},
									"src": "1305:39:2"
								},
								{
									"anonymous": false,
									"eventSelector": "a6255338a5f732d64ceba7f4c18182567f9d1067eb984b46d478b37d72a52d11",
									"id": 218,
									"name": "SellTaxUpdated",
									"nameLocation": "1355:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"indexed": false,
												"mutability": "mutable",
												"name": "newSellTax",
												"nameLocation": "1378:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1370:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1370:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1369:20:2"
									},
									"src": "1349:41:2"
								},
								{
									"anonymous": false,
									"eventSelector": "cf40cadcd86c14cb7e696a86578255719f67bc54bf991d45d267ee6e01467c19",
									"id": 226,
									"name": "PenaltyApplied",
									"nameLocation": "1401:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "trader",
												"nameLocation": "1432:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1416:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1416:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "penaltyAmount",
												"nameLocation": "1448:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1440:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAmountOut",
												"nameLocation": "1471:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1463:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1463:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1415:69:2"
									},
									"src": "1395:90:2"
								},
								{
									"anonymous": false,
									"eventSelector": "ec615c5e0f8d777f63be66955c04b8f91b4a878f984f8e1b9afa7255e83f0ef3",
									"id": 230,
									"name": "PenaltiesStatusUpdated",
									"nameLocation": "1496:22:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"indexed": false,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "1524:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1519:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 227,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1519:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:14:2"
									},
									"src": "1490:43:2"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "1595:260:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 238,
																"name": "_devAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "1613:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1636:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1628:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 239,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1628:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1628:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1613:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446576656c6f70657220616464726573732063616e6e6f74206265207a65726f2061646472657373",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1640:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9e321b68ccddc3bd009fbbc32b5fce044022d300eea9f17cc6d9f0cc34773948",
																"typeString": "literal_string \"Developer address cannot be zero address\""
															},
															"value": "Developer address cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9e321b68ccddc3bd009fbbc32b5fce044022d300eea9f17cc6d9f0cc34773948",
																"typeString": "literal_string \"Developer address cannot be zero address\""
															}
														],
														"id": 237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1605:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "1605:78:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 248,
																"name": "_tokenFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "1701:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1726:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1718:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 249,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1718:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1718:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1701:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e466163746f727920616464726573732063616e6e6f74206265207a65726f2061646472657373",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1730:45:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a1087fb8160fa1ddbd680305a05eb02a778f98c14ed012d48b8922ad2bbec04",
																"typeString": "literal_string \"TokenFactory address cannot be zero address\""
															},
															"value": "TokenFactory address cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a1087fb8160fa1ddbd680305a05eb02a778f98c14ed012d48b8922ad2bbec04",
																"typeString": "literal_string \"TokenFactory address cannot be zero address\""
															}
														],
														"id": 247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1693:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1693:83:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "1693:83:2"
											},
											{
												"expression": {
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 257,
														"name": "devAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "1786:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 258,
														"name": "_devAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "1799:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1786:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "1786:24:2"
											},
											{
												"expression": {
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 261,
														"name": "tokenFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "1820:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 262,
														"name": "_tokenFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "1835:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1820:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "1820:28:2"
											}
										]
									},
									"id": 266,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "_devAddress",
												"nameLocation": "1559:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "1551:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "_tokenFactory",
												"nameLocation": "1580:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "1572:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1550:44:2"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1595:0:2"
									},
									"scope": 716,
									"src": "1539:316:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "2071:336:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 154,
																"src": "2089:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2107:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2099:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 280,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2099:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2099:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2089:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20616c726561647920696e697469616c697a6564",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2111:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3c53b421f0380174af9aa0c2340735c620f8ea9a00cdf4f39196d23bb404824",
																"typeString": "literal_string \"Pool already initialized\""
															},
															"value": "Pool already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3c53b421f0380174af9aa0c2340735c620f8ea9a00cdf4f39196d23bb404824",
																"typeString": "literal_string \"Pool already initialized\""
															}
														],
														"id": 278,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2081:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "2081:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 289,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2156:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2160:5:2",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2156:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 291,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2168:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2156:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c206e617469766520746f6b656e20616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2171:55:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b7b83c9e2ce178fbea0fac09eaf176164e6c77ff25594c5d5e1160e0d61e1c10",
																"typeString": "literal_string \"Initial native token amount must be greater than zero\""
															},
															"value": "Initial native token amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b7b83c9e2ce178fbea0fac09eaf176164e6c77ff25594c5d5e1160e0d61e1c10",
																"typeString": "literal_string \"Initial native token amount must be greater than zero\""
															}
														],
														"id": 288,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2148:79:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "2148:79:2"
											},
											{
												"expression": {
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 296,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "2238:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 297,
														"name": "_token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "2247:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2238:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "2238:16:2"
											},
											{
												"expression": {
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 300,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2264:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 301,
														"name": "_initialTokenReserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "2275:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2264:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "2264:31:2"
											},
											{
												"expression": {
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 304,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "2305:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 305,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2316:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2320:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2316:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2305:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2305:20:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 310,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2356:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2360:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2356:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 312,
															"name": "_initialTokenReserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "2368:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 313,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2390:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2394:5:2",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2390:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 309,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "2341:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2341:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "EmitStatement",
												"src": "2336:64:2"
											}
										]
									},
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "1861:74:2",
										"text": "@notice Initialise la pool avec des réserves et les taxes par défaut"
									},
									"functionSelector": "cd6dc687",
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 274,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 273,
												"name": "nonReentrant",
												"nameLocations": [
													"2046:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 110,
												"src": "2046:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2046:12:2"
										},
										{
											"id": 276,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 275,
												"name": "onlyFactory",
												"nameLocations": [
													"2059:11:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 186,
												"src": "2059:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2059:11:2"
										}
									],
									"name": "initialize",
									"nameLocation": "1949:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "1977:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1969:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1969:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "_initialTokenReserve",
												"nameLocation": "2002:20:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1994:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:69:2"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2071:0:2"
									},
									"scope": 716,
									"src": "1940:467:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "2523:148:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 327,
																	"name": "newBuyTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "2541:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 328,
																	"name": "sellTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 166,
																	"src": "2553:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2541:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3530",
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2564:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50_by_1",
																	"typeString": "int_const 50"
																},
																"value": "50"
															},
															"src": "2541:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f74616c207461782063616e6e6f7420657863656564203525",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2568:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d870e9ea7e8ae072dc4fb122bdca67cbc638e412fb9e2679cef14b441dc80a6c",
																"typeString": "literal_string \"Total tax cannot exceed 5%\""
															},
															"value": "Total tax cannot exceed 5%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d870e9ea7e8ae072dc4fb122bdca67cbc638e412fb9e2679cef14b441dc80a6c",
																"typeString": "literal_string \"Total tax cannot exceed 5%\""
															}
														],
														"id": 326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2533:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "2533:64:2"
											},
											{
												"expression": {
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 335,
														"name": "buyTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2607:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 336,
														"name": "newBuyTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "2616:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2607:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "2607:18:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 340,
															"name": "newBuyTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "2654:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "BuyTaxUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "2640:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2640:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 342,
												"nodeType": "EmitStatement",
												"src": "2635:29:2"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "2413:43:2",
										"text": "@notice Mise à jour de la taxe d'achat"
									},
									"functionSelector": "436d3340",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 324,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 323,
												"name": "onlyFactory",
												"nameLocations": [
													"2511:11:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 186,
												"src": "2511:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2511:11:2"
										}
									],
									"name": "updateBuyTax",
									"nameLocation": "2470:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "newBuyTax",
												"nameLocation": "2491:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "2483:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2483:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2482:19:2"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2523:0:2"
									},
									"scope": 716,
									"src": "2461:210:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "2790:152:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 353,
																	"name": "buyTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "2808:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 354,
																	"name": "newSellTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "2817:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2808:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3530",
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2831:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50_by_1",
																	"typeString": "int_const 50"
																},
																"value": "50"
															},
															"src": "2808:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f74616c207461782063616e6e6f7420657863656564203525",
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2835:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d870e9ea7e8ae072dc4fb122bdca67cbc638e412fb9e2679cef14b441dc80a6c",
																"typeString": "literal_string \"Total tax cannot exceed 5%\""
															},
															"value": "Total tax cannot exceed 5%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d870e9ea7e8ae072dc4fb122bdca67cbc638e412fb9e2679cef14b441dc80a6c",
																"typeString": "literal_string \"Total tax cannot exceed 5%\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2800:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2800:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "2800:64:2"
											},
											{
												"expression": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 361,
														"name": "sellTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "2874:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 362,
														"name": "newSellTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "2884:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2874:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "2874:20:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 366,
															"name": "newSellTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "2924:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 365,
														"name": "SellTaxUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "2909:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2909:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "EmitStatement",
												"src": "2904:31:2"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "2677:44:2",
										"text": "@notice Mise à jour de la taxe de vente"
									},
									"functionSelector": "12185a39",
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 350,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 349,
												"name": "onlyFactory",
												"nameLocations": [
													"2778:11:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 186,
												"src": "2778:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2778:11:2"
										}
									],
									"name": "updateSellTax",
									"nameLocation": "2735:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "newSellTax",
												"nameLocation": "2757:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2749:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2748:20:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2790:0:2"
									},
									"scope": 716,
									"src": "2726:216:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "3074:607:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 379,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3092:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3096:5:2",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3092:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3104:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3092:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742073656e6420457468657220746f2062757920746f6b656e73",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3107:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_800f8b110ecf89d81c829aed87c641aaec4e62de6f9a2192992b7e9a1db6fe77",
																"typeString": "literal_string \"Must send Ether to buy tokens\""
															},
															"value": "Must send Ether to buy tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_800f8b110ecf89d81c829aed87c641aaec4e62de6f9a2192992b7e9a1db6fe77",
																"typeString": "literal_string \"Must send Ether to buy tokens\""
															}
														],
														"id": 378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3084:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3084:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "3084:55:2"
											},
											{
												"assignments": [
													387
												],
												"declarations": [
													{
														"constant": false,
														"id": 387,
														"mutability": "mutable",
														"name": "tax",
														"nameLocation": "3158:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "3150:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 386,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3150:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 388,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3165:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3169:5:2",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "3165:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 390,
																	"name": "buyTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "3177:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3165:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 392,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3164:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3187:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "3164:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3150:41:2"
											},
											{
												"assignments": [
													397
												],
												"declarations": [
													{
														"constant": false,
														"id": 397,
														"mutability": "mutable",
														"name": "amountInAfterTax",
														"nameLocation": "3209:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "3201:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 396,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3201:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 402,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 398,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3228:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3232:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "3228:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 400,
														"name": "tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "3240:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3228:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3201:42:2"
											},
											{
												"assignments": [
													404,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 404,
														"mutability": "mutable",
														"name": "taxSent",
														"nameLocation": "3260:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "3255:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 403,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3255:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 411,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3301:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 405,
																"name": "devAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 168,
																"src": "3273:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3284:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3273:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 407,
																"name": "tax",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "3296:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3273:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3273:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3254:50:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "taxSent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "3322:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e642074617820746f206465762061646472657373",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3331:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b0484cda00f5ce0a67b245b24fbbebd616543c38f2e954e168cb776c8eceb4bc",
																"typeString": "literal_string \"Failed to send tax to dev address\""
															},
															"value": "Failed to send tax to dev address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b0484cda00f5ce0a67b245b24fbbebd616543c38f2e954e168cb776c8eceb4bc",
																"typeString": "literal_string \"Failed to send tax to dev address\""
															}
														],
														"id": 412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3314:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "3314:53:2"
											},
											{
												"assignments": [
													418
												],
												"declarations": [
													{
														"constant": false,
														"id": 418,
														"mutability": "mutable",
														"name": "newReserve1",
														"nameLocation": "3386:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "3378:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 417,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3378:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 422,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 419,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "3400:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 420,
														"name": "amountInAfterTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "3411:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3400:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3378:49:2"
											},
											{
												"expression": {
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 423,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "3437:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 424,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "3449:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 425,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 158,
																			"src": "3461:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 426,
																			"name": "reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 160,
																			"src": "3472:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3461:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 428,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3460:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 429,
																"name": "newReserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "3484:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3460:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3449:46:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3437:58:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "3437:58:2"
											},
											{
												"expression": {
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 434,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "3506:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 435,
														"name": "newReserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "3517:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3506:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "3506:22:2"
											},
											{
												"expression": {
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 438,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3538:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 439,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "3550:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3538:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "3538:21:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 446,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3594:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3598:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3594:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "3606:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 443,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "3577:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 442,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "3570:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3570:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3585:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "3570:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3570:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "3570:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 452,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3641:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3645:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3641:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 454,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3653:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3657:5:2",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "3653:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 456,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "3664:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "BuyToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "3632:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3632:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "EmitStatement",
												"src": "3627:47:2"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2948:43:2",
										"text": "@notice Achat de tokens avec de l'Ether"
									},
									"functionSelector": "a4821719",
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 374,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 373,
												"name": "nonReentrant",
												"nameLocations": [
													"3033:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 110,
												"src": "3033:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3033:12:2"
										}
									],
									"name": "buyToken",
									"nameLocation": "3005:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3013:2:2"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3063:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "3055:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3055:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3054:19:2"
									},
									"scope": 716,
									"src": "2996:685:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "3822:659:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 471,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "3840:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3851:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3840:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742073656c6c20736f6d6520746f6b656e73",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3a043fa2cdaa46687fc14c42d2ff479d15d8b04d3705d1434247f8c2ff3c5464",
																"typeString": "literal_string \"Must sell some tokens\""
															},
															"value": "Must sell some tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3a043fa2cdaa46687fc14c42d2ff479d15d8b04d3705d1434247f8c2ff3c5464",
																"typeString": "literal_string \"Must sell some tokens\""
															}
														],
														"id": 470,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3832:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3832:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "3832:46:2"
											},
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "tax",
														"nameLocation": "3897:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "3889:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 477,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3889:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 485,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 479,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 463,
																	"src": "3904:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 480,
																	"name": "sellTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 166,
																	"src": "3915:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3904:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 482,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3903:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3926:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "3903:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3889:41:2"
											},
											{
												"assignments": [
													487
												],
												"declarations": [
													{
														"constant": false,
														"id": 487,
														"mutability": "mutable",
														"name": "amountInAfterTax",
														"nameLocation": "3948:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "3940:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 486,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3940:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 491,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 488,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3967:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 489,
														"name": "tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "3978:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3967:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3940:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 496,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4020:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4024:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4020:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 500,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4040:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$716",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$716",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4032:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 498,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4032:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4032:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 502,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4047:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 493,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "3999:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 492,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "3992:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3992:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4007:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "3992:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3992:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "3992:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 509,
															"name": "devAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "4090:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "tax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "4102:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 506,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "4073:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 505,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "4066:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4066:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4081:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "4066:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4066:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "4066:40:2"
											},
											{
												"assignments": [
													514
												],
												"declarations": [
													{
														"constant": false,
														"id": 514,
														"mutability": "mutable",
														"name": "newReserve0",
														"nameLocation": "4125:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "4117:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 513,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4117:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 518,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 515,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "4139:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 516,
														"name": "amountInAfterTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "4150:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4139:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4117:49:2"
											},
											{
												"expression": {
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 519,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "4176:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 520,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "4188:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 521,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 158,
																			"src": "4200:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 522,
																			"name": "reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 160,
																			"src": "4211:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4200:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 524,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4199:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 525,
																"name": "newReserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "4223:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4199:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4188:46:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4176:58:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "4176:58:2"
											},
											{
												"expression": {
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 530,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "4245:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 531,
														"name": "newReserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "4256:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4245:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "4245:22:2"
											},
											{
												"expression": {
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 534,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "4277:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 535,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "4289:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4277:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "4277:21:2"
											},
											{
												"assignments": [
													539,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 539,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4315:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "4310:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 538,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4310:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 547,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4362:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 540,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4328:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4332:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4328:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4339:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4328:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 543,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "4351:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4328:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4328:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4309:56:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 549,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "4383:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4574686572207472616e73666572206661696c6564",
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4392:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																"typeString": "literal_string \"Ether transfer failed\""
															},
															"value": "Ether transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																"typeString": "literal_string \"Ether transfer failed\""
															}
														],
														"id": 548,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4375:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4375:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "4375:41:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 554,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4442:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4446:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4442:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 556,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4454:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 557,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4464:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 553,
														"name": "SellToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "4432:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4432:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "EmitStatement",
												"src": "4427:47:2"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "3687:43:2",
										"text": "@notice Vente de tokens pour de l'Ether"
									},
									"functionSelector": "2397e4d7",
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 466,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 465,
												"name": "nonReentrant",
												"nameLocations": [
													"3781:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 110,
												"src": "3781:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3781:12:2"
										}
									],
									"name": "sellToken",
									"nameLocation": "3744:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3762:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "3754:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3754:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3753:18:2"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3811:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "3803:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3803:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3802:19:2"
									},
									"scope": 716,
									"src": "3735:746:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "4658:216:2",
										"statements": [
											{
												"assignments": [
													570
												],
												"declarations": [
													{
														"constant": false,
														"id": 570,
														"mutability": "mutable",
														"name": "amountInAfterTax",
														"nameLocation": "4676:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "4668:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 569,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4668:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 579,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 571,
														"name": "etherAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "4695:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 572,
																		"name": "etherAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 564,
																		"src": "4710:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 573,
																		"name": "buyTax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 163,
																		"src": "4724:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4710:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 575,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4709:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4734:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "4709:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4695:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4668:70:2"
											},
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "newReserve1",
														"nameLocation": "4756:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "4748:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 580,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4748:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 585,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 582,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "4770:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 583,
														"name": "amountInAfterTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "4781:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4770:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4748:49:2"
											},
											{
												"expression": {
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 586,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "4807:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 587,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "4821:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 588,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 158,
																			"src": "4833:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 589,
																			"name": "reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 160,
																			"src": "4844:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4833:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 591,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4832:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 592,
																"name": "newReserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "4856:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4832:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4821:46:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4807:60:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "4807:60:2"
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "4487:70:2",
										"text": "@notice Calcule le prix des tokens pour un montant donné en Ether"
									},
									"functionSelector": "465fa408",
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePriceForTokens",
									"nameLocation": "4571:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "etherAmount",
												"nameLocation": "4603:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "4595:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4595:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4594:21:2"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "4645:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "4637:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4637:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4636:21:2"
									},
									"scope": 716,
									"src": "4562:312:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "5050:217:2",
										"statements": [
											{
												"assignments": [
													607
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"mutability": "mutable",
														"name": "amountInAfterTax",
														"nameLocation": "5068:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 634,
														"src": "5060:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 606,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5060:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 616,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 608,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "5087:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 609,
																		"name": "tokenAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 601,
																		"src": "5102:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 610,
																		"name": "sellTax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 166,
																		"src": "5116:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5102:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 612,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5101:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5127:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "5101:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5087:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5060:71:2"
											},
											{
												"assignments": [
													618
												],
												"declarations": [
													{
														"constant": false,
														"id": 618,
														"mutability": "mutable",
														"name": "newReserve0",
														"nameLocation": "5149:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 634,
														"src": "5141:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 617,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 622,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "5163:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 620,
														"name": "amountInAfterTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "5174:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5163:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5141:49:2"
											},
											{
												"expression": {
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 623,
														"name": "etherAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "5200:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 624,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5214:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 625,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 158,
																			"src": "5226:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 626,
																			"name": "reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 160,
																			"src": "5237:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5226:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 628,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5225:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 629,
																"name": "newReserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "5249:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5225:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5214:46:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5200:60:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "5200:60:2"
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "4880:70:2",
										"text": "@notice Calcule le prix de l'Ether pour un nombre donné de tokens"
									},
									"functionSelector": "aac8e6a4",
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePriceForEther",
									"nameLocation": "4964:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "4995:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "4987:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4987:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4986:21:2"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "etherAmount",
												"nameLocation": "5037:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "5029:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5028:21:2"
									},
									"scope": 716,
									"src": "4955:312:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "5385:87:2",
										"statements": [
											{
												"expression": {
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 643,
														"name": "penaltiesEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "5395:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 644,
														"name": "enable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "5414:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5395:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "5395:25:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 648,
															"name": "enable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "5458:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 647,
														"name": "PenaltiesStatusUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "5435:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5435:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "EmitStatement",
												"src": "5430:35:2"
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "5273:48:2",
										"text": "@notice Active ou désactive les pénalités"
									},
									"functionSelector": "23e18ddd",
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 641,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 640,
												"name": "onlyFactory",
												"nameLocations": [
													"5373:11:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 186,
												"src": "5373:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5373:11:2"
										}
									],
									"name": "togglePenalties",
									"nameLocation": "5335:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "enable",
												"nameLocation": "5356:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "5351:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 637,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5351:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5350:13:2"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5385:0:2"
									},
									"scope": 716,
									"src": "5326:146:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "5657:494:2",
										"statements": [
											{
												"assignments": [
													663
												],
												"declarations": [
													{
														"constant": false,
														"id": 663,
														"mutability": "mutable",
														"name": "circulatingSupply",
														"nameLocation": "5675:17:2",
														"nodeType": "VariableDeclaration",
														"scope": 714,
														"src": "5667:25:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 662,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5667:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 669,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 665,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "5702:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 664,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "5695:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5695:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5710:11:2",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 26,
														"src": "5695:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5695:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5667:56:2"
											},
											{
												"assignments": [
													671
												],
												"declarations": [
													{
														"constant": false,
														"id": 671,
														"mutability": "mutable",
														"name": "sellPercentage",
														"nameLocation": "5741:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 714,
														"src": "5733:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 670,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5733:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 678,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 672,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "5759:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5770:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "5759:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 675,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5758:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 676,
														"name": "circulatingSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "5778:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5758:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5733:62:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 679,
														"name": "penaltiesEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "5810:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 680,
															"name": "sellPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "5830:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 681,
															"name": "penaltyThreshold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5847:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5830:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5810:53:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 708,
													"nodeType": "Block",
													"src": "6016:77:2",
													"statements": [
														{
															"expression": {
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 700,
																	"name": "penaltyAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "6030:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6046:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6030:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 703,
															"nodeType": "ExpressionStatement",
															"src": "6030:17:2"
														},
														{
															"expression": {
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 704,
																	"name": "penaltyPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 660,
																	"src": "6061:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6081:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6061:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 707,
															"nodeType": "ExpressionStatement",
															"src": "6061:21:2"
														}
													]
												},
												"id": 709,
												"nodeType": "IfStatement",
												"src": "5806:287:2",
												"trueBody": {
													"id": 699,
													"nodeType": "Block",
													"src": "5865:145:2",
													"statements": [
														{
															"expression": {
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 684,
																	"name": "penaltyPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 660,
																	"src": "5879:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 685,
																		"name": "sellPercentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 671,
																		"src": "5899:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 686,
																		"name": "penaltyThreshold",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 171,
																		"src": "5916:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5899:33:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5879:53:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 689,
															"nodeType": "ExpressionStatement",
															"src": "5879:53:2"
														},
														{
															"expression": {
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 690,
																	"name": "penaltyAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "5946:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 693,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 691,
																					"name": "penaltyPercentage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 660,
																					"src": "5963:17:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 692,
																					"name": "amountIn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 655,
																					"src": "5983:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5963:28:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 694,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5962:30:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31303030",
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5995:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		},
																		"value": "1000"
																	},
																	"src": "5962:37:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5946:53:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 698,
															"nodeType": "ExpressionStatement",
															"src": "5946:53:2"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 710,
															"name": "penaltyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "6111:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 711,
															"name": "penaltyPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "6126:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 712,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6110:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 661,
												"id": 713,
												"nodeType": "Return",
												"src": "6103:41:2"
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "5478:59:2",
										"text": "@notice Calcule la pénalité pour une vente importante"
									},
									"functionSelector": "4ecce451",
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePenalty",
									"nameLocation": "5551:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "5576:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "5568:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5568:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5567:18:2"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "penaltyAmount",
												"nameLocation": "5615:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "5607:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5607:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "penaltyPercentage",
												"nameLocation": "5638:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "5630:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5630:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5606:50:2"
									},
									"scope": 716,
									"src": "5542:609:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 717,
							"src": "176:5977:2",
							"usedErrors": [
								91
							],
							"usedEvents": [
								194,
								202,
								210,
								214,
								218,
								226,
								230
							]
						}
					],
					"src": "32:6122:2"
				},
				"id": 2
			}
		}
	}
}