{
	"id": "facfc7d1c935b1446fbdf88da2005906",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/token factory/testAlgebra.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"./interfaces/IAlgebraFactory.sol\";\nimport \"./interfaces/IAlgebraPool.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./CustomToken.sol\";\n\ncontract AlgebraPoolTester is Ownable (msg.sender) {\n    address public algebraFactory;\n    address public lastCreatedPool;\n    address public tokenA;\n    address public tokenB;\n\n    event PoolCreated(address indexed tokenA, address indexed tokenB, address poolAddress);\n    event TokensMinted(address indexed token, address indexed to, uint256 amount);\n    event TokensTransferredToPool(address indexed token, address indexed pool, uint256 amount);\n    event LiquidityAdded(address indexed pool, uint256 tokenAAmount, uint256 tokenBAmount);\n    event DebugStep(string step);\n\n    constructor(address _algebraFactory, uint256 mintAmount) {\n        require(_algebraFactory != address(0), \"Invalid Algebra Factory address\");\n        require(mintAmount > 0, \"Mint amount must be greater than zero\");\n\n        algebraFactory = _algebraFactory;\n\n        // Create Token A\n        CustomToken _tokenA = new CustomToken();\n        _tokenA.initialize(\"TokenA\", \"TA\");\n        _tokenA.mint(msg.sender, mintAmount);\n        tokenA = address(_tokenA);\n        emit TokensMinted(tokenA, msg.sender, mintAmount);\n\n        // Create Token B\n        CustomToken _tokenB = new CustomToken();\n        _tokenB.initialize(\"TokenB\", \"TB\");\n        _tokenB.mint(msg.sender, mintAmount);\n        tokenB = address(_tokenB);\n        emit TokensMinted(tokenB, msg.sender, mintAmount);\n    }\n\n    /**\n     * @notice Creates a pool for the two tokens created in the constructor.\n     */\n    function createPool() external onlyOwner {\n        emit DebugStep(\"Starting pool creation\");\n        require(tokenA != address(0) && tokenB != address(0), \"Tokens must be initialized\");\n        require(tokenA != tokenB, \"Tokens must be different\");\n\n        IAlgebraFactory factory = IAlgebraFactory(algebraFactory);\n        lastCreatedPool = factory.createPool(tokenA, tokenB);\n\n        require(lastCreatedPool != address(0), \"Failed to create pool\");\n        emit PoolCreated(tokenA, tokenB, lastCreatedPool);\n    }\n\n    /**\n     * @notice Mints tokens of the specified type to a given address.\n     * @param token The address of the token to mint.\n     * @param to The address to receive the minted tokens.\n     * @param amount The amount of tokens to mint.\n     */\n    function mintTokens(address token, address to, uint256 amount) external onlyOwner {\n        require(token == tokenA || token == tokenB, \"Invalid token address\");\n        require(to != address(0), \"Invalid recipient address\");\n        require(amount > 0, \"Amount must be greater than zero\");\n\n        CustomToken(token).mint(to, amount);\n        emit TokensMinted(token, to, amount);\n    }\n\n    /**\n     * @notice Transfers tokens to a pool.\n     * @param token The address of the token to transfer.\n     * @param pool The address of the pool to receive the tokens.\n     * @param amount The amount of tokens to transfer.\n     */\n    function transferTokensToPool(address token, address pool, uint256 amount) external onlyOwner {\n        require(token == tokenA || token == tokenB, \"Invalid token address\");\n        require(pool != address(0), \"Invalid pool address\");\n        require(amount > 0, \"Amount must be greater than zero\");\n\n        CustomToken(token).transfer(pool, amount);\n        emit TokensTransferredToPool(token, pool, amount);\n    }\n\n    /**\n     * @notice Adds liquidity to the pool.\n     * @param tokenAAmount The amount of Token A to add.\n     * @param tokenBAmount The amount of Token B to add.\n     */\n    function addLiquidity(uint256 tokenAAmount, uint256 tokenBAmount) external onlyOwner {\n        emit DebugStep(\"Starting liquidity addition\");\n        require(lastCreatedPool != address(0), \"No pool created\");\n        require(tokenAAmount > 0 && tokenBAmount > 0, \"Token amounts must be greater than zero\");\n\n        // Transfer tokens to the pool\n        bool successA = CustomToken(tokenA).transfer(lastCreatedPool, tokenAAmount);\n        require(successA, \"TokenA transfer failed\");\n        emit DebugStep(\"TokenA transferred\");\n\n        bool successB = CustomToken(tokenB).transfer(lastCreatedPool, tokenBAmount);\n        require(successB, \"TokenB transfer failed\");\n        emit DebugStep(\"TokenB transferred\");\n\n        emit LiquidityAdded(lastCreatedPool, tokenAAmount, tokenBAmount);\n    }\n\n    /**\n     * @notice Computes the address of a pool without creating it.\n     * @param tokenA The address of the first token.\n     * @param tokenB The address of the second token.\n     * @return poolAddress The address of the computed pool.\n     */\n    function computePoolAddress(address tokenA, address tokenB) external view returns (address poolAddress) {\n        require(tokenA != address(0) && tokenB != address(0), \"Invalid token address\");\n        require(tokenA != tokenB, \"Tokens must be different\");\n\n        IAlgebraFactory factory = IAlgebraFactory(algebraFactory);\n        poolAddress = factory.computePoolAddress(tokenA, tokenB);\n    }\n\n    /**\n     * @notice Updates the address of the Algebra Factory.\n     * @param newAlgebraFactory The new Algebra Factory address.\n     */\n    function updateAlgebraFactory(address newAlgebraFactory) external onlyOwner {\n        require(newAlgebraFactory != address(0), \"Invalid Algebra Factory address\");\n        algebraFactory = newAlgebraFactory;\n    }\n}\n"
			},
			"contracts/token factory/CustomToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract CustomToken is ERC20, Ownable {\n    string private _customName;\n    string private _customSymbol;\n    bool private initialized;\n    string public imageURL; // Lien vers l'image associée au token\n\n    constructor() ERC20(\"\", \"\") Ownable(msg.sender) {}\n\n    // Fonction d'initialisation pour définir le nom et le symbole après le déploiement\n    function initialize(string memory name, string memory symbol) external {\n        require(!initialized, \"Token already initialized\");\n        _customName = name;\n        _customSymbol = symbol;\n        initialized = true;\n    }\n\n    // Fonctions pour récupérer le nom et le symbole personnalisés\n    function name() public view override returns (string memory) {\n        return _customName;\n    }\n\n    function symbol() public view override returns (string memory) {\n        return _customSymbol;\n    }\n\n    // Permet uniquement au propriétaire de minter des tokens\n    function mint(address to, uint256 amount) external onlyOwner {\n        _mint(to, amount);\n    }\n\n    // Fonction pour ajouter ou mettre à jour le lien de l'image\n    function setImageURL(string memory _imageURL) external onlyOwner {\n        imageURL = _imageURL;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/token factory/interfaces/IAlgebraPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\ninterface IAlgebraPool {\n    /**\n     * @notice Adds liquidity to the pool.\n     * @param amount0Desired The amount of token0 to add.\n     * @param amount1Desired The amount of token1 to add.\n     * @param amount0Min The minimum amount of token0 to add.\n     * @param amount1Min The minimum amount of token1 to add.\n     * @param recipient The address to receive the liquidity tokens.\n     * @param deadline The timestamp by which the transaction must be confirmed.\n     */\n    function addLiquidity(\n        uint256 amount0Desired,\n        uint256 amount1Desired,\n        uint256 amount0Min,\n        uint256 amount1Min,\n        address recipient,\n        uint256 deadline\n    ) external returns (uint256 amount0, uint256 amount1, uint256 liquidity);\n\n    /**\n     * @notice Removes liquidity from the pool.\n     * @param liquidity The amount of liquidity tokens to remove.\n     * @param amount0Min The minimum amount of token0 to withdraw.\n     * @param amount1Min The minimum amount of token1 to withdraw.\n     * @param recipient The address to receive the withdrawn tokens.\n     * @param deadline The timestamp by which the transaction must be confirmed.\n     */\n    function removeLiquidity(\n        uint256 liquidity,\n        uint256 amount0Min,\n        uint256 amount1Min,\n        address recipient,\n        uint256 deadline\n    ) external returns (uint256 amount0, uint256 amount1);\n}\n"
			},
			"contracts/token factory/interfaces/IAlgebraFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\ninterface IAlgebraFactory {\n    /**\n     * @notice Creates a new pool for the given token pair.\n     * @param tokenA The address of the first token.\n     * @param tokenB The address of the second token.\n     * @return pool The address of the created pool.\n     */\n    function createPool(address tokenA, address tokenB) external returns (address pool);\n\n    /**\n     * @notice Computes the address of a pool for the given token pair.\n     * @param tokenA The address of the first token.\n     * @param tokenB The address of the second token.\n     * @return pool The address of the computed pool.\n     */\n    function computePoolAddress(address tokenA, address tokenB) external view returns (address pool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x4ce6e9f30dba5ae30f26321dc851b669caf3f953f8c832304d05df2a523f1af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb24de66bbfa42093a20d448cb2564655525cba0342035a42a37654e5d922deb\",\"dweb:/ipfs/QmYgnFHamrgy5qurrxVLR1qDb7MirvGEoxCVwqiF1YvDMf\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x4ce6e9f30dba5ae30f26321dc851b669caf3f953f8c832304d05df2a523f1af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb24de66bbfa42093a20d448cb2564655525cba0342035a42a37654e5d922deb\",\"dweb:/ipfs/QmYgnFHamrgy5qurrxVLR1qDb7MirvGEoxCVwqiF1YvDMf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x4ce6e9f30dba5ae30f26321dc851b669caf3f953f8c832304d05df2a523f1af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb24de66bbfa42093a20d448cb2564655525cba0342035a42a37654e5d922deb\",\"dweb:/ipfs/QmYgnFHamrgy5qurrxVLR1qDb7MirvGEoxCVwqiF1YvDMf\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token factory/CustomToken.sol": {
				"CustomToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "imageURL",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_imageURL",
									"type": "string"
								}
							],
							"name": "setImageURL",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/token factory/CustomToken.sol\":168:1369  contract CustomToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/token factory/CustomToken.sol\":378:428  constructor() ERC20(\"\", \"\") Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  0x20\n  dup1\n  dup3\n  add\n  dup4\n  mstore\n  0x00\n  dup1\n  dup4\n  mstore\n  dup4\n  mload\n  swap2\n  dup3\n  add\n  swap1\n  swap4\n  mstore\n  swap2\n  dup3\n  mstore\n    /* \"contracts/token factory/CustomToken.sol\":414:424  msg.sender */\n  caller\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2801:2852   */\n  mstore\n    /* \"#utility.yul\":2774:2792   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/token factory/CustomToken.sol\":168:1369  contract CustomToken is ERC20, Ownable {... */\n  jump(tag_23)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_18:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_19:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_26:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_27:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_21:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_31\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_31:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_32:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_30:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2650   */\ntag_7:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_38\n  tag_18\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1555:1652   */\n  tag_39\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_40\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1701:1705   */\n  0x20\n    /* \"#utility.yul\":1732:1734   */\n  0x1f\n    /* \"#utility.yul\":1721:1735   */\n  dup3\n  gt\n    /* \"#utility.yul\":1749:1750   */\n  0x01\n    /* \"#utility.yul\":1744:2393   */\n  dup2\n  eq\n  tag_42\n  jumpi\n    /* \"#utility.yul\":2437:2438   */\n  0x00\n    /* \"#utility.yul\":2454:2460   */\n  dup4\n    /* \"#utility.yul\":2451:2540   */\n  iszero\n  tag_43\n  jumpi\n  pop\n    /* \"#utility.yul\":2506:2525   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2500:2526   */\n  mload\n    /* \"#utility.yul\":2451:2540   */\ntag_43:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2553:2634   */\n  dup5\n  sstore\n    /* \"#utility.yul\":1714:2644   */\n  jump(tag_34)\n    /* \"#utility.yul\":1744:2393   */\ntag_42:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1780:1800   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":1898:2120   */\ntag_46:\n    /* \"#utility.yul\":1912:1919   */\n  dup3\n    /* \"#utility.yul\":1909:1910   */\n  dup2\n    /* \"#utility.yul\":1906:1920   */\n  lt\n    /* \"#utility.yul\":1898:2120   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1994:2013   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":1988:2014   */\n  mload\n    /* \"#utility.yul\":1973:2015   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2101:2105   */\n  0x20\n    /* \"#utility.yul\":2086:2106   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2054:2055   */\n  0x01\n    /* \"#utility.yul\":2042:2056   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":1928:1940   */\n  add\n    /* \"#utility.yul\":1898:2120   */\n  jump(tag_46)\ntag_48:\n    /* \"#utility.yul\":1902:1905   */\n  pop\n    /* \"#utility.yul\":2148:2154   */\n  dup5\n    /* \"#utility.yul\":2139:2146   */\n  dup3\n    /* \"#utility.yul\":2136:2155   */\n  lt\n    /* \"#utility.yul\":2133:2334   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":2209:2228   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2203:2229   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2292:2293   */\n  0x03\n    /* \"#utility.yul\":2288:2302   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2304:2307   */\n  0xf8\n    /* \"#utility.yul\":2284:2308   */\n  and\n    /* \"#utility.yul\":2280:2317   */\n  shr\n    /* \"#utility.yul\":2276:2318   */\n  not\n    /* \"#utility.yul\":2261:2319   */\n  and\n    /* \"#utility.yul\":2246:2320   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2133:2334   */\ntag_49:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2380:2381   */\n  0x01\n    /* \"#utility.yul\":2364:2378   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2360:2382   */\n  add\n    /* \"#utility.yul\":2347:2383   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1351:2650   */\n  jump\t// out\n    /* \"#utility.yul\":2655:2858   */\ntag_23:\n    /* \"contracts/token factory/CustomToken.sol\":168:1369  contract CustomToken is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/token factory/CustomToken.sol\":168:1369  contract CustomToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb90497e0\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4cd88b76\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x58e792ee\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/token factory/CustomToken.sol\":827:923  function name() public view override returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":1194:1208   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1187:1209   */\n      iszero\n        /* \"#utility.yul\":1169:1210   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1157:1159   */\n      0x20\n        /* \"#utility.yul\":1142:1160   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_24\n        /* \"#utility.yul\":1029:1216   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":1367:1392   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1355:1357   */\n      0x20\n        /* \"#utility.yul\":1340:1358   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":1221:1398   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_26\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"#utility.yul\":1924:1960   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1897:1915   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      tag_24\n        /* \"#utility.yul\":1782:1966   */\n      jump\n        /* \"contracts/token factory/CustomToken.sol\":1098:1193  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_8:\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/token factory/CustomToken.sol\":525:751  function initialize(string memory name, string memory symbol) external {... */\n    tag_9:\n      tag_45\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"contracts/token factory/CustomToken.sol\":1265:1367  function setImageURL(string memory _imageURL) external onlyOwner {... */\n    tag_10:\n      tag_45\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_32\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_45\n      tag_62\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4041:4092   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4029:4031   */\n      0x20\n        /* \"#utility.yul\":4014:4032   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":3895:4098   */\n      jump\n        /* \"contracts/token factory/CustomToken.sol\":929:1029  function symbol() public view override returns (string memory) {... */\n    tag_14:\n      tag_22\n      tag_68\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_15:\n      tag_26\n      tag_71\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n        /* \"contracts/token factory/CustomToken.sol\":309:331  string public imageURL */\n    tag_16:\n      tag_22\n      tag_75\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_32\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_45\n      tag_83\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"contracts/token factory/CustomToken.sol\":827:923  function name() public view override returns (string memory) {... */\n    tag_23:\n        /* \"contracts/token factory/CustomToken.sol\":873:886  string memory */\n      0x60\n        /* \"contracts/token factory/CustomToken.sol\":905:916  _customName */\n      0x06\n        /* \"contracts/token factory/CustomToken.sol\":898:916  return _customName */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_87\n      jump\t// in\n    tag_88:\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/token factory/CustomToken.sol\":827:923  function name() public view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_95\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_92:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_102:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token factory/CustomToken.sol\":1098:1193  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_106:\n        /* \"contracts/token factory/CustomToken.sol\":1169:1186  _mint(to, amount) */\n      tag_109\n        /* \"contracts/token factory/CustomToken.sol\":1175:1177  to */\n      dup3\n        /* \"contracts/token factory/CustomToken.sol\":1179:1185  amount */\n      dup3\n        /* \"contracts/token factory/CustomToken.sol\":1169:1174  _mint */\n      tag_110\n        /* \"contracts/token factory/CustomToken.sol\":1169:1186  _mint(to, amount) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/token factory/CustomToken.sol\":1098:1193  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token factory/CustomToken.sol\":525:751  function initialize(string memory name, string memory symbol) external {... */\n    tag_51:\n        /* \"contracts/token factory/CustomToken.sol\":615:626  initialized */\n      and(0xff, sload(0x08))\n        /* \"contracts/token factory/CustomToken.sol\":614:626  !initialized */\n      iszero\n        /* \"contracts/token factory/CustomToken.sol\":606:656  require(!initialized, \"Token already initialized\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4955:4957   */\n      0x20\n        /* \"contracts/token factory/CustomToken.sol\":606:656  require(!initialized, \"Token already initialized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4937:4958   */\n      mstore\n        /* \"#utility.yul\":4994:4996   */\n      0x19\n        /* \"#utility.yul\":4974:4992   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4967:4997   */\n      mstore\n        /* \"#utility.yul\":5033:5060   */\n      0x546f6b656e20616c726561647920696e697469616c697a656400000000000000\n        /* \"#utility.yul\":5013:5031   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5006:5061   */\n      mstore\n        /* \"#utility.yul\":5078:5096   */\n      0x64\n      add\n        /* \"contracts/token factory/CustomToken.sol\":606:656  require(!initialized, \"Token already initialized\") */\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"contracts/token factory/CustomToken.sol\":666:677  _customName */\n      0x06\n        /* \"contracts/token factory/CustomToken.sol\":666:684  _customName = name */\n      tag_115\n        /* \"contracts/token factory/CustomToken.sol\":680:684  name */\n      dup4\n        /* \"contracts/token factory/CustomToken.sol\":666:677  _customName */\n      dup3\n        /* \"contracts/token factory/CustomToken.sol\":666:684  _customName = name */\n      tag_116\n      jump\t// in\n    tag_115:\n      pop\n        /* \"contracts/token factory/CustomToken.sol\":694:707  _customSymbol */\n      0x07\n        /* \"contracts/token factory/CustomToken.sol\":694:716  _customSymbol = symbol */\n      tag_117\n        /* \"contracts/token factory/CustomToken.sol\":710:716  symbol */\n      dup3\n        /* \"contracts/token factory/CustomToken.sol\":694:707  _customSymbol */\n      dup3\n        /* \"contracts/token factory/CustomToken.sol\":694:716  _customSymbol = symbol */\n      tag_116\n      jump\t// in\n    tag_117:\n      pop\n      pop\n        /* \"contracts/token factory/CustomToken.sol\":726:737  initialized */\n      0x08\n        /* \"contracts/token factory/CustomToken.sol\":726:744  initialized = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/token factory/CustomToken.sol\":740:744  true */\n      0x01\n        /* \"contracts/token factory/CustomToken.sol\":726:744  initialized = true */\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/token factory/CustomToken.sol\":525:751  function initialize(string memory name, string memory symbol) external {... */\n      jump\t// out\n        /* \"contracts/token factory/CustomToken.sol\":1265:1367  function setImageURL(string memory _imageURL) external onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/token factory/CustomToken.sol\":1340:1348  imageURL */\n      0x09\n        /* \"contracts/token factory/CustomToken.sol\":1340:1360  imageURL = _imageURL */\n      tag_109\n        /* \"contracts/token factory/CustomToken.sol\":1351:1360  _imageURL */\n      dup3\n        /* \"contracts/token factory/CustomToken.sol\":1340:1348  imageURL */\n      dup3\n        /* \"contracts/token factory/CustomToken.sol\":1340:1360  imageURL = _imageURL */\n      tag_116\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/token factory/CustomToken.sol\":929:1029  function symbol() public view override returns (string memory) {... */\n    tag_68:\n        /* \"contracts/token factory/CustomToken.sol\":977:990  string memory */\n      0x60\n        /* \"contracts/token factory/CustomToken.sol\":1009:1022  _customSymbol */\n      0x07\n        /* \"contracts/token factory/CustomToken.sol\":1002:1022  return _customSymbol */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_95\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/token factory/CustomToken.sol\":309:331  string public imageURL */\n    tag_75:\n      0x09\n      dup1\n      sload\n      tag_138\n      swap1\n      tag_87\n      jump\t// in\n    tag_138:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_87\n      jump\t// in\n    tag_139:\n      dup1\n      iszero\n      tag_140\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_141\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_140)\n    tag_141:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_142:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_142\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4041:4092   */\n      mstore\n        /* \"#utility.yul\":4014:4032   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_113\n        /* \"#utility.yul\":3895:4098   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7451:7483   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7433:7484   */\n      mstore\n        /* \"#utility.yul\":7500:7518   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7493:7527   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":7543:7561   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7536:7570   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":7406:7424   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_113\n        /* \"#utility.yul\":7231:7576   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4041:4092   */\n      mstore\n        /* \"#utility.yul\":4014:4032   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      tag_113\n        /* \"#utility.yul\":3895:4098   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4041:4092   */\n      mstore\n        /* \"#utility.yul\":4014:4032   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      tag_113\n        /* \"#utility.yul\":3895:4098   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4041:4092   */\n      mstore\n        /* \"#utility.yul\":4014:4032   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_113\n        /* \"#utility.yul\":3895:4098   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4041:4092   */\n      mstore\n        /* \"#utility.yul\":4014:4032   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      tag_113\n        /* \"#utility.yul\":3895:4098   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_153:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4041:4092   */\n      mstore\n        /* \"#utility.yul\":4014:4032   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      tag_113\n        /* \"#utility.yul\":3895:4098   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4041:4092   */\n      mstore\n        /* \"#utility.yul\":4014:4032   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      tag_113\n        /* \"#utility.yul\":3895:4098   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_185\n      swap2\n        /* \"#utility.yul\":1367:1392   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1355:1357   */\n      0x20\n        /* \"#utility.yul\":1340:1358   */\n      add\n      swap1\n        /* \"#utility.yul\":1221:1398   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_188\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_190\n      swap1\n      pop\n      jump\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7451:7483   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7433:7484   */\n      mstore\n        /* \"#utility.yul\":7500:7518   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7493:7527   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":7543:7561   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7536:7570   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":7406:7424   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_113\n        /* \"#utility.yul\":7231:7576   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_194)\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_195\n      swap2\n        /* \"#utility.yul\":1367:1392   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1355:1357   */\n      0x20\n        /* \"#utility.yul\":1340:1358   */\n      add\n      swap1\n        /* \"#utility.yul\":1221:1398   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:541   */\n    tag_25:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":263:264   */\n      0x00\n        /* \"#utility.yul\":273:413   */\n    tag_204:\n        /* \"#utility.yul\":287:293   */\n      dup2\n        /* \"#utility.yul\":284:285   */\n      dup2\n        /* \"#utility.yul\":281:294   */\n      lt\n        /* \"#utility.yul\":273:413   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":398:400   */\n      0x20\n        /* \"#utility.yul\":382:396   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":378:401   */\n      dup2\n      add\n        /* \"#utility.yul\":372:402   */\n      mload\n        /* \"#utility.yul\":367:369   */\n      0x40\n        /* \"#utility.yul\":348:365   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":344:370   */\n      add\n        /* \"#utility.yul\":337:403   */\n      mstore\n        /* \"#utility.yul\":302:312   */\n      add\n        /* \"#utility.yul\":273:413   */\n      jump(tag_204)\n    tag_206:\n        /* \"#utility.yul\":277:280   */\n      pop\n        /* \"#utility.yul\":462:463   */\n      0x00\n        /* \"#utility.yul\":457:459   */\n      0x40\n        /* \"#utility.yul\":448:454   */\n      dup3\n        /* \"#utility.yul\":437:446   */\n      dup6\n        /* \"#utility.yul\":433:455   */\n      add\n        /* \"#utility.yul\":429:460   */\n      add\n        /* \"#utility.yul\":422:464   */\n      mstore\n        /* \"#utility.yul\":532:534   */\n      0x40\n        /* \"#utility.yul\":525:527   */\n      0x1f\n        /* \"#utility.yul\":521:528   */\n      not\n        /* \"#utility.yul\":516:518   */\n      0x1f\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":504:519   */\n      add\n        /* \"#utility.yul\":500:529   */\n      and\n        /* \"#utility.yul\":489:498   */\n      dup5\n        /* \"#utility.yul\":485:530   */\n      add\n        /* \"#utility.yul\":481:535   */\n      add\n        /* \"#utility.yul\":473:535   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:541   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":546:719   */\n    tag_196:\n        /* \"#utility.yul\":614:634   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":663:694   */\n      dup2\n      and\n        /* \"#utility.yul\":653:695   */\n      dup2\n      eq\n        /* \"#utility.yul\":643:713   */\n      tag_208\n      jumpi\n        /* \"#utility.yul\":709:710   */\n      0x00\n        /* \"#utility.yul\":706:707   */\n      dup1\n        /* \"#utility.yul\":699:711   */\n      revert\n        /* \"#utility.yul\":643:713   */\n    tag_208:\n        /* \"#utility.yul\":546:719   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":724:1024   */\n    tag_28:\n        /* \"#utility.yul\":792:798   */\n      0x00\n        /* \"#utility.yul\":800:806   */\n      dup1\n        /* \"#utility.yul\":853:855   */\n      0x40\n        /* \"#utility.yul\":841:850   */\n      dup4\n        /* \"#utility.yul\":832:839   */\n      dup6\n        /* \"#utility.yul\":828:851   */\n      sub\n        /* \"#utility.yul\":824:856   */\n      slt\n        /* \"#utility.yul\":821:873   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":869:870   */\n      0x00\n        /* \"#utility.yul\":866:867   */\n      dup1\n        /* \"#utility.yul\":859:871   */\n      revert\n        /* \"#utility.yul\":821:873   */\n    tag_210:\n        /* \"#utility.yul\":892:921   */\n      tag_211\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":892:921   */\n      tag_196\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":882:921   */\n      swap5\n        /* \"#utility.yul\":990:992   */\n      0x20\n        /* \"#utility.yul\":975:993   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":962:994   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":724:1024   */\n      jump\t// out\n        /* \"#utility.yul\":1403:1777   */\n    tag_38:\n        /* \"#utility.yul\":1480:1486   */\n      0x00\n        /* \"#utility.yul\":1488:1494   */\n      dup1\n        /* \"#utility.yul\":1496:1502   */\n      0x00\n        /* \"#utility.yul\":1549:1551   */\n      0x60\n        /* \"#utility.yul\":1537:1546   */\n      dup5\n        /* \"#utility.yul\":1528:1535   */\n      dup7\n        /* \"#utility.yul\":1524:1547   */\n      sub\n        /* \"#utility.yul\":1520:1552   */\n      slt\n        /* \"#utility.yul\":1517:1569   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":1565:1566   */\n      0x00\n        /* \"#utility.yul\":1562:1563   */\n      dup1\n        /* \"#utility.yul\":1555:1567   */\n      revert\n        /* \"#utility.yul\":1517:1569   */\n    tag_215:\n        /* \"#utility.yul\":1588:1617   */\n      tag_216\n        /* \"#utility.yul\":1607:1616   */\n      dup5\n        /* \"#utility.yul\":1588:1617   */\n      tag_196\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":1578:1617   */\n      swap3\n      pop\n        /* \"#utility.yul\":1636:1674   */\n      tag_217\n        /* \"#utility.yul\":1670:1672   */\n      0x20\n        /* \"#utility.yul\":1659:1668   */\n      dup6\n        /* \"#utility.yul\":1655:1673   */\n      add\n        /* \"#utility.yul\":1636:1674   */\n      tag_196\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":1403:1777   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1626:1674   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1743:1745   */\n      0x40\n        /* \"#utility.yul\":1728:1746   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1715:1747   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1403:1777   */\n      jump\t// out\n        /* \"#utility.yul\":1971:2098   */\n    tag_197:\n        /* \"#utility.yul\":2032:2042   */\n      0x4e487b71\n        /* \"#utility.yul\":2027:2030   */\n      0xe0\n        /* \"#utility.yul\":2023:2043   */\n      shl\n        /* \"#utility.yul\":2020:2021   */\n      0x00\n        /* \"#utility.yul\":2013:2044   */\n      mstore\n        /* \"#utility.yul\":2063:2067   */\n      0x41\n        /* \"#utility.yul\":2060:2061   */\n      0x04\n        /* \"#utility.yul\":2053:2068   */\n      mstore\n        /* \"#utility.yul\":2087:2091   */\n      0x24\n        /* \"#utility.yul\":2084:2085   */\n      0x00\n        /* \"#utility.yul\":2077:2092   */\n      revert\n        /* \"#utility.yul\":2103:2829   */\n    tag_198:\n        /* \"#utility.yul\":2146:2151   */\n      0x00\n        /* \"#utility.yul\":2199:2202   */\n      dup3\n        /* \"#utility.yul\":2192:2196   */\n      0x1f\n        /* \"#utility.yul\":2184:2190   */\n      dup4\n        /* \"#utility.yul\":2180:2197   */\n      add\n        /* \"#utility.yul\":2176:2203   */\n      slt\n        /* \"#utility.yul\":2166:2221   */\n      tag_221\n      jumpi\n        /* \"#utility.yul\":2217:2218   */\n      0x00\n        /* \"#utility.yul\":2214:2215   */\n      dup1\n        /* \"#utility.yul\":2207:2219   */\n      revert\n        /* \"#utility.yul\":2166:2221   */\n    tag_221:\n        /* \"#utility.yul\":2257:2263   */\n      dup2\n        /* \"#utility.yul\":2244:2264   */\n      calldataload\n        /* \"#utility.yul\":2287:2305   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2279:2285   */\n      dup2\n        /* \"#utility.yul\":2276:2306   */\n      gt\n        /* \"#utility.yul\":2273:2329   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":2309:2327   */\n      tag_223\n      tag_197\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2358:2360   */\n      0x40\n        /* \"#utility.yul\":2352:2361   */\n      mload\n        /* \"#utility.yul\":2450:2452   */\n      0x1f\n        /* \"#utility.yul\":2412:2429   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2408:2439   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2441:2443   */\n      0x3f\n        /* \"#utility.yul\":2404:2444   */\n      add\n        /* \"#utility.yul\":2400:2454   */\n      and\n        /* \"#utility.yul\":2388:2455   */\n      dup2\n      add\n        /* \"#utility.yul\":2485:2503   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2470:2504   */\n      dup2\n      gt\n        /* \"#utility.yul\":2506:2528   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2467:2529   */\n      or\n        /* \"#utility.yul\":2464:2552   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":2532:2550   */\n      tag_225\n      tag_197\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":2568:2570   */\n      0x40\n        /* \"#utility.yul\":2561:2583   */\n      mstore\n        /* \"#utility.yul\":2592:2614   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":2633:2652   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":2654:2658   */\n      0x20\n        /* \"#utility.yul\":2629:2659   */\n      add\n        /* \"#utility.yul\":2626:2665   */\n      dup6\n      lt\n        /* \"#utility.yul\":2623:2682   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":2678:2679   */\n      0x00\n        /* \"#utility.yul\":2675:2676   */\n      dup1\n        /* \"#utility.yul\":2668:2680   */\n      revert\n        /* \"#utility.yul\":2623:2682   */\n    tag_226:\n        /* \"#utility.yul\":2742:2748   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      0x20\n        /* \"#utility.yul\":2727:2733   */\n      dup6\n        /* \"#utility.yul\":2723:2740   */\n      add\n        /* \"#utility.yul\":2716:2720   */\n      0x20\n        /* \"#utility.yul\":2708:2714   */\n      dup4\n        /* \"#utility.yul\":2704:2721   */\n      add\n        /* \"#utility.yul\":2691:2749   */\n      calldatacopy\n        /* \"#utility.yul\":2797:2798   */\n      0x00\n        /* \"#utility.yul\":2769:2788   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":2790:2794   */\n      0x20\n        /* \"#utility.yul\":2765:2795   */\n      add\n        /* \"#utility.yul\":2758:2799   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2773:2779   */\n      swap4\n        /* \"#utility.yul\":2103:2829   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2834:3372   */\n    tag_50:\n        /* \"#utility.yul\":2922:2928   */\n      0x00\n        /* \"#utility.yul\":2930:2936   */\n      dup1\n        /* \"#utility.yul\":2983:2985   */\n      0x40\n        /* \"#utility.yul\":2971:2980   */\n      dup4\n        /* \"#utility.yul\":2962:2969   */\n      dup6\n        /* \"#utility.yul\":2958:2981   */\n      sub\n        /* \"#utility.yul\":2954:2986   */\n      slt\n        /* \"#utility.yul\":2951:3003   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":2999:3000   */\n      0x00\n        /* \"#utility.yul\":2996:2997   */\n      dup1\n        /* \"#utility.yul\":2989:3001   */\n      revert\n        /* \"#utility.yul\":2951:3003   */\n    tag_228:\n        /* \"#utility.yul\":3039:3048   */\n      dup3\n        /* \"#utility.yul\":3026:3049   */\n      calldataload\n        /* \"#utility.yul\":3072:3090   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3064:3070   */\n      dup2\n        /* \"#utility.yul\":3061:3091   */\n      gt\n        /* \"#utility.yul\":3058:3108   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":3104:3105   */\n      0x00\n        /* \"#utility.yul\":3101:3102   */\n      dup1\n        /* \"#utility.yul\":3094:3106   */\n      revert\n        /* \"#utility.yul\":3058:3108   */\n    tag_229:\n        /* \"#utility.yul\":3127:3177   */\n      tag_230\n        /* \"#utility.yul\":3169:3176   */\n      dup6\n        /* \"#utility.yul\":3160:3166   */\n      dup3\n        /* \"#utility.yul\":3149:3158   */\n      dup7\n        /* \"#utility.yul\":3145:3167   */\n      add\n        /* \"#utility.yul\":3127:3177   */\n      tag_198\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":3117:3177   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":3230:3232   */\n      0x20\n        /* \"#utility.yul\":3219:3228   */\n      dup4\n        /* \"#utility.yul\":3215:3233   */\n      add\n        /* \"#utility.yul\":3202:3234   */\n      calldataload\n        /* \"#utility.yul\":3259:3277   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3249:3257   */\n      dup2\n        /* \"#utility.yul\":3246:3278   */\n      gt\n        /* \"#utility.yul\":3243:3295   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":3291:3292   */\n      0x00\n        /* \"#utility.yul\":3288:3289   */\n      dup1\n        /* \"#utility.yul\":3281:3293   */\n      revert\n        /* \"#utility.yul\":3243:3295   */\n    tag_231:\n        /* \"#utility.yul\":3314:3366   */\n      tag_232\n        /* \"#utility.yul\":3358:3365   */\n      dup6\n        /* \"#utility.yul\":3347:3355   */\n      dup3\n        /* \"#utility.yul\":3336:3345   */\n      dup7\n        /* \"#utility.yul\":3332:3356   */\n      add\n        /* \"#utility.yul\":3314:3366   */\n      tag_198\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3304:3366   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2834:3372   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3377:3699   */\n    tag_54:\n        /* \"#utility.yul\":3446:3452   */\n      0x00\n        /* \"#utility.yul\":3499:3501   */\n      0x20\n        /* \"#utility.yul\":3487:3496   */\n      dup3\n        /* \"#utility.yul\":3478:3485   */\n      dup5\n        /* \"#utility.yul\":3474:3497   */\n      sub\n        /* \"#utility.yul\":3470:3502   */\n      slt\n        /* \"#utility.yul\":3467:3519   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":3515:3516   */\n      0x00\n        /* \"#utility.yul\":3512:3513   */\n      dup1\n        /* \"#utility.yul\":3505:3517   */\n      revert\n        /* \"#utility.yul\":3467:3519   */\n    tag_234:\n        /* \"#utility.yul\":3555:3564   */\n      dup2\n        /* \"#utility.yul\":3542:3565   */\n      calldataload\n        /* \"#utility.yul\":3588:3606   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3580:3586   */\n      dup2\n        /* \"#utility.yul\":3577:3607   */\n      gt\n        /* \"#utility.yul\":3574:3624   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":3620:3621   */\n      0x00\n        /* \"#utility.yul\":3617:3618   */\n      dup1\n        /* \"#utility.yul\":3610:3622   */\n      revert\n        /* \"#utility.yul\":3574:3624   */\n    tag_235:\n        /* \"#utility.yul\":3643:3693   */\n      tag_236\n        /* \"#utility.yul\":3685:3692   */\n      dup5\n        /* \"#utility.yul\":3676:3682   */\n      dup3\n        /* \"#utility.yul\":3665:3674   */\n      dup6\n        /* \"#utility.yul\":3661:3683   */\n      add\n        /* \"#utility.yul\":3643:3693   */\n      tag_198\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":3633:3693   */\n      swap5\n        /* \"#utility.yul\":3377:3699   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3704:3890   */\n    tag_58:\n        /* \"#utility.yul\":3763:3769   */\n      0x00\n        /* \"#utility.yul\":3816:3818   */\n      0x20\n        /* \"#utility.yul\":3804:3813   */\n      dup3\n        /* \"#utility.yul\":3795:3802   */\n      dup5\n        /* \"#utility.yul\":3791:3814   */\n      sub\n        /* \"#utility.yul\":3787:3819   */\n      slt\n        /* \"#utility.yul\":3784:3836   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":3832:3833   */\n      0x00\n        /* \"#utility.yul\":3829:3830   */\n      dup1\n        /* \"#utility.yul\":3822:3834   */\n      revert\n        /* \"#utility.yul\":3784:3836   */\n    tag_238:\n        /* \"#utility.yul\":3855:3884   */\n      tag_239\n        /* \"#utility.yul\":3874:3883   */\n      dup3\n        /* \"#utility.yul\":3855:3884   */\n      tag_196\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":3845:3884   */\n      swap4\n        /* \"#utility.yul\":3704:3890   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4103:4363   */\n    tag_79:\n        /* \"#utility.yul\":4171:4177   */\n      0x00\n        /* \"#utility.yul\":4179:4185   */\n      dup1\n        /* \"#utility.yul\":4232:4234   */\n      0x40\n        /* \"#utility.yul\":4220:4229   */\n      dup4\n        /* \"#utility.yul\":4211:4218   */\n      dup6\n        /* \"#utility.yul\":4207:4230   */\n      sub\n        /* \"#utility.yul\":4203:4235   */\n      slt\n        /* \"#utility.yul\":4200:4252   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":4248:4249   */\n      0x00\n        /* \"#utility.yul\":4245:4246   */\n      dup1\n        /* \"#utility.yul\":4238:4250   */\n      revert\n        /* \"#utility.yul\":4200:4252   */\n    tag_242:\n        /* \"#utility.yul\":4271:4300   */\n      tag_243\n        /* \"#utility.yul\":4290:4299   */\n      dup4\n        /* \"#utility.yul\":4271:4300   */\n      tag_196\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":4261:4300   */\n      swap2\n      pop\n        /* \"#utility.yul\":4319:4357   */\n      tag_244\n        /* \"#utility.yul\":4353:4355   */\n      0x20\n        /* \"#utility.yul\":4342:4351   */\n      dup5\n        /* \"#utility.yul\":4338:4356   */\n      add\n        /* \"#utility.yul\":4319:4357   */\n      tag_196\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4309:4357   */\n      swap1\n      pop\n        /* \"#utility.yul\":4103:4363   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4368:4748   */\n    tag_87:\n        /* \"#utility.yul\":4447:4448   */\n      0x01\n        /* \"#utility.yul\":4443:4455   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4490:4502   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4511:4572   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":4565:4569   */\n      0x7f\n        /* \"#utility.yul\":4557:4563   */\n      dup3\n        /* \"#utility.yul\":4553:4570   */\n      and\n        /* \"#utility.yul\":4543:4570   */\n      swap2\n      pop\n        /* \"#utility.yul\":4511:4572   */\n    tag_246:\n        /* \"#utility.yul\":4618:4620   */\n      0x20\n        /* \"#utility.yul\":4610:4616   */\n      dup3\n        /* \"#utility.yul\":4607:4621   */\n      lt\n        /* \"#utility.yul\":4587:4605   */\n      dup2\n        /* \"#utility.yul\":4584:4622   */\n      sub\n        /* \"#utility.yul\":4581:4742   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":4664:4674   */\n      0x4e487b71\n        /* \"#utility.yul\":4659:4662   */\n      0xe0\n        /* \"#utility.yul\":4655:4675   */\n      shl\n        /* \"#utility.yul\":4652:4653   */\n      0x00\n        /* \"#utility.yul\":4645:4676   */\n      mstore\n        /* \"#utility.yul\":4699:4703   */\n      0x22\n        /* \"#utility.yul\":4696:4697   */\n      0x04\n        /* \"#utility.yul\":4689:4704   */\n      mstore\n        /* \"#utility.yul\":4727:4731   */\n      0x24\n        /* \"#utility.yul\":4724:4725   */\n      0x00\n        /* \"#utility.yul\":4717:4732   */\n      revert\n        /* \"#utility.yul\":4581:4742   */\n    tag_247:\n      pop\n        /* \"#utility.yul\":4368:4748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5233:5751   */\n    tag_200:\n        /* \"#utility.yul\":5335:5337   */\n      0x1f\n        /* \"#utility.yul\":5330:5333   */\n      dup3\n        /* \"#utility.yul\":5327:5338   */\n      gt\n        /* \"#utility.yul\":5324:5745   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":5371:5376   */\n      dup1\n        /* \"#utility.yul\":5368:5369   */\n      0x00\n        /* \"#utility.yul\":5361:5377   */\n      mstore\n        /* \"#utility.yul\":5415:5419   */\n      0x20\n        /* \"#utility.yul\":5412:5413   */\n      0x00\n        /* \"#utility.yul\":5402:5420   */\n      keccak256\n        /* \"#utility.yul\":5485:5487   */\n      0x1f\n        /* \"#utility.yul\":5473:5483   */\n      dup5\n        /* \"#utility.yul\":5469:5488   */\n      add\n        /* \"#utility.yul\":5466:5467   */\n      0x05\n        /* \"#utility.yul\":5462:5489   */\n      shr\n        /* \"#utility.yul\":5456:5460   */\n      dup2\n        /* \"#utility.yul\":5452:5490   */\n      add\n        /* \"#utility.yul\":5521:5525   */\n      0x20\n        /* \"#utility.yul\":5509:5519   */\n      dup6\n        /* \"#utility.yul\":5506:5526   */\n      lt\n        /* \"#utility.yul\":5503:5550   */\n      iszero\n      tag_252\n      jumpi\n      pop\n        /* \"#utility.yul\":5544:5548   */\n      dup1\n        /* \"#utility.yul\":5503:5550   */\n    tag_252:\n        /* \"#utility.yul\":5599:5601   */\n      0x1f\n        /* \"#utility.yul\":5594:5597   */\n      dup5\n        /* \"#utility.yul\":5590:5602   */\n      add\n        /* \"#utility.yul\":5587:5588   */\n      0x05\n        /* \"#utility.yul\":5583:5603   */\n      shr\n        /* \"#utility.yul\":5577:5581   */\n      dup3\n        /* \"#utility.yul\":5573:5604   */\n      add\n        /* \"#utility.yul\":5563:5604   */\n      swap2\n      pop\n        /* \"#utility.yul\":5654:5735   */\n    tag_253:\n        /* \"#utility.yul\":5672:5674   */\n      dup2\n        /* \"#utility.yul\":5665:5670   */\n      dup2\n        /* \"#utility.yul\":5662:5675   */\n      lt\n        /* \"#utility.yul\":5654:5735   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":5731:5732   */\n      0x00\n        /* \"#utility.yul\":5717:5733   */\n      dup2\n      sstore\n        /* \"#utility.yul\":5698:5699   */\n      0x01\n        /* \"#utility.yul\":5687:5700   */\n      add\n        /* \"#utility.yul\":5654:5735   */\n      jump(tag_253)\n    tag_255:\n        /* \"#utility.yul\":5658:5661   */\n      pop\n      pop\n        /* \"#utility.yul\":5233:5751   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5927:7226   */\n    tag_116:\n        /* \"#utility.yul\":6053:6056   */\n      dup2\n        /* \"#utility.yul\":6047:6057   */\n      mload\n        /* \"#utility.yul\":6080:6098   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6072:6078   */\n      dup2\n        /* \"#utility.yul\":6069:6099   */\n      gt\n        /* \"#utility.yul\":6066:6122   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":6102:6120   */\n      tag_259\n      tag_197\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":6131:6228   */\n      tag_260\n        /* \"#utility.yul\":6221:6227   */\n      dup2\n        /* \"#utility.yul\":6181:6219   */\n      tag_261\n        /* \"#utility.yul\":6213:6217   */\n      dup5\n        /* \"#utility.yul\":6207:6218   */\n      sload\n        /* \"#utility.yul\":6181:6219   */\n      tag_87\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":6175:6179   */\n      dup5\n        /* \"#utility.yul\":6131:6228   */\n      tag_200\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":6277:6281   */\n      0x20\n        /* \"#utility.yul\":6308:6310   */\n      0x1f\n        /* \"#utility.yul\":6297:6311   */\n      dup3\n      gt\n        /* \"#utility.yul\":6325:6326   */\n      0x01\n        /* \"#utility.yul\":6320:6969   */\n      dup2\n      eq\n      tag_263\n      jumpi\n        /* \"#utility.yul\":7013:7014   */\n      0x00\n        /* \"#utility.yul\":7030:7036   */\n      dup4\n        /* \"#utility.yul\":7027:7116   */\n      iszero\n      tag_264\n      jumpi\n      pop\n        /* \"#utility.yul\":7082:7101   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":7076:7102   */\n      mload\n        /* \"#utility.yul\":7027:7116   */\n    tag_264:\n      not(0x00)\n        /* \"#utility.yul\":5884:5885   */\n      0x03\n        /* \"#utility.yul\":5880:5891   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":5876:5900   */\n      shr\n        /* \"#utility.yul\":5872:5901   */\n      not\n        /* \"#utility.yul\":5862:5902   */\n      and\n        /* \"#utility.yul\":5908:5909   */\n      0x01\n        /* \"#utility.yul\":5904:5915   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":5859:5916   */\n      or\n        /* \"#utility.yul\":7129:7210   */\n      dup5\n      sstore\n        /* \"#utility.yul\":6290:7220   */\n      jump(tag_255)\n        /* \"#utility.yul\":6320:6969   */\n    tag_263:\n        /* \"#utility.yul\":5180:5181   */\n      0x00\n        /* \"#utility.yul\":5173:5187   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":5217:5221   */\n      0x20\n        /* \"#utility.yul\":5204:5222   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":6356:6376   */\n      dup6\n      and\n      swap2\n        /* \"#utility.yul\":6474:6696   */\n    tag_267:\n        /* \"#utility.yul\":6488:6495   */\n      dup3\n        /* \"#utility.yul\":6485:6486   */\n      dup2\n        /* \"#utility.yul\":6482:6496   */\n      lt\n        /* \"#utility.yul\":6474:6696   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":6570:6589   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":6564:6590   */\n      mload\n        /* \"#utility.yul\":6549:6591   */\n      dup3\n      sstore\n        /* \"#utility.yul\":6677:6681   */\n      0x20\n        /* \"#utility.yul\":6662:6682   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":6630:6631   */\n      0x01\n        /* \"#utility.yul\":6618:6632   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":6504:6516   */\n      add\n        /* \"#utility.yul\":6474:6696   */\n      jump(tag_267)\n    tag_269:\n        /* \"#utility.yul\":6478:6481   */\n      pop\n        /* \"#utility.yul\":6724:6730   */\n      dup5\n        /* \"#utility.yul\":6715:6722   */\n      dup3\n        /* \"#utility.yul\":6712:6731   */\n      lt\n        /* \"#utility.yul\":6709:6910   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":6785:6804   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":6779:6805   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":6868:6869   */\n      0x03\n        /* \"#utility.yul\":6864:6878   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":6880:6883   */\n      0xf8\n        /* \"#utility.yul\":6860:6884   */\n      and\n        /* \"#utility.yul\":6856:6893   */\n      shr\n        /* \"#utility.yul\":6852:6894   */\n      not\n        /* \"#utility.yul\":6837:6895   */\n      and\n        /* \"#utility.yul\":6822:6896   */\n      dup2\n      sstore\n        /* \"#utility.yul\":6709:6910   */\n    tag_270:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6956:6957   */\n      0x01\n        /* \"#utility.yul\":6940:6954   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":6936:6958   */\n      add\n        /* \"#utility.yul\":6923:6959   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":5927:7226   */\n      jump\t// out\n        /* \"#utility.yul\":7581:7803   */\n    tag_189:\n        /* \"#utility.yul\":7646:7655   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7667:7677   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7664:7797   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":7719:7729   */\n      0x4e487b71\n        /* \"#utility.yul\":7714:7717   */\n      0xe0\n        /* \"#utility.yul\":7710:7730   */\n      shl\n        /* \"#utility.yul\":7707:7708   */\n      0x00\n        /* \"#utility.yul\":7700:7731   */\n      mstore\n        /* \"#utility.yul\":7754:7758   */\n      0x11\n        /* \"#utility.yul\":7751:7752   */\n      0x04\n        /* \"#utility.yul\":7744:7759   */\n      mstore\n        /* \"#utility.yul\":7782:7786   */\n      0x24\n        /* \"#utility.yul\":7779:7780   */\n      0x00\n        /* \"#utility.yul\":7772:7787   */\n      revert\n\n    auxdata: 0xa2646970667358221220c8852fb7b8bc5bc2e0bb47db09997f4a4be9d29054e1c4beec35e07625033d5f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_961": {
									"entryPoint": null,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 135,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 297,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 217,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2860:10",
										"nodeType": "YulBlock",
										"src": "0:2860:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:10",
													"nodeType": "YulBlock",
													"src": "46:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:10",
																		"nodeType": "YulLiteral",
																		"src": "63:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:10",
																				"nodeType": "YulLiteral",
																				"src": "70:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:10",
																				"nodeType": "YulLiteral",
																				"src": "75:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:10"
																		},
																		"nativeSrc": "66:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:10"
																},
																"nativeSrc": "56:31:10",
																"nodeType": "YulFunctionCall",
																"src": "56:31:10"
															},
															"nativeSrc": "56:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:10",
																		"nodeType": "YulLiteral",
																		"src": "103:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:10",
																		"nodeType": "YulLiteral",
																		"src": "106:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:10"
																},
																"nativeSrc": "96:15:10",
																"nodeType": "YulFunctionCall",
																"src": "96:15:10"
															},
															"nativeSrc": "96:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:10",
																		"nodeType": "YulLiteral",
																		"src": "127:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:10",
																		"nodeType": "YulLiteral",
																		"src": "130:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:10"
																},
																"nativeSrc": "120:15:10",
																"nodeType": "YulFunctionCall",
																"src": "120:15:10"
															},
															"nativeSrc": "120:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:10"
											},
											{
												"body": {
													"nativeSrc": "201:325:10",
													"nodeType": "YulBlock",
													"src": "201:325:10",
													"statements": [
														{
															"nativeSrc": "211:22:10",
															"nodeType": "YulAssignment",
															"src": "211:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:10",
																		"nodeType": "YulLiteral",
																		"src": "225:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:10"
																},
																"nativeSrc": "221:12:10",
																"nodeType": "YulFunctionCall",
																"src": "221:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:10"
																}
															]
														},
														{
															"nativeSrc": "242:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:10",
																		"nodeType": "YulLiteral",
																		"src": "278:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:10"
																},
																"nativeSrc": "268:12:10",
																"nodeType": "YulFunctionCall",
																"src": "268:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:10",
																	"nodeType": "YulTypedName",
																	"src": "246:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:10",
																"nodeType": "YulBlock",
																"src": "319:31:10",
																"statements": [
																	{
																		"nativeSrc": "321:27:10",
																		"nodeType": "YulAssignment",
																		"src": "321:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:10",
																					"nodeType": "YulLiteral",
																					"src": "343:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:10"
																			},
																			"nativeSrc": "331:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:10"
																},
																"nativeSrc": "292:26:10",
																"nodeType": "YulFunctionCall",
																"src": "292:26:10"
															},
															"nativeSrc": "289:61:10",
															"nodeType": "YulIf",
															"src": "289:61:10"
														},
														{
															"body": {
																"nativeSrc": "409:111:10",
																"nodeType": "YulBlock",
																"src": "409:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:10",
																					"nodeType": "YulLiteral",
																					"src": "430:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:10",
																							"nodeType": "YulLiteral",
																							"src": "437:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:10",
																							"nodeType": "YulLiteral",
																							"src": "442:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:10"
																					},
																					"nativeSrc": "433:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:10"
																			},
																			"nativeSrc": "423:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:10"
																		},
																		"nativeSrc": "423:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:10",
																					"nodeType": "YulLiteral",
																					"src": "474:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:10",
																					"nodeType": "YulLiteral",
																					"src": "477:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:10"
																			},
																			"nativeSrc": "467:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:10"
																		},
																		"nativeSrc": "467:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:10",
																					"nodeType": "YulLiteral",
																					"src": "502:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:10",
																					"nodeType": "YulLiteral",
																					"src": "505:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:10"
																			},
																			"nativeSrc": "495:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:10"
																		},
																		"nativeSrc": "495:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:10",
																				"nodeType": "YulLiteral",
																				"src": "396:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:10"
																		},
																		"nativeSrc": "385:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:10"
																},
																"nativeSrc": "362:38:10",
																"nodeType": "YulFunctionCall",
																"src": "362:38:10"
															},
															"nativeSrc": "359:161:10",
															"nodeType": "YulIf",
															"src": "359:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:10",
														"nodeType": "YulTypedName",
														"src": "181:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:10",
														"nodeType": "YulTypedName",
														"src": "190:6:10",
														"type": ""
													}
												],
												"src": "146:380:10"
											},
											{
												"body": {
													"nativeSrc": "587:65:10",
													"nodeType": "YulBlock",
													"src": "587:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:10",
																		"nodeType": "YulLiteral",
																		"src": "604:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:10"
																},
																"nativeSrc": "597:14:10",
																"nodeType": "YulFunctionCall",
																"src": "597:14:10"
															},
															"nativeSrc": "597:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:10"
														},
														{
															"nativeSrc": "620:26:10",
															"nodeType": "YulAssignment",
															"src": "620:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:10",
																		"nodeType": "YulLiteral",
																		"src": "638:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:10",
																		"nodeType": "YulLiteral",
																		"src": "641:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:10"
																},
																"nativeSrc": "628:18:10",
																"nodeType": "YulFunctionCall",
																"src": "628:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:10",
														"nodeType": "YulTypedName",
														"src": "570:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:10",
														"nodeType": "YulTypedName",
														"src": "578:4:10",
														"type": ""
													}
												],
												"src": "531:121:10"
											},
											{
												"body": {
													"nativeSrc": "738:437:10",
													"nodeType": "YulBlock",
													"src": "738:437:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:10",
																"nodeType": "YulBlock",
																"src": "771:398:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:10",
																					"nodeType": "YulLiteral",
																					"src": "792:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:10"
																			},
																			"nativeSrc": "785:16:10",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:10"
																		},
																		"nativeSrc": "785:16:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:10"
																	},
																	{
																		"nativeSrc": "814:30:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:10",
																					"nodeType": "YulLiteral",
																					"src": "836:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:10",
																					"nodeType": "YulLiteral",
																					"src": "839:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:10"
																			},
																			"nativeSrc": "826:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:10"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:10",
																				"nodeType": "YulTypedName",
																				"src": "818:4:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:10",
																							"nodeType": "YulLiteral",
																							"src": "890:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:10",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:10",
																									"nodeType": "YulLiteral",
																									"src": "909:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:10"
																							},
																							"nativeSrc": "893:19:10",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:10"
																					},
																					"nativeSrc": "886:27:10",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:10"
																			},
																			"nativeSrc": "876:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:10",
																				"nodeType": "YulTypedName",
																				"src": "861:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:10",
																			"nodeType": "YulBlock",
																			"src": "951:23:10",
																			"statements": [
																				{
																					"nativeSrc": "953:19:10",
																					"nodeType": "YulAssignment",
																					"src": "953:19:10",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:10",
																					"nodeType": "YulLiteral",
																					"src": "945:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:10"
																			},
																			"nativeSrc": "930:20:10",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:10"
																		},
																		"nativeSrc": "927:47:10",
																		"nodeType": "YulIf",
																		"src": "927:47:10"
																	},
																	{
																		"nativeSrc": "987:41:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:10",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:10",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:10"
																							},
																							"nativeSrc": "1014:12:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:10"
																					},
																					"nativeSrc": "1007:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:10"
																			},
																			"nativeSrc": "997:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:10"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:10",
																				"nodeType": "YulTypedName",
																				"src": "991:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:10",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:10",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:10"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:10",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:10",
																			"nodeType": "YulBlock",
																			"src": "1139:20:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:10",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:10",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:10"
																						},
																						"nativeSrc": "1141:16:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:10"
																					},
																					"nativeSrc": "1141:16:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:10"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:10"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:10"
																			},
																			"nativeSrc": "1086:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:10"
																		},
																		"nativeSrc": "1078:81:10",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:10",
																			"nodeType": "YulBlock",
																			"src": "1100:26:10",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:10",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:10",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:10"
																						},
																						"nativeSrc": "1111:13:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:10"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:10"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:10",
																			"nodeType": "YulBlock",
																			"src": "1082:3:10",
																			"statements": []
																		},
																		"src": "1078:81:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:10",
																		"nodeType": "YulLiteral",
																		"src": "759:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:10"
																},
																"nativeSrc": "751:11:10",
																"nodeType": "YulFunctionCall",
																"src": "751:11:10"
															},
															"nativeSrc": "748:421:10",
															"nodeType": "YulIf",
															"src": "748:421:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:10",
														"nodeType": "YulTypedName",
														"src": "710:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:10",
														"nodeType": "YulTypedName",
														"src": "717:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:10",
														"nodeType": "YulTypedName",
														"src": "722:10:10",
														"type": ""
													}
												],
												"src": "657:518:10"
											},
											{
												"body": {
													"nativeSrc": "1265:81:10",
													"nodeType": "YulBlock",
													"src": "1265:81:10",
													"statements": [
														{
															"nativeSrc": "1275:65:10",
															"nodeType": "YulAssignment",
															"src": "1275:65:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:10",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:10",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:10"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:10"
																								},
																								"nativeSrc": "1304:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:10"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:10",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:10",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:10"
																								},
																								"nativeSrc": "1317:6:10",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:10"
																						},
																						"nativeSrc": "1300:24:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:10"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:10"
																				},
																				"nativeSrc": "1296:29:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:10"
																		},
																		"nativeSrc": "1286:40:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:10",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:10"
																		},
																		"nativeSrc": "1328:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:10"
																},
																"nativeSrc": "1283:57:10",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:10",
														"nodeType": "YulTypedName",
														"src": "1242:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:10",
														"nodeType": "YulTypedName",
														"src": "1248:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:10",
														"nodeType": "YulTypedName",
														"src": "1256:4:10",
														"type": ""
													}
												],
												"src": "1180:166:10"
											},
											{
												"body": {
													"nativeSrc": "1447:1203:10",
													"nodeType": "YulBlock",
													"src": "1447:1203:10",
													"statements": [
														{
															"nativeSrc": "1457:24:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:10"
																},
																"nativeSrc": "1471:10:10",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:10",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:10",
																"nodeType": "YulBlock",
																"src": "1524:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:10"
																			},
																			"nativeSrc": "1526:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:10"
																		},
																		"nativeSrc": "1526:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:10",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:10",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:10",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:10"
																				},
																				"nativeSrc": "1508:10:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:10"
																		},
																		"nativeSrc": "1504:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:10"
																},
																"nativeSrc": "1493:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:10"
															},
															"nativeSrc": "1490:56:10",
															"nodeType": "YulIf",
															"src": "1490:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:10"
																				},
																				"nativeSrc": "1631:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:10"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:10",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:10"
																		},
																		"nativeSrc": "1605:38:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:10"
																},
																"nativeSrc": "1555:97:10",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:10"
															},
															"nativeSrc": "1555:97:10",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:10"
														},
														{
															"nativeSrc": "1661:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:10",
																"nodeType": "YulLiteral",
																"src": "1678:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:10",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:17:10",
															"nodeType": "YulAssignment",
															"src": "1688:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1701:4:10",
																"nodeType": "YulLiteral",
																"src": "1701:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1688:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "1688:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1751:642:10",
																		"nodeType": "YulBlock",
																		"src": "1751:642:10",
																		"statements": [
																			{
																				"nativeSrc": "1765:35:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1765:35:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1784:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "1784:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1796:2:10",
																									"nodeType": "YulLiteral",
																									"src": "1796:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1792:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "1792:3:10"
																							},
																							"nativeSrc": "1792:7:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1792:7:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1780:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "1780:3:10"
																					},
																					"nativeSrc": "1780:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1780:20:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1769:7:10",
																						"nodeType": "YulTypedName",
																						"src": "1769:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1813:49:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1813:49:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1857:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "1857:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1827:29:10",
																						"nodeType": "YulIdentifier",
																						"src": "1827:29:10"
																					},
																					"nativeSrc": "1827:35:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1827:35:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1817:6:10",
																						"nodeType": "YulTypedName",
																						"src": "1817:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1875:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1875:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1884:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1884:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1879:1:10",
																						"nodeType": "YulTypedName",
																						"src": "1879:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1955:165:10",
																					"nodeType": "YulBlock",
																					"src": "1955:165:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "1980:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "1980:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "1998:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "1998:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2003:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "2003:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "1994:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "1994:3:10"
																												},
																												"nativeSrc": "1994:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "1994:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "1988:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "1988:5:10"
																										},
																										"nativeSrc": "1988:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "1988:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "1973:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "1973:6:10"
																								},
																								"nativeSrc": "1973:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "1973:42:10"
																							},
																							"nativeSrc": "1973:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "1973:42:10"
																						},
																						{
																							"nativeSrc": "2032:24:10",
																							"nodeType": "YulAssignment",
																							"src": "2032:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2046:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "2046:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2054:1:10",
																										"nodeType": "YulLiteral",
																										"src": "2054:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2042:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "2042:3:10"
																								},
																								"nativeSrc": "2042:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2042:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2032:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "2032:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2073:33:10",
																							"nodeType": "YulAssignment",
																							"src": "2073:33:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2090:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "2090:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2101:4:10",
																										"nodeType": "YulLiteral",
																										"src": "2101:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2086:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "2086:3:10"
																								},
																								"nativeSrc": "2086:20:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2086:20:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2073:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "2073:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1909:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "1909:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1912:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "1912:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1906:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "1906:2:10"
																					},
																					"nativeSrc": "1906:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1906:14:10"
																				},
																				"nativeSrc": "1898:222:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1921:21:10",
																					"nodeType": "YulBlock",
																					"src": "1921:21:10",
																					"statements": [
																						{
																							"nativeSrc": "1923:17:10",
																							"nodeType": "YulAssignment",
																							"src": "1923:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1932:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "1932:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1935:4:10",
																										"nodeType": "YulLiteral",
																										"src": "1935:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1928:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "1928:3:10"
																								},
																								"nativeSrc": "1928:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "1928:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1923:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "1923:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1902:3:10",
																					"nodeType": "YulBlock",
																					"src": "1902:3:10",
																					"statements": []
																				},
																				"src": "1898:222:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "2168:166:10",
																					"nodeType": "YulBlock",
																					"src": "2168:166:10",
																					"statements": [
																						{
																							"nativeSrc": "2186:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2186:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2213:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "2213:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2218:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "2218:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2209:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "2209:3:10"
																										},
																										"nativeSrc": "2209:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "2209:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2203:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "2203:5:10"
																								},
																								"nativeSrc": "2203:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2203:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2190:9:10",
																									"nodeType": "YulTypedName",
																									"src": "2190:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2253:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "2253:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2265:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "2265:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2292:1:10",
																																				"nodeType": "YulLiteral",
																																				"src": "2292:1:10",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2295:6:10",
																																				"nodeType": "YulIdentifier",
																																				"src": "2295:6:10"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2288:3:10",
																																			"nodeType": "YulIdentifier",
																																			"src": "2288:3:10"
																																		},
																																		"nativeSrc": "2288:14:10",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2288:14:10"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2304:3:10",
																																		"nodeType": "YulLiteral",
																																		"src": "2304:3:10",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2284:3:10",
																																	"nodeType": "YulIdentifier",
																																	"src": "2284:3:10"
																																},
																																"nativeSrc": "2284:24:10",
																																"nodeType": "YulFunctionCall",
																																"src": "2284:24:10"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2314:1:10",
																																		"nodeType": "YulLiteral",
																																		"src": "2314:1:10",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2310:3:10",
																																	"nodeType": "YulIdentifier",
																																	"src": "2310:3:10"
																																},
																																"nativeSrc": "2310:6:10",
																																"nodeType": "YulFunctionCall",
																																"src": "2310:6:10"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2280:3:10",
																															"nodeType": "YulIdentifier",
																															"src": "2280:3:10"
																														},
																														"nativeSrc": "2280:37:10",
																														"nodeType": "YulFunctionCall",
																														"src": "2280:37:10"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2276:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "2276:3:10"
																												},
																												"nativeSrc": "2276:42:10",
																												"nodeType": "YulFunctionCall",
																												"src": "2276:42:10"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2261:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "2261:3:10"
																										},
																										"nativeSrc": "2261:58:10",
																										"nodeType": "YulFunctionCall",
																										"src": "2261:58:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2246:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "2246:6:10"
																								},
																								"nativeSrc": "2246:74:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2246:74:10"
																							},
																							"nativeSrc": "2246:74:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "2246:74:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2139:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "2139:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2148:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "2148:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2136:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "2136:2:10"
																					},
																					"nativeSrc": "2136:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2136:19:10"
																				},
																				"nativeSrc": "2133:201:10",
																				"nodeType": "YulIf",
																				"src": "2133:201:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2354:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "2354:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2368:1:10",
																											"nodeType": "YulLiteral",
																											"src": "2368:1:10",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2371:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "2371:6:10"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2364:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "2364:3:10"
																									},
																									"nativeSrc": "2364:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "2364:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2380:1:10",
																									"nodeType": "YulLiteral",
																									"src": "2380:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2360:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "2360:3:10"
																							},
																							"nativeSrc": "2360:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "2360:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2347:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2347:6:10"
																					},
																					"nativeSrc": "2347:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2347:36:10"
																				},
																				"nativeSrc": "2347:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "2347:36:10"
																			}
																		]
																	},
																	"nativeSrc": "1744:649:10",
																	"nodeType": "YulCase",
																	"src": "1744:649:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1749:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2410:234:10",
																		"nodeType": "YulBlock",
																		"src": "2410:234:10",
																		"statements": [
																			{
																				"nativeSrc": "2424:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2424:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2437:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2428:5:10",
																						"nodeType": "YulTypedName",
																						"src": "2428:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2473:67:10",
																					"nodeType": "YulBlock",
																					"src": "2473:67:10",
																					"statements": [
																						{
																							"nativeSrc": "2491:35:10",
																							"nodeType": "YulAssignment",
																							"src": "2491:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2510:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "2510:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2515:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "2515:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2506:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "2506:3:10"
																										},
																										"nativeSrc": "2506:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "2506:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2500:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "2500:5:10"
																								},
																								"nativeSrc": "2500:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2500:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2491:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "2491:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2454:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "2454:6:10"
																				},
																				"nativeSrc": "2451:89:10",
																				"nodeType": "YulIf",
																				"src": "2451:89:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2560:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "2560:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2619:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "2619:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2626:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "2626:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2566:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "2566:52:10"
																							},
																							"nativeSrc": "2566:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "2566:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2553:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2553:6:10"
																					},
																					"nativeSrc": "2553:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2553:81:10"
																				},
																				"nativeSrc": "2553:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "2553:81:10"
																			}
																		]
																	},
																	"nativeSrc": "2402:242:10",
																	"nodeType": "YulCase",
																	"src": "2402:242:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1724:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1724:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1732:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1721:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1721:2:10"
																},
																"nativeSrc": "1721:14:10",
																"nodeType": "YulFunctionCall",
																"src": "1721:14:10"
															},
															"nativeSrc": "1714:930:10",
															"nodeType": "YulSwitch",
															"src": "1714:930:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1299:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:10",
														"nodeType": "YulTypedName",
														"src": "1432:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:10",
														"nodeType": "YulTypedName",
														"src": "1438:3:10",
														"type": ""
													}
												],
												"src": "1351:1299:10"
											},
											{
												"body": {
													"nativeSrc": "2756:102:10",
													"nodeType": "YulBlock",
													"src": "2756:102:10",
													"statements": [
														{
															"nativeSrc": "2766:26:10",
															"nodeType": "YulAssignment",
															"src": "2766:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2778:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2778:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2789:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2789:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2774:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2774:3:10"
																},
																"nativeSrc": "2774:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2774:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2766:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2766:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2808:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2808:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2823:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2823:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2839:3:10",
																								"nodeType": "YulLiteral",
																								"src": "2839:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2844:1:10",
																								"nodeType": "YulLiteral",
																								"src": "2844:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2835:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "2835:3:10"
																						},
																						"nativeSrc": "2835:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "2835:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2848:1:10",
																						"nodeType": "YulLiteral",
																						"src": "2848:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2831:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2831:3:10"
																				},
																				"nativeSrc": "2831:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2831:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2819:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2819:3:10"
																		},
																		"nativeSrc": "2819:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2819:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2801:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2801:6:10"
																},
																"nativeSrc": "2801:51:10",
																"nodeType": "YulFunctionCall",
																"src": "2801:51:10"
															},
															"nativeSrc": "2801:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "2801:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2655:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2725:9:10",
														"nodeType": "YulTypedName",
														"src": "2725:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2736:6:10",
														"nodeType": "YulTypedName",
														"src": "2736:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2747:4:10",
														"nodeType": "YulTypedName",
														"src": "2747:4:10",
														"type": ""
													}
												],
												"src": "2655:203:10"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040805160208082018352600080835283519182019093529182523391600361003a8382610178565b5060046100478282610178565b5050506001600160a01b03811661007857604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61008181610087565b50610236565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061010357607f821691505b60208210810361012357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561017357806000526020600020601f840160051c810160208510156101505750805b601f840160051c820191505b81811015610170576000815560010161015c565b50505b505050565b81516001600160401b03811115610191576101916100d9565b6101a58161019f84546100ef565b84610129565b6020601f8211600181146101d957600083156101c15750848201515b600019600385901b1c1916600184901b178455610170565b600084815260208120601f198516915b8281101561020957878501518255602094850194600190920191016101e9565b50848210156102275786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b610c9c806102456000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb14610209578063b90497e01461021c578063dd62ed3e14610224578063f2fde38b1461025d57600080fd5b806370a08231146101b5578063715018a6146101de5780638da5cb5b146101e657806395d89b411461020157600080fd5b8063313ce567116100d3578063313ce5671461016b57806340c10f191461017a5780634cd88b761461018f57806358e792ee146101a257600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610270565b60405161011a919061088d565b60405180910390f35b6101366101313660046108f7565b610302565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610921565b61031c565b6040516012815260200161011a565b61018d6101883660046108f7565b610340565b005b61018d61019d366004610a03565b610356565b61018d6101b0366004610a6c565b6103d9565b61014a6101c3366004610aa9565b6001600160a01b031660009081526020819052604090205490565b61018d6103ed565b6005546040516001600160a01b03909116815260200161011a565b61010d610401565b6101366102173660046108f7565b610410565b61010d61041e565b61014a610232366004610acb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018d61026b366004610aa9565b6104ac565b60606006805461027f90610afe565b80601f01602080910402602001604051908101604052809291908181526020018280546102ab90610afe565b80156102f85780601f106102cd576101008083540402835291602001916102f8565b820191906000526020600020905b8154815290600101906020018083116102db57829003601f168201915b5050505050905090565b6000336103108185856104ea565b60019150505b92915050565b60003361032a8582856104fc565b61033585858561057a565b506001949350505050565b6103486105d9565b6103528282610606565b5050565b60085460ff16156103ae5760405162461bcd60e51b815260206004820152601960248201527f546f6b656e20616c726561647920696e697469616c697a65640000000000000060448201526064015b60405180910390fd5b60066103ba8382610b86565b5060076103c78282610b86565b50506008805460ff1916600117905550565b6103e16105d9565b60096103528282610b86565b6103f56105d9565b6103ff600061063c565b565b60606007805461027f90610afe565b60003361031081858561057a565b6009805461042b90610afe565b80601f016020809104026020016040519081016040528092919081815260200182805461045790610afe565b80156104a45780601f10610479576101008083540402835291602001916104a4565b820191906000526020600020905b81548152906001019060200180831161048757829003601f168201915b505050505081565b6104b46105d9565b6001600160a01b0381166104de57604051631e4fbdf760e01b8152600060048201526024016103a5565b6104e78161063c565b50565b6104f7838383600161068e565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610574578181101561056557604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103a5565b6105748484848403600061068e565b50505050565b6001600160a01b0383166105a457604051634b637e8f60e11b8152600060048201526024016103a5565b6001600160a01b0382166105ce5760405163ec442f0560e01b8152600060048201526024016103a5565b6104f7838383610763565b6005546001600160a01b031633146103ff5760405163118cdaa760e01b81523360048201526024016103a5565b6001600160a01b0382166106305760405163ec442f0560e01b8152600060048201526024016103a5565b61035260008383610763565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166106b85760405163e602df0560e01b8152600060048201526024016103a5565b6001600160a01b0383166106e257604051634a1406b160e11b8152600060048201526024016103a5565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561057457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161075591815260200190565b60405180910390a350505050565b6001600160a01b03831661078e5780600260008282546107839190610c45565b909155506108009050565b6001600160a01b038316600090815260208190526040902054818110156107e15760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103a5565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661081c5760028054829003905561083b565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161088091815260200190565b60405180910390a3505050565b602081526000825180602084015260005b818110156108bb576020818601810151604086840101520161089e565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146108f257600080fd5b919050565b6000806040838503121561090a57600080fd5b610913836108db565b946020939093013593505050565b60008060006060848603121561093657600080fd5b61093f846108db565b925061094d602085016108db565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261098557600080fd5b813567ffffffffffffffff81111561099f5761099f61095e565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156109ce576109ce61095e565b6040528181528382016020018510156109e657600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610a1657600080fd5b823567ffffffffffffffff811115610a2d57600080fd5b610a3985828601610974565b925050602083013567ffffffffffffffff811115610a5657600080fd5b610a6285828601610974565b9150509250929050565b600060208284031215610a7e57600080fd5b813567ffffffffffffffff811115610a9557600080fd5b610aa184828501610974565b949350505050565b600060208284031215610abb57600080fd5b610ac4826108db565b9392505050565b60008060408385031215610ade57600080fd5b610ae7836108db565b9150610af5602084016108db565b90509250929050565b600181811c90821680610b1257607f821691505b602082108103610b3257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104f757806000526020600020601f840160051c81016020851015610b5f5750805b601f840160051c820191505b81811015610b7f5760008155600101610b6b565b5050505050565b815167ffffffffffffffff811115610ba057610ba061095e565b610bb481610bae8454610afe565b84610b38565b6020601f821160018114610be85760008315610bd05750848201515b600019600385901b1c1916600184901b178455610b7f565b600084815260208120601f198516915b82811015610c185787850151825560209485019460019092019101610bf8565b5084821015610c365786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561031657634e487b7160e01b600052601160045260246000fdfea2646970667358221220c8852fb7b8bc5bc2e0bb47db09997f4a4be9d29054e1c4beec35e07625033d5f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE DUP4 MLOAD SWAP2 DUP3 ADD SWAP1 SWAP4 MSTORE SWAP2 DUP3 MSTORE CALLER SWAP2 PUSH1 0x3 PUSH2 0x3A DUP4 DUP3 PUSH2 0x178 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x47 DUP3 DUP3 PUSH2 0x178 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x78 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x81 DUP2 PUSH2 0x87 JUMP JUMPDEST POP PUSH2 0x236 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x103 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x123 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x173 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x150 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x15C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x191 JUMPI PUSH2 0x191 PUSH2 0xD9 JUMP JUMPDEST PUSH2 0x1A5 DUP2 PUSH2 0x19F DUP5 SLOAD PUSH2 0xEF JUMP JUMPDEST DUP5 PUSH2 0x129 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x1C1 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x170 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x209 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1E9 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x227 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xC9C DUP1 PUSH2 0x245 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xB90497E0 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x4CD88B76 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x58E792EE EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x88D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F7 JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x921 JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x18D PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F7 JUMP JUMPDEST PUSH2 0x340 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18D PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x356 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x401 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F7 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x41E JUMP JUMPDEST PUSH2 0x14A PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0xACB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0xAA9 JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x27F SWAP1 PUSH2 0xAFE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0xAFE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x310 DUP2 DUP6 DUP6 PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x32A DUP6 DUP3 DUP6 PUSH2 0x4FC JUMP JUMPDEST PUSH2 0x335 DUP6 DUP6 DUP6 PUSH2 0x57A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x348 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x352 DUP3 DUP3 PUSH2 0x606 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616C726561647920696E697469616C697A656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH2 0x3BA DUP4 DUP3 PUSH2 0xB86 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0x3C7 DUP3 DUP3 PUSH2 0xB86 JUMP JUMPDEST POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x3E1 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x352 DUP3 DUP3 PUSH2 0xB86 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x3FF PUSH1 0x0 PUSH2 0x63C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x27F SWAP1 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x310 DUP2 DUP6 DUP6 PUSH2 0x57A JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x42B SWAP1 PUSH2 0xAFE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x457 SWAP1 PUSH2 0xAFE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x479 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x487 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x4B4 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4DE JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x4E7 DUP2 PUSH2 0x63C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4F7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x68E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x574 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x565 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x574 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x68E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5CE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x4F7 DUP4 DUP4 DUP4 PUSH2 0x763 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x630 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x352 PUSH1 0x0 DUP4 DUP4 PUSH2 0x763 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6B8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6E2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x574 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x755 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x78E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x783 SWAP2 SWAP1 PUSH2 0xC45 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x800 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x7E1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x81C JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x83B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x880 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8BB JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x89E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x90A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x913 DUP4 PUSH2 0x8DB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x936 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93F DUP5 PUSH2 0x8DB JUMP JUMPDEST SWAP3 POP PUSH2 0x94D PUSH1 0x20 DUP6 ADD PUSH2 0x8DB JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x985 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x99F JUMPI PUSH2 0x99F PUSH2 0x95E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x9CE JUMPI PUSH2 0x9CE PUSH2 0x95E JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA39 DUP6 DUP3 DUP7 ADD PUSH2 0x974 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA62 DUP6 DUP3 DUP7 ADD PUSH2 0x974 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA1 DUP5 DUP3 DUP6 ADD PUSH2 0x974 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xABB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC4 DUP3 PUSH2 0x8DB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xADE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAE7 DUP4 PUSH2 0x8DB JUMP JUMPDEST SWAP2 POP PUSH2 0xAF5 PUSH1 0x20 DUP5 ADD PUSH2 0x8DB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB12 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB32 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4F7 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xB5F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB7F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB6B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBA0 JUMPI PUSH2 0xBA0 PUSH2 0x95E JUMP JUMPDEST PUSH2 0xBB4 DUP2 PUSH2 0xBAE DUP5 SLOAD PUSH2 0xAFE JUMP JUMPDEST DUP5 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0xBE8 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0xBD0 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC18 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xBF8 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0xC36 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x316 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 DUP6 0x2F 0xB7 0xB8 0xBC JUMPDEST 0xC2 0xE0 0xBB SELFBALANCE 0xDB MULMOD SWAP10 PUSH32 0x4A4BE9D29054E1C4BEEC35E07625033D5F64736F6C634300081A003300000000 ",
							"sourceMap": "168:1201:6:-:0;;;378:50;;;;;;;;;-1:-1:-1;1896:113:2;;;;;;;;;-1:-1:-1;1896:113:2;;;;;;;;;;;;;;414:10:6;;1962:5:2;:13;1896:113;1962:5;:13;:::i;:::-;-1:-1:-1;1985:7:2;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;2801:51:10;2774:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;168:1201:6;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:10:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:10;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:10;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:10;;;2500:26;2451:89;-1:-1:-1;;1308:1:10;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:10;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:10;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:10;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:10:o;2655:203::-;168:1201:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1258,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 1678,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1497,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 1542,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 1276,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1596,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 1402,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 1891,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 770,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@imageURL_949": {
									"entryPoint": 1054,
									"id": 949,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_987": {
									"entryPoint": 854,
									"id": 987,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mint_1020": {
									"entryPoint": 832,
									"id": 1020,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_996": {
									"entryPoint": 624,
									"id": 996,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1005,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setImageURL_1032": {
									"entryPoint": 985,
									"id": 1032,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_1005": {
									"entryPoint": 1025,
									"id": 1005,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 796,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1196,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1040,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 2420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 2668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 2563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_91f9a36ded9df16899312719ead5ef5c9633419e1e5ccb00e0ab9b2c948c2b2b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 2872,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 2814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 2398,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7805:10",
										"nodeType": "YulBlock",
										"src": "0:7805:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:406:10",
													"nodeType": "YulBlock",
													"src": "135:406:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:10",
																		"nodeType": "YulLiteral",
																		"src": "163:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:10"
																},
																"nativeSrc": "145:21:10",
																"nodeType": "YulFunctionCall",
																"src": "145:21:10"
															},
															"nativeSrc": "145:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:10"
														},
														{
															"nativeSrc": "175:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:10"
																},
																"nativeSrc": "189:13:10",
																"nodeType": "YulFunctionCall",
																"src": "189:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:10",
																	"nodeType": "YulTypedName",
																	"src": "179:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:10",
																				"nodeType": "YulLiteral",
																				"src": "233:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:10"
																		},
																		"nativeSrc": "218:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:10"
																},
																"nativeSrc": "211:34:10",
																"nodeType": "YulFunctionCall",
																"src": "211:34:10"
															},
															"nativeSrc": "211:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:10"
														},
														{
															"nativeSrc": "254:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "254:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "263:1:10",
																"nodeType": "YulLiteral",
																"src": "263:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "258:1:10",
																	"nodeType": "YulTypedName",
																	"src": "258:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "323:90:10",
																"nodeType": "YulBlock",
																"src": "323:90:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "352:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "352:9:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "363:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "363:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "348:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "348:3:10"
																							},
																							"nativeSrc": "348:17:10",
																							"nodeType": "YulFunctionCall",
																							"src": "348:17:10"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "367:2:10",
																							"nodeType": "YulLiteral",
																							"src": "367:2:10",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "344:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "344:3:10"
																					},
																					"nativeSrc": "344:26:10",
																					"nodeType": "YulFunctionCall",
																					"src": "344:26:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "386:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "386:6:10"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "394:1:10",
																											"nodeType": "YulIdentifier",
																											"src": "394:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "382:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "382:3:10"
																									},
																									"nativeSrc": "382:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "382:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "398:2:10",
																									"nodeType": "YulLiteral",
																									"src": "398:2:10",
																									"type": "",
																									"value": "32"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "378:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "378:3:10"
																							},
																							"nativeSrc": "378:23:10",
																							"nodeType": "YulFunctionCall",
																							"src": "378:23:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "372:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "372:5:10"
																					},
																					"nativeSrc": "372:30:10",
																					"nodeType": "YulFunctionCall",
																					"src": "372:30:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "337:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "337:6:10"
																			},
																			"nativeSrc": "337:66:10",
																			"nodeType": "YulFunctionCall",
																			"src": "337:66:10"
																		},
																		"nativeSrc": "337:66:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "337:66:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "284:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "284:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "287:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "287:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "281:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "281:2:10"
																},
																"nativeSrc": "281:13:10",
																"nodeType": "YulFunctionCall",
																"src": "281:13:10"
															},
															"nativeSrc": "273:140:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "295:19:10",
																"nodeType": "YulBlock",
																"src": "295:19:10",
																"statements": [
																	{
																		"nativeSrc": "297:15:10",
																		"nodeType": "YulAssignment",
																		"src": "297:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "306:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "306:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "309:2:10",
																					"nodeType": "YulLiteral",
																					"src": "309:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "302:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "302:3:10"
																			},
																			"nativeSrc": "302:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "302:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "297:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "297:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "277:3:10",
																"nodeType": "YulBlock",
																"src": "277:3:10",
																"statements": []
															},
															"src": "273:140:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "437:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "437:9:10"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "448:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "448:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "433:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "433:3:10"
																				},
																				"nativeSrc": "433:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "433:22:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "457:2:10",
																				"nodeType": "YulLiteral",
																				"src": "457:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "429:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "429:3:10"
																		},
																		"nativeSrc": "429:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "429:31:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "462:1:10",
																		"nodeType": "YulLiteral",
																		"src": "462:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "422:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "422:6:10"
																},
																"nativeSrc": "422:42:10",
																"nodeType": "YulFunctionCall",
																"src": "422:42:10"
															},
															"nativeSrc": "422:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "422:42:10"
														},
														{
															"nativeSrc": "473:62:10",
															"nodeType": "YulAssignment",
															"src": "473:62:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "489:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "489:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "508:6:10",
																								"nodeType": "YulIdentifier",
																								"src": "508:6:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "516:2:10",
																								"nodeType": "YulLiteral",
																								"src": "516:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "504:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "504:3:10"
																						},
																						"nativeSrc": "504:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "504:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "525:2:10",
																								"nodeType": "YulLiteral",
																								"src": "525:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "521:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "521:3:10"
																						},
																						"nativeSrc": "521:7:10",
																						"nodeType": "YulFunctionCall",
																						"src": "521:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "500:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "500:3:10"
																				},
																				"nativeSrc": "500:29:10",
																				"nodeType": "YulFunctionCall",
																				"src": "500:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "485:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "485:3:10"
																		},
																		"nativeSrc": "485:45:10",
																		"nodeType": "YulFunctionCall",
																		"src": "485:45:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "532:2:10",
																		"nodeType": "YulLiteral",
																		"src": "532:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:10"
																},
																"nativeSrc": "481:54:10",
																"nodeType": "YulFunctionCall",
																"src": "481:54:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:527:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:10",
														"nodeType": "YulTypedName",
														"src": "104:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:10",
														"nodeType": "YulTypedName",
														"src": "115:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:10",
														"nodeType": "YulTypedName",
														"src": "126:4:10",
														"type": ""
													}
												],
												"src": "14:527:10"
											},
											{
												"body": {
													"nativeSrc": "595:124:10",
													"nodeType": "YulBlock",
													"src": "595:124:10",
													"statements": [
														{
															"nativeSrc": "605:29:10",
															"nodeType": "YulAssignment",
															"src": "605:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "627:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "627:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "614:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "614:12:10"
																},
																"nativeSrc": "614:20:10",
																"nodeType": "YulFunctionCall",
																"src": "614:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "605:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "605:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "697:16:10",
																"nodeType": "YulBlock",
																"src": "697:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "706:1:10",
																					"nodeType": "YulLiteral",
																					"src": "706:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "709:1:10",
																					"nodeType": "YulLiteral",
																					"src": "709:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "699:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "699:6:10"
																			},
																			"nativeSrc": "699:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "699:12:10"
																		},
																		"nativeSrc": "699:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "699:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "667:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "667:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "682:3:10",
																										"nodeType": "YulLiteral",
																										"src": "682:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "687:1:10",
																										"nodeType": "YulLiteral",
																										"src": "687:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "678:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "678:3:10"
																								},
																								"nativeSrc": "678:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "678:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "691:1:10",
																								"nodeType": "YulLiteral",
																								"src": "691:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "674:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "674:3:10"
																						},
																						"nativeSrc": "674:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "674:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "663:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "663:3:10"
																				},
																				"nativeSrc": "663:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "663:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "653:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "653:2:10"
																		},
																		"nativeSrc": "653:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "653:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "646:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "646:6:10"
																},
																"nativeSrc": "646:50:10",
																"nodeType": "YulFunctionCall",
																"src": "646:50:10"
															},
															"nativeSrc": "643:70:10",
															"nodeType": "YulIf",
															"src": "643:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "546:173:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "574:6:10",
														"nodeType": "YulTypedName",
														"src": "574:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "585:5:10",
														"nodeType": "YulTypedName",
														"src": "585:5:10",
														"type": ""
													}
												],
												"src": "546:173:10"
											},
											{
												"body": {
													"nativeSrc": "811:213:10",
													"nodeType": "YulBlock",
													"src": "811:213:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "857:16:10",
																"nodeType": "YulBlock",
																"src": "857:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "866:1:10",
																					"nodeType": "YulLiteral",
																					"src": "866:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "869:1:10",
																					"nodeType": "YulLiteral",
																					"src": "869:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "859:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "859:6:10"
																			},
																			"nativeSrc": "859:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "859:12:10"
																		},
																		"nativeSrc": "859:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "859:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "832:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "832:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "841:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "841:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "828:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "828:3:10"
																		},
																		"nativeSrc": "828:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "828:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "853:2:10",
																		"nodeType": "YulLiteral",
																		"src": "853:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "824:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "824:3:10"
																},
																"nativeSrc": "824:32:10",
																"nodeType": "YulFunctionCall",
																"src": "824:32:10"
															},
															"nativeSrc": "821:52:10",
															"nodeType": "YulIf",
															"src": "821:52:10"
														},
														{
															"nativeSrc": "882:39:10",
															"nodeType": "YulAssignment",
															"src": "882:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "911:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "911:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "892:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "892:18:10"
																},
																"nativeSrc": "892:29:10",
																"nodeType": "YulFunctionCall",
																"src": "892:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "882:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "882:6:10"
																}
															]
														},
														{
															"nativeSrc": "930:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "930:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "943:1:10",
																"nodeType": "YulLiteral",
																"src": "943:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "934:5:10",
																	"nodeType": "YulTypedName",
																	"src": "934:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "953:41:10",
															"nodeType": "YulAssignment",
															"src": "953:41:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "979:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "979:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "990:2:10",
																				"nodeType": "YulLiteral",
																				"src": "990:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "975:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "975:3:10"
																		},
																		"nativeSrc": "975:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "975:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "962:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "962:12:10"
																},
																"nativeSrc": "962:32:10",
																"nodeType": "YulFunctionCall",
																"src": "962:32:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "953:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "953:5:10"
																}
															]
														},
														{
															"nativeSrc": "1003:15:10",
															"nodeType": "YulAssignment",
															"src": "1003:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "1013:5:10",
																"nodeType": "YulIdentifier",
																"src": "1013:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1003:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1003:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "724:300:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "769:9:10",
														"nodeType": "YulTypedName",
														"src": "769:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "780:7:10",
														"nodeType": "YulTypedName",
														"src": "780:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "792:6:10",
														"nodeType": "YulTypedName",
														"src": "792:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "800:6:10",
														"nodeType": "YulTypedName",
														"src": "800:6:10",
														"type": ""
													}
												],
												"src": "724:300:10"
											},
											{
												"body": {
													"nativeSrc": "1124:92:10",
													"nodeType": "YulBlock",
													"src": "1124:92:10",
													"statements": [
														{
															"nativeSrc": "1134:26:10",
															"nodeType": "YulAssignment",
															"src": "1134:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1146:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1146:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1157:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1157:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1142:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:10"
																},
																"nativeSrc": "1142:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1142:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1134:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1134:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1176:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1176:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1201:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1201:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1194:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "1194:6:10"
																				},
																				"nativeSrc": "1194:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1194:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1187:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1187:6:10"
																		},
																		"nativeSrc": "1187:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1187:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1169:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1169:6:10"
																},
																"nativeSrc": "1169:41:10",
																"nodeType": "YulFunctionCall",
																"src": "1169:41:10"
															},
															"nativeSrc": "1169:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "1169:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1029:187:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1093:9:10",
														"nodeType": "YulTypedName",
														"src": "1093:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1104:6:10",
														"nodeType": "YulTypedName",
														"src": "1104:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1115:4:10",
														"nodeType": "YulTypedName",
														"src": "1115:4:10",
														"type": ""
													}
												],
												"src": "1029:187:10"
											},
											{
												"body": {
													"nativeSrc": "1322:76:10",
													"nodeType": "YulBlock",
													"src": "1322:76:10",
													"statements": [
														{
															"nativeSrc": "1332:26:10",
															"nodeType": "YulAssignment",
															"src": "1332:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1344:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1344:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1355:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1340:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1340:3:10"
																},
																"nativeSrc": "1340:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1340:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1332:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1332:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1374:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1374:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1385:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1385:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1367:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1367:6:10"
																},
																"nativeSrc": "1367:25:10",
																"nodeType": "YulFunctionCall",
																"src": "1367:25:10"
															},
															"nativeSrc": "1367:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "1367:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1221:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1291:9:10",
														"nodeType": "YulTypedName",
														"src": "1291:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1302:6:10",
														"nodeType": "YulTypedName",
														"src": "1302:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1313:4:10",
														"nodeType": "YulTypedName",
														"src": "1313:4:10",
														"type": ""
													}
												],
												"src": "1221:177:10"
											},
											{
												"body": {
													"nativeSrc": "1507:270:10",
													"nodeType": "YulBlock",
													"src": "1507:270:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1553:16:10",
																"nodeType": "YulBlock",
																"src": "1553:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1562:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1562:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1565:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1565:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1555:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1555:6:10"
																			},
																			"nativeSrc": "1555:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1555:12:10"
																		},
																		"nativeSrc": "1555:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1555:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1528:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1528:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1537:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1537:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1524:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1524:3:10"
																		},
																		"nativeSrc": "1524:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1524:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1549:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1549:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1520:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1520:3:10"
																},
																"nativeSrc": "1520:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1520:32:10"
															},
															"nativeSrc": "1517:52:10",
															"nodeType": "YulIf",
															"src": "1517:52:10"
														},
														{
															"nativeSrc": "1578:39:10",
															"nodeType": "YulAssignment",
															"src": "1578:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1607:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1607:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1588:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1588:18:10"
																},
																"nativeSrc": "1588:29:10",
																"nodeType": "YulFunctionCall",
																"src": "1588:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1578:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1578:6:10"
																}
															]
														},
														{
															"nativeSrc": "1626:48:10",
															"nodeType": "YulAssignment",
															"src": "1626:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1659:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1659:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1670:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1670:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1655:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1655:3:10"
																		},
																		"nativeSrc": "1655:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1655:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1636:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1636:18:10"
																},
																"nativeSrc": "1636:38:10",
																"nodeType": "YulFunctionCall",
																"src": "1636:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1626:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1626:6:10"
																}
															]
														},
														{
															"nativeSrc": "1683:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1683:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1696:1:10",
																"nodeType": "YulLiteral",
																"src": "1696:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1687:5:10",
																	"nodeType": "YulTypedName",
																	"src": "1687:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1706:41:10",
															"nodeType": "YulAssignment",
															"src": "1706:41:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1732:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1732:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1743:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1743:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1728:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1728:3:10"
																		},
																		"nativeSrc": "1728:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1728:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1715:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1715:12:10"
																},
																"nativeSrc": "1715:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1715:32:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1706:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1706:5:10"
																}
															]
														},
														{
															"nativeSrc": "1756:15:10",
															"nodeType": "YulAssignment",
															"src": "1756:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "1766:5:10",
																"nodeType": "YulIdentifier",
																"src": "1766:5:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1756:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1756:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1403:374:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1457:9:10",
														"nodeType": "YulTypedName",
														"src": "1457:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1468:7:10",
														"nodeType": "YulTypedName",
														"src": "1468:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1480:6:10",
														"nodeType": "YulTypedName",
														"src": "1480:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1488:6:10",
														"nodeType": "YulTypedName",
														"src": "1488:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1496:6:10",
														"nodeType": "YulTypedName",
														"src": "1496:6:10",
														"type": ""
													}
												],
												"src": "1403:374:10"
											},
											{
												"body": {
													"nativeSrc": "1879:87:10",
													"nodeType": "YulBlock",
													"src": "1879:87:10",
													"statements": [
														{
															"nativeSrc": "1889:26:10",
															"nodeType": "YulAssignment",
															"src": "1889:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1901:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1901:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1912:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1912:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1897:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1897:3:10"
																},
																"nativeSrc": "1897:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1897:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1889:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1889:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1931:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1931:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1946:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1946:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1954:4:10",
																				"nodeType": "YulLiteral",
																				"src": "1954:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1942:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1942:3:10"
																		},
																		"nativeSrc": "1942:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1942:17:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1924:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1924:6:10"
																},
																"nativeSrc": "1924:36:10",
																"nodeType": "YulFunctionCall",
																"src": "1924:36:10"
															},
															"nativeSrc": "1924:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "1924:36:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1782:184:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1848:9:10",
														"nodeType": "YulTypedName",
														"src": "1848:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1859:6:10",
														"nodeType": "YulTypedName",
														"src": "1859:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1870:4:10",
														"nodeType": "YulTypedName",
														"src": "1870:4:10",
														"type": ""
													}
												],
												"src": "1782:184:10"
											},
											{
												"body": {
													"nativeSrc": "2003:95:10",
													"nodeType": "YulBlock",
													"src": "2003:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2020:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2020:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2027:3:10",
																				"nodeType": "YulLiteral",
																				"src": "2027:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2032:10:10",
																				"nodeType": "YulLiteral",
																				"src": "2032:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2023:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:10"
																		},
																		"nativeSrc": "2023:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2023:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2013:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2013:6:10"
																},
																"nativeSrc": "2013:31:10",
																"nodeType": "YulFunctionCall",
																"src": "2013:31:10"
															},
															"nativeSrc": "2013:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "2013:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2060:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2060:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2063:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2063:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2053:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2053:6:10"
																},
																"nativeSrc": "2053:15:10",
																"nodeType": "YulFunctionCall",
																"src": "2053:15:10"
															},
															"nativeSrc": "2053:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "2053:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2084:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2084:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2087:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2087:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2077:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:10"
																},
																"nativeSrc": "2077:15:10",
																"nodeType": "YulFunctionCall",
																"src": "2077:15:10"
															},
															"nativeSrc": "2077:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "2077:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1971:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1971:127:10"
											},
											{
												"body": {
													"nativeSrc": "2156:673:10",
													"nodeType": "YulBlock",
													"src": "2156:673:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2205:16:10",
																"nodeType": "YulBlock",
																"src": "2205:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2214:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2214:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2217:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2217:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2207:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2207:6:10"
																			},
																			"nativeSrc": "2207:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2207:12:10"
																		},
																		"nativeSrc": "2207:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2207:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2184:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2184:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2192:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2192:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2180:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2180:3:10"
																				},
																				"nativeSrc": "2180:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2180:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2199:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2199:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2176:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2176:3:10"
																		},
																		"nativeSrc": "2176:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2176:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2169:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2169:6:10"
																},
																"nativeSrc": "2169:35:10",
																"nodeType": "YulFunctionCall",
																"src": "2169:35:10"
															},
															"nativeSrc": "2166:55:10",
															"nodeType": "YulIf",
															"src": "2166:55:10"
														},
														{
															"nativeSrc": "2230:34:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2230:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2257:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2257:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2244:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2244:12:10"
																},
																"nativeSrc": "2244:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2244:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2234:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2234:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2307:22:10",
																"nodeType": "YulBlock",
																"src": "2307:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2309:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "2309:16:10"
																			},
																			"nativeSrc": "2309:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2309:18:10"
																		},
																		"nativeSrc": "2309:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2309:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2279:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2279:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2287:18:10",
																		"nodeType": "YulLiteral",
																		"src": "2287:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2276:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2276:2:10"
																},
																"nativeSrc": "2276:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2276:30:10"
															},
															"nativeSrc": "2273:56:10",
															"nodeType": "YulIf",
															"src": "2273:56:10"
														},
														{
															"nativeSrc": "2338:23:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2338:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2358:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2358:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2352:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2352:5:10"
																},
																"nativeSrc": "2352:9:10",
																"nodeType": "YulFunctionCall",
																"src": "2352:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2342:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2342:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2370:85:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2370:85:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2392:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2392:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "2416:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "2416:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2424:4:10",
																										"nodeType": "YulLiteral",
																										"src": "2424:4:10",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2412:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "2412:3:10"
																								},
																								"nativeSrc": "2412:17:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2412:17:10"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2435:2:10",
																										"nodeType": "YulLiteral",
																										"src": "2435:2:10",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2431:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "2431:3:10"
																								},
																								"nativeSrc": "2431:7:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2431:7:10"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "2408:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "2408:3:10"
																						},
																						"nativeSrc": "2408:31:10",
																						"nodeType": "YulFunctionCall",
																						"src": "2408:31:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2441:2:10",
																						"nodeType": "YulLiteral",
																						"src": "2441:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2404:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2404:3:10"
																				},
																				"nativeSrc": "2404:40:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2404:40:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2450:2:10",
																						"nodeType": "YulLiteral",
																						"src": "2450:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2446:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2446:3:10"
																				},
																				"nativeSrc": "2446:7:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2446:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2400:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2400:3:10"
																		},
																		"nativeSrc": "2400:54:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2400:54:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2388:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2388:3:10"
																},
																"nativeSrc": "2388:67:10",
																"nodeType": "YulFunctionCall",
																"src": "2388:67:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2374:10:10",
																	"nodeType": "YulTypedName",
																	"src": "2374:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2530:22:10",
																"nodeType": "YulBlock",
																"src": "2530:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2532:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "2532:16:10"
																			},
																			"nativeSrc": "2532:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2532:18:10"
																		},
																		"nativeSrc": "2532:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2532:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2473:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "2473:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2485:18:10",
																				"nodeType": "YulLiteral",
																				"src": "2485:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2470:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2470:2:10"
																		},
																		"nativeSrc": "2470:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2470:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2509:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "2509:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2521:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2506:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2506:2:10"
																		},
																		"nativeSrc": "2506:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2506:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2467:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2467:2:10"
																},
																"nativeSrc": "2467:62:10",
																"nodeType": "YulFunctionCall",
																"src": "2467:62:10"
															},
															"nativeSrc": "2464:88:10",
															"nodeType": "YulIf",
															"src": "2464:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2568:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2568:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2572:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "2572:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2561:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2561:6:10"
																},
																"nativeSrc": "2561:22:10",
																"nodeType": "YulFunctionCall",
																"src": "2561:22:10"
															},
															"nativeSrc": "2561:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "2561:22:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2599:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2599:6:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2607:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2607:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2592:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2592:6:10"
																},
																"nativeSrc": "2592:22:10",
																"nodeType": "YulFunctionCall",
																"src": "2592:22:10"
															},
															"nativeSrc": "2592:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "2592:22:10"
														},
														{
															"body": {
																"nativeSrc": "2666:16:10",
																"nodeType": "YulBlock",
																"src": "2666:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2675:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2675:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2678:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2678:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2668:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2668:6:10"
																			},
																			"nativeSrc": "2668:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2668:12:10"
																		},
																		"nativeSrc": "2668:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2668:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2637:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2637:6:10"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2645:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2645:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2633:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2633:3:10"
																				},
																				"nativeSrc": "2633:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2633:19:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2654:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2654:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2629:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2629:3:10"
																		},
																		"nativeSrc": "2629:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2629:30:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2661:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2626:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2626:2:10"
																},
																"nativeSrc": "2626:39:10",
																"nodeType": "YulFunctionCall",
																"src": "2626:39:10"
															},
															"nativeSrc": "2623:59:10",
															"nodeType": "YulIf",
															"src": "2623:59:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2708:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2708:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2716:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2716:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2704:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2704:3:10"
																		},
																		"nativeSrc": "2704:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2704:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2727:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2727:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2735:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2735:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2723:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2723:3:10"
																		},
																		"nativeSrc": "2723:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2723:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2742:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2742:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2691:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2691:12:10"
																},
																"nativeSrc": "2691:58:10",
																"nodeType": "YulFunctionCall",
																"src": "2691:58:10"
															},
															"nativeSrc": "2691:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "2691:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "2773:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2773:6:10"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2781:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2781:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2769:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2769:3:10"
																				},
																				"nativeSrc": "2769:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2769:19:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2790:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2790:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2765:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2765:3:10"
																		},
																		"nativeSrc": "2765:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2765:30:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2797:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2797:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2758:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2758:6:10"
																},
																"nativeSrc": "2758:41:10",
																"nodeType": "YulFunctionCall",
																"src": "2758:41:10"
															},
															"nativeSrc": "2758:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "2758:41:10"
														},
														{
															"nativeSrc": "2808:15:10",
															"nodeType": "YulAssignment",
															"src": "2808:15:10",
															"value": {
																"name": "memPtr",
																"nativeSrc": "2817:6:10",
																"nodeType": "YulIdentifier",
																"src": "2817:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2808:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2808:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nativeSrc": "2103:726:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2130:6:10",
														"nodeType": "YulTypedName",
														"src": "2130:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2138:3:10",
														"nodeType": "YulTypedName",
														"src": "2138:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2146:5:10",
														"nodeType": "YulTypedName",
														"src": "2146:5:10",
														"type": ""
													}
												],
												"src": "2103:726:10"
											},
											{
												"body": {
													"nativeSrc": "2941:431:10",
													"nodeType": "YulBlock",
													"src": "2941:431:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2987:16:10",
																"nodeType": "YulBlock",
																"src": "2987:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2996:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2996:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2999:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2999:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2989:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2989:6:10"
																			},
																			"nativeSrc": "2989:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2989:12:10"
																		},
																		"nativeSrc": "2989:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2989:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2962:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2962:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2971:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2971:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2958:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2958:3:10"
																		},
																		"nativeSrc": "2958:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2958:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2983:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2983:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2954:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2954:3:10"
																},
																"nativeSrc": "2954:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2954:32:10"
															},
															"nativeSrc": "2951:52:10",
															"nodeType": "YulIf",
															"src": "2951:52:10"
														},
														{
															"nativeSrc": "3012:37:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3012:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3039:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3039:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3026:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3026:12:10"
																},
																"nativeSrc": "3026:23:10",
																"nodeType": "YulFunctionCall",
																"src": "3026:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3016:6:10",
																	"nodeType": "YulTypedName",
																	"src": "3016:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3092:16:10",
																"nodeType": "YulBlock",
																"src": "3092:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3101:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3101:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3104:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3104:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3094:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3094:6:10"
																			},
																			"nativeSrc": "3094:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3094:12:10"
																		},
																		"nativeSrc": "3094:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3094:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3064:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3064:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3072:18:10",
																		"nodeType": "YulLiteral",
																		"src": "3072:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3061:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3061:2:10"
																},
																"nativeSrc": "3061:30:10",
																"nodeType": "YulFunctionCall",
																"src": "3061:30:10"
															},
															"nativeSrc": "3058:50:10",
															"nodeType": "YulIf",
															"src": "3058:50:10"
														},
														{
															"nativeSrc": "3117:60:10",
															"nodeType": "YulAssignment",
															"src": "3117:60:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3149:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3149:9:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3160:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3160:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3145:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3145:3:10"
																		},
																		"nativeSrc": "3145:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3145:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3169:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "3169:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "3127:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3127:17:10"
																},
																"nativeSrc": "3127:50:10",
																"nodeType": "YulFunctionCall",
																"src": "3127:50:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3117:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3117:6:10"
																}
															]
														},
														{
															"nativeSrc": "3186:48:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3186:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3219:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3219:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3230:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3230:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3215:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3215:3:10"
																		},
																		"nativeSrc": "3215:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3215:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3202:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3202:12:10"
																},
																"nativeSrc": "3202:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3202:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "3190:8:10",
																	"nodeType": "YulTypedName",
																	"src": "3190:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3279:16:10",
																"nodeType": "YulBlock",
																"src": "3279:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3288:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3288:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3291:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3291:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3281:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3281:6:10"
																			},
																			"nativeSrc": "3281:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3281:12:10"
																		},
																		"nativeSrc": "3281:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3281:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "3249:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "3249:8:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3259:18:10",
																		"nodeType": "YulLiteral",
																		"src": "3259:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3246:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3246:2:10"
																},
																"nativeSrc": "3246:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3246:32:10"
															},
															"nativeSrc": "3243:52:10",
															"nodeType": "YulIf",
															"src": "3243:52:10"
														},
														{
															"nativeSrc": "3304:62:10",
															"nodeType": "YulAssignment",
															"src": "3304:62:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3336:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3336:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "3347:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "3347:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3332:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3332:3:10"
																		},
																		"nativeSrc": "3332:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3332:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3358:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "3358:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "3314:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3314:17:10"
																},
																"nativeSrc": "3314:52:10",
																"nodeType": "YulFunctionCall",
																"src": "3314:52:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3304:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3304:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr",
												"nativeSrc": "2834:538:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2899:9:10",
														"nodeType": "YulTypedName",
														"src": "2899:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2910:7:10",
														"nodeType": "YulTypedName",
														"src": "2910:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2922:6:10",
														"nodeType": "YulTypedName",
														"src": "2922:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2930:6:10",
														"nodeType": "YulTypedName",
														"src": "2930:6:10",
														"type": ""
													}
												],
												"src": "2834:538:10"
											},
											{
												"body": {
													"nativeSrc": "3457:242:10",
													"nodeType": "YulBlock",
													"src": "3457:242:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3503:16:10",
																"nodeType": "YulBlock",
																"src": "3503:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3512:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3512:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3515:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3515:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3505:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3505:6:10"
																			},
																			"nativeSrc": "3505:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3505:12:10"
																		},
																		"nativeSrc": "3505:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3505:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3478:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3478:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3487:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3487:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3474:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3474:3:10"
																		},
																		"nativeSrc": "3474:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3474:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3499:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3499:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3470:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3470:3:10"
																},
																"nativeSrc": "3470:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3470:32:10"
															},
															"nativeSrc": "3467:52:10",
															"nodeType": "YulIf",
															"src": "3467:52:10"
														},
														{
															"nativeSrc": "3528:37:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3528:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3555:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3555:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3542:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3542:12:10"
																},
																"nativeSrc": "3542:23:10",
																"nodeType": "YulFunctionCall",
																"src": "3542:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3532:6:10",
																	"nodeType": "YulTypedName",
																	"src": "3532:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3608:16:10",
																"nodeType": "YulBlock",
																"src": "3608:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3617:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3617:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3620:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3620:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3610:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3610:6:10"
																			},
																			"nativeSrc": "3610:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3610:12:10"
																		},
																		"nativeSrc": "3610:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3610:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3580:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3580:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3588:18:10",
																		"nodeType": "YulLiteral",
																		"src": "3588:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3577:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3577:2:10"
																},
																"nativeSrc": "3577:30:10",
																"nodeType": "YulFunctionCall",
																"src": "3577:30:10"
															},
															"nativeSrc": "3574:50:10",
															"nodeType": "YulIf",
															"src": "3574:50:10"
														},
														{
															"nativeSrc": "3633:60:10",
															"nodeType": "YulAssignment",
															"src": "3633:60:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3665:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3665:9:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3676:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3676:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3661:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3661:3:10"
																		},
																		"nativeSrc": "3661:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3661:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3685:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "3685:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "3643:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3643:17:10"
																},
																"nativeSrc": "3643:50:10",
																"nodeType": "YulFunctionCall",
																"src": "3643:50:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3633:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3633:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "3377:322:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3423:9:10",
														"nodeType": "YulTypedName",
														"src": "3423:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3434:7:10",
														"nodeType": "YulTypedName",
														"src": "3434:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3446:6:10",
														"nodeType": "YulTypedName",
														"src": "3446:6:10",
														"type": ""
													}
												],
												"src": "3377:322:10"
											},
											{
												"body": {
													"nativeSrc": "3774:116:10",
													"nodeType": "YulBlock",
													"src": "3774:116:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3820:16:10",
																"nodeType": "YulBlock",
																"src": "3820:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3829:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3829:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3832:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3832:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3822:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3822:6:10"
																			},
																			"nativeSrc": "3822:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3822:12:10"
																		},
																		"nativeSrc": "3822:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3822:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3795:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3795:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3804:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3804:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3791:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3791:3:10"
																		},
																		"nativeSrc": "3791:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3791:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3816:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3816:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3787:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3787:3:10"
																},
																"nativeSrc": "3787:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3787:32:10"
															},
															"nativeSrc": "3784:52:10",
															"nodeType": "YulIf",
															"src": "3784:52:10"
														},
														{
															"nativeSrc": "3845:39:10",
															"nodeType": "YulAssignment",
															"src": "3845:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3874:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3874:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3855:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "3855:18:10"
																},
																"nativeSrc": "3855:29:10",
																"nodeType": "YulFunctionCall",
																"src": "3855:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3845:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3845:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3704:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3740:9:10",
														"nodeType": "YulTypedName",
														"src": "3740:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3751:7:10",
														"nodeType": "YulTypedName",
														"src": "3751:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3763:6:10",
														"nodeType": "YulTypedName",
														"src": "3763:6:10",
														"type": ""
													}
												],
												"src": "3704:186:10"
											},
											{
												"body": {
													"nativeSrc": "3996:102:10",
													"nodeType": "YulBlock",
													"src": "3996:102:10",
													"statements": [
														{
															"nativeSrc": "4006:26:10",
															"nodeType": "YulAssignment",
															"src": "4006:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4018:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4018:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4029:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4029:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4014:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4014:3:10"
																},
																"nativeSrc": "4014:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4014:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4006:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4006:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4048:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4048:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4063:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4063:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4079:3:10",
																								"nodeType": "YulLiteral",
																								"src": "4079:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4084:1:10",
																								"nodeType": "YulLiteral",
																								"src": "4084:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4075:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "4075:3:10"
																						},
																						"nativeSrc": "4075:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "4075:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4088:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4088:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4071:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4071:3:10"
																				},
																				"nativeSrc": "4071:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4071:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4059:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4059:3:10"
																		},
																		"nativeSrc": "4059:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4059:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4041:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4041:6:10"
																},
																"nativeSrc": "4041:51:10",
																"nodeType": "YulFunctionCall",
																"src": "4041:51:10"
															},
															"nativeSrc": "4041:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "4041:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3895:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3965:9:10",
														"nodeType": "YulTypedName",
														"src": "3965:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3976:6:10",
														"nodeType": "YulTypedName",
														"src": "3976:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3987:4:10",
														"nodeType": "YulTypedName",
														"src": "3987:4:10",
														"type": ""
													}
												],
												"src": "3895:203:10"
											},
											{
												"body": {
													"nativeSrc": "4190:173:10",
													"nodeType": "YulBlock",
													"src": "4190:173:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4236:16:10",
																"nodeType": "YulBlock",
																"src": "4236:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4245:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4245:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4248:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4248:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4238:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4238:6:10"
																			},
																			"nativeSrc": "4238:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4238:12:10"
																		},
																		"nativeSrc": "4238:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4238:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4211:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4211:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4220:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4220:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4207:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4207:3:10"
																		},
																		"nativeSrc": "4207:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4207:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4232:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4232:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4203:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4203:3:10"
																},
																"nativeSrc": "4203:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4203:32:10"
															},
															"nativeSrc": "4200:52:10",
															"nodeType": "YulIf",
															"src": "4200:52:10"
														},
														{
															"nativeSrc": "4261:39:10",
															"nodeType": "YulAssignment",
															"src": "4261:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4290:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4290:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4271:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "4271:18:10"
																},
																"nativeSrc": "4271:29:10",
																"nodeType": "YulFunctionCall",
																"src": "4271:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4261:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4261:6:10"
																}
															]
														},
														{
															"nativeSrc": "4309:48:10",
															"nodeType": "YulAssignment",
															"src": "4309:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4342:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4342:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4353:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4353:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4338:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4338:3:10"
																		},
																		"nativeSrc": "4338:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4338:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4319:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "4319:18:10"
																},
																"nativeSrc": "4319:38:10",
																"nodeType": "YulFunctionCall",
																"src": "4319:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4309:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4309:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4103:260:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4148:9:10",
														"nodeType": "YulTypedName",
														"src": "4148:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4159:7:10",
														"nodeType": "YulTypedName",
														"src": "4159:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4171:6:10",
														"nodeType": "YulTypedName",
														"src": "4171:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4179:6:10",
														"nodeType": "YulTypedName",
														"src": "4179:6:10",
														"type": ""
													}
												],
												"src": "4103:260:10"
											},
											{
												"body": {
													"nativeSrc": "4423:325:10",
													"nodeType": "YulBlock",
													"src": "4423:325:10",
													"statements": [
														{
															"nativeSrc": "4433:22:10",
															"nodeType": "YulAssignment",
															"src": "4433:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4447:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4447:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4450:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4450:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4443:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4443:3:10"
																},
																"nativeSrc": "4443:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4443:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4433:6:10"
																}
															]
														},
														{
															"nativeSrc": "4464:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4464:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4494:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4494:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4500:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4500:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4490:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4490:3:10"
																},
																"nativeSrc": "4490:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4490:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4468:18:10",
																	"nodeType": "YulTypedName",
																	"src": "4468:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4541:31:10",
																"nodeType": "YulBlock",
																"src": "4541:31:10",
																"statements": [
																	{
																		"nativeSrc": "4543:27:10",
																		"nodeType": "YulAssignment",
																		"src": "4543:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4557:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "4557:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4565:4:10",
																					"nodeType": "YulLiteral",
																					"src": "4565:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4553:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4553:3:10"
																			},
																			"nativeSrc": "4553:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4553:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4543:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4543:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4521:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "4521:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4514:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4514:6:10"
																},
																"nativeSrc": "4514:26:10",
																"nodeType": "YulFunctionCall",
																"src": "4514:26:10"
															},
															"nativeSrc": "4511:61:10",
															"nodeType": "YulIf",
															"src": "4511:61:10"
														},
														{
															"body": {
																"nativeSrc": "4631:111:10",
																"nodeType": "YulBlock",
																"src": "4631:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4652:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4652:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4659:3:10",
																							"nodeType": "YulLiteral",
																							"src": "4659:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4664:10:10",
																							"nodeType": "YulLiteral",
																							"src": "4664:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4655:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4655:3:10"
																					},
																					"nativeSrc": "4655:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4655:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4645:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4645:6:10"
																			},
																			"nativeSrc": "4645:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4645:31:10"
																		},
																		"nativeSrc": "4645:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4645:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4696:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4696:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4699:4:10",
																					"nodeType": "YulLiteral",
																					"src": "4699:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4689:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4689:6:10"
																			},
																			"nativeSrc": "4689:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4689:15:10"
																		},
																		"nativeSrc": "4689:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4689:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4724:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4724:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4727:4:10",
																					"nodeType": "YulLiteral",
																					"src": "4727:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4717:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4717:6:10"
																			},
																			"nativeSrc": "4717:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4717:15:10"
																		},
																		"nativeSrc": "4717:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4717:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4587:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "4587:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4610:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4610:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4618:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4618:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4607:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4607:2:10"
																		},
																		"nativeSrc": "4607:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4607:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4584:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4584:2:10"
																},
																"nativeSrc": "4584:38:10",
																"nodeType": "YulFunctionCall",
																"src": "4584:38:10"
															},
															"nativeSrc": "4581:161:10",
															"nodeType": "YulIf",
															"src": "4581:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4368:380:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4403:4:10",
														"nodeType": "YulTypedName",
														"src": "4403:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4412:6:10",
														"nodeType": "YulTypedName",
														"src": "4412:6:10",
														"type": ""
													}
												],
												"src": "4368:380:10"
											},
											{
												"body": {
													"nativeSrc": "4927:175:10",
													"nodeType": "YulBlock",
													"src": "4927:175:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4944:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4944:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4955:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4955:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4937:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4937:6:10"
																},
																"nativeSrc": "4937:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4937:21:10"
															},
															"nativeSrc": "4937:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "4937:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4978:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4978:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4989:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4989:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4974:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4974:3:10"
																		},
																		"nativeSrc": "4974:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4974:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4994:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4994:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4967:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4967:6:10"
																},
																"nativeSrc": "4967:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4967:30:10"
															},
															"nativeSrc": "4967:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "4967:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5017:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5017:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5028:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5028:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5013:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5013:3:10"
																		},
																		"nativeSrc": "5013:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5013:18:10"
																	},
																	{
																		"hexValue": "546f6b656e20616c726561647920696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "5033:27:10",
																		"nodeType": "YulLiteral",
																		"src": "5033:27:10",
																		"type": "",
																		"value": "Token already initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5006:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5006:6:10"
																},
																"nativeSrc": "5006:55:10",
																"nodeType": "YulFunctionCall",
																"src": "5006:55:10"
															},
															"nativeSrc": "5006:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "5006:55:10"
														},
														{
															"nativeSrc": "5070:26:10",
															"nodeType": "YulAssignment",
															"src": "5070:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5082:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5082:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5093:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5093:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5078:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5078:3:10"
																},
																"nativeSrc": "5078:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5078:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5070:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5070:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_91f9a36ded9df16899312719ead5ef5c9633419e1e5ccb00e0ab9b2c948c2b2b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4753:349:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4904:9:10",
														"nodeType": "YulTypedName",
														"src": "4904:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4918:4:10",
														"nodeType": "YulTypedName",
														"src": "4918:4:10",
														"type": ""
													}
												],
												"src": "4753:349:10"
											},
											{
												"body": {
													"nativeSrc": "5163:65:10",
													"nodeType": "YulBlock",
													"src": "5163:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5180:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5180:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5183:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5183:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5173:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5173:6:10"
																},
																"nativeSrc": "5173:14:10",
																"nodeType": "YulFunctionCall",
																"src": "5173:14:10"
															},
															"nativeSrc": "5173:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "5173:14:10"
														},
														{
															"nativeSrc": "5196:26:10",
															"nodeType": "YulAssignment",
															"src": "5196:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5214:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5214:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5217:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5217:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5204:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5204:9:10"
																},
																"nativeSrc": "5204:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5204:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5196:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5196:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "5107:121:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5146:3:10",
														"nodeType": "YulTypedName",
														"src": "5146:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5154:4:10",
														"nodeType": "YulTypedName",
														"src": "5154:4:10",
														"type": ""
													}
												],
												"src": "5107:121:10"
											},
											{
												"body": {
													"nativeSrc": "5314:437:10",
													"nodeType": "YulBlock",
													"src": "5314:437:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5347:398:10",
																"nodeType": "YulBlock",
																"src": "5347:398:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5368:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5368:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "5371:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "5371:5:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5361:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5361:6:10"
																			},
																			"nativeSrc": "5361:16:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5361:16:10"
																		},
																		"nativeSrc": "5361:16:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5361:16:10"
																	},
																	{
																		"nativeSrc": "5390:30:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5390:30:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5412:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5412:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5415:4:10",
																					"nodeType": "YulLiteral",
																					"src": "5415:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "5402:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5402:9:10"
																			},
																			"nativeSrc": "5402:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5402:18:10"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "5394:4:10",
																				"nodeType": "YulTypedName",
																				"src": "5394:4:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5433:57:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5433:57:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "5456:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "5456:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5466:1:10",
																							"nodeType": "YulLiteral",
																							"src": "5466:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "5473:10:10",
																									"nodeType": "YulIdentifier",
																									"src": "5473:10:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5485:2:10",
																									"nodeType": "YulLiteral",
																									"src": "5485:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5469:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "5469:3:10"
																							},
																							"nativeSrc": "5469:19:10",
																							"nodeType": "YulFunctionCall",
																							"src": "5469:19:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "5462:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "5462:3:10"
																					},
																					"nativeSrc": "5462:27:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5462:27:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5452:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5452:3:10"
																			},
																			"nativeSrc": "5452:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5452:38:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "5437:11:10",
																				"nodeType": "YulTypedName",
																				"src": "5437:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "5527:23:10",
																			"nodeType": "YulBlock",
																			"src": "5527:23:10",
																			"statements": [
																				{
																					"nativeSrc": "5529:19:10",
																					"nodeType": "YulAssignment",
																					"src": "5529:19:10",
																					"value": {
																						"name": "data",
																						"nativeSrc": "5544:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "5544:4:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "5529:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "5529:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "5509:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "5509:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5521:4:10",
																					"nodeType": "YulLiteral",
																					"src": "5521:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "5506:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "5506:2:10"
																			},
																			"nativeSrc": "5506:20:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5506:20:10"
																		},
																		"nativeSrc": "5503:47:10",
																		"nodeType": "YulIf",
																		"src": "5503:47:10"
																	},
																	{
																		"nativeSrc": "5563:41:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5563:41:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "5577:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "5577:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5587:1:10",
																							"nodeType": "YulLiteral",
																							"src": "5587:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "5594:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "5594:3:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5599:2:10",
																									"nodeType": "YulLiteral",
																									"src": "5599:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5590:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "5590:3:10"
																							},
																							"nativeSrc": "5590:12:10",
																							"nodeType": "YulFunctionCall",
																							"src": "5590:12:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "5583:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "5583:3:10"
																					},
																					"nativeSrc": "5583:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5583:20:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5573:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5573:3:10"
																			},
																			"nativeSrc": "5573:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5573:31:10"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "5567:2:10",
																				"nodeType": "YulTypedName",
																				"src": "5567:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5617:24:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5617:24:10",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "5630:11:10",
																			"nodeType": "YulIdentifier",
																			"src": "5630:11:10"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "5621:5:10",
																				"nodeType": "YulTypedName",
																				"src": "5621:5:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "5715:20:10",
																			"nodeType": "YulBlock",
																			"src": "5715:20:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "5724:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "5724:5:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5731:1:10",
																								"nodeType": "YulLiteral",
																								"src": "5731:1:10",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "5717:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "5717:6:10"
																						},
																						"nativeSrc": "5717:16:10",
																						"nodeType": "YulFunctionCall",
																						"src": "5717:16:10"
																					},
																					"nativeSrc": "5717:16:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "5717:16:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5665:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "5665:5:10"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "5672:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "5672:2:10"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "5662:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "5662:2:10"
																			},
																			"nativeSrc": "5662:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5662:13:10"
																		},
																		"nativeSrc": "5654:81:10",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "5676:26:10",
																			"nodeType": "YulBlock",
																			"src": "5676:26:10",
																			"statements": [
																				{
																					"nativeSrc": "5678:22:10",
																					"nodeType": "YulAssignment",
																					"src": "5678:22:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "5691:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "5691:5:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5698:1:10",
																								"nodeType": "YulLiteral",
																								"src": "5698:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5687:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "5687:3:10"
																						},
																						"nativeSrc": "5687:13:10",
																						"nodeType": "YulFunctionCall",
																						"src": "5687:13:10"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "5678:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "5678:5:10"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "5658:3:10",
																			"nodeType": "YulBlock",
																			"src": "5658:3:10",
																			"statements": []
																		},
																		"src": "5654:81:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "5330:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5330:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5335:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5335:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5327:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5327:2:10"
																},
																"nativeSrc": "5327:11:10",
																"nodeType": "YulFunctionCall",
																"src": "5327:11:10"
															},
															"nativeSrc": "5324:421:10",
															"nodeType": "YulIf",
															"src": "5324:421:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "5233:518:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5286:5:10",
														"nodeType": "YulTypedName",
														"src": "5286:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5293:3:10",
														"nodeType": "YulTypedName",
														"src": "5293:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5298:10:10",
														"nodeType": "YulTypedName",
														"src": "5298:10:10",
														"type": ""
													}
												],
												"src": "5233:518:10"
											},
											{
												"body": {
													"nativeSrc": "5841:81:10",
													"nodeType": "YulBlock",
													"src": "5841:81:10",
													"statements": [
														{
															"nativeSrc": "5851:65:10",
															"nodeType": "YulAssignment",
															"src": "5851:65:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "5866:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5866:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "5884:1:10",
																										"nodeType": "YulLiteral",
																										"src": "5884:1:10",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "5887:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "5887:3:10"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "5880:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "5880:3:10"
																								},
																								"nativeSrc": "5880:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5880:11:10"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "5897:1:10",
																										"nodeType": "YulLiteral",
																										"src": "5897:1:10",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "5893:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "5893:3:10"
																								},
																								"nativeSrc": "5893:6:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5893:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "5876:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "5876:3:10"
																						},
																						"nativeSrc": "5876:24:10",
																						"nodeType": "YulFunctionCall",
																						"src": "5876:24:10"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5872:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5872:3:10"
																				},
																				"nativeSrc": "5872:29:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5872:29:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5862:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5862:3:10"
																		},
																		"nativeSrc": "5862:40:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5862:40:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5908:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5908:1:10",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5911:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5911:3:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5904:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5904:3:10"
																		},
																		"nativeSrc": "5904:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5904:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5859:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5859:2:10"
																},
																"nativeSrc": "5859:57:10",
																"nodeType": "YulFunctionCall",
																"src": "5859:57:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5851:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5851:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5756:166:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5818:4:10",
														"nodeType": "YulTypedName",
														"src": "5818:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5824:3:10",
														"nodeType": "YulTypedName",
														"src": "5824:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5832:4:10",
														"nodeType": "YulTypedName",
														"src": "5832:4:10",
														"type": ""
													}
												],
												"src": "5756:166:10"
											},
											{
												"body": {
													"nativeSrc": "6023:1203:10",
													"nodeType": "YulBlock",
													"src": "6023:1203:10",
													"statements": [
														{
															"nativeSrc": "6033:24:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6033:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6053:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6053:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6047:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6047:5:10"
																},
																"nativeSrc": "6047:10:10",
																"nodeType": "YulFunctionCall",
																"src": "6047:10:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "6037:6:10",
																	"nodeType": "YulTypedName",
																	"src": "6037:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6100:22:10",
																"nodeType": "YulBlock",
																"src": "6100:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6102:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6102:16:10"
																			},
																			"nativeSrc": "6102:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6102:18:10"
																		},
																		"nativeSrc": "6102:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6102:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6072:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6072:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6080:18:10",
																		"nodeType": "YulLiteral",
																		"src": "6080:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6069:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6069:2:10"
																},
																"nativeSrc": "6069:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6069:30:10"
															},
															"nativeSrc": "6066:56:10",
															"nodeType": "YulIf",
															"src": "6066:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6175:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6175:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6213:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "6213:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6207:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "6207:5:10"
																				},
																				"nativeSrc": "6207:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6207:11:10"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "6181:25:10",
																			"nodeType": "YulIdentifier",
																			"src": "6181:25:10"
																		},
																		"nativeSrc": "6181:38:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6181:38:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "6221:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6221:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "6131:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6131:43:10"
																},
																"nativeSrc": "6131:97:10",
																"nodeType": "YulFunctionCall",
																"src": "6131:97:10"
															},
															"nativeSrc": "6131:97:10",
															"nodeType": "YulExpressionStatement",
															"src": "6131:97:10"
														},
														{
															"nativeSrc": "6237:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6237:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "6254:1:10",
																"nodeType": "YulLiteral",
																"src": "6254:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6241:9:10",
																	"nodeType": "YulTypedName",
																	"src": "6241:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6264:17:10",
															"nodeType": "YulAssignment",
															"src": "6264:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "6277:4:10",
																"nodeType": "YulLiteral",
																"src": "6277:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6264:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "6264:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6327:642:10",
																		"nodeType": "YulBlock",
																		"src": "6327:642:10",
																		"statements": [
																			{
																				"nativeSrc": "6341:35:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6341:35:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6360:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "6360:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6372:2:10",
																									"nodeType": "YulLiteral",
																									"src": "6372:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6368:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "6368:3:10"
																							},
																							"nativeSrc": "6368:7:10",
																							"nodeType": "YulFunctionCall",
																							"src": "6368:7:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6356:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "6356:3:10"
																					},
																					"nativeSrc": "6356:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6356:20:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6345:7:10",
																						"nodeType": "YulTypedName",
																						"src": "6345:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6389:49:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6389:49:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6433:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "6433:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "6403:29:10",
																						"nodeType": "YulIdentifier",
																						"src": "6403:29:10"
																					},
																					"nativeSrc": "6403:35:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6403:35:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6393:6:10",
																						"nodeType": "YulTypedName",
																						"src": "6393:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6451:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6451:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6460:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6460:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6455:1:10",
																						"nodeType": "YulTypedName",
																						"src": "6455:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6531:165:10",
																					"nodeType": "YulBlock",
																					"src": "6531:165:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6556:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "6556:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6574:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "6574:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6579:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "6579:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6570:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "6570:3:10"
																												},
																												"nativeSrc": "6570:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "6570:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6564:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "6564:5:10"
																										},
																										"nativeSrc": "6564:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "6564:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6549:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "6549:6:10"
																								},
																								"nativeSrc": "6549:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6549:42:10"
																							},
																							"nativeSrc": "6549:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "6549:42:10"
																						},
																						{
																							"nativeSrc": "6608:24:10",
																							"nodeType": "YulAssignment",
																							"src": "6608:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6622:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "6622:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6630:1:10",
																										"nodeType": "YulLiteral",
																										"src": "6630:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6618:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "6618:3:10"
																								},
																								"nativeSrc": "6618:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6618:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6608:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "6608:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6649:33:10",
																							"nodeType": "YulAssignment",
																							"src": "6649:33:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6666:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "6666:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6677:4:10",
																										"nodeType": "YulLiteral",
																										"src": "6677:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6662:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "6662:3:10"
																								},
																								"nativeSrc": "6662:20:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6662:20:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6649:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "6649:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6485:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "6485:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6488:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "6488:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6482:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "6482:2:10"
																					},
																					"nativeSrc": "6482:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6482:14:10"
																				},
																				"nativeSrc": "6474:222:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6497:21:10",
																					"nodeType": "YulBlock",
																					"src": "6497:21:10",
																					"statements": [
																						{
																							"nativeSrc": "6499:17:10",
																							"nodeType": "YulAssignment",
																							"src": "6499:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6508:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "6508:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6511:4:10",
																										"nodeType": "YulLiteral",
																										"src": "6511:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6504:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "6504:3:10"
																								},
																								"nativeSrc": "6504:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6504:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6499:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "6499:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6478:3:10",
																					"nodeType": "YulBlock",
																					"src": "6478:3:10",
																					"statements": []
																				},
																				"src": "6474:222:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "6744:166:10",
																					"nodeType": "YulBlock",
																					"src": "6744:166:10",
																					"statements": [
																						{
																							"nativeSrc": "6762:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6762:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6789:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "6789:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6794:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "6794:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6785:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "6785:3:10"
																										},
																										"nativeSrc": "6785:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "6785:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6779:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6779:5:10"
																								},
																								"nativeSrc": "6779:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6779:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6766:9:10",
																									"nodeType": "YulTypedName",
																									"src": "6766:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6829:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "6829:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6841:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "6841:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "6868:1:10",
																																				"nodeType": "YulLiteral",
																																				"src": "6868:1:10",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "6871:6:10",
																																				"nodeType": "YulIdentifier",
																																				"src": "6871:6:10"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "6864:3:10",
																																			"nodeType": "YulIdentifier",
																																			"src": "6864:3:10"
																																		},
																																		"nativeSrc": "6864:14:10",
																																		"nodeType": "YulFunctionCall",
																																		"src": "6864:14:10"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "6880:3:10",
																																		"nodeType": "YulLiteral",
																																		"src": "6880:3:10",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "6860:3:10",
																																	"nodeType": "YulIdentifier",
																																	"src": "6860:3:10"
																																},
																																"nativeSrc": "6860:24:10",
																																"nodeType": "YulFunctionCall",
																																"src": "6860:24:10"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "6890:1:10",
																																		"nodeType": "YulLiteral",
																																		"src": "6890:1:10",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "6886:3:10",
																																	"nodeType": "YulIdentifier",
																																	"src": "6886:3:10"
																																},
																																"nativeSrc": "6886:6:10",
																																"nodeType": "YulFunctionCall",
																																"src": "6886:6:10"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "6856:3:10",
																															"nodeType": "YulIdentifier",
																															"src": "6856:3:10"
																														},
																														"nativeSrc": "6856:37:10",
																														"nodeType": "YulFunctionCall",
																														"src": "6856:37:10"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "6852:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "6852:3:10"
																												},
																												"nativeSrc": "6852:42:10",
																												"nodeType": "YulFunctionCall",
																												"src": "6852:42:10"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "6837:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "6837:3:10"
																										},
																										"nativeSrc": "6837:58:10",
																										"nodeType": "YulFunctionCall",
																										"src": "6837:58:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6822:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "6822:6:10"
																								},
																								"nativeSrc": "6822:74:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6822:74:10"
																							},
																							"nativeSrc": "6822:74:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "6822:74:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6715:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "6715:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6724:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "6724:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6712:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "6712:2:10"
																					},
																					"nativeSrc": "6712:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6712:19:10"
																				},
																				"nativeSrc": "6709:201:10",
																				"nodeType": "YulIf",
																				"src": "6709:201:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6930:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "6930:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "6944:1:10",
																											"nodeType": "YulLiteral",
																											"src": "6944:1:10",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "6947:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "6947:6:10"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "6940:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "6940:3:10"
																									},
																									"nativeSrc": "6940:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "6940:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6956:1:10",
																									"nodeType": "YulLiteral",
																									"src": "6956:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6936:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "6936:3:10"
																							},
																							"nativeSrc": "6936:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "6936:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6923:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6923:6:10"
																					},
																					"nativeSrc": "6923:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6923:36:10"
																				},
																				"nativeSrc": "6923:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "6923:36:10"
																			}
																		]
																	},
																	"nativeSrc": "6320:649:10",
																	"nodeType": "YulCase",
																	"src": "6320:649:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6325:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6325:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6986:234:10",
																		"nodeType": "YulBlock",
																		"src": "6986:234:10",
																		"statements": [
																			{
																				"nativeSrc": "7000:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7000:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7013:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7013:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "7004:5:10",
																						"nodeType": "YulTypedName",
																						"src": "7004:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7049:67:10",
																					"nodeType": "YulBlock",
																					"src": "7049:67:10",
																					"statements": [
																						{
																							"nativeSrc": "7067:35:10",
																							"nodeType": "YulAssignment",
																							"src": "7067:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7086:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "7086:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7091:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "7091:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7082:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "7082:3:10"
																										},
																										"nativeSrc": "7082:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "7082:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7076:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "7076:5:10"
																								},
																								"nativeSrc": "7076:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "7076:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "7067:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "7067:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "7030:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "7030:6:10"
																				},
																				"nativeSrc": "7027:89:10",
																				"nodeType": "YulIf",
																				"src": "7027:89:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7136:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "7136:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "7195:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "7195:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "7202:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "7202:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "7142:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "7142:52:10"
																							},
																							"nativeSrc": "7142:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "7142:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7129:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7129:6:10"
																					},
																					"nativeSrc": "7129:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7129:81:10"
																				},
																				"nativeSrc": "7129:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "7129:81:10"
																			}
																		]
																	},
																	"nativeSrc": "6978:242:10",
																	"nodeType": "YulCase",
																	"src": "6978:242:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6300:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6300:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6308:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6308:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6297:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6297:2:10"
																},
																"nativeSrc": "6297:14:10",
																"nodeType": "YulFunctionCall",
																"src": "6297:14:10"
															},
															"nativeSrc": "6290:930:10",
															"nodeType": "YulSwitch",
															"src": "6290:930:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5927:1299:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6008:4:10",
														"nodeType": "YulTypedName",
														"src": "6008:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "6014:3:10",
														"nodeType": "YulTypedName",
														"src": "6014:3:10",
														"type": ""
													}
												],
												"src": "5927:1299:10"
											},
											{
												"body": {
													"nativeSrc": "7388:188:10",
													"nodeType": "YulBlock",
													"src": "7388:188:10",
													"statements": [
														{
															"nativeSrc": "7398:26:10",
															"nodeType": "YulAssignment",
															"src": "7398:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7410:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7410:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7421:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7421:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7406:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7406:3:10"
																},
																"nativeSrc": "7406:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7406:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7398:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7398:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7440:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7440:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7455:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7455:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7471:3:10",
																								"nodeType": "YulLiteral",
																								"src": "7471:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7476:1:10",
																								"nodeType": "YulLiteral",
																								"src": "7476:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7467:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "7467:3:10"
																						},
																						"nativeSrc": "7467:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "7467:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7480:1:10",
																						"nodeType": "YulLiteral",
																						"src": "7480:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7463:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7463:3:10"
																				},
																				"nativeSrc": "7463:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7463:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7451:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7451:3:10"
																		},
																		"nativeSrc": "7451:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7451:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7433:6:10"
																},
																"nativeSrc": "7433:51:10",
																"nodeType": "YulFunctionCall",
																"src": "7433:51:10"
															},
															"nativeSrc": "7433:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "7433:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7504:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7504:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7515:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7515:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7500:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7500:3:10"
																		},
																		"nativeSrc": "7500:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7500:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7520:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7520:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7493:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7493:6:10"
																},
																"nativeSrc": "7493:34:10",
																"nodeType": "YulFunctionCall",
																"src": "7493:34:10"
															},
															"nativeSrc": "7493:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "7493:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7547:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7547:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7558:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7558:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7543:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7543:3:10"
																		},
																		"nativeSrc": "7543:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7543:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7563:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7563:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7536:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7536:6:10"
																},
																"nativeSrc": "7536:34:10",
																"nodeType": "YulFunctionCall",
																"src": "7536:34:10"
															},
															"nativeSrc": "7536:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "7536:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7231:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7341:9:10",
														"nodeType": "YulTypedName",
														"src": "7341:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7352:6:10",
														"nodeType": "YulTypedName",
														"src": "7352:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7360:6:10",
														"nodeType": "YulTypedName",
														"src": "7360:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7368:6:10",
														"nodeType": "YulTypedName",
														"src": "7368:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7379:4:10",
														"nodeType": "YulTypedName",
														"src": "7379:4:10",
														"type": ""
													}
												],
												"src": "7231:345:10"
											},
											{
												"body": {
													"nativeSrc": "7629:174:10",
													"nodeType": "YulBlock",
													"src": "7629:174:10",
													"statements": [
														{
															"nativeSrc": "7639:16:10",
															"nodeType": "YulAssignment",
															"src": "7639:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7650:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7650:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7653:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7653:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7646:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7646:3:10"
																},
																"nativeSrc": "7646:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7646:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7639:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7639:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7686:111:10",
																"nodeType": "YulBlock",
																"src": "7686:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7707:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7707:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7714:3:10",
																							"nodeType": "YulLiteral",
																							"src": "7714:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7719:10:10",
																							"nodeType": "YulLiteral",
																							"src": "7719:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7710:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "7710:3:10"
																					},
																					"nativeSrc": "7710:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7710:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7700:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7700:6:10"
																			},
																			"nativeSrc": "7700:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7700:31:10"
																		},
																		"nativeSrc": "7700:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7700:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7751:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7751:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7754:4:10",
																					"nodeType": "YulLiteral",
																					"src": "7754:4:10",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7744:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7744:6:10"
																			},
																			"nativeSrc": "7744:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7744:15:10"
																		},
																		"nativeSrc": "7744:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7744:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7779:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7779:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7782:4:10",
																					"nodeType": "YulLiteral",
																					"src": "7782:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7772:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7772:6:10"
																			},
																			"nativeSrc": "7772:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7772:15:10"
																		},
																		"nativeSrc": "7772:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7772:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7670:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7670:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7673:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7673:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7667:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7667:2:10"
																},
																"nativeSrc": "7667:10:10",
																"nodeType": "YulFunctionCall",
																"src": "7667:10:10"
															},
															"nativeSrc": "7664:133:10",
															"nodeType": "YulIf",
															"src": "7664:133:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7581:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7612:1:10",
														"nodeType": "YulTypedName",
														"src": "7612:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7615:1:10",
														"nodeType": "YulTypedName",
														"src": "7615:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7621:3:10",
														"nodeType": "YulTypedName",
														"src": "7621:3:10",
														"type": ""
													}
												],
												"src": "7581:222:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_91f9a36ded9df16899312719ead5ef5c9633419e1e5ccb00e0ab9b2c948c2b2b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Token already initialized\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb14610209578063b90497e01461021c578063dd62ed3e14610224578063f2fde38b1461025d57600080fd5b806370a08231146101b5578063715018a6146101de5780638da5cb5b146101e657806395d89b411461020157600080fd5b8063313ce567116100d3578063313ce5671461016b57806340c10f191461017a5780634cd88b761461018f57806358e792ee146101a257600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610270565b60405161011a919061088d565b60405180910390f35b6101366101313660046108f7565b610302565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610921565b61031c565b6040516012815260200161011a565b61018d6101883660046108f7565b610340565b005b61018d61019d366004610a03565b610356565b61018d6101b0366004610a6c565b6103d9565b61014a6101c3366004610aa9565b6001600160a01b031660009081526020819052604090205490565b61018d6103ed565b6005546040516001600160a01b03909116815260200161011a565b61010d610401565b6101366102173660046108f7565b610410565b61010d61041e565b61014a610232366004610acb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018d61026b366004610aa9565b6104ac565b60606006805461027f90610afe565b80601f01602080910402602001604051908101604052809291908181526020018280546102ab90610afe565b80156102f85780601f106102cd576101008083540402835291602001916102f8565b820191906000526020600020905b8154815290600101906020018083116102db57829003601f168201915b5050505050905090565b6000336103108185856104ea565b60019150505b92915050565b60003361032a8582856104fc565b61033585858561057a565b506001949350505050565b6103486105d9565b6103528282610606565b5050565b60085460ff16156103ae5760405162461bcd60e51b815260206004820152601960248201527f546f6b656e20616c726561647920696e697469616c697a65640000000000000060448201526064015b60405180910390fd5b60066103ba8382610b86565b5060076103c78282610b86565b50506008805460ff1916600117905550565b6103e16105d9565b60096103528282610b86565b6103f56105d9565b6103ff600061063c565b565b60606007805461027f90610afe565b60003361031081858561057a565b6009805461042b90610afe565b80601f016020809104026020016040519081016040528092919081815260200182805461045790610afe565b80156104a45780601f10610479576101008083540402835291602001916104a4565b820191906000526020600020905b81548152906001019060200180831161048757829003601f168201915b505050505081565b6104b46105d9565b6001600160a01b0381166104de57604051631e4fbdf760e01b8152600060048201526024016103a5565b6104e78161063c565b50565b6104f7838383600161068e565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610574578181101561056557604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103a5565b6105748484848403600061068e565b50505050565b6001600160a01b0383166105a457604051634b637e8f60e11b8152600060048201526024016103a5565b6001600160a01b0382166105ce5760405163ec442f0560e01b8152600060048201526024016103a5565b6104f7838383610763565b6005546001600160a01b031633146103ff5760405163118cdaa760e01b81523360048201526024016103a5565b6001600160a01b0382166106305760405163ec442f0560e01b8152600060048201526024016103a5565b61035260008383610763565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166106b85760405163e602df0560e01b8152600060048201526024016103a5565b6001600160a01b0383166106e257604051634a1406b160e11b8152600060048201526024016103a5565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561057457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161075591815260200190565b60405180910390a350505050565b6001600160a01b03831661078e5780600260008282546107839190610c45565b909155506108009050565b6001600160a01b038316600090815260208190526040902054818110156107e15760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103a5565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661081c5760028054829003905561083b565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161088091815260200190565b60405180910390a3505050565b602081526000825180602084015260005b818110156108bb576020818601810151604086840101520161089e565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146108f257600080fd5b919050565b6000806040838503121561090a57600080fd5b610913836108db565b946020939093013593505050565b60008060006060848603121561093657600080fd5b61093f846108db565b925061094d602085016108db565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261098557600080fd5b813567ffffffffffffffff81111561099f5761099f61095e565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156109ce576109ce61095e565b6040528181528382016020018510156109e657600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610a1657600080fd5b823567ffffffffffffffff811115610a2d57600080fd5b610a3985828601610974565b925050602083013567ffffffffffffffff811115610a5657600080fd5b610a6285828601610974565b9150509250929050565b600060208284031215610a7e57600080fd5b813567ffffffffffffffff811115610a9557600080fd5b610aa184828501610974565b949350505050565b600060208284031215610abb57600080fd5b610ac4826108db565b9392505050565b60008060408385031215610ade57600080fd5b610ae7836108db565b9150610af5602084016108db565b90509250929050565b600181811c90821680610b1257607f821691505b602082108103610b3257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104f757806000526020600020601f840160051c81016020851015610b5f5750805b601f840160051c820191505b81811015610b7f5760008155600101610b6b565b5050505050565b815167ffffffffffffffff811115610ba057610ba061095e565b610bb481610bae8454610afe565b84610b38565b6020601f821160018114610be85760008315610bd05750848201515b600019600385901b1c1916600184901b178455610b7f565b600084815260208120601f198516915b82811015610c185787850151825560209485019460019092019101610bf8565b5084821015610c365786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561031657634e487b7160e01b600052601160045260246000fdfea2646970667358221220c8852fb7b8bc5bc2e0bb47db09997f4a4be9d29054e1c4beec35e07625033d5f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xB90497E0 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x4CD88B76 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x58E792EE EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x88D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F7 JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x921 JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x18D PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F7 JUMP JUMPDEST PUSH2 0x340 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18D PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x356 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x401 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F7 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x41E JUMP JUMPDEST PUSH2 0x14A PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0xACB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0xAA9 JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x27F SWAP1 PUSH2 0xAFE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0xAFE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x310 DUP2 DUP6 DUP6 PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x32A DUP6 DUP3 DUP6 PUSH2 0x4FC JUMP JUMPDEST PUSH2 0x335 DUP6 DUP6 DUP6 PUSH2 0x57A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x348 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x352 DUP3 DUP3 PUSH2 0x606 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616C726561647920696E697469616C697A656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH2 0x3BA DUP4 DUP3 PUSH2 0xB86 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0x3C7 DUP3 DUP3 PUSH2 0xB86 JUMP JUMPDEST POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x3E1 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x352 DUP3 DUP3 PUSH2 0xB86 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x3FF PUSH1 0x0 PUSH2 0x63C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x27F SWAP1 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x310 DUP2 DUP6 DUP6 PUSH2 0x57A JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x42B SWAP1 PUSH2 0xAFE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x457 SWAP1 PUSH2 0xAFE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x479 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x487 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x4B4 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4DE JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x4E7 DUP2 PUSH2 0x63C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4F7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x68E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x574 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x565 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x574 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x68E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5CE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x4F7 DUP4 DUP4 DUP4 PUSH2 0x763 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x630 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x352 PUSH1 0x0 DUP4 DUP4 PUSH2 0x763 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6B8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6E2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x574 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x755 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x78E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x783 SWAP2 SWAP1 PUSH2 0xC45 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x800 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x7E1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x81C JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x83B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x880 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8BB JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x89E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x90A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x913 DUP4 PUSH2 0x8DB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x936 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93F DUP5 PUSH2 0x8DB JUMP JUMPDEST SWAP3 POP PUSH2 0x94D PUSH1 0x20 DUP6 ADD PUSH2 0x8DB JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x985 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x99F JUMPI PUSH2 0x99F PUSH2 0x95E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x9CE JUMPI PUSH2 0x9CE PUSH2 0x95E JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA39 DUP6 DUP3 DUP7 ADD PUSH2 0x974 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA62 DUP6 DUP3 DUP7 ADD PUSH2 0x974 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA1 DUP5 DUP3 DUP6 ADD PUSH2 0x974 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xABB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC4 DUP3 PUSH2 0x8DB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xADE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAE7 DUP4 PUSH2 0x8DB JUMP JUMPDEST SWAP2 POP PUSH2 0xAF5 PUSH1 0x20 DUP5 ADD PUSH2 0x8DB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB12 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB32 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4F7 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xB5F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB7F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB6B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBA0 JUMPI PUSH2 0xBA0 PUSH2 0x95E JUMP JUMPDEST PUSH2 0xBB4 DUP2 PUSH2 0xBAE DUP5 SLOAD PUSH2 0xAFE JUMP JUMPDEST DUP5 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0xBE8 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0xBD0 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC18 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xBF8 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0xC36 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x316 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 DUP6 0x2F 0xB7 0xB8 0xBC JUMPDEST 0xC2 0xE0 0xBB SELFBALANCE 0xDB MULMOD SWAP10 PUSH32 0x4A4BE9D29054E1C4BEEC35E07625033D5F64736F6C634300081A003300000000 ",
							"sourceMap": "168:1201:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;827:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186:2;;;;;;:::i;:::-;;:::i;:::-;;;1194:14:10;;1187:22;1169:41;;1157:2;1142:18;4293:186:2;1029:187:10;3144:97:2;3222:12;;3144:97;;;1367:25:10;;;1355:2;1340:18;3144:97:2;1221:177:10;5039:244:2;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;1924:36:10;;1912:2;1897:18;3002:82:2;1782:184:10;1098:95:6;;;;;;:::i;:::-;;:::i;:::-;;525:226;;;;;;:::i;:::-;;:::i;1265:102::-;;;;;;:::i;:::-;;:::i;3299:116:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:2;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:0;;;:::i;1638:85::-;1710:6;;1638:85;;-1:-1:-1;;;;;1710:6:0;;;4041:51:10;;4029:2;4014:18;1638:85:0;3895:203:10;929:100:6;;;:::i;3610:178:2:-;;;;;;:::i;:::-;;:::i;309:22:6:-;;;:::i;3846:140:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:2;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;2543:215:0;;;;;;:::i;:::-;;:::i;827:96:6:-;873:13;905:11;898:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;827:96;:::o;4293:186:2:-;4366:4;735:10:5;4420:31:2;735:10:5;4436:7:2;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:5;5182:37:2;5198:4;735:10:5;5213:5:2;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:2;;5039:244;-1:-1:-1;;;;5039:244:2:o;1098:95:6:-;1531:13:0;:11;:13::i;:::-;1169:17:6::1;1175:2;1179:6;1169:5;:17::i;:::-;1098:95:::0;;:::o;525:226::-;615:11;;;;614:12;606:50;;;;-1:-1:-1;;;606:50:6;;4955:2:10;606:50:6;;;4937:21:10;4994:2;4974:18;;;4967:30;5033:27;5013:18;;;5006:55;5078:18;;606:50:6;;;;;;;;;666:11;:18;680:4;666:11;:18;:::i;:::-;-1:-1:-1;694:13:6;:22;710:6;694:13;:22;:::i;:::-;-1:-1:-1;;726:11:6;:18;;-1:-1:-1;;726:18:6;740:4;726:18;;;-1:-1:-1;525:226:6:o;1265:102::-;1531:13:0;:11;:13::i;:::-;1340:8:6::1;:20;1351:9:::0;1340:8;:20:::1;:::i;2293:101:0:-:0;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;929:100:6:-;977:13;1009;1002:20;;;;;:::i;3610:178:2:-;3679:4;735:10:5;3733:27:2;735:10:5;3750:2:2;3754:5;3733:9;:27::i;309:22:6:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;4041:51:10::0;4014:18;;2672:31:0::1;3895:203:10::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:2;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:2;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:2;;-1:-1:-1;;;;;7451:32:10;;10936:60:2;;;7433:51:10;7500:18;;;7493:34;;;7543:18;;;7536:34;;;7406:18;;10936:60:2;7231:345:10;10881:130:2;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:2;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:2;;5807:1;5780:30;;;4041:51:10;4014:18;;5780:30:2;3895:203:10;5735:86:2;-1:-1:-1;;;;;5834:16:2;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:2;;5902:1;5873:32;;;4041:51:10;4014:18;;5873:32:2;3895:203:10;5830:86:2;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;4041:51:10;4014:18;;1901:40:0;3895:203:10;7721:208:2;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;4041:51:10;4014:18;;7835:32:2;3895:203:10;7787:91:2;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;9949:432:2:-;-1:-1:-1;;;;;10061:19:2;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:2;;10132:1;10103:32;;;4041:51:10;4014:18;;10103:32:2;3895:203:10;10057:89:2;-1:-1:-1;;;;;10159:21:2;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:2;;10231:1;10203:31;;;4041:51:10;4014:18;;10203:31:2;3895:203:10;10155:90:2;-1:-1:-1;;;;;10254:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:2;10342:5;-1:-1:-1;;;;;10333:31:2;;10358:5;10333:31;;;;1367:25:10;;1355:2;1340:18;;1221:177;10333:31:2;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;7451:32:10;;6649:50:2;;;7433:51:10;7500:18;;;7493:34;;;7543:18;;;7536:34;;;7406:18;;6649:50:2;7231:345:10;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;1367::10;;1355:2;1340:18;;1221:177;7346:25:2;;;;;;;;6271:1107;;;:::o;14:527:10:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;263:1;273:140;287:6;284:1;281:13;273:140;;;398:2;382:14;;;378:23;;372:30;367:2;348:17;;;344:26;337:66;302:10;273:140;;;277:3;462:1;457:2;448:6;437:9;433:22;429:31;422:42;532:2;525;521:7;516:2;508:6;504:15;500:29;489:9;485:45;481:54;473:62;;;14:527;;;;:::o;546:173::-;614:20;;-1:-1:-1;;;;;663:31:10;;653:42;;643:70;;709:1;706;699:12;643:70;546:173;;;:::o;724:300::-;792:6;800;853:2;841:9;832:7;828:23;824:32;821:52;;;869:1;866;859:12;821:52;892:29;911:9;892:29;:::i;:::-;882:39;990:2;975:18;;;;962:32;;-1:-1:-1;;;724:300:10:o;1403:374::-;1480:6;1488;1496;1549:2;1537:9;1528:7;1524:23;1520:32;1517:52;;;1565:1;1562;1555:12;1517:52;1588:29;1607:9;1588:29;:::i;:::-;1578:39;;1636:38;1670:2;1659:9;1655:18;1636:38;:::i;:::-;1403:374;;1626:48;;-1:-1:-1;;;1743:2:10;1728:18;;;;1715:32;;1403:374::o;1971:127::-;2032:10;2027:3;2023:20;2020:1;2013:31;2063:4;2060:1;2053:15;2087:4;2084:1;2077:15;2103:726;2146:5;2199:3;2192:4;2184:6;2180:17;2176:27;2166:55;;2217:1;2214;2207:12;2166:55;2257:6;2244:20;2287:18;2279:6;2276:30;2273:56;;;2309:18;;:::i;:::-;2358:2;2352:9;2450:2;2412:17;;-1:-1:-1;;2408:31:10;;;2441:2;2404:40;2400:54;2388:67;;2485:18;2470:34;;2506:22;;;2467:62;2464:88;;;2532:18;;:::i;:::-;2568:2;2561:22;2592;;;2633:19;;;2654:4;2629:30;2626:39;-1:-1:-1;2623:59:10;;;2678:1;2675;2668:12;2623:59;2742:6;2735:4;2727:6;2723:17;2716:4;2708:6;2704:17;2691:58;2797:1;2769:19;;;2790:4;2765:30;2758:41;;;;2773:6;2103:726;-1:-1:-1;;;2103:726:10:o;2834:538::-;2922:6;2930;2983:2;2971:9;2962:7;2958:23;2954:32;2951:52;;;2999:1;2996;2989:12;2951:52;3039:9;3026:23;3072:18;3064:6;3061:30;3058:50;;;3104:1;3101;3094:12;3058:50;3127;3169:7;3160:6;3149:9;3145:22;3127:50;:::i;:::-;3117:60;;;3230:2;3219:9;3215:18;3202:32;3259:18;3249:8;3246:32;3243:52;;;3291:1;3288;3281:12;3243:52;3314;3358:7;3347:8;3336:9;3332:24;3314:52;:::i;:::-;3304:62;;;2834:538;;;;;:::o;3377:322::-;3446:6;3499:2;3487:9;3478:7;3474:23;3470:32;3467:52;;;3515:1;3512;3505:12;3467:52;3555:9;3542:23;3588:18;3580:6;3577:30;3574:50;;;3620:1;3617;3610:12;3574:50;3643;3685:7;3676:6;3665:9;3661:22;3643:50;:::i;:::-;3633:60;3377:322;-1:-1:-1;;;;3377:322:10:o;3704:186::-;3763:6;3816:2;3804:9;3795:7;3791:23;3787:32;3784:52;;;3832:1;3829;3822:12;3784:52;3855:29;3874:9;3855:29;:::i;:::-;3845:39;3704:186;-1:-1:-1;;;3704:186:10:o;4103:260::-;4171:6;4179;4232:2;4220:9;4211:7;4207:23;4203:32;4200:52;;;4248:1;4245;4238:12;4200:52;4271:29;4290:9;4271:29;:::i;:::-;4261:39;;4319:38;4353:2;4342:9;4338:18;4319:38;:::i;:::-;4309:48;;4103:260;;;;;:::o;4368:380::-;4447:1;4443:12;;;;4490;;;4511:61;;4565:4;4557:6;4553:17;4543:27;;4511:61;4618:2;4610:6;4607:14;4587:18;4584:38;4581:161;;4664:10;4659:3;4655:20;4652:1;4645:31;4699:4;4696:1;4689:15;4727:4;4724:1;4717:15;4581:161;;4368:380;;;:::o;5233:518::-;5335:2;5330:3;5327:11;5324:421;;;5371:5;5368:1;5361:16;5415:4;5412:1;5402:18;5485:2;5473:10;5469:19;5466:1;5462:27;5456:4;5452:38;5521:4;5509:10;5506:20;5503:47;;;-1:-1:-1;5544:4:10;5503:47;5599:2;5594:3;5590:12;5587:1;5583:20;5577:4;5573:31;5563:41;;5654:81;5672:2;5665:5;5662:13;5654:81;;;5731:1;5717:16;;5698:1;5687:13;5654:81;;;5658:3;;5233:518;;;:::o;5927:1299::-;6053:3;6047:10;6080:18;6072:6;6069:30;6066:56;;;6102:18;;:::i;:::-;6131:97;6221:6;6181:38;6213:4;6207:11;6181:38;:::i;:::-;6175:4;6131:97;:::i;:::-;6277:4;6308:2;6297:14;;6325:1;6320:649;;;;7013:1;7030:6;7027:89;;;-1:-1:-1;7082:19:10;;;7076:26;7027:89;-1:-1:-1;;5884:1:10;5880:11;;;5876:24;5872:29;5862:40;5908:1;5904:11;;;5859:57;7129:81;;6290:930;;6320:649;5180:1;5173:14;;;5217:4;5204:18;;-1:-1:-1;;6356:20:10;;;6474:222;6488:7;6485:1;6482:14;6474:222;;;6570:19;;;6564:26;6549:42;;6677:4;6662:20;;;;6630:1;6618:14;;;;6504:12;6474:222;;;6478:3;6724:6;6715:7;6712:19;6709:201;;;6785:19;;;6779:26;-1:-1:-1;;6868:1:10;6864:14;;;6880:3;6860:24;6856:37;6852:42;6837:58;6822:74;;6709:201;-1:-1:-1;;;;6956:1:10;6940:14;;;6936:22;6923:36;;-1:-1:-1;5927:1299:10:o;7581:222::-;7646:9;;;7667:10;;;7664:133;;;7719:10;7714:3;7710:20;7707:1;7700:31;7754:4;7751:1;7744:15;7782:4;7779:1;7772:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "645600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24762",
								"balanceOf(address)": "2563",
								"decimals()": "200",
								"imageURL()": "infinite",
								"initialize(string,string)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2368",
								"renounceOwnership()": "infinite",
								"setImageURL(string)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "51244",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28424"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 168,
									"end": 1369,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 378,
									"end": 428,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 378,
									"end": 428,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 378,
									"end": 428,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 378,
									"end": 428,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 378,
									"end": 428,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 378,
									"end": 428,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 428,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 378,
									"end": 428,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 378,
									"end": 428,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 378,
									"end": 428,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 414,
									"end": 424,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 414,
									"end": 424,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2852,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2774,
									"end": 2792,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2774,
									"end": 2792,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "tag",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1705,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1732,
									"end": 1734,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1749,
									"end": 1750,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2437,
									"end": 2438,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2500,
									"end": 2526,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1912,
									"end": 1919,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1909,
									"end": 1910,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 1920,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1988,
									"end": 2014,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2101,
									"end": 2105,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1902,
									"end": 1905,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2139,
									"end": 2146,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2203,
									"end": 2229,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2292,
									"end": 2293,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2304,
									"end": 2307,
									"name": "PUSH",
									"source": 10,
									"value": "F8"
								},
								{
									"begin": 2284,
									"end": 2308,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2280,
									"end": 2317,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2276,
									"end": 2318,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2261,
									"end": 2319,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2380,
									"end": 2381,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2360,
									"end": 2382,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1351,
									"end": 2650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2655,
									"end": 2858,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 2655,
									"end": 2858,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 1369,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c8852fb7b8bc5bc2e0bb47db09997f4a4be9d29054e1c4beec35e07625033d5f64736f6c634300081a0033",
									".code": [
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "B90497E0"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "4CD88B76"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "58E792EE"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 827,
											"end": 923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 827,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 827,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 827,
											"end": 923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 923,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 827,
											"end": 923,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 827,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 827,
											"end": 923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 923,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1194,
											"end": 1208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1194,
											"end": 1208,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1209,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1169,
											"end": 1210,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1169,
											"end": 1210,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1159,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1142,
											"end": 1160,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1029,
											"end": 1216,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1357,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1221,
											"end": 1398,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1924,
											"end": 1960,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1782,
											"end": 1966,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1098,
											"end": 1193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1098,
											"end": 1193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 525,
											"end": 751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 525,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 525,
											"end": 751,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 525,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 525,
											"end": 751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 525,
											"end": 751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 525,
											"end": 751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1265,
											"end": 1367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1265,
											"end": 1367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4041,
											"end": 4092,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4041,
											"end": 4092,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4031,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4014,
											"end": 4032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3895,
											"end": 4098,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 929,
											"end": 1029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 309,
											"end": 331,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 309,
											"end": 331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 923,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 827,
											"end": 923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 873,
											"end": 886,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 905,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 898,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 898,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 898,
											"end": 916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 827,
											"end": 923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1175,
											"end": 1177,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1179,
											"end": 1185,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1169,
											"end": 1186,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1186,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1169,
											"end": 1186,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 525,
											"end": 751,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 525,
											"end": 751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 615,
											"end": 626,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 615,
											"end": 626,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 615,
											"end": 626,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 615,
											"end": 626,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 614,
											"end": 626,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 606,
											"end": 656,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 606,
											"end": 656,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 606,
											"end": 656,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4955,
											"end": 4957,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 606,
											"end": 656,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 606,
											"end": 656,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4937,
											"end": 4958,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4994,
											"end": 4996,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4997,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5033,
											"end": 5060,
											"name": "PUSH",
											"source": 10,
											"value": "546F6B656E20616C726561647920696E697469616C697A656400000000000000"
										},
										{
											"begin": 5013,
											"end": 5031,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5013,
											"end": 5031,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5013,
											"end": 5031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5006,
											"end": 5061,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5078,
											"end": 5096,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5078,
											"end": 5096,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 606,
											"end": 656,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 606,
											"end": 656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 606,
											"end": 656,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 606,
											"end": 656,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 606,
											"end": 656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 666,
											"end": 677,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 666,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 680,
											"end": 684,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 666,
											"end": 677,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 666,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 666,
											"end": 684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 666,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 666,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 694,
											"end": 707,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 694,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 710,
											"end": 716,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 694,
											"end": 707,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 694,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 694,
											"end": 716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 694,
											"end": 716,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 694,
											"end": 716,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 726,
											"end": 737,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 726,
											"end": 744,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 740,
											"end": 744,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 726,
											"end": 744,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 525,
											"end": 751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1265,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1340,
											"end": 1360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1351,
											"end": 1360,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1348,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1340,
											"end": 1360,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 929,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 977,
											"end": 990,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1009,
											"end": 1022,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1002,
											"end": 1022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 309,
											"end": 331,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 309,
											"end": 331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 309,
											"end": 331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 309,
											"end": 331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4041,
											"end": 4092,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4014,
											"end": 4032,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4014,
											"end": 4032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3895,
											"end": 4098,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7451,
											"end": 7483,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7451,
											"end": 7483,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7433,
											"end": 7484,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7500,
											"end": 7518,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7500,
											"end": 7518,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7500,
											"end": 7518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7493,
											"end": 7527,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7493,
											"end": 7527,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7493,
											"end": 7527,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7543,
											"end": 7561,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7543,
											"end": 7561,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7543,
											"end": 7561,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7570,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7570,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7570,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 7231,
											"end": 7576,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4092,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4014,
											"end": 4032,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4014,
											"end": 4032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3895,
											"end": 4098,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4092,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4014,
											"end": 4032,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4014,
											"end": 4032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3895,
											"end": 4098,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4041,
											"end": 4092,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4014,
											"end": 4032,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4014,
											"end": 4032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3895,
											"end": 4098,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4092,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4014,
											"end": 4032,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4014,
											"end": 4032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3895,
											"end": 4098,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4092,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4014,
											"end": 4032,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4014,
											"end": 4032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3895,
											"end": 4098,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4092,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4014,
											"end": 4032,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4014,
											"end": 4032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3895,
											"end": 4098,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1357,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1398,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7451,
											"end": 7483,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7451,
											"end": 7483,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7433,
											"end": 7484,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7500,
											"end": 7518,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7500,
											"end": 7518,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7500,
											"end": 7518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7493,
											"end": 7527,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7493,
											"end": 7527,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7493,
											"end": 7527,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7543,
											"end": 7561,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7543,
											"end": 7561,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7543,
											"end": 7561,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7570,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7570,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7570,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 7231,
											"end": 7576,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1392,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1357,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1398,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 541,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 14,
											"end": 541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 287,
											"end": 293,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 284,
											"end": 285,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 281,
											"end": 294,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 273,
											"end": 413,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 273,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 398,
											"end": 400,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 382,
											"end": 396,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 382,
											"end": 396,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 382,
											"end": 396,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 378,
											"end": 401,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 378,
											"end": 401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 372,
											"end": 402,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 367,
											"end": 369,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 365,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 348,
											"end": 365,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 348,
											"end": 365,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 344,
											"end": 370,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 337,
											"end": 403,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 302,
											"end": 312,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 273,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 273,
											"end": 413,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 277,
											"end": 280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 462,
											"end": 463,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 454,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 437,
											"end": 446,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 433,
											"end": 455,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 429,
											"end": 460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 422,
											"end": 464,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 532,
											"end": 534,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 527,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 521,
											"end": 528,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 516,
											"end": 518,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 504,
											"end": 519,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 500,
											"end": 529,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 489,
											"end": 498,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 485,
											"end": 530,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 481,
											"end": 535,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 473,
											"end": 535,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 473,
											"end": 535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 473,
											"end": 535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 541,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14,
											"end": 541,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 546,
											"end": 719,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 546,
											"end": 719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 614,
											"end": 634,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 614,
											"end": 634,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 663,
											"end": 694,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 663,
											"end": 694,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 653,
											"end": 695,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 653,
											"end": 695,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 643,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 643,
											"end": 713,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 709,
											"end": 710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 707,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 699,
											"end": 711,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 643,
											"end": 713,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 643,
											"end": 713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 546,
											"end": 719,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 546,
											"end": 719,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 546,
											"end": 719,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 546,
											"end": 719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 724,
											"end": 1024,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 724,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 792,
											"end": 798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 806,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 853,
											"end": 855,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 850,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 832,
											"end": 839,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 828,
											"end": 851,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 824,
											"end": 856,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 821,
											"end": 873,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 821,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 821,
											"end": 873,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 869,
											"end": 870,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 867,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 859,
											"end": 871,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 821,
											"end": 873,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 821,
											"end": 873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 892,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 892,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 892,
											"end": 921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 892,
											"end": 921,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 882,
											"end": 921,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 990,
											"end": 992,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 975,
											"end": 993,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 975,
											"end": 993,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 975,
											"end": 993,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 962,
											"end": 994,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 962,
											"end": 994,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 724,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1403,
											"end": 1777,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1403,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1480,
											"end": 1486,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1496,
											"end": 1502,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1551,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1535,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1524,
											"end": 1547,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 1552,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1517,
											"end": 1569,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1517,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1517,
											"end": 1569,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1565,
											"end": 1566,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1563,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1555,
											"end": 1567,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1517,
											"end": 1569,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1517,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1607,
											"end": 1616,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 1588,
											"end": 1617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1617,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1588,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1578,
											"end": 1617,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1578,
											"end": 1617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1636,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1670,
											"end": 1672,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1659,
											"end": 1668,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1655,
											"end": 1673,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1636,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 1636,
											"end": 1674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1636,
											"end": 1674,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1636,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1403,
											"end": 1777,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1403,
											"end": 1777,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1674,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1674,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1743,
											"end": 1745,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1747,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1403,
											"end": 1777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1971,
											"end": 2098,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 1971,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2042,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 2027,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2023,
											"end": 2043,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2020,
											"end": 2021,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2063,
											"end": 2067,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2060,
											"end": 2061,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2068,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2091,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2084,
											"end": 2085,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2092,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2829,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 2103,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2151,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2192,
											"end": 2196,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2184,
											"end": 2190,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2180,
											"end": 2197,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2203,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2166,
											"end": 2221,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2214,
											"end": 2215,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2221,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2166,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2257,
											"end": 2263,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2244,
											"end": 2264,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2305,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2276,
											"end": 2306,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2273,
											"end": 2329,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2273,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2273,
											"end": 2329,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2309,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 2309,
											"end": 2327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2327,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2309,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2361,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2450,
											"end": 2452,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2412,
											"end": 2429,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2412,
											"end": 2429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2408,
											"end": 2439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2408,
											"end": 2439,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2408,
											"end": 2439,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2441,
											"end": 2443,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 2404,
											"end": 2444,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2400,
											"end": 2454,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2455,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2455,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2485,
											"end": 2503,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2470,
											"end": 2504,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2504,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2529,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2464,
											"end": 2552,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2464,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 2464,
											"end": 2552,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2532,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 2532,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 2532,
											"end": 2550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2532,
											"end": 2550,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 2532,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2570,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2583,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2614,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2614,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2614,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2633,
											"end": 2652,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2633,
											"end": 2652,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2633,
											"end": 2652,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2629,
											"end": 2659,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2626,
											"end": 2665,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 2623,
											"end": 2682,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 2623,
											"end": 2682,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2678,
											"end": 2679,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2676,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2680,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2682,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 2623,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2727,
											"end": 2733,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2723,
											"end": 2740,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2716,
											"end": 2720,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2708,
											"end": 2714,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2704,
											"end": 2721,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2749,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2788,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2769,
											"end": 2788,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2769,
											"end": 2788,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2790,
											"end": 2794,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2765,
											"end": 2795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2799,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2799,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2799,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2799,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2773,
											"end": 2779,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2829,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2103,
											"end": 2829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3372,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 2834,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2922,
											"end": 2928,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2983,
											"end": 2985,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2971,
											"end": 2980,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2962,
											"end": 2969,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2958,
											"end": 2981,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 2986,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2999,
											"end": 3000,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 2997,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 2951,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3048,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3026,
											"end": 3049,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3064,
											"end": 3070,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3061,
											"end": 3091,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3058,
											"end": 3108,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3058,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 3058,
											"end": 3108,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3105,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3101,
											"end": 3102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3094,
											"end": 3106,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3058,
											"end": 3108,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 3058,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3127,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 3169,
											"end": 3176,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3166,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3149,
											"end": 3158,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3167,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3127,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 3127,
											"end": 3177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3127,
											"end": 3177,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 3127,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3117,
											"end": 3177,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3117,
											"end": 3177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3117,
											"end": 3177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3232,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3219,
											"end": 3228,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3233,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3202,
											"end": 3234,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3277,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3249,
											"end": 3257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3246,
											"end": 3278,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3243,
											"end": 3295,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3243,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 3243,
											"end": 3295,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3291,
											"end": 3292,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3288,
											"end": 3289,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3281,
											"end": 3293,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3243,
											"end": 3295,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 3243,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3314,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 3358,
											"end": 3365,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3347,
											"end": 3355,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3345,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3356,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3314,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 3314,
											"end": 3366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3314,
											"end": 3366,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 3314,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3304,
											"end": 3366,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3304,
											"end": 3366,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3304,
											"end": 3366,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3372,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3372,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3372,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3699,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 3377,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3501,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3496,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3478,
											"end": 3485,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3497,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3470,
											"end": 3502,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3467,
											"end": 3519,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3467,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 3467,
											"end": 3519,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3515,
											"end": 3516,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3513,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3505,
											"end": 3517,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3467,
											"end": 3519,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 3467,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3555,
											"end": 3564,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3542,
											"end": 3565,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3588,
											"end": 3606,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3580,
											"end": 3586,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3607,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3574,
											"end": 3624,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3574,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 3574,
											"end": 3624,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3620,
											"end": 3621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3617,
											"end": 3618,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3610,
											"end": 3622,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3574,
											"end": 3624,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 3574,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3643,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 3685,
											"end": 3692,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3676,
											"end": 3682,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3674,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3661,
											"end": 3683,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3643,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 3643,
											"end": 3693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3643,
											"end": 3693,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 3643,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3633,
											"end": 3693,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3699,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3377,
											"end": 3699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3704,
											"end": 3890,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 3704,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3763,
											"end": 3769,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3816,
											"end": 3818,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3804,
											"end": 3813,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3795,
											"end": 3802,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3791,
											"end": 3814,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3787,
											"end": 3819,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3784,
											"end": 3836,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3784,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 3784,
											"end": 3836,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3832,
											"end": 3833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3830,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3784,
											"end": 3836,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 3784,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3855,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 3874,
											"end": 3883,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3855,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 3855,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3855,
											"end": 3884,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 3855,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3845,
											"end": 3884,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3704,
											"end": 3890,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3704,
											"end": 3890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4103,
											"end": 4363,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 4103,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4171,
											"end": 4177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4185,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4234,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4220,
											"end": 4229,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4211,
											"end": 4218,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4207,
											"end": 4230,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4203,
											"end": 4235,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4200,
											"end": 4252,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4200,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 4200,
											"end": 4252,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4248,
											"end": 4249,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4245,
											"end": 4246,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4238,
											"end": 4250,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4200,
											"end": 4252,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 4200,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4271,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 4290,
											"end": 4299,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4271,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 4271,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4271,
											"end": 4300,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 4271,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4300,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 4353,
											"end": 4355,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4342,
											"end": 4351,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4356,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 4319,
											"end": 4357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 4319,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4309,
											"end": 4357,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4309,
											"end": 4357,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4103,
											"end": 4363,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4103,
											"end": 4363,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4103,
											"end": 4363,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4103,
											"end": 4363,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4103,
											"end": 4363,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4103,
											"end": 4363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4368,
											"end": 4748,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 4368,
											"end": 4748,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4447,
											"end": 4448,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4443,
											"end": 4455,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4455,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4455,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4455,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4490,
											"end": 4502,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4490,
											"end": 4502,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4490,
											"end": 4502,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 4511,
											"end": 4572,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4565,
											"end": 4569,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 4557,
											"end": 4563,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4553,
											"end": 4570,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4543,
											"end": 4570,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4543,
											"end": 4570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4572,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 4511,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4620,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4610,
											"end": 4616,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4621,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4587,
											"end": 4605,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4622,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 4581,
											"end": 4742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4664,
											"end": 4674,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 4659,
											"end": 4662,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4655,
											"end": 4675,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4653,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4645,
											"end": 4676,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 4703,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 4696,
											"end": 4697,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4689,
											"end": 4704,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4727,
											"end": 4731,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4724,
											"end": 4725,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4732,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4742,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 4581,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4368,
											"end": 4748,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4368,
											"end": 4748,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4368,
											"end": 4748,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4368,
											"end": 4748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5751,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 5233,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5335,
											"end": 5337,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5330,
											"end": 5333,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5327,
											"end": 5338,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5324,
											"end": 5745,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5324,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 5324,
											"end": 5745,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5371,
											"end": 5376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5368,
											"end": 5369,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5361,
											"end": 5377,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5415,
											"end": 5419,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5412,
											"end": 5413,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5485,
											"end": 5487,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5473,
											"end": 5483,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5469,
											"end": 5488,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5466,
											"end": 5467,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5462,
											"end": 5489,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 5456,
											"end": 5460,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5452,
											"end": 5490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5525,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5509,
											"end": 5519,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5506,
											"end": 5526,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5550,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 5503,
											"end": 5550,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5544,
											"end": 5548,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5550,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 5503,
											"end": 5550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5599,
											"end": 5601,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5594,
											"end": 5597,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5590,
											"end": 5602,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5587,
											"end": 5588,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5583,
											"end": 5603,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 5577,
											"end": 5581,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5573,
											"end": 5604,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5563,
											"end": 5604,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5654,
											"end": 5735,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 5654,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5672,
											"end": 5674,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5665,
											"end": 5670,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5662,
											"end": 5675,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5654,
											"end": 5735,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5654,
											"end": 5735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 5654,
											"end": 5735,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5731,
											"end": 5732,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5717,
											"end": 5733,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5717,
											"end": 5733,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5698,
											"end": 5699,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5687,
											"end": 5700,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5654,
											"end": 5735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 5654,
											"end": 5735,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5654,
											"end": 5735,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 5654,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5658,
											"end": 5661,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5658,
											"end": 5661,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5927,
											"end": 7226,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 5927,
											"end": 7226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6053,
											"end": 6056,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6057,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6080,
											"end": 6098,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6072,
											"end": 6078,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6069,
											"end": 6099,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6066,
											"end": 6122,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6066,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 6066,
											"end": 6122,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 6102,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 6102,
											"end": 6120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6120,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 6102,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6131,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 6221,
											"end": 6227,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6181,
											"end": 6219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 6213,
											"end": 6217,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6218,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6181,
											"end": 6219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 6181,
											"end": 6219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6181,
											"end": 6219,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 6181,
											"end": 6219,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6179,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6131,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 6131,
											"end": 6228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6131,
											"end": 6228,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 6131,
											"end": 6228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6277,
											"end": 6281,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6308,
											"end": 6310,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6297,
											"end": 6311,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6311,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6326,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6320,
											"end": 6969,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6320,
											"end": 6969,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6320,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 6320,
											"end": 6969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7013,
											"end": 7014,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7030,
											"end": 7036,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7027,
											"end": 7116,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7027,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 7027,
											"end": 7116,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7082,
											"end": 7101,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7082,
											"end": 7101,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7082,
											"end": 7101,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7076,
											"end": 7102,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7027,
											"end": 7116,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 7027,
											"end": 7116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5884,
											"end": 5885,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 5880,
											"end": 5891,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5891,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5891,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5876,
											"end": 5900,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 5872,
											"end": 5901,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5862,
											"end": 5902,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5908,
											"end": 5909,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5904,
											"end": 5915,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5904,
											"end": 5915,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5904,
											"end": 5915,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5859,
											"end": 5916,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 7129,
											"end": 7210,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7129,
											"end": 7210,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6290,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 6290,
											"end": 7220,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6320,
											"end": 6969,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 6320,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5180,
											"end": 5181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5173,
											"end": 5187,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5173,
											"end": 5187,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5173,
											"end": 5187,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5217,
											"end": 5221,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5222,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5204,
											"end": 5222,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6376,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6356,
											"end": 6376,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6356,
											"end": 6376,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6474,
											"end": 6696,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 6474,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6488,
											"end": 6495,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6485,
											"end": 6486,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6482,
											"end": 6496,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6474,
											"end": 6696,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6474,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 6474,
											"end": 6696,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6564,
											"end": 6590,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6591,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6591,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6677,
											"end": 6681,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6662,
											"end": 6682,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6662,
											"end": 6682,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6662,
											"end": 6682,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6662,
											"end": 6682,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6630,
											"end": 6631,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6618,
											"end": 6632,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6618,
											"end": 6632,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6618,
											"end": 6632,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6618,
											"end": 6632,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6504,
											"end": 6516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6474,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 6474,
											"end": 6696,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6474,
											"end": 6696,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 6474,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6478,
											"end": 6481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6724,
											"end": 6730,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6715,
											"end": 6722,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6712,
											"end": 6731,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6709,
											"end": 6910,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6709,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 6709,
											"end": 6910,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6785,
											"end": 6804,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6785,
											"end": 6804,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6785,
											"end": 6804,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6779,
											"end": 6805,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6868,
											"end": 6869,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6864,
											"end": 6878,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6878,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6878,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 6880,
											"end": 6883,
											"name": "PUSH",
											"source": 10,
											"value": "F8"
										},
										{
											"begin": 6860,
											"end": 6884,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6856,
											"end": 6893,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 6852,
											"end": 6894,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6837,
											"end": 6895,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6822,
											"end": 6896,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6822,
											"end": 6896,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6709,
											"end": 6910,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 6709,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6956,
											"end": 6957,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6940,
											"end": 6954,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6940,
											"end": 6954,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6940,
											"end": 6954,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 6936,
											"end": 6958,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6923,
											"end": 6959,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6923,
											"end": 6959,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5927,
											"end": 7226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7581,
											"end": 7803,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 7581,
											"end": 7803,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 7655,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 7655,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 7655,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7667,
											"end": 7677,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7667,
											"end": 7677,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7667,
											"end": 7677,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7664,
											"end": 7797,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7664,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 7664,
											"end": 7797,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7719,
											"end": 7729,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 7714,
											"end": 7717,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 7710,
											"end": 7730,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7708,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7700,
											"end": 7731,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7758,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 7751,
											"end": 7752,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7744,
											"end": 7759,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7782,
											"end": 7786,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7779,
											"end": 7780,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7772,
											"end": 7787,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/token factory/CustomToken.sol",
								"contracts/token factory/interfaces/IAlgebraFactory.sol",
								"contracts/token factory/interfaces/IAlgebraPool.sol",
								"contracts/token factory/testAlgebra.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"imageURL()": "b90497e0",
							"initialize(string,string)": "4cd88b76",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setImageURL(string)": "58e792ee",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"imageURL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_imageURL\",\"type\":\"string\"}],\"name\":\"setImageURL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token factory/CustomToken.sol\":\"CustomToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x4ce6e9f30dba5ae30f26321dc851b669caf3f953f8c832304d05df2a523f1af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb24de66bbfa42093a20d448cb2564655525cba0342035a42a37654e5d922deb\",\"dweb:/ipfs/QmYgnFHamrgy5qurrxVLR1qDb7MirvGEoxCVwqiF1YvDMf\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/token factory/CustomToken.sol\":{\"keccak256\":\"0x30dbc416bdf2dabb4893e6fa2f27b1c19d6744e3f1ebfdec0f8272b4fe82be4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0e8f50296bad4367a365de9976a2cacbe36908b4f457226cc9fb1a4521bf593\",\"dweb:/ipfs/QmZ5p75TqSbyQzbakbYbdQvdBWeiKSBAtzFQrLSRKVk7tJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/token factory/CustomToken.sol:CustomToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/token factory/CustomToken.sol:CustomToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/token factory/CustomToken.sol:CustomToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/token factory/CustomToken.sol:CustomToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/token factory/CustomToken.sol:CustomToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/token factory/CustomToken.sol:CustomToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 943,
								"contract": "contracts/token factory/CustomToken.sol:CustomToken",
								"label": "_customName",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 945,
								"contract": "contracts/token factory/CustomToken.sol:CustomToken",
								"label": "_customSymbol",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							},
							{
								"astId": 947,
								"contract": "contracts/token factory/CustomToken.sol:CustomToken",
								"label": "initialized",
								"offset": 0,
								"slot": "8",
								"type": "t_bool"
							},
							{
								"astId": 949,
								"contract": "contracts/token factory/CustomToken.sol:CustomToken",
								"label": "imageURL",
								"offset": 0,
								"slot": "9",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token factory/interfaces/IAlgebraFactory.sol": {
				"IAlgebraFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "computePoolAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"computePoolAddress(address,address)": {
								"params": {
									"tokenA": "The address of the first token.",
									"tokenB": "The address of the second token."
								},
								"returns": {
									"pool": "The address of the computed pool."
								}
							},
							"createPool(address,address)": {
								"params": {
									"tokenA": "The address of the first token.",
									"tokenB": "The address of the second token."
								},
								"returns": {
									"pool": "The address of the created pool."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"computePoolAddress(address,address)": "d8ed2241",
							"createPool(address,address)": "e3433615"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"computePoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"computePoolAddress(address,address)\":{\"params\":{\"tokenA\":\"The address of the first token.\",\"tokenB\":\"The address of the second token.\"},\"returns\":{\"pool\":\"The address of the computed pool.\"}},\"createPool(address,address)\":{\"params\":{\"tokenA\":\"The address of the first token.\",\"tokenB\":\"The address of the second token.\"},\"returns\":{\"pool\":\"The address of the created pool.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"computePoolAddress(address,address)\":{\"notice\":\"Computes the address of a pool for the given token pair.\"},\"createPool(address,address)\":{\"notice\":\"Creates a new pool for the given token pair.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token factory/interfaces/IAlgebraFactory.sol\":\"IAlgebraFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token factory/interfaces/IAlgebraFactory.sol\":{\"keccak256\":\"0x952b3b8283788bcea1eaf530f58a1a68476847e845fd65a0bfc8c02ece764d4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be4cd6ba621682c77e34d6d44728751c41fa67585d81e4e38956896b213ba6a9\",\"dweb:/ipfs/QmbwhzvnmNPR5ES4MdqtxjaPgxZCLXbS4vBnuqySJy435J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"computePoolAddress(address,address)": {
								"notice": "Computes the address of a pool for the given token pair."
							},
							"createPool(address,address)": {
								"notice": "Creates a new pool for the given token pair."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/token factory/interfaces/IAlgebraPool.sol": {
				"IAlgebraPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Desired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Desired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount0Min",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Min",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount0Min",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Min",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addLiquidity(uint256,uint256,uint256,uint256,address,uint256)": {
								"params": {
									"amount0Desired": "The amount of token0 to add.",
									"amount0Min": "The minimum amount of token0 to add.",
									"amount1Desired": "The amount of token1 to add.",
									"amount1Min": "The minimum amount of token1 to add.",
									"deadline": "The timestamp by which the transaction must be confirmed.",
									"recipient": "The address to receive the liquidity tokens."
								}
							},
							"removeLiquidity(uint256,uint256,uint256,address,uint256)": {
								"params": {
									"amount0Min": "The minimum amount of token0 to withdraw.",
									"amount1Min": "The minimum amount of token1 to withdraw.",
									"deadline": "The timestamp by which the transaction must be confirmed.",
									"liquidity": "The amount of liquidity tokens to remove.",
									"recipient": "The address to receive the withdrawn tokens."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256,uint256,uint256,address,uint256)": "ded998b9",
							"removeLiquidity(uint256,uint256,uint256,address,uint256)": "ed856cdc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amount0Desired\":\"The amount of token0 to add.\",\"amount0Min\":\"The minimum amount of token0 to add.\",\"amount1Desired\":\"The amount of token1 to add.\",\"amount1Min\":\"The minimum amount of token1 to add.\",\"deadline\":\"The timestamp by which the transaction must be confirmed.\",\"recipient\":\"The address to receive the liquidity tokens.\"}},\"removeLiquidity(uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amount0Min\":\"The minimum amount of token0 to withdraw.\",\"amount1Min\":\"The minimum amount of token1 to withdraw.\",\"deadline\":\"The timestamp by which the transaction must be confirmed.\",\"liquidity\":\"The amount of liquidity tokens to remove.\",\"recipient\":\"The address to receive the withdrawn tokens.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity(uint256,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Adds liquidity to the pool.\"},\"removeLiquidity(uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Removes liquidity from the pool.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token factory/interfaces/IAlgebraPool.sol\":\"IAlgebraPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token factory/interfaces/IAlgebraPool.sol\":{\"keccak256\":\"0xad34106048410b2b5ab5f2b92cc0dbc9663e7af2c2fdaa277fd977c27290e881\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9299282dad2a2c9cd29bcaf6c44ebe992368d473bac91c75d1911f2d3f5e6b04\",\"dweb:/ipfs/QmcFQiwwwvvQxwqLCBBiJ6cTLMsjKyG8d2Z2yCfgte9XB2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addLiquidity(uint256,uint256,uint256,uint256,address,uint256)": {
								"notice": "Adds liquidity to the pool."
							},
							"removeLiquidity(uint256,uint256,uint256,address,uint256)": {
								"notice": "Removes liquidity from the pool."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/token factory/testAlgebra.sol": {
				"AlgebraPoolTester": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_algebraFactory",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "mintAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "step",
									"type": "string"
								}
							],
							"name": "DebugStep",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenBAmount",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "poolAddress",
									"type": "address"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensTransferredToPool",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenBAmount",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "algebraFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "computePoolAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "poolAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "createPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastCreatedPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenA",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferTokensToPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAlgebraFactory",
									"type": "address"
								}
							],
							"name": "updateAlgebraFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"addLiquidity(uint256,uint256)": {
								"params": {
									"tokenAAmount": "The amount of Token A to add.",
									"tokenBAmount": "The amount of Token B to add."
								}
							},
							"computePoolAddress(address,address)": {
								"params": {
									"tokenA": "The address of the first token.",
									"tokenB": "The address of the second token."
								},
								"returns": {
									"poolAddress": "The address of the computed pool."
								}
							},
							"mintTokens(address,address,uint256)": {
								"params": {
									"amount": "The amount of tokens to mint.",
									"to": "The address to receive the minted tokens.",
									"token": "The address of the token to mint."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"transferTokensToPool(address,address,uint256)": {
								"params": {
									"amount": "The amount of tokens to transfer.",
									"pool": "The address of the pool to receive the tokens.",
									"token": "The address of the token to transfer."
								}
							},
							"updateAlgebraFactory(address)": {
								"params": {
									"newAlgebraFactory": "The new Algebra Factory address."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/token factory/testAlgebra.sol\":223:5496  contract AlgebraPoolTester is Ownable (msg.sender) {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/token factory/testAlgebra.sol\":804:1588  constructor(address _algebraFactory, uint256 mintAmount) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/token factory/testAlgebra.sol\":262:272  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":516:567   */\n  mstore\n    /* \"#utility.yul\":489:507   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_10:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/token factory/testAlgebra.sol\":879:908  _algebraFactory != address(0) */\n  dup3\n  and\n    /* \"contracts/token factory/testAlgebra.sol\":871:944  require(_algebraFactory != address(0), \"Invalid Algebra Factory address\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":780:782   */\n  0x20\n    /* \"contracts/token factory/testAlgebra.sol\":871:944  require(_algebraFactory != address(0), \"Invalid Algebra Factory address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":762:783   */\n  mstore\n    /* \"#utility.yul\":819:821   */\n  0x1f\n    /* \"#utility.yul\":799:817   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":792:822   */\n  mstore\n    /* \"#utility.yul\":858:891   */\n  0x496e76616c696420416c676562726120466163746f7279206164647265737300\n    /* \"#utility.yul\":838:856   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":831:892   */\n  mstore\n    /* \"#utility.yul\":909:927   */\n  0x64\n  add\n    /* \"contracts/token factory/testAlgebra.sol\":871:944  require(_algebraFactory != address(0), \"Invalid Algebra Factory address\") */\n  tag_8\n    /* \"#utility.yul\":578:933   */\n  jump\n    /* \"contracts/token factory/testAlgebra.sol\":871:944  require(_algebraFactory != address(0), \"Invalid Algebra Factory address\") */\ntag_13:\n    /* \"contracts/token factory/testAlgebra.sol\":975:976  0 */\n  0x00\n    /* \"contracts/token factory/testAlgebra.sol\":962:972  mintAmount */\n  dup2\n    /* \"contracts/token factory/testAlgebra.sol\":962:976  mintAmount > 0 */\n  gt\n    /* \"contracts/token factory/testAlgebra.sol\":954:1018  require(mintAmount > 0, \"Mint amount must be greater than zero\") */\n  tag_16\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1140:1142   */\n  0x20\n    /* \"contracts/token factory/testAlgebra.sol\":954:1018  require(mintAmount > 0, \"Mint amount must be greater than zero\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1122:1143   */\n  mstore\n    /* \"#utility.yul\":1179:1181   */\n  0x25\n    /* \"#utility.yul\":1159:1177   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1152:1182   */\n  mstore\n    /* \"#utility.yul\":1218:1252   */\n  0x4d696e7420616d6f756e74206d7573742062652067726561746572207468616e\n    /* \"#utility.yul\":1198:1216   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1191:1253   */\n  mstore\n  shl(0xd8, 0x207a65726f)\n    /* \"#utility.yul\":1269:1287   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1262:1297   */\n  mstore\n    /* \"#utility.yul\":1314:1333   */\n  0x84\n  add\n    /* \"contracts/token factory/testAlgebra.sol\":954:1018  require(mintAmount > 0, \"Mint amount must be greater than zero\") */\n  tag_8\n    /* \"#utility.yul\":938:1339   */\n  jump\n    /* \"contracts/token factory/testAlgebra.sol\":954:1018  require(mintAmount > 0, \"Mint amount must be greater than zero\") */\ntag_16:\n    /* \"contracts/token factory/testAlgebra.sol\":1029:1043  algebraFactory */\n  0x01\n    /* \"contracts/token factory/testAlgebra.sol\":1029:1061  algebraFactory = _algebraFactory */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/token factory/testAlgebra.sol\":1120:1137  new CustomToken() */\n  mload(0x40)\n  0x00\n  swap1\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  0x00\n  create\n  dup1\n  iszero\n  dup1\n  iszero\n  tag_21\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_21:\n  pop\n    /* \"contracts/token factory/testAlgebra.sol\":1147:1181  _tokenA.initialize(\"TokenA\", \"TA\") */\n  0x40\n  dup1\n  mload\n  shl(0xe1, 0x266c45bb)\n  dup2\n  mstore\n  0x04\n  dup2\n  add\n    /* \"#utility.yul\":1629:1650   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":1686:1687   */\n  0x06\n    /* \"#utility.yul\":1666:1684   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1659:1688   */\n  mstore\n  shl(0xd0, 0x546f6b656e41)\n    /* \"#utility.yul\":1704:1722   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1697:1733   */\n  mstore\n    /* \"#utility.yul\":1771:1774   */\n  0x80\n    /* \"#utility.yul\":1749:1769   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1742:1775   */\n  mstore\n    /* \"#utility.yul\":1812:1813   */\n  0x02\n    /* \"#utility.yul\":1791:1810   */\n  0x84\n  dup3\n  add\n    /* \"#utility.yul\":1784:1814   */\n  mstore\n  shl(0xf0, 0x5441)\n    /* \"#utility.yul\":1830:1849   */\n  0xa4\n  dup3\n  add\n    /* \"#utility.yul\":1823:1856   */\n  mstore\n    /* \"contracts/token factory/testAlgebra.sol\":1098:1137  CustomToken _tokenA = new CustomToken() */\n  swap1\n  swap2\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/token factory/testAlgebra.sol\":1147:1165  _tokenA.initialize */\n  dup3\n  and\n  swap1\n  0x4cd88b76\n  swap1\n    /* \"#utility.yul\":1873:1892   */\n  0xc4\n  add\n    /* \"contracts/token factory/testAlgebra.sol\":1147:1181  _tokenA.initialize(\"TokenA\", \"TA\") */\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_24\n  jumpi\n  0x00\n  dup1\n  revert\ntag_24:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_26\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_26:\n  pop\n  pop\n    /* \"contracts/token factory/testAlgebra.sol\":1191:1227  _tokenA.mint(msg.sender, mintAmount) */\n  mload(0x40)\n  shl(0xe0, 0x40c10f19)\n  dup2\n  mstore\n    /* \"contracts/token factory/testAlgebra.sol\":1204:1214  msg.sender */\n  caller\n    /* \"contracts/token factory/testAlgebra.sol\":1191:1227  _tokenA.mint(msg.sender, mintAmount) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2077:2128   */\n  mstore\n    /* \"#utility.yul\":2144:2162   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":2137:2171   */\n  dup6\n  swap1\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/token factory/testAlgebra.sol\":1191:1203  _tokenA.mint */\n  dup5\n  and\n  swap3\n  pop\n  0x40c10f19\n  swap2\n  pop\n    /* \"#utility.yul\":2050:2068   */\n  0x44\n  add\n    /* \"contracts/token factory/testAlgebra.sol\":1191:1227  _tokenA.mint(msg.sender, mintAmount) */\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_29\n  jumpi\n  0x00\n  dup1\n  revert\ntag_29:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_31\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_31:\n  pop\n  pop\n    /* \"contracts/token factory/testAlgebra.sol\":1237:1243  tokenA */\n  0x03\n    /* \"contracts/token factory/testAlgebra.sol\":1237:1262  tokenA = address(_tokenA) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup6\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/token factory/testAlgebra.sol\":1277:1321  TokensMinted(tokenA, msg.sender, mintAmount) */\n  mload(0x40)\n    /* \"#utility.yul\":2328:2353   */\n  dup6\n  dup2\n  mstore\n    /* \"contracts/token factory/testAlgebra.sol\":1298:1308  msg.sender */\n  caller\n  swap4\n  pop\n    /* \"contracts/token factory/testAlgebra.sol\":1237:1262  tokenA = address(_tokenA) */\n  swap1\n  swap2\n  pop\n  0x00\n  dup1\n  mload\n  0x20\n  data_1f8af5d09536cfff9c726b5b64e3468e91184f0e2f8d91057f8023dacfc32600\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/token factory/testAlgebra.sol\":1277:1321  TokensMinted(tokenA, msg.sender, mintAmount) */\n  swap1\n    /* \"#utility.yul\":2316:2318   */\n  0x20\n    /* \"#utility.yul\":2301:2319   */\n  add\n    /* \"contracts/token factory/testAlgebra.sol\":1277:1321  TokensMinted(tokenA, msg.sender, mintAmount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/token factory/testAlgebra.sol\":1358:1377  CustomToken _tokenB */\n  0x00\n    /* \"contracts/token factory/testAlgebra.sol\":1380:1397  new CustomToken() */\n  mload(0x40)\n  tag_34\n  swap1\n  tag_20\n  jump\t// in\ntag_34:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  0x00\n  create\n  dup1\n  iszero\n  dup1\n  iszero\n  tag_35\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_35:\n  pop\n    /* \"contracts/token factory/testAlgebra.sol\":1407:1441  _tokenB.initialize(\"TokenB\", \"TB\") */\n  0x40\n  dup1\n  mload\n  shl(0xe1, 0x266c45bb)\n  dup2\n  mstore\n  0x04\n  dup2\n  add\n    /* \"#utility.yul\":2649:2670   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":2706:2707   */\n  0x06\n    /* \"#utility.yul\":2686:2704   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2679:2708   */\n  mstore\n  shl(0xd1, 0x2a37b5b2b721)\n    /* \"#utility.yul\":2724:2742   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":2717:2753   */\n  mstore\n    /* \"#utility.yul\":2791:2794   */\n  0x80\n    /* \"#utility.yul\":2769:2789   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2762:2795   */\n  mstore\n    /* \"#utility.yul\":2832:2833   */\n  0x02\n    /* \"#utility.yul\":2811:2830   */\n  0x84\n  dup3\n  add\n    /* \"#utility.yul\":2804:2834   */\n  mstore\n  shl(0xf1, 0x2a21)\n    /* \"#utility.yul\":2850:2869   */\n  0xa4\n  dup3\n  add\n    /* \"#utility.yul\":2843:2876   */\n  mstore\n    /* \"contracts/token factory/testAlgebra.sol\":1358:1397  CustomToken _tokenB = new CustomToken() */\n  swap1\n  swap2\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/token factory/testAlgebra.sol\":1407:1425  _tokenB.initialize */\n  dup3\n  and\n  swap1\n  0x4cd88b76\n  swap1\n    /* \"#utility.yul\":2893:2912   */\n  0xc4\n  add\n    /* \"contracts/token factory/testAlgebra.sol\":1407:1441  _tokenB.initialize(\"TokenB\", \"TB\") */\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_38\n  jumpi\n  0x00\n  dup1\n  revert\ntag_38:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_40\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_40:\n  pop\n  pop\n    /* \"contracts/token factory/testAlgebra.sol\":1451:1487  _tokenB.mint(msg.sender, mintAmount) */\n  mload(0x40)\n  shl(0xe0, 0x40c10f19)\n  dup2\n  mstore\n    /* \"contracts/token factory/testAlgebra.sol\":1464:1474  msg.sender */\n  caller\n    /* \"contracts/token factory/testAlgebra.sol\":1451:1487  _tokenB.mint(msg.sender, mintAmount) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2077:2128   */\n  mstore\n    /* \"#utility.yul\":2144:2162   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":2137:2171   */\n  dup7\n  swap1\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/token factory/testAlgebra.sol\":1451:1463  _tokenB.mint */\n  dup5\n  and\n  swap3\n  pop\n  0x40c10f19\n  swap2\n  pop\n    /* \"#utility.yul\":2050:2068   */\n  0x44\n  add\n    /* \"contracts/token factory/testAlgebra.sol\":1451:1487  _tokenB.mint(msg.sender, mintAmount) */\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_42\n  jumpi\n  0x00\n  dup1\n  revert\ntag_42:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_44\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_44:\n  pop\n  pop\n    /* \"contracts/token factory/testAlgebra.sol\":1497:1503  tokenB */\n  0x04\n    /* \"contracts/token factory/testAlgebra.sol\":1497:1522  tokenB = address(_tokenB) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup6\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/token factory/testAlgebra.sol\":1537:1581  TokensMinted(tokenB, msg.sender, mintAmount) */\n  mload(0x40)\n    /* \"#utility.yul\":2328:2353   */\n  dup7\n  dup2\n  mstore\n    /* \"contracts/token factory/testAlgebra.sol\":1558:1568  msg.sender */\n  caller\n  swap4\n  pop\n    /* \"contracts/token factory/testAlgebra.sol\":1497:1522  tokenB = address(_tokenB) */\n  swap1\n  swap2\n  pop\n  0x00\n  dup1\n  mload\n  0x20\n  data_1f8af5d09536cfff9c726b5b64e3468e91184f0e2f8d91057f8023dacfc32600\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/token factory/testAlgebra.sol\":1537:1581  TokensMinted(tokenB, msg.sender, mintAmount) */\n  swap1\n    /* \"#utility.yul\":2316:2318   */\n  0x20\n    /* \"#utility.yul\":2301:2319   */\n  add\n    /* \"contracts/token factory/testAlgebra.sol\":1537:1581  TokensMinted(tokenB, msg.sender, mintAmount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/token factory/testAlgebra.sol\":861:1588  {... */\n  pop\n  pop\n    /* \"contracts/token factory/testAlgebra.sol\":804:1588  constructor(address _algebraFactory, uint256 mintAmount) {... */\n  pop\n  pop\n    /* \"contracts/token factory/testAlgebra.sol\":223:5496  contract AlgebraPoolTester is Ownable (msg.sender) {... */\n  jump(tag_48)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/token factory/testAlgebra.sol\":223:5496  contract AlgebraPoolTester is Ownable (msg.sender) {... */\ntag_20:\n  dataSize(sub_1)\n  dup1\n  dataOffset(sub_1)\n  dup4\n  codecopy\n  add\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":14:365   */\ntag_3:\n    /* \"#utility.yul\":93:99   */\n  0x00\n    /* \"#utility.yul\":101:107   */\n  dup1\n    /* \"#utility.yul\":154:156   */\n  0x40\n    /* \"#utility.yul\":142:151   */\n  dup4\n    /* \"#utility.yul\":133:140   */\n  dup6\n    /* \"#utility.yul\":129:152   */\n  sub\n    /* \"#utility.yul\":125:157   */\n  slt\n    /* \"#utility.yul\":122:174   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":170:171   */\n  0x00\n    /* \"#utility.yul\":167:168   */\n  dup1\n    /* \"#utility.yul\":160:172   */\n  revert\n    /* \"#utility.yul\":122:174   */\ntag_50:\n    /* \"#utility.yul\":196:212   */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":241:272   */\n  dup2\n  and\n    /* \"#utility.yul\":231:273   */\n  dup2\n  eq\n    /* \"#utility.yul\":221:291   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":287:288   */\n  0x00\n    /* \"#utility.yul\":284:285   */\n  dup1\n    /* \"#utility.yul\":277:289   */\n  revert\n    /* \"#utility.yul\":221:291   */\ntag_51:\n    /* \"#utility.yul\":355:357   */\n  0x20\n    /* \"#utility.yul\":340:358   */\n  swap4\n  swap1\n  swap4\n  add\n    /* \"#utility.yul\":334:359   */\n  mload\n    /* \"#utility.yul\":310:315   */\n  swap3\n  swap5\n    /* \"#utility.yul\":334:359   */\n  swap3\n  swap4\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":14:365   */\n  jump\t// out\n    /* \"#utility.yul\":2364:2918   */\ntag_48:\n    /* \"contracts/token factory/testAlgebra.sol\":223:5496  contract AlgebraPoolTester is Ownable (msg.sender) {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_1f8af5d09536cfff9c726b5b64e3468e91184f0e2f8d91057f8023dacfc32600 bf67ec129007be07f346d9d2933215293a6612ce7ff17d6b479a5a5cae72890c\n\nsub_0: assembly {\n        /* \"contracts/token factory/testAlgebra.sol\":223:5496  contract AlgebraPoolTester is Ownable (msg.sender) {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa7b64b04\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa7b64b04\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb62d2af9\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd8ed2241\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9a06b113\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9cd441da\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x0fc63d10\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1a7c2131\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4f16fa53\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5f64b55b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6fc98ee1\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/token factory/testAlgebra.sol\":351:372  address public tokenA */\n    tag_3:\n      sload(0x03)\n      tag_18\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_18:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":351:372  address public tokenA */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token factory/testAlgebra.sol\":315:345  address public lastCreatedPool */\n    tag_4:\n      sload(0x02)\n      tag_18\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/token factory/testAlgebra.sol\":3092:3508  function transferTokensToPool(address token, address pool, uint256 amount) external onlyOwner {... */\n    tag_5:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/token factory/testAlgebra.sol\":378:399  address public tokenB */\n    tag_6:\n      sload(0x04)\n      tag_18\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/token factory/testAlgebra.sol\":2460:2848  function mintTokens(address token, address to, uint256 amount) external onlyOwner {... */\n    tag_7:\n      tag_25\n      tag_33\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_25\n      tag_36\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_18)\n        /* \"contracts/token factory/testAlgebra.sol\":1687:2204  function createPool() external onlyOwner {... */\n    tag_10:\n      tag_25\n      tag_41\n      jump\t// in\n        /* \"contracts/token factory/testAlgebra.sol\":3687:4483  function addLiquidity(uint256 tokenAAmount, uint256 tokenBAmount) external onlyOwner {... */\n    tag_11:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"contracts/token factory/testAlgebra.sol\":280:309  address public algebraFactory */\n    tag_12:\n      sload(0x01)\n      tag_18\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/token factory/testAlgebra.sol\":5282:5494  function updateAlgebraFactory(address newAlgebraFactory) external onlyOwner {... */\n    tag_13:\n      tag_25\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"contracts/token factory/testAlgebra.sol\":4740:5136  function computePoolAddress(address tokenA, address tokenB) external view returns (address poolAddress) {... */\n    tag_14:\n      tag_18\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"contracts/token factory/testAlgebra.sol\":3092:3508  function transferTokensToPool(address token, address pool, uint256 amount) external onlyOwner {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_62:\n        /* \"contracts/token factory/testAlgebra.sol\":3213:3219  tokenA */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":3204:3219  token == tokenA */\n      dup5\n      dup2\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":3213:3219  tokenA */\n      swap2\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":3204:3219  token == tokenA */\n      eq\n      dup1\n        /* \"contracts/token factory/testAlgebra.sol\":3204:3238  token == tokenA || token == tokenB */\n      tag_65\n      jumpi\n      pop\n        /* \"contracts/token factory/testAlgebra.sol\":3232:3238  tokenB */\n      sload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":3223:3238  token == tokenB */\n      dup5\n      dup2\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":3232:3238  tokenB */\n      swap2\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":3223:3238  token == tokenB */\n      eq\n        /* \"contracts/token factory/testAlgebra.sol\":3204:3238  token == tokenA || token == tokenB */\n    tag_65:\n        /* \"contracts/token factory/testAlgebra.sol\":3196:3264  require(token == tokenA || token == tokenB, \"Invalid token address\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":3282:3300  pool != address(0) */\n      dup3\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":3274:3325  require(pool != address(0), \"Invalid pool address\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2419:2421   */\n      0x20\n        /* \"contracts/token factory/testAlgebra.sol\":3274:3325  require(pool != address(0), \"Invalid pool address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2401:2422   */\n      mstore\n        /* \"#utility.yul\":2458:2460   */\n      0x14\n        /* \"#utility.yul\":2438:2456   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2431:2461   */\n      mstore\n      shl(0x60, 0x496e76616c696420706f6f6c2061646472657373)\n        /* \"#utility.yul\":2477:2495   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2470:2520   */\n      mstore\n        /* \"#utility.yul\":2537:2555   */\n      0x64\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":3274:3325  require(pool != address(0), \"Invalid pool address\") */\n      tag_67\n        /* \"#utility.yul\":2217:2561   */\n      jump\n        /* \"contracts/token factory/testAlgebra.sol\":3274:3325  require(pool != address(0), \"Invalid pool address\") */\n    tag_69:\n        /* \"contracts/token factory/testAlgebra.sol\":3352:3353  0 */\n      0x00\n        /* \"contracts/token factory/testAlgebra.sol\":3343:3349  amount */\n      dup2\n        /* \"contracts/token factory/testAlgebra.sol\":3343:3353  amount > 0 */\n      gt\n        /* \"contracts/token factory/testAlgebra.sol\":3335:3390  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2768:2770   */\n      0x20\n        /* \"contracts/token factory/testAlgebra.sol\":3335:3390  require(amount > 0, \"Amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2750:2771   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2787:2805   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2780:2810   */\n      mstore\n        /* \"#utility.yul\":2846:2880   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":2826:2844   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2819:2881   */\n      mstore\n        /* \"#utility.yul\":2898:2916   */\n      0x64\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":3335:3390  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_67\n        /* \"#utility.yul\":2566:2922   */\n      jump\n        /* \"contracts/token factory/testAlgebra.sol\":3335:3390  require(amount > 0, \"Amount must be greater than zero\") */\n    tag_72:\n        /* \"contracts/token factory/testAlgebra.sol\":3401:3442  CustomToken(token).transfer(pool, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3119:3151   */\n      dup4\n      dup2\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":3401:3442  CustomToken(token).transfer(pool, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":3101:3152   */\n      mstore\n        /* \"#utility.yul\":3168:3186   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3161:3195   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/token factory/testAlgebra.sol\":3401:3428  CustomToken(token).transfer */\n      dup5\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3074:3092   */\n      0x44\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":3401:3442  CustomToken(token).transfer(pool, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      pop\n        /* \"contracts/token factory/testAlgebra.sol\":3488:3492  pool */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":3457:3501  TokensTransferredToPool(token, pool, amount) */\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":3481:3486  token */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":3457:3501  TokensTransferredToPool(token, pool, amount) */\n      and\n      0x32d8ccb17edf05070e5a75f56f66402f1e3071f6104787c3ec400afbb1a0d6d1\n        /* \"contracts/token factory/testAlgebra.sol\":3494:3500  amount */\n      dup4\n        /* \"contracts/token factory/testAlgebra.sol\":3457:3501  TokensTransferredToPool(token, pool, amount) */\n      mload(0x40)\n      tag_81\n      swap2\n        /* \"#utility.yul\":3634:3659   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3622:3624   */\n      0x20\n        /* \"#utility.yul\":3607:3625   */\n      add\n      swap1\n        /* \"#utility.yul\":3488:3665   */\n      jump\n        /* \"contracts/token factory/testAlgebra.sol\":3457:3501  TokensTransferredToPool(token, pool, amount) */\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token factory/testAlgebra.sol\":3092:3508  function transferTokensToPool(address token, address pool, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token factory/testAlgebra.sol\":2460:2848  function mintTokens(address token, address to, uint256 amount) external onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_84:\n        /* \"contracts/token factory/testAlgebra.sol\":2569:2575  tokenA */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":2560:2575  token == tokenA */\n      dup5\n      dup2\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":2569:2575  tokenA */\n      swap2\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":2560:2575  token == tokenA */\n      eq\n      dup1\n        /* \"contracts/token factory/testAlgebra.sol\":2560:2594  token == tokenA || token == tokenB */\n      tag_86\n      jumpi\n      pop\n        /* \"contracts/token factory/testAlgebra.sol\":2588:2594  tokenB */\n      sload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":2579:2594  token == tokenB */\n      dup5\n      dup2\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":2588:2594  tokenB */\n      swap2\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":2579:2594  token == tokenB */\n      eq\n        /* \"contracts/token factory/testAlgebra.sol\":2560:2594  token == tokenA || token == tokenB */\n    tag_86:\n        /* \"contracts/token factory/testAlgebra.sol\":2552:2620  require(token == tokenA || token == tokenB, \"Invalid token address\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":2638:2654  to != address(0) */\n      dup3\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":2630:2684  require(to != address(0), \"Invalid recipient address\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3872:3874   */\n      0x20\n        /* \"contracts/token factory/testAlgebra.sol\":2630:2684  require(to != address(0), \"Invalid recipient address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3854:3875   */\n      mstore\n        /* \"#utility.yul\":3911:3913   */\n      0x19\n        /* \"#utility.yul\":3891:3909   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3884:3914   */\n      mstore\n        /* \"#utility.yul\":3950:3977   */\n      0x496e76616c696420726563697069656e74206164647265737300000000000000\n        /* \"#utility.yul\":3930:3948   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3923:3978   */\n      mstore\n        /* \"#utility.yul\":3995:4013   */\n      0x64\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":2630:2684  require(to != address(0), \"Invalid recipient address\") */\n      tag_67\n        /* \"#utility.yul\":3670:4019   */\n      jump\n        /* \"contracts/token factory/testAlgebra.sol\":2630:2684  require(to != address(0), \"Invalid recipient address\") */\n    tag_89:\n        /* \"contracts/token factory/testAlgebra.sol\":2711:2712  0 */\n      0x00\n        /* \"contracts/token factory/testAlgebra.sol\":2702:2708  amount */\n      dup2\n        /* \"contracts/token factory/testAlgebra.sol\":2702:2712  amount > 0 */\n      gt\n        /* \"contracts/token factory/testAlgebra.sol\":2694:2749  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2768:2770   */\n      0x20\n        /* \"contracts/token factory/testAlgebra.sol\":2694:2749  require(amount > 0, \"Amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2750:2771   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2787:2805   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2780:2810   */\n      mstore\n        /* \"#utility.yul\":2846:2880   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":2826:2844   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2819:2881   */\n      mstore\n        /* \"#utility.yul\":2898:2916   */\n      0x64\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":2694:2749  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_67\n        /* \"#utility.yul\":2566:2922   */\n      jump\n        /* \"contracts/token factory/testAlgebra.sol\":2694:2749  require(amount > 0, \"Amount must be greater than zero\") */\n    tag_92:\n        /* \"contracts/token factory/testAlgebra.sol\":2760:2795  CustomToken(token).mint(to, amount) */\n      mload(0x40)\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3119:3151   */\n      dup4\n      dup2\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":2760:2795  CustomToken(token).mint(to, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":3101:3152   */\n      mstore\n        /* \"#utility.yul\":3168:3186   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3161:3195   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/token factory/testAlgebra.sol\":2760:2783  CustomToken(token).mint */\n      dup5\n      and\n      swap1\n      0x40c10f19\n      swap1\n        /* \"#utility.yul\":3074:3092   */\n      0x44\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":2760:2795  CustomToken(token).mint(to, amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/token factory/testAlgebra.sol\":2830:2832  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":2810:2841  TokensMinted(token, to, amount) */\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":2823:2828  token */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":2810:2841  TokensMinted(token, to, amount) */\n      and\n      0xbf67ec129007be07f346d9d2933215293a6612ce7ff17d6b479a5a5cae72890c\n        /* \"contracts/token factory/testAlgebra.sol\":2834:2840  amount */\n      dup4\n        /* \"contracts/token factory/testAlgebra.sol\":2810:2841  TokensMinted(token, to, amount) */\n      mload(0x40)\n      tag_81\n      swap2\n        /* \"#utility.yul\":3634:3659   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3622:3624   */\n      0x20\n        /* \"#utility.yul\":3607:3625   */\n      add\n      swap1\n        /* \"#utility.yul\":3488:3665   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/token factory/testAlgebra.sol\":1687:2204  function createPool() external onlyOwner {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_106:\n      0x00\n      dup1\n      mload\n      0x20\n      data_cd3c33721f956e41cd7226e4ec1d7a9afed0f88a83c3caea27c8ce3f8c1bdbbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/token factory/testAlgebra.sol\":1743:1778  DebugStep(\"Starting pool creation\") */\n      mload(0x40)\n      tag_108\n      swap1\n        /* \"#utility.yul\":4226:4228   */\n      0x20\n        /* \"#utility.yul\":4208:4229   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4265:4267   */\n      0x16\n        /* \"#utility.yul\":4245:4263   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4238:4268   */\n      mstore\n      shl(0x51, 0x29ba30b93a34b733903837b7b61031b932b0ba34b7b7)\n        /* \"#utility.yul\":4299:4301   */\n      0x40\n        /* \"#utility.yul\":4284:4302   */\n      dup3\n      add\n        /* \"#utility.yul\":4277:4329   */\n      mstore\n        /* \"#utility.yul\":4361:4363   */\n      0x60\n        /* \"#utility.yul\":4346:4364   */\n      add\n      swap1\n        /* \"#utility.yul\":4024:4370   */\n      jump\n        /* \"contracts/token factory/testAlgebra.sol\":1743:1778  DebugStep(\"Starting pool creation\") */\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/token factory/testAlgebra.sol\":1796:1802  tokenA */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"contracts/token factory/testAlgebra.sol\":1796:1816  tokenA != address(0) */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/token factory/testAlgebra.sol\":1796:1840  tokenA != address(0) && tokenB != address(0) */\n      tag_110\n      jumpi\n      pop\n        /* \"contracts/token factory/testAlgebra.sol\":1820:1826  tokenB */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"contracts/token factory/testAlgebra.sol\":1820:1840  tokenB != address(0) */\n      iszero\n      iszero\n        /* \"contracts/token factory/testAlgebra.sol\":1796:1840  tokenA != address(0) && tokenB != address(0) */\n    tag_110:\n        /* \"contracts/token factory/testAlgebra.sol\":1788:1871  require(tokenA != address(0) && tokenB != address(0), \"Tokens must be initialized\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4577:4579   */\n      0x20\n        /* \"contracts/token factory/testAlgebra.sol\":1788:1871  require(tokenA != address(0) && tokenB != address(0), \"Tokens must be initialized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4559:4580   */\n      mstore\n        /* \"#utility.yul\":4616:4618   */\n      0x1a\n        /* \"#utility.yul\":4596:4614   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4589:4619   */\n      mstore\n        /* \"#utility.yul\":4655:4683   */\n      0x546f6b656e73206d75737420626520696e697469616c697a6564000000000000\n        /* \"#utility.yul\":4635:4653   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4628:4684   */\n      mstore\n        /* \"#utility.yul\":4701:4719   */\n      0x64\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":1788:1871  require(tokenA != address(0) && tokenB != address(0), \"Tokens must be initialized\") */\n      tag_67\n        /* \"#utility.yul\":4375:4725   */\n      jump\n        /* \"contracts/token factory/testAlgebra.sol\":1788:1871  require(tokenA != address(0) && tokenB != address(0), \"Tokens must be initialized\") */\n    tag_111:\n        /* \"contracts/token factory/testAlgebra.sol\":1899:1905  tokenB */\n      sload(0x04)\n        /* \"contracts/token factory/testAlgebra.sol\":1889:1895  tokenA */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":1899:1905  tokenB */\n      swap2\n      dup3\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":1889:1895  tokenA */\n      swap2\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":1889:1905  tokenA != tokenB */\n      sub\n        /* \"contracts/token factory/testAlgebra.sol\":1881:1934  require(tokenA != tokenB, \"Tokens must be different\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4932:4934   */\n      0x20\n        /* \"contracts/token factory/testAlgebra.sol\":1881:1934  require(tokenA != tokenB, \"Tokens must be different\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4914:4935   */\n      mstore\n        /* \"#utility.yul\":4971:4973   */\n      0x18\n        /* \"#utility.yul\":4951:4969   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4944:4974   */\n      mstore\n      shl(0x42, 0x151bdad95b9cc81b5d5cdd08189948191a5999995c995b9d)\n        /* \"#utility.yul\":4990:5008   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4983:5037   */\n      mstore\n        /* \"#utility.yul\":5054:5072   */\n      0x64\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":1881:1934  require(tokenA != tokenB, \"Tokens must be different\") */\n      tag_67\n        /* \"#utility.yul\":4730:5078   */\n      jump\n        /* \"contracts/token factory/testAlgebra.sol\":1881:1934  require(tokenA != tokenB, \"Tokens must be different\") */\n    tag_114:\n        /* \"contracts/token factory/testAlgebra.sol\":1987:2001  algebraFactory */\n      sload(0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":2049:2055  tokenA */\n      sload(0x03)\n        /* \"contracts/token factory/testAlgebra.sol\":2057:2063  tokenB */\n      0x04\n      dup1\n      sload\n        /* \"contracts/token factory/testAlgebra.sol\":2030:2064  factory.createPool(tokenA, tokenB) */\n      mload(0x40)\n      shl(0xe0, 0xe3433615)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":2049:2055  tokenA */\n      swap4\n      dup5\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":2030:2064  factory.createPool(tokenA, tokenB) */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":5257:5308   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/token factory/testAlgebra.sol\":2057:2063  tokenB */\n      dup3\n      and\n        /* \"#utility.yul\":5324:5342   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5317:5377   */\n      mstore\n        /* \"contracts/token factory/testAlgebra.sol\":1987:2001  algebraFactory */\n      swap2\n      and\n      swap1\n      dup2\n      swap1\n        /* \"contracts/token factory/testAlgebra.sol\":2030:2048  factory.createPool */\n      0xe3433615\n      swap1\n        /* \"#utility.yul\":5230:5248   */\n      0x44\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":2030:2064  factory.createPool(tokenA, tokenB) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"contracts/token factory/testAlgebra.sol\":2012:2027  lastCreatedPool */\n      0x02\n        /* \"contracts/token factory/testAlgebra.sol\":2012:2064  lastCreatedPool = factory.createPool(tokenA, tokenB) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      dup3\n      or\n      swap1\n      sstore\n        /* \"contracts/token factory/testAlgebra.sol\":2075:2138  require(lastCreatedPool != address(0), \"Failed to create pool\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5846:5848   */\n      0x20\n        /* \"contracts/token factory/testAlgebra.sol\":2075:2138  require(lastCreatedPool != address(0), \"Failed to create pool\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5828:5849   */\n      mstore\n        /* \"#utility.yul\":5885:5887   */\n      0x15\n        /* \"#utility.yul\":5865:5883   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5858:5888   */\n      mstore\n      shl(0x5a, 0x11985a5b1959081d1bc818dc99585d19481c1bdbdb)\n        /* \"#utility.yul\":5904:5922   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5897:5948   */\n      mstore\n        /* \"#utility.yul\":5965:5983   */\n      0x64\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":2075:2138  require(lastCreatedPool != address(0), \"Failed to create pool\") */\n      tag_67\n        /* \"#utility.yul\":5644:5989   */\n      jump\n        /* \"contracts/token factory/testAlgebra.sol\":2075:2138  require(lastCreatedPool != address(0), \"Failed to create pool\") */\n    tag_123:\n        /* \"contracts/token factory/testAlgebra.sol\":2173:2179  tokenB */\n      sload(0x04)\n        /* \"contracts/token factory/testAlgebra.sol\":2165:2171  tokenA */\n      sload(0x03)\n        /* \"contracts/token factory/testAlgebra.sol\":2181:2196  lastCreatedPool */\n      sload(0x02)\n        /* \"contracts/token factory/testAlgebra.sol\":2153:2197  PoolCreated(tokenA, tokenB, lastCreatedPool) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":2181:2196  lastCreatedPool */\n      swap2\n      dup3\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"contracts/token factory/testAlgebra.sol\":2173:2179  tokenB */\n      swap3\n      dup2\n      and\n      swap3\n        /* \"contracts/token factory/testAlgebra.sol\":2165:2171  tokenA */\n      swap2\n      and\n      swap1\n        /* \"contracts/token factory/testAlgebra.sol\":2153:2197  PoolCreated(tokenA, tokenB, lastCreatedPool) */\n      0x9c5d829b9b23efc461f9aeef91979ec04bb903feb3bee4f26d22114abfc7335b\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":2153:2197  PoolCreated(tokenA, tokenB, lastCreatedPool) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token factory/testAlgebra.sol\":1728:2204  {... */\n      pop\n        /* \"contracts/token factory/testAlgebra.sol\":1687:2204  function createPool() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/token factory/testAlgebra.sol\":3687:4483  function addLiquidity(uint256 tokenAAmount, uint256 tokenBAmount) external onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_128:\n      0x00\n      dup1\n      mload\n      0x20\n      data_cd3c33721f956e41cd7226e4ec1d7a9afed0f88a83c3caea27c8ce3f8c1bdbbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/token factory/testAlgebra.sol\":3787:3827  DebugStep(\"Starting liquidity addition\") */\n      mload(0x40)\n      tag_130\n      swap1\n        /* \"#utility.yul\":6196:6198   */\n      0x20\n        /* \"#utility.yul\":6178:6199   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6235:6237   */\n      0x1b\n        /* \"#utility.yul\":6215:6233   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6208:6238   */\n      mstore\n        /* \"#utility.yul\":6274:6303   */\n      0x5374617274696e67206c6971756964697479206164646974696f6e0000000000\n        /* \"#utility.yul\":6269:6271   */\n      0x40\n        /* \"#utility.yul\":6254:6272   */\n      dup3\n      add\n        /* \"#utility.yul\":6247:6304   */\n      mstore\n        /* \"#utility.yul\":6336:6338   */\n      0x60\n        /* \"#utility.yul\":6321:6339   */\n      add\n      swap1\n        /* \"#utility.yul\":5994:6345   */\n      jump\n        /* \"contracts/token factory/testAlgebra.sol\":3787:3827  DebugStep(\"Starting liquidity addition\") */\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/token factory/testAlgebra.sol\":3845:3860  lastCreatedPool */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/token factory/testAlgebra.sol\":3837:3894  require(lastCreatedPool != address(0), \"No pool created\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6552:6554   */\n      0x20\n        /* \"contracts/token factory/testAlgebra.sol\":3837:3894  require(lastCreatedPool != address(0), \"No pool created\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6534:6555   */\n      mstore\n        /* \"#utility.yul\":6591:6593   */\n      0x0f\n        /* \"#utility.yul\":6571:6589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6564:6594   */\n      mstore\n      shl(0x8a, 0x139bc81c1bdbdb0818dc99585d1959)\n        /* \"#utility.yul\":6610:6628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6603:6648   */\n      mstore\n        /* \"#utility.yul\":6665:6683   */\n      0x64\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":3837:3894  require(lastCreatedPool != address(0), \"No pool created\") */\n      tag_67\n        /* \"#utility.yul\":6350:6689   */\n      jump\n        /* \"contracts/token factory/testAlgebra.sol\":3837:3894  require(lastCreatedPool != address(0), \"No pool created\") */\n    tag_132:\n        /* \"contracts/token factory/testAlgebra.sol\":3927:3928  0 */\n      0x00\n        /* \"contracts/token factory/testAlgebra.sol\":3912:3924  tokenAAmount */\n      dup3\n        /* \"contracts/token factory/testAlgebra.sol\":3912:3928  tokenAAmount > 0 */\n      gt\n        /* \"contracts/token factory/testAlgebra.sol\":3912:3948  tokenAAmount > 0 && tokenBAmount > 0 */\n      dup1\n      iszero\n      tag_135\n      jumpi\n      pop\n        /* \"contracts/token factory/testAlgebra.sol\":3947:3948  0 */\n      0x00\n        /* \"contracts/token factory/testAlgebra.sol\":3932:3944  tokenBAmount */\n      dup2\n        /* \"contracts/token factory/testAlgebra.sol\":3932:3948  tokenBAmount > 0 */\n      gt\n        /* \"contracts/token factory/testAlgebra.sol\":3912:3948  tokenAAmount > 0 && tokenBAmount > 0 */\n    tag_135:\n        /* \"contracts/token factory/testAlgebra.sol\":3904:3992  require(tokenAAmount > 0 && tokenBAmount > 0, \"Token amounts must be greater than zero\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6896:6898   */\n      0x20\n        /* \"contracts/token factory/testAlgebra.sol\":3904:3992  require(tokenAAmount > 0 && tokenBAmount > 0, \"Token amounts must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6878:6899   */\n      mstore\n        /* \"#utility.yul\":6935:6937   */\n      0x27\n        /* \"#utility.yul\":6915:6933   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6908:6938   */\n      mstore\n        /* \"#utility.yul\":6974:7008   */\n      0x546f6b656e20616d6f756e7473206d7573742062652067726561746572207468\n        /* \"#utility.yul\":6954:6972   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6947:7009   */\n      mstore\n      shl(0xc8, 0x616e207a65726f)\n        /* \"#utility.yul\":7025:7043   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7018:7055   */\n      mstore\n        /* \"#utility.yul\":7072:7091   */\n      0x84\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":3904:3992  require(tokenAAmount > 0 && tokenBAmount > 0, \"Token amounts must be greater than zero\") */\n      tag_67\n        /* \"#utility.yul\":6694:7097   */\n      jump\n        /* \"contracts/token factory/testAlgebra.sol\":3904:3992  require(tokenAAmount > 0 && tokenBAmount > 0, \"Token amounts must be greater than zero\") */\n    tag_136:\n        /* \"contracts/token factory/testAlgebra.sol\":4070:4076  tokenA */\n      sload(0x03)\n        /* \"contracts/token factory/testAlgebra.sol\":4087:4102  lastCreatedPool */\n      sload(0x02)\n        /* \"contracts/token factory/testAlgebra.sol\":4058:4117  CustomToken(tokenA).transfer(lastCreatedPool, tokenAAmount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":4087:4102  lastCreatedPool */\n      swap2\n      dup3\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":4058:4117  CustomToken(tokenA).transfer(lastCreatedPool, tokenAAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3101:3152   */\n      mstore\n        /* \"#utility.yul\":3168:3186   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3161:3195   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/token factory/testAlgebra.sol\":4042:4055  bool successA */\n      0x00\n      swap3\n        /* \"contracts/token factory/testAlgebra.sol\":4070:4076  tokenA */\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/token factory/testAlgebra.sol\":4058:4086  CustomToken(tokenA).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3074:3092   */\n      0x44\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":4058:4117  CustomToken(tokenA).transfer(lastCreatedPool, tokenAAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_142:\n        /* \"contracts/token factory/testAlgebra.sol\":4042:4117  bool successA = CustomToken(tokenA).transfer(lastCreatedPool, tokenAAmount) */\n      swap1\n      pop\n        /* \"contracts/token factory/testAlgebra.sol\":4135:4143  successA */\n      dup1\n        /* \"contracts/token factory/testAlgebra.sol\":4127:4170  require(successA, \"TokenA transfer failed\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7304:7306   */\n      0x20\n        /* \"contracts/token factory/testAlgebra.sol\":4127:4170  require(successA, \"TokenA transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7286:7307   */\n      mstore\n        /* \"#utility.yul\":7343:7345   */\n      0x16\n        /* \"#utility.yul\":7323:7341   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7316:7346   */\n      mstore\n      shl(0x52, 0x151bdad95b90481d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":7362:7380   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7355:7407   */\n      mstore\n        /* \"#utility.yul\":7424:7442   */\n      0x64\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":4127:4170  require(successA, \"TokenA transfer failed\") */\n      tag_67\n        /* \"#utility.yul\":7102:7448   */\n      jump\n        /* \"contracts/token factory/testAlgebra.sol\":4127:4170  require(successA, \"TokenA transfer failed\") */\n    tag_143:\n      0x00\n      dup1\n      mload\n      0x20\n      data_cd3c33721f956e41cd7226e4ec1d7a9afed0f88a83c3caea27c8ce3f8c1bdbbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/token factory/testAlgebra.sol\":4185:4216  DebugStep(\"TokenA transferred\") */\n      mload(0x40)\n      tag_146\n      swap1\n        /* \"#utility.yul\":7655:7657   */\n      0x20\n        /* \"#utility.yul\":7637:7658   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7694:7696   */\n      0x12\n        /* \"#utility.yul\":7674:7692   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7667:7697   */\n      mstore\n      shl(0x72, 0x151bdad95b90481d1c985b9cd9995c9c9959)\n        /* \"#utility.yul\":7728:7730   */\n      0x40\n        /* \"#utility.yul\":7713:7731   */\n      dup3\n      add\n        /* \"#utility.yul\":7706:7754   */\n      mstore\n        /* \"#utility.yul\":7786:7788   */\n      0x60\n        /* \"#utility.yul\":7771:7789   */\n      add\n      swap1\n        /* \"#utility.yul\":7453:7795   */\n      jump\n        /* \"contracts/token factory/testAlgebra.sol\":4185:4216  DebugStep(\"TokenA transferred\") */\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/token factory/testAlgebra.sol\":4255:4261  tokenB */\n      0x04\n      dup1\n      sload\n        /* \"contracts/token factory/testAlgebra.sol\":4272:4287  lastCreatedPool */\n      sload(0x02)\n        /* \"contracts/token factory/testAlgebra.sol\":4243:4302  CustomToken(tokenB).transfer(lastCreatedPool, tokenBAmount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":4272:4287  lastCreatedPool */\n      swap2\n      dup3\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":4243:4302  CustomToken(tokenB).transfer(lastCreatedPool, tokenBAmount) */\n      swap4\n      dup2\n      add\n        /* \"#utility.yul\":3101:3152   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":3168:3186   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":3161:3195   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/token factory/testAlgebra.sol\":4227:4240  bool successB */\n      0x00\n      swap3\n        /* \"contracts/token factory/testAlgebra.sol\":4255:4261  tokenB */\n      swap2\n      and\n      swap1\n        /* \"contracts/token factory/testAlgebra.sol\":4243:4271  CustomToken(tokenB).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3074:3092   */\n      0x44\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":4243:4302  CustomToken(tokenB).transfer(lastCreatedPool, tokenBAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_150\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_151:\n        /* \"contracts/token factory/testAlgebra.sol\":4227:4302  bool successB = CustomToken(tokenB).transfer(lastCreatedPool, tokenBAmount) */\n      swap1\n      pop\n        /* \"contracts/token factory/testAlgebra.sol\":4320:4328  successB */\n      dup1\n        /* \"contracts/token factory/testAlgebra.sol\":4312:4355  require(successB, \"TokenB transfer failed\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8002:8004   */\n      0x20\n        /* \"contracts/token factory/testAlgebra.sol\":4312:4355  require(successB, \"TokenB transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7984:8005   */\n      mstore\n        /* \"#utility.yul\":8041:8043   */\n      0x16\n        /* \"#utility.yul\":8021:8039   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8014:8044   */\n      mstore\n      shl(0x52, 0x151bdad95b90881d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":8060:8078   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8053:8105   */\n      mstore\n        /* \"#utility.yul\":8122:8140   */\n      0x64\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":4312:4355  require(successB, \"TokenB transfer failed\") */\n      tag_67\n        /* \"#utility.yul\":7800:8146   */\n      jump\n        /* \"contracts/token factory/testAlgebra.sol\":4312:4355  require(successB, \"TokenB transfer failed\") */\n    tag_152:\n      0x00\n      dup1\n      mload\n      0x20\n      data_cd3c33721f956e41cd7226e4ec1d7a9afed0f88a83c3caea27c8ce3f8c1bdbbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/token factory/testAlgebra.sol\":4370:4401  DebugStep(\"TokenB transferred\") */\n      mload(0x40)\n      tag_155\n      swap1\n        /* \"#utility.yul\":8353:8355   */\n      0x20\n        /* \"#utility.yul\":8335:8356   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8392:8394   */\n      0x12\n        /* \"#utility.yul\":8372:8390   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8365:8395   */\n      mstore\n      shl(0x72, 0x151bdad95b90881d1c985b9cd9995c9c9959)\n        /* \"#utility.yul\":8426:8428   */\n      0x40\n        /* \"#utility.yul\":8411:8429   */\n      dup3\n      add\n        /* \"#utility.yul\":8404:8452   */\n      mstore\n        /* \"#utility.yul\":8484:8486   */\n      0x60\n        /* \"#utility.yul\":8469:8487   */\n      add\n      swap1\n        /* \"#utility.yul\":8151:8493   */\n      jump\n        /* \"contracts/token factory/testAlgebra.sol\":4370:4401  DebugStep(\"TokenB transferred\") */\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/token factory/testAlgebra.sol\":4432:4447  lastCreatedPool */\n      sload(0x02)\n        /* \"contracts/token factory/testAlgebra.sol\":4417:4476  LiquidityAdded(lastCreatedPool, tokenAAmount, tokenBAmount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8672:8697   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":8728:8730   */\n      0x20\n        /* \"#utility.yul\":8713:8731   */\n      dup2\n      add\n        /* \"#utility.yul\":8706:8740   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":4432:4447  lastCreatedPool */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/token factory/testAlgebra.sol\":4417:4476  LiquidityAdded(lastCreatedPool, tokenAAmount, tokenBAmount) */\n      0xac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee45\n      swap2\n        /* \"#utility.yul\":8645:8663   */\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":4417:4476  LiquidityAdded(lastCreatedPool, tokenAAmount, tokenBAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/token factory/testAlgebra.sol\":3772:4483  {... */\n      pop\n      pop\n        /* \"contracts/token factory/testAlgebra.sol\":3687:4483  function addLiquidity(uint256 tokenAAmount, uint256 tokenBAmount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token factory/testAlgebra.sol\":5282:5494  function updateAlgebraFactory(address newAlgebraFactory) external onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":5376:5407  newAlgebraFactory != address(0) */\n      dup2\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":5368:5443  require(newAlgebraFactory != address(0), \"Invalid Algebra Factory address\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8953:8955   */\n      0x20\n        /* \"contracts/token factory/testAlgebra.sol\":5368:5443  require(newAlgebraFactory != address(0), \"Invalid Algebra Factory address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8935:8956   */\n      mstore\n        /* \"#utility.yul\":8992:8994   */\n      0x1f\n        /* \"#utility.yul\":8972:8990   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8965:8995   */\n      mstore\n        /* \"#utility.yul\":9031:9064   */\n      0x496e76616c696420416c676562726120466163746f7279206164647265737300\n        /* \"#utility.yul\":9011:9029   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9004:9065   */\n      mstore\n        /* \"#utility.yul\":9082:9100   */\n      0x64\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":5368:5443  require(newAlgebraFactory != address(0), \"Invalid Algebra Factory address\") */\n      tag_67\n        /* \"#utility.yul\":8751:9106   */\n      jump\n        /* \"contracts/token factory/testAlgebra.sol\":5368:5443  require(newAlgebraFactory != address(0), \"Invalid Algebra Factory address\") */\n    tag_162:\n        /* \"contracts/token factory/testAlgebra.sol\":5453:5467  algebraFactory */\n      0x01\n        /* \"contracts/token factory/testAlgebra.sol\":5453:5487  algebraFactory = newAlgebraFactory */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/token factory/testAlgebra.sol\":5282:5494  function updateAlgebraFactory(address newAlgebraFactory) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/token factory/testAlgebra.sol\":4740:5136  function computePoolAddress(address tokenA, address tokenB) external view returns (address poolAddress) {... */\n    tag_56:\n        /* \"contracts/token factory/testAlgebra.sol\":4823:4842  address poolAddress */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":4862:4882  tokenA != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/token factory/testAlgebra.sol\":4862:4906  tokenA != address(0) && tokenB != address(0) */\n      tag_166\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":4886:4906  tokenB != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/token factory/testAlgebra.sol\":4862:4906  tokenA != address(0) && tokenB != address(0) */\n    tag_166:\n        /* \"contracts/token factory/testAlgebra.sol\":4854:4932  require(tokenA != address(0) && tokenB != address(0), \"Invalid token address\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_167:\n        /* \"contracts/token factory/testAlgebra.sol\":4960:4966  tokenB */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":4950:4966  tokenA != tokenB */\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":4950:4956  tokenA */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":4950:4966  tokenA != tokenB */\n      and\n      sub\n        /* \"contracts/token factory/testAlgebra.sol\":4942:4995  require(tokenA != tokenB, \"Tokens must be different\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4932:4934   */\n      0x20\n        /* \"contracts/token factory/testAlgebra.sol\":4942:4995  require(tokenA != tokenB, \"Tokens must be different\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4914:4935   */\n      mstore\n        /* \"#utility.yul\":4971:4973   */\n      0x18\n        /* \"#utility.yul\":4951:4969   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4944:4974   */\n      mstore\n      shl(0x42, 0x151bdad95b9cc81b5d5cdd08189948191a5999995c995b9d)\n        /* \"#utility.yul\":4990:5008   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4983:5037   */\n      mstore\n        /* \"#utility.yul\":5054:5072   */\n      0x64\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":4942:4995  require(tokenA != tokenB, \"Tokens must be different\") */\n      tag_67\n        /* \"#utility.yul\":4730:5078   */\n      jump\n        /* \"contracts/token factory/testAlgebra.sol\":4942:4995  require(tokenA != tokenB, \"Tokens must be different\") */\n    tag_169:\n        /* \"contracts/token factory/testAlgebra.sol\":5048:5062  algebraFactory */\n      sload(0x01)\n        /* \"contracts/token factory/testAlgebra.sol\":5087:5129  factory.computePoolAddress(tokenA, tokenB) */\n      mload(0x40)\n      shl(0xe0, 0xd8ed2241)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5275:5307   */\n      dup6\n      dup2\n      and\n        /* \"contracts/token factory/testAlgebra.sol\":5087:5129  factory.computePoolAddress(tokenA, tokenB) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":5257:5308   */\n      mstore\n        /* \"#utility.yul\":5344:5376   */\n      dup5\n      dup2\n      and\n        /* \"#utility.yul\":5324:5342   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":5317:5377   */\n      mstore\n        /* \"contracts/token factory/testAlgebra.sol\":5048:5062  algebraFactory */\n      swap1\n      swap2\n      and\n      swap1\n      dup2\n      swap1\n        /* \"contracts/token factory/testAlgebra.sol\":5087:5113  factory.computePoolAddress */\n      0xd8ed2241\n      swap1\n        /* \"#utility.yul\":5230:5248   */\n      0x44\n      add\n        /* \"contracts/token factory/testAlgebra.sol\":5087:5129  factory.computePoolAddress(tokenA, tokenB) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_173\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_173:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_174\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_174:\n        /* \"contracts/token factory/testAlgebra.sol\":5073:5129  poolAddress = factory.computePoolAddress(tokenA, tokenB) */\n      swap5\n        /* \"contracts/token factory/testAlgebra.sol\":4740:5136  function computePoolAddress(address tokenA, address tokenB) external view returns (address poolAddress) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_67\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_102\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_67\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:353   */\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":297:328   */\n      dup2\n      and\n        /* \"#utility.yul\":287:329   */\n      dup2\n      eq\n        /* \"#utility.yul\":277:347   */\n      tag_180\n      jumpi\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":340:341   */\n      dup1\n        /* \"#utility.yul\":333:345   */\n      revert\n        /* \"#utility.yul\":358:866   */\n    tag_27:\n        /* \"#utility.yul\":435:441   */\n      0x00\n        /* \"#utility.yul\":443:449   */\n      dup1\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":504:506   */\n      0x60\n        /* \"#utility.yul\":492:501   */\n      dup5\n        /* \"#utility.yul\":483:490   */\n      dup7\n        /* \"#utility.yul\":479:502   */\n      sub\n        /* \"#utility.yul\":475:507   */\n      slt\n        /* \"#utility.yul\":472:524   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":520:521   */\n      0x00\n        /* \"#utility.yul\":517:518   */\n      dup1\n        /* \"#utility.yul\":510:522   */\n      revert\n        /* \"#utility.yul\":472:524   */\n    tag_196:\n        /* \"#utility.yul\":559:568   */\n      dup4\n        /* \"#utility.yul\":546:569   */\n      calldataload\n        /* \"#utility.yul\":578:609   */\n      tag_197\n        /* \"#utility.yul\":603:608   */\n      dup2\n        /* \"#utility.yul\":578:609   */\n      tag_190\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":628:633   */\n      swap3\n      pop\n        /* \"#utility.yul\":685:687   */\n      0x20\n        /* \"#utility.yul\":670:688   */\n      dup5\n      add\n        /* \"#utility.yul\":657:689   */\n      calldataload\n        /* \"#utility.yul\":698:731   */\n      tag_198\n        /* \"#utility.yul\":657:689   */\n      dup2\n        /* \"#utility.yul\":698:731   */\n      tag_190\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":358:866   */\n      swap3\n      swap6\n        /* \"#utility.yul\":750:757   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":830:832   */\n      0x40\n        /* \"#utility.yul\":815:833   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":802:834   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":358:866   */\n      jump\t// out\n        /* \"#utility.yul\":871:1217   */\n    tag_44:\n        /* \"#utility.yul\":939:945   */\n      0x00\n        /* \"#utility.yul\":947:953   */\n      dup1\n        /* \"#utility.yul\":1000:1002   */\n      0x40\n        /* \"#utility.yul\":988:997   */\n      dup4\n        /* \"#utility.yul\":979:986   */\n      dup6\n        /* \"#utility.yul\":975:998   */\n      sub\n        /* \"#utility.yul\":971:1003   */\n      slt\n        /* \"#utility.yul\":968:1020   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":1016:1017   */\n      0x00\n        /* \"#utility.yul\":1013:1014   */\n      dup1\n        /* \"#utility.yul\":1006:1018   */\n      revert\n        /* \"#utility.yul\":968:1020   */\n    tag_200:\n      pop\n      pop\n        /* \"#utility.yul\":1061:1084   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1153:1185   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":871:1217   */\n      jump\t// out\n        /* \"#utility.yul\":1222:1469   */\n    tag_51:\n        /* \"#utility.yul\":1281:1287   */\n      0x00\n        /* \"#utility.yul\":1334:1336   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup3\n        /* \"#utility.yul\":1313:1320   */\n      dup5\n        /* \"#utility.yul\":1309:1332   */\n      sub\n        /* \"#utility.yul\":1305:1337   */\n      slt\n        /* \"#utility.yul\":1302:1354   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":1350:1351   */\n      0x00\n        /* \"#utility.yul\":1347:1348   */\n      dup1\n        /* \"#utility.yul\":1340:1352   */\n      revert\n        /* \"#utility.yul\":1302:1354   */\n    tag_202:\n        /* \"#utility.yul\":1389:1398   */\n      dup2\n        /* \"#utility.yul\":1376:1399   */\n      calldataload\n        /* \"#utility.yul\":1408:1439   */\n      tag_203\n        /* \"#utility.yul\":1433:1438   */\n      dup2\n        /* \"#utility.yul\":1408:1439   */\n      tag_190\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":1458:1463   */\n      swap4\n        /* \"#utility.yul\":1222:1469   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1474:1862   */\n    tag_55:\n        /* \"#utility.yul\":1542:1548   */\n      0x00\n        /* \"#utility.yul\":1550:1556   */\n      dup1\n        /* \"#utility.yul\":1603:1605   */\n      0x40\n        /* \"#utility.yul\":1591:1600   */\n      dup4\n        /* \"#utility.yul\":1582:1589   */\n      dup6\n        /* \"#utility.yul\":1578:1601   */\n      sub\n        /* \"#utility.yul\":1574:1606   */\n      slt\n        /* \"#utility.yul\":1571:1623   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":1619:1620   */\n      0x00\n        /* \"#utility.yul\":1616:1617   */\n      dup1\n        /* \"#utility.yul\":1609:1621   */\n      revert\n        /* \"#utility.yul\":1571:1623   */\n    tag_205:\n        /* \"#utility.yul\":1658:1667   */\n      dup3\n        /* \"#utility.yul\":1645:1668   */\n      calldataload\n        /* \"#utility.yul\":1677:1708   */\n      tag_206\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1677:1708   */\n      tag_190\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":1727:1732   */\n      swap2\n      pop\n        /* \"#utility.yul\":1784:1786   */\n      0x20\n        /* \"#utility.yul\":1769:1787   */\n      dup4\n      add\n        /* \"#utility.yul\":1756:1788   */\n      calldataload\n        /* \"#utility.yul\":1797:1830   */\n      tag_207\n        /* \"#utility.yul\":1756:1788   */\n      dup2\n        /* \"#utility.yul\":1797:1830   */\n      tag_190\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1849:1856   */\n      dup1\n        /* \"#utility.yul\":1839:1856   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1474:1862   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1867:2212   */\n    tag_68:\n        /* \"#utility.yul\":2069:2071   */\n      0x20\n        /* \"#utility.yul\":2051:2072   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2108:2110   */\n      0x15\n        /* \"#utility.yul\":2088:2106   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2081:2111   */\n      mstore\n      shl(0x58, 0x496e76616c696420746f6b656e2061646472657373)\n        /* \"#utility.yul\":2142:2144   */\n      0x40\n        /* \"#utility.yul\":2127:2145   */\n      dup3\n      add\n        /* \"#utility.yul\":2120:2171   */\n      mstore\n        /* \"#utility.yul\":2203:2205   */\n      0x60\n        /* \"#utility.yul\":2188:2206   */\n      add\n      swap1\n        /* \"#utility.yul\":1867:2212   */\n      jump\t// out\n        /* \"#utility.yul\":3206:3483   */\n    tag_80:\n        /* \"#utility.yul\":3273:3279   */\n      0x00\n        /* \"#utility.yul\":3326:3328   */\n      0x20\n        /* \"#utility.yul\":3314:3323   */\n      dup3\n        /* \"#utility.yul\":3305:3312   */\n      dup5\n        /* \"#utility.yul\":3301:3324   */\n      sub\n        /* \"#utility.yul\":3297:3329   */\n      slt\n        /* \"#utility.yul\":3294:3346   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":3342:3343   */\n      0x00\n        /* \"#utility.yul\":3339:3340   */\n      dup1\n        /* \"#utility.yul\":3332:3344   */\n      revert\n        /* \"#utility.yul\":3294:3346   */\n    tag_213:\n        /* \"#utility.yul\":3374:3383   */\n      dup2\n        /* \"#utility.yul\":3368:3384   */\n      mload\n        /* \"#utility.yul\":3427:3432   */\n      dup1\n        /* \"#utility.yul\":3420:3433   */\n      iszero\n        /* \"#utility.yul\":3413:3434   */\n      iszero\n        /* \"#utility.yul\":3406:3411   */\n      dup2\n        /* \"#utility.yul\":3403:3435   */\n      eq\n        /* \"#utility.yul\":3393:3453   */\n      tag_203\n      jumpi\n        /* \"#utility.yul\":3449:3450   */\n      0x00\n        /* \"#utility.yul\":3446:3447   */\n      dup1\n        /* \"#utility.yul\":3439:3451   */\n      revert\n        /* \"#utility.yul\":5388:5639   */\n    tag_122:\n        /* \"#utility.yul\":5458:5464   */\n      0x00\n        /* \"#utility.yul\":5511:5513   */\n      0x20\n        /* \"#utility.yul\":5499:5508   */\n      dup3\n        /* \"#utility.yul\":5490:5497   */\n      dup5\n        /* \"#utility.yul\":5486:5509   */\n      sub\n        /* \"#utility.yul\":5482:5514   */\n      slt\n        /* \"#utility.yul\":5479:5531   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":5527:5528   */\n      0x00\n        /* \"#utility.yul\":5524:5525   */\n      dup1\n        /* \"#utility.yul\":5517:5529   */\n      revert\n        /* \"#utility.yul\":5479:5531   */\n    tag_222:\n        /* \"#utility.yul\":5559:5568   */\n      dup2\n        /* \"#utility.yul\":5553:5569   */\n      mload\n        /* \"#utility.yul\":5578:5609   */\n      tag_203\n        /* \"#utility.yul\":5603:5608   */\n      dup2\n        /* \"#utility.yul\":5578:5609   */\n      tag_190\n      jump\t// in\n    stop\n    data_cd3c33721f956e41cd7226e4ec1d7a9afed0f88a83c3caea27c8ce3f8c1bdbbc 94ebca8d29d278a0288a52a710c11e928307b6f2e15fbaf4508cc4ceb3d21f8b\n\n    auxdata: 0xa2646970667358221220f9f08f065c5bcc82d73f5b75cc4a17017f151a20087aa5e56ef2dd20ff13a73d64736f6c634300081a0033\n}\n\nsub_1: assembly {\n        /* \"contracts/token factory/CustomToken.sol\":168:1369  contract CustomToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n        /* \"contracts/token factory/CustomToken.sol\":378:428  constructor() ERC20(\"\", \"\") Ownable(msg.sender) {} */\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      add\n      dup4\n      mstore\n      0x00\n      dup1\n      dup4\n      mstore\n      dup4\n      mload\n      swap2\n      dup3\n      add\n      swap1\n      swap4\n      mstore\n      swap2\n      dup3\n      mstore\n        /* \"contracts/token factory/CustomToken.sol\":414:424  msg.sender */\n      caller\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n      tag_6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n      tag_7\n      jump\t// in\n    tag_6:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n      tag_8\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n      tag_7\n      jump\t// in\n    tag_8:\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n      tag_10\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2801:2852   */\n      mstore\n        /* \"#utility.yul\":2774:2792   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n      tag_13\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n      tag_14\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_13:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n      pop\n        /* \"contracts/token factory/CustomToken.sol\":168:1369  contract CustomToken is ERC20, Ownable {... */\n      jump(tag_23)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:141   */\n    tag_18:\n        /* \"#utility.yul\":75:85   */\n      0x4e487b71\n        /* \"#utility.yul\":70:73   */\n      0xe0\n        /* \"#utility.yul\":66:86   */\n      shl\n        /* \"#utility.yul\":63:64   */\n      0x00\n        /* \"#utility.yul\":56:87   */\n      mstore\n        /* \"#utility.yul\":106:110   */\n      0x41\n        /* \"#utility.yul\":103:104   */\n      0x04\n        /* \"#utility.yul\":96:111   */\n      mstore\n        /* \"#utility.yul\":130:134   */\n      0x24\n        /* \"#utility.yul\":127:128   */\n      0x00\n        /* \"#utility.yul\":120:135   */\n      revert\n        /* \"#utility.yul\":146:526   */\n    tag_19:\n        /* \"#utility.yul\":225:226   */\n      0x01\n        /* \"#utility.yul\":221:233   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":268:280   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":289:350   */\n      tag_26\n      jumpi\n        /* \"#utility.yul\":343:347   */\n      0x7f\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":331:348   */\n      and\n        /* \"#utility.yul\":321:348   */\n      swap2\n      pop\n        /* \"#utility.yul\":289:350   */\n    tag_26:\n        /* \"#utility.yul\":396:398   */\n      0x20\n        /* \"#utility.yul\":388:394   */\n      dup3\n        /* \"#utility.yul\":385:399   */\n      lt\n        /* \"#utility.yul\":365:383   */\n      dup2\n        /* \"#utility.yul\":362:400   */\n      sub\n        /* \"#utility.yul\":359:520   */\n      tag_27\n      jumpi\n        /* \"#utility.yul\":442:452   */\n      0x4e487b71\n        /* \"#utility.yul\":437:440   */\n      0xe0\n        /* \"#utility.yul\":433:453   */\n      shl\n        /* \"#utility.yul\":430:431   */\n      0x00\n        /* \"#utility.yul\":423:454   */\n      mstore\n        /* \"#utility.yul\":477:481   */\n      0x22\n        /* \"#utility.yul\":474:475   */\n      0x04\n        /* \"#utility.yul\":467:482   */\n      mstore\n        /* \"#utility.yul\":505:509   */\n      0x24\n        /* \"#utility.yul\":502:503   */\n      0x00\n        /* \"#utility.yul\":495:510   */\n      revert\n        /* \"#utility.yul\":359:520   */\n    tag_27:\n      pop\n        /* \"#utility.yul\":146:526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":657:1175   */\n    tag_21:\n        /* \"#utility.yul\":759:761   */\n      0x1f\n        /* \"#utility.yul\":754:757   */\n      dup3\n        /* \"#utility.yul\":751:762   */\n      gt\n        /* \"#utility.yul\":748:1169   */\n      iszero\n      tag_30\n      jumpi\n        /* \"#utility.yul\":795:800   */\n      dup1\n        /* \"#utility.yul\":792:793   */\n      0x00\n        /* \"#utility.yul\":785:801   */\n      mstore\n        /* \"#utility.yul\":839:843   */\n      0x20\n        /* \"#utility.yul\":836:837   */\n      0x00\n        /* \"#utility.yul\":826:844   */\n      keccak256\n        /* \"#utility.yul\":909:911   */\n      0x1f\n        /* \"#utility.yul\":897:907   */\n      dup5\n        /* \"#utility.yul\":893:912   */\n      add\n        /* \"#utility.yul\":890:891   */\n      0x05\n        /* \"#utility.yul\":886:913   */\n      shr\n        /* \"#utility.yul\":880:884   */\n      dup2\n        /* \"#utility.yul\":876:914   */\n      add\n        /* \"#utility.yul\":945:949   */\n      0x20\n        /* \"#utility.yul\":933:943   */\n      dup6\n        /* \"#utility.yul\":930:950   */\n      lt\n        /* \"#utility.yul\":927:974   */\n      iszero\n      tag_31\n      jumpi\n      pop\n        /* \"#utility.yul\":968:972   */\n      dup1\n        /* \"#utility.yul\":927:974   */\n    tag_31:\n        /* \"#utility.yul\":1023:1025   */\n      0x1f\n        /* \"#utility.yul\":1018:1021   */\n      dup5\n        /* \"#utility.yul\":1014:1026   */\n      add\n        /* \"#utility.yul\":1011:1012   */\n      0x05\n        /* \"#utility.yul\":1007:1027   */\n      shr\n        /* \"#utility.yul\":1001:1005   */\n      dup3\n        /* \"#utility.yul\":997:1028   */\n      add\n        /* \"#utility.yul\":987:1028   */\n      swap2\n      pop\n        /* \"#utility.yul\":1078:1159   */\n    tag_32:\n        /* \"#utility.yul\":1096:1098   */\n      dup2\n        /* \"#utility.yul\":1089:1094   */\n      dup2\n        /* \"#utility.yul\":1086:1099   */\n      lt\n        /* \"#utility.yul\":1078:1159   */\n      iszero\n      tag_34\n      jumpi\n        /* \"#utility.yul\":1155:1156   */\n      0x00\n        /* \"#utility.yul\":1141:1157   */\n      dup2\n      sstore\n        /* \"#utility.yul\":1122:1123   */\n      0x01\n        /* \"#utility.yul\":1111:1124   */\n      add\n        /* \"#utility.yul\":1078:1159   */\n      jump(tag_32)\n    tag_34:\n        /* \"#utility.yul\":1082:1085   */\n      pop\n      pop\n        /* \"#utility.yul\":748:1169   */\n    tag_30:\n        /* \"#utility.yul\":657:1175   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1351:2650   */\n    tag_7:\n        /* \"#utility.yul\":1471:1481   */\n      dup2\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1493:1523   */\n      dup2\n      gt\n        /* \"#utility.yul\":1490:1546   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":1526:1544   */\n      tag_38\n      tag_18\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":1555:1652   */\n      tag_39\n        /* \"#utility.yul\":1645:1651   */\n      dup2\n        /* \"#utility.yul\":1605:1643   */\n      tag_40\n        /* \"#utility.yul\":1637:1641   */\n      dup5\n        /* \"#utility.yul\":1631:1642   */\n      sload\n        /* \"#utility.yul\":1605:1643   */\n      tag_19\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":1599:1603   */\n      dup5\n        /* \"#utility.yul\":1555:1652   */\n      tag_21\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1701:1705   */\n      0x20\n        /* \"#utility.yul\":1732:1734   */\n      0x1f\n        /* \"#utility.yul\":1721:1735   */\n      dup3\n      gt\n        /* \"#utility.yul\":1749:1750   */\n      0x01\n        /* \"#utility.yul\":1744:2393   */\n      dup2\n      eq\n      tag_42\n      jumpi\n        /* \"#utility.yul\":2437:2438   */\n      0x00\n        /* \"#utility.yul\":2454:2460   */\n      dup4\n        /* \"#utility.yul\":2451:2540   */\n      iszero\n      tag_43\n      jumpi\n      pop\n        /* \"#utility.yul\":2506:2525   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":2500:2526   */\n      mload\n        /* \"#utility.yul\":2451:2540   */\n    tag_43:\n      not(0x00)\n        /* \"#utility.yul\":1308:1309   */\n      0x03\n        /* \"#utility.yul\":1304:1315   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":1300:1324   */\n      shr\n        /* \"#utility.yul\":1296:1325   */\n      not\n        /* \"#utility.yul\":1286:1326   */\n      and\n        /* \"#utility.yul\":1332:1333   */\n      0x01\n        /* \"#utility.yul\":1328:1339   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":1283:1340   */\n      or\n        /* \"#utility.yul\":2553:2634   */\n      dup5\n      sstore\n        /* \"#utility.yul\":1714:2644   */\n      jump(tag_34)\n        /* \"#utility.yul\":1744:2393   */\n    tag_42:\n        /* \"#utility.yul\":604:605   */\n      0x00\n        /* \"#utility.yul\":597:611   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":641:645   */\n      0x20\n        /* \"#utility.yul\":628:646   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":1780:1800   */\n      dup6\n      and\n      swap2\n        /* \"#utility.yul\":1898:2120   */\n    tag_46:\n        /* \"#utility.yul\":1912:1919   */\n      dup3\n        /* \"#utility.yul\":1909:1910   */\n      dup2\n        /* \"#utility.yul\":1906:1920   */\n      lt\n        /* \"#utility.yul\":1898:2120   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":1994:2013   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":1988:2014   */\n      mload\n        /* \"#utility.yul\":1973:2015   */\n      dup3\n      sstore\n        /* \"#utility.yul\":2101:2105   */\n      0x20\n        /* \"#utility.yul\":2086:2106   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":2054:2055   */\n      0x01\n        /* \"#utility.yul\":2042:2056   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":1928:1940   */\n      add\n        /* \"#utility.yul\":1898:2120   */\n      jump(tag_46)\n    tag_48:\n        /* \"#utility.yul\":1902:1905   */\n      pop\n        /* \"#utility.yul\":2148:2154   */\n      dup5\n        /* \"#utility.yul\":2139:2146   */\n      dup3\n        /* \"#utility.yul\":2136:2155   */\n      lt\n        /* \"#utility.yul\":2133:2334   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":2209:2228   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":2203:2229   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":2292:2293   */\n      0x03\n        /* \"#utility.yul\":2288:2302   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":2304:2307   */\n      0xf8\n        /* \"#utility.yul\":2284:2308   */\n      and\n        /* \"#utility.yul\":2280:2317   */\n      shr\n        /* \"#utility.yul\":2276:2318   */\n      not\n        /* \"#utility.yul\":2261:2319   */\n      and\n        /* \"#utility.yul\":2246:2320   */\n      dup2\n      sstore\n        /* \"#utility.yul\":2133:2334   */\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2380:2381   */\n      0x01\n        /* \"#utility.yul\":2364:2378   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":2360:2382   */\n      add\n        /* \"#utility.yul\":2347:2383   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":1351:2650   */\n      jump\t// out\n        /* \"#utility.yul\":2655:2858   */\n    tag_23:\n        /* \"contracts/token factory/CustomToken.sol\":168:1369  contract CustomToken is ERC20, Ownable {... */\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      0x00\n      codecopy\n      0x00\n      return\n    stop\n\n    sub_0: assembly {\n            /* \"contracts/token factory/CustomToken.sol\":168:1369  contract CustomToken is ERC20, Ownable {... */\n          mstore(0x40, 0x80)\n          callvalue\n          dup1\n          iszero\n          tag_1\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_1:\n          pop\n          jumpi(tag_2, lt(calldatasize, 0x04))\n          shr(0xe0, calldataload(0x00))\n          dup1\n          0x70a08231\n          gt\n          tag_19\n          jumpi\n          dup1\n          0xa9059cbb\n          gt\n          tag_20\n          jumpi\n          dup1\n          0xa9059cbb\n          eq\n          tag_15\n          jumpi\n          dup1\n          0xb90497e0\n          eq\n          tag_16\n          jumpi\n          dup1\n          0xdd62ed3e\n          eq\n          tag_17\n          jumpi\n          dup1\n          0xf2fde38b\n          eq\n          tag_18\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_20:\n          dup1\n          0x70a08231\n          eq\n          tag_11\n          jumpi\n          dup1\n          0x715018a6\n          eq\n          tag_12\n          jumpi\n          dup1\n          0x8da5cb5b\n          eq\n          tag_13\n          jumpi\n          dup1\n          0x95d89b41\n          eq\n          tag_14\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_19:\n          dup1\n          0x313ce567\n          gt\n          tag_21\n          jumpi\n          dup1\n          0x313ce567\n          eq\n          tag_7\n          jumpi\n          dup1\n          0x40c10f19\n          eq\n          tag_8\n          jumpi\n          dup1\n          0x4cd88b76\n          eq\n          tag_9\n          jumpi\n          dup1\n          0x58e792ee\n          eq\n          tag_10\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_21:\n          dup1\n          0x06fdde03\n          eq\n          tag_3\n          jumpi\n          dup1\n          0x095ea7b3\n          eq\n          tag_4\n          jumpi\n          dup1\n          0x18160ddd\n          eq\n          tag_5\n          jumpi\n          dup1\n          0x23b872dd\n          eq\n          tag_6\n          jumpi\n        tag_2:\n          0x00\n          dup1\n          revert\n            /* \"contracts/token factory/CustomToken.sol\":827:923  function name() public view override returns (string memory) {... */\n        tag_3:\n          tag_22\n          tag_23\n          jump\t// in\n        tag_22:\n          mload(0x40)\n          tag_24\n          swap2\n          swap1\n          tag_25\n          jump\t// in\n        tag_24:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          return\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n        tag_4:\n          tag_26\n          tag_27\n          calldatasize\n          0x04\n          tag_28\n          jump\t// in\n        tag_27:\n          tag_29\n          jump\t// in\n        tag_26:\n          mload(0x40)\n            /* \"#utility.yul\":1194:1208   */\n          swap1\n          iszero\n            /* \"#utility.yul\":1187:1209   */\n          iszero\n            /* \"#utility.yul\":1169:1210   */\n          dup2\n          mstore\n            /* \"#utility.yul\":1157:1159   */\n          0x20\n            /* \"#utility.yul\":1142:1160   */\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n          tag_24\n            /* \"#utility.yul\":1029:1216   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n        tag_5:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n          sload(0x02)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n        tag_32:\n          mload(0x40)\n            /* \"#utility.yul\":1367:1392   */\n          swap1\n          dup2\n          mstore\n            /* \"#utility.yul\":1355:1357   */\n          0x20\n            /* \"#utility.yul\":1340:1358   */\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n          tag_24\n            /* \"#utility.yul\":1221:1398   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n        tag_6:\n          tag_26\n          tag_37\n          calldatasize\n          0x04\n          tag_38\n          jump\t// in\n        tag_37:\n          tag_39\n          jump\t// in\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n        tag_7:\n          mload(0x40)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n          0x12\n            /* \"#utility.yul\":1924:1960   */\n          dup2\n          mstore\n            /* \"#utility.yul\":1912:1914   */\n          0x20\n            /* \"#utility.yul\":1897:1915   */\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n          tag_24\n            /* \"#utility.yul\":1782:1966   */\n          jump\n            /* \"contracts/token factory/CustomToken.sol\":1098:1193  function mint(address to, uint256 amount) external onlyOwner {... */\n        tag_8:\n          tag_45\n          tag_46\n          calldatasize\n          0x04\n          tag_28\n          jump\t// in\n        tag_46:\n          tag_47\n          jump\t// in\n        tag_45:\n          stop\n            /* \"contracts/token factory/CustomToken.sol\":525:751  function initialize(string memory name, string memory symbol) external {... */\n        tag_9:\n          tag_45\n          tag_49\n          calldatasize\n          0x04\n          tag_50\n          jump\t// in\n        tag_49:\n          tag_51\n          jump\t// in\n            /* \"contracts/token factory/CustomToken.sol\":1265:1367  function setImageURL(string memory _imageURL) external onlyOwner {... */\n        tag_10:\n          tag_45\n          tag_53\n          calldatasize\n          0x04\n          tag_54\n          jump\t// in\n        tag_53:\n          tag_55\n          jump\t// in\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n        tag_11:\n          tag_32\n          tag_57\n          calldatasize\n          0x04\n          tag_58\n          jump\t// in\n        tag_57:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n          swap1\n          dup2\n          mstore\n          0x20\n          dup2\n          swap1\n          mstore\n          0x40\n          swap1\n          keccak256\n          sload\n          swap1\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n          jump\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n        tag_12:\n          tag_45\n          tag_62\n          jump\t// in\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n        tag_13:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n          sload(0x05)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n          mload(0x40)\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n          swap1\n          swap2\n          and\n            /* \"#utility.yul\":4041:4092   */\n          dup2\n          mstore\n            /* \"#utility.yul\":4029:4031   */\n          0x20\n            /* \"#utility.yul\":4014:4032   */\n          add\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n          tag_24\n            /* \"#utility.yul\":3895:4098   */\n          jump\n            /* \"contracts/token factory/CustomToken.sol\":929:1029  function symbol() public view override returns (string memory) {... */\n        tag_14:\n          tag_22\n          tag_68\n          jump\t// in\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n        tag_15:\n          tag_26\n          tag_71\n          calldatasize\n          0x04\n          tag_28\n          jump\t// in\n        tag_71:\n          tag_72\n          jump\t// in\n            /* \"contracts/token factory/CustomToken.sol\":309:331  string public imageURL */\n        tag_16:\n          tag_22\n          tag_75\n          jump\t// in\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n        tag_17:\n          tag_32\n          tag_78\n          calldatasize\n          0x04\n          tag_79\n          jump\t// in\n        tag_78:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n          swap2\n          dup3\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n          swap1\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n          0x01\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n          0x20\n          swap1\n          dup2\n          mstore\n          0x40\n          dup1\n          dup4\n          keccak256\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n          swap4\n          swap1\n          swap5\n          and\n          dup3\n          mstore\n          swap2\n          swap1\n          swap2\n          mstore\n          keccak256\n          sload\n          swap1\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n          jump\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n        tag_18:\n          tag_45\n          tag_83\n          calldatasize\n          0x04\n          tag_58\n          jump\t// in\n        tag_83:\n          tag_84\n          jump\t// in\n            /* \"contracts/token factory/CustomToken.sol\":827:923  function name() public view override returns (string memory) {... */\n        tag_23:\n            /* \"contracts/token factory/CustomToken.sol\":873:886  string memory */\n          0x60\n            /* \"contracts/token factory/CustomToken.sol\":905:916  _customName */\n          0x06\n            /* \"contracts/token factory/CustomToken.sol\":898:916  return _customName */\n          dup1\n          sload\n          tag_86\n          swap1\n          tag_87\n          jump\t// in\n        tag_86:\n          dup1\n          0x1f\n          add\n          0x20\n          dup1\n          swap2\n          div\n          mul\n          0x20\n          add\n          mload(0x40)\n          swap1\n          dup2\n          add\n          0x40\n          mstore\n          dup1\n          swap3\n          swap2\n          swap1\n          dup2\n          dup2\n          mstore\n          0x20\n          add\n          dup3\n          dup1\n          sload\n          tag_88\n          swap1\n          tag_87\n          jump\t// in\n        tag_88:\n          dup1\n          iszero\n          tag_89\n          jumpi\n          dup1\n          0x1f\n          lt\n          tag_90\n          jumpi\n          0x0100\n          dup1\n          dup4\n          sload\n          div\n          mul\n          dup4\n          mstore\n          swap2\n          0x20\n          add\n          swap2\n          jump(tag_89)\n        tag_90:\n          dup3\n          add\n          swap2\n          swap1\n          0x00\n          mstore\n          keccak256(0x00, 0x20)\n          swap1\n        tag_91:\n          dup2\n          sload\n          dup2\n          mstore\n          swap1\n          0x01\n          add\n          swap1\n          0x20\n          add\n          dup1\n          dup4\n          gt\n          tag_91\n          jumpi\n          dup3\n          swap1\n          sub\n          0x1f\n          and\n          dup3\n          add\n          swap2\n        tag_89:\n          pop\n          pop\n          pop\n          pop\n          pop\n          swap1\n          pop\n            /* \"contracts/token factory/CustomToken.sol\":827:923  function name() public view override returns (string memory) {... */\n          swap1\n          jump\t// out\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n        tag_29:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n          0x00\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n          tag_95\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          dup2\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n          dup6\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n          dup6\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n          tag_96\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n          jump\t// in\n        tag_95:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n          0x01\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n          swap2\n          pop\n          pop\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n        tag_92:\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n        tag_39:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n          0x00\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n          tag_100\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n          dup6\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          dup3\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n          dup6\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n          tag_101\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n          jump\t// in\n        tag_100:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n          tag_102\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n          dup6\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n          dup6\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n          dup6\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n          tag_103\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n          jump\t// in\n        tag_102:\n          pop\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n          0x01\n          swap5\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n          swap4\n          pop\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"contracts/token factory/CustomToken.sol\":1098:1193  function mint(address to, uint256 amount) external onlyOwner {... */\n        tag_47:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          tag_106\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n          tag_107\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          jump\t// in\n        tag_106:\n            /* \"contracts/token factory/CustomToken.sol\":1169:1186  _mint(to, amount) */\n          tag_109\n            /* \"contracts/token factory/CustomToken.sol\":1175:1177  to */\n          dup3\n            /* \"contracts/token factory/CustomToken.sol\":1179:1185  amount */\n          dup3\n            /* \"contracts/token factory/CustomToken.sol\":1169:1174  _mint */\n          tag_110\n            /* \"contracts/token factory/CustomToken.sol\":1169:1186  _mint(to, amount) */\n          jump\t// in\n        tag_109:\n            /* \"contracts/token factory/CustomToken.sol\":1098:1193  function mint(address to, uint256 amount) external onlyOwner {... */\n          pop\n          pop\n          jump\t// out\n            /* \"contracts/token factory/CustomToken.sol\":525:751  function initialize(string memory name, string memory symbol) external {... */\n        tag_51:\n            /* \"contracts/token factory/CustomToken.sol\":615:626  initialized */\n          and(0xff, sload(0x08))\n            /* \"contracts/token factory/CustomToken.sol\":614:626  !initialized */\n          iszero\n            /* \"contracts/token factory/CustomToken.sol\":606:656  require(!initialized, \"Token already initialized\") */\n          tag_112\n          jumpi\n          mload(0x40)\n          shl(0xe5, 0x461bcd)\n          dup2\n          mstore\n            /* \"#utility.yul\":4955:4957   */\n          0x20\n            /* \"contracts/token factory/CustomToken.sol\":606:656  require(!initialized, \"Token already initialized\") */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":4937:4958   */\n          mstore\n            /* \"#utility.yul\":4994:4996   */\n          0x19\n            /* \"#utility.yul\":4974:4992   */\n          0x24\n          dup3\n          add\n            /* \"#utility.yul\":4967:4997   */\n          mstore\n            /* \"#utility.yul\":5033:5060   */\n          0x546f6b656e20616c726561647920696e697469616c697a656400000000000000\n            /* \"#utility.yul\":5013:5031   */\n          0x44\n          dup3\n          add\n            /* \"#utility.yul\":5006:5061   */\n          mstore\n            /* \"#utility.yul\":5078:5096   */\n          0x64\n          add\n            /* \"contracts/token factory/CustomToken.sol\":606:656  require(!initialized, \"Token already initialized\") */\n        tag_113:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n        tag_112:\n            /* \"contracts/token factory/CustomToken.sol\":666:677  _customName */\n          0x06\n            /* \"contracts/token factory/CustomToken.sol\":666:684  _customName = name */\n          tag_115\n            /* \"contracts/token factory/CustomToken.sol\":680:684  name */\n          dup4\n            /* \"contracts/token factory/CustomToken.sol\":666:677  _customName */\n          dup3\n            /* \"contracts/token factory/CustomToken.sol\":666:684  _customName = name */\n          tag_116\n          jump\t// in\n        tag_115:\n          pop\n            /* \"contracts/token factory/CustomToken.sol\":694:707  _customSymbol */\n          0x07\n            /* \"contracts/token factory/CustomToken.sol\":694:716  _customSymbol = symbol */\n          tag_117\n            /* \"contracts/token factory/CustomToken.sol\":710:716  symbol */\n          dup3\n            /* \"contracts/token factory/CustomToken.sol\":694:707  _customSymbol */\n          dup3\n            /* \"contracts/token factory/CustomToken.sol\":694:716  _customSymbol = symbol */\n          tag_116\n          jump\t// in\n        tag_117:\n          pop\n          pop\n            /* \"contracts/token factory/CustomToken.sol\":726:737  initialized */\n          0x08\n            /* \"contracts/token factory/CustomToken.sol\":726:744  initialized = true */\n          dup1\n          sload\n          not(0xff)\n          and\n            /* \"contracts/token factory/CustomToken.sol\":740:744  true */\n          0x01\n            /* \"contracts/token factory/CustomToken.sol\":726:744  initialized = true */\n          or\n          swap1\n          sstore\n          pop\n            /* \"contracts/token factory/CustomToken.sol\":525:751  function initialize(string memory name, string memory symbol) external {... */\n          jump\t// out\n            /* \"contracts/token factory/CustomToken.sol\":1265:1367  function setImageURL(string memory _imageURL) external onlyOwner {... */\n        tag_55:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          tag_119\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n          tag_107\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          jump\t// in\n        tag_119:\n            /* \"contracts/token factory/CustomToken.sol\":1340:1348  imageURL */\n          0x09\n            /* \"contracts/token factory/CustomToken.sol\":1340:1360  imageURL = _imageURL */\n          tag_109\n            /* \"contracts/token factory/CustomToken.sol\":1351:1360  _imageURL */\n          dup3\n            /* \"contracts/token factory/CustomToken.sol\":1340:1348  imageURL */\n          dup3\n            /* \"contracts/token factory/CustomToken.sol\":1340:1360  imageURL = _imageURL */\n          tag_116\n          jump\t// in\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n        tag_62:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          tag_124\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n          tag_107\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          jump\t// in\n        tag_124:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n          tag_126\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n          0x00\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n          tag_127\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n          jump\t// in\n        tag_126:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n          jump\t// out\n            /* \"contracts/token factory/CustomToken.sol\":929:1029  function symbol() public view override returns (string memory) {... */\n        tag_68:\n            /* \"contracts/token factory/CustomToken.sol\":977:990  string memory */\n          0x60\n            /* \"contracts/token factory/CustomToken.sol\":1009:1022  _customSymbol */\n          0x07\n            /* \"contracts/token factory/CustomToken.sol\":1002:1022  return _customSymbol */\n          dup1\n          sload\n          tag_86\n          swap1\n          tag_87\n          jump\t// in\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n        tag_72:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n          0x00\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n          tag_95\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          dup2\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n          dup6\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n          dup6\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n          tag_103\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n          jump\t// in\n            /* \"contracts/token factory/CustomToken.sol\":309:331  string public imageURL */\n        tag_75:\n          0x09\n          dup1\n          sload\n          tag_138\n          swap1\n          tag_87\n          jump\t// in\n        tag_138:\n          dup1\n          0x1f\n          add\n          0x20\n          dup1\n          swap2\n          div\n          mul\n          0x20\n          add\n          mload(0x40)\n          swap1\n          dup2\n          add\n          0x40\n          mstore\n          dup1\n          swap3\n          swap2\n          swap1\n          dup2\n          dup2\n          mstore\n          0x20\n          add\n          dup3\n          dup1\n          sload\n          tag_139\n          swap1\n          tag_87\n          jump\t// in\n        tag_139:\n          dup1\n          iszero\n          tag_140\n          jumpi\n          dup1\n          0x1f\n          lt\n          tag_141\n          jumpi\n          0x0100\n          dup1\n          dup4\n          sload\n          div\n          mul\n          dup4\n          mstore\n          swap2\n          0x20\n          add\n          swap2\n          jump(tag_140)\n        tag_141:\n          dup3\n          add\n          swap2\n          swap1\n          0x00\n          mstore\n          keccak256(0x00, 0x20)\n          swap1\n        tag_142:\n          dup2\n          sload\n          dup2\n          mstore\n          swap1\n          0x01\n          add\n          swap1\n          0x20\n          add\n          dup1\n          dup4\n          gt\n          tag_142\n          jumpi\n          dup3\n          swap1\n          sub\n          0x1f\n          and\n          dup3\n          add\n          swap2\n        tag_140:\n          pop\n          pop\n          pop\n          pop\n          pop\n          dup2\n          jump\t// out\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n        tag_84:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          tag_145\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n          tag_107\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n          jump\t// in\n        tag_145:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n          dup2\n          and\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n          tag_147\n          jumpi\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n          mload(0x40)\n          shl(0xe0, 0x1e4fbdf7)\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n          0x00\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":4041:4092   */\n          mstore\n            /* \"#utility.yul\":4014:4032   */\n          0x24\n          add\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n          tag_113\n            /* \"#utility.yul\":3895:4098   */\n          jump\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n        tag_147:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n          tag_149\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n          dup2\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n          tag_127\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n          jump\t// in\n        tag_149:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n        tag_96:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n          tag_152\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n          0x01\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n          tag_153\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n          jump\t// in\n        tag_152:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n        tag_101:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n          dup4\n          dup2\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n          swap1\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n          0x01\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n          0x20\n          swap1\n          dup2\n          mstore\n          0x40\n          dup1\n          dup4\n          keccak256\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n          swap4\n          dup7\n          and\n          dup4\n          mstore\n          swap3\n          swap1\n          mstore\n          keccak256\n          sload\n          not(0x00)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n          dup2\n          eq\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n          tag_160\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n          dup2\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n          dup2\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n          lt\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n          iszero\n          tag_157\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n          mload(0x40)\n          shl(0xe1, 0x7dc7a0d9)\n          dup2\n          mstore\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":7451:7483   */\n          dup5\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":7433:7484   */\n          mstore\n            /* \"#utility.yul\":7500:7518   */\n          0x24\n          dup2\n          add\n            /* \"#utility.yul\":7493:7527   */\n          dup3\n          swap1\n          mstore\n            /* \"#utility.yul\":7543:7561   */\n          0x44\n          dup2\n          add\n            /* \"#utility.yul\":7536:7570   */\n          dup4\n          swap1\n          mstore\n            /* \"#utility.yul\":7406:7424   */\n          0x64\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n          tag_113\n            /* \"#utility.yul\":7231:7576   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n        tag_157:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n          tag_160\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n          dup5\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n          dup5\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n          dup5\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n          dup5\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n          sub\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n          tag_153\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n          jump\t// in\n        tag_160:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n          pop\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n        tag_103:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n          dup4\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n          tag_162\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n          mload(0x40)\n          shl(0xe1, 0x4b637e8f)\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":4041:4092   */\n          mstore\n            /* \"#utility.yul\":4014:4032   */\n          0x24\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n          tag_113\n            /* \"#utility.yul\":3895:4098   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n        tag_162:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n          dup3\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n          tag_164\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n          mload(0x40)\n          shl(0xe0, 0xec442f05)\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":4041:4092   */\n          mstore\n            /* \"#utility.yul\":4014:4032   */\n          0x24\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n          tag_113\n            /* \"#utility.yul\":3895:4098   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n        tag_164:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n          tag_152\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n          tag_167\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n          jump\t// in\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n        tag_107:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n          and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n          eq\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n          tag_126\n          jumpi\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          mload(0x40)\n          shl(0xe0, 0x118cdaa7)\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n          caller\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":4041:4092   */\n          mstore\n            /* \"#utility.yul\":4014:4032   */\n          0x24\n          add\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n          tag_113\n            /* \"#utility.yul\":3895:4098   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n        tag_110:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n          dup3\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n          tag_175\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n          mload(0x40)\n          shl(0xe0, 0xec442f05)\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":4041:4092   */\n          mstore\n            /* \"#utility.yul\":4014:4032   */\n          0x24\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n          tag_113\n            /* \"#utility.yul\":3895:4098   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n        tag_175:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n          tag_109\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n          tag_167\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n          jump\t// in\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n        tag_127:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n          0x05\n          dup1\n          sload\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n          dup4\n          dup2\n          and\n          not(sub(shl(0xa0, 0x01), 0x01))\n          dup4\n          and\n          dup2\n          or\n          swap1\n          swap4\n          sstore\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          mload(0x40)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n          swap2\n          and\n          swap2\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n          swap1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n          dup3\n          swap1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n          swap1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n          0x00\n          swap1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          log3\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n          pop\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n        tag_153:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n          dup5\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n          tag_180\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n          mload(0x40)\n          shl(0xe0, 0xe602df05)\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":4041:4092   */\n          mstore\n            /* \"#utility.yul\":4014:4032   */\n          0x24\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n          tag_113\n            /* \"#utility.yul\":3895:4098   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n        tag_180:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n          dup4\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n          tag_182\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n          mload(0x40)\n          shl(0xe1, 0x4a1406b1)\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":4041:4092   */\n          mstore\n            /* \"#utility.yul\":4014:4032   */\n          0x24\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n          tag_113\n            /* \"#utility.yul\":3895:4098   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n        tag_182:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n          dup1\n          dup6\n          and\n          0x00\n          swap1\n          dup2\n          mstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n          0x01\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n          0x20\n          swap1\n          dup2\n          mstore\n          0x40\n          dup1\n          dup4\n          keccak256\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n          swap4\n          dup8\n          and\n          dup4\n          mstore\n          swap3\n          swap1\n          mstore\n          keccak256\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n          dup3\n          swap1\n          sstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n          dup1\n          iszero\n          tag_160\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n          dup3\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n          dup5\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n          and\n          0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n          dup5\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n          mload(0x40)\n          tag_185\n          swap2\n            /* \"#utility.yul\":1367:1392   */\n          dup2\n          mstore\n            /* \"#utility.yul\":1355:1357   */\n          0x20\n            /* \"#utility.yul\":1340:1358   */\n          add\n          swap1\n            /* \"#utility.yul\":1221:1398   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n        tag_185:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          log3\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n          pop\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n        tag_167:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n          dup4\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n          tag_187\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n          dup1\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n          0x02\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n          dup3\n          dup3\n          sload\n          tag_188\n          swap2\n          swap1\n          tag_189\n          jump\t// in\n        tag_188:\n          swap1\n          swap2\n          sstore\n          pop\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n          tag_190\n          swap1\n          pop\n          jump\n        tag_187:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n          dup4\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n          swap1\n          dup2\n          mstore\n          0x20\n          dup2\n          swap1\n          mstore\n          0x40\n          swap1\n          keccak256\n          sload\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n          dup2\n          dup2\n          lt\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n          iszero\n          tag_191\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n          mload(0x40)\n          shl(0xe2, 0x391434e3)\n          dup2\n          mstore\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":7451:7483   */\n          dup6\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n          0x04\n          dup3\n          add\n            /* \"#utility.yul\":7433:7484   */\n          mstore\n            /* \"#utility.yul\":7500:7518   */\n          0x24\n          dup2\n          add\n            /* \"#utility.yul\":7493:7527   */\n          dup3\n          swap1\n          mstore\n            /* \"#utility.yul\":7543:7561   */\n          0x44\n          dup2\n          add\n            /* \"#utility.yul\":7536:7570   */\n          dup4\n          swap1\n          mstore\n            /* \"#utility.yul\":7406:7424   */\n          0x64\n          add\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n          tag_113\n            /* \"#utility.yul\":7231:7576   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n        tag_191:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n          dup5\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n          swap1\n          dup2\n          mstore\n          0x20\n          dup2\n          swap1\n          mstore\n          0x40\n          swap1\n          keccak256\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n          swap1\n          dup3\n          swap1\n          sub\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n          swap1\n          sstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n        tag_190:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n          dup3\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n          tag_193\n          jumpi\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n          0x02\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n          dup1\n          sload\n          dup3\n          swap1\n          sub\n          swap1\n          sstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n          jump(tag_194)\n        tag_193:\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n          dup3\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n          0x00\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n          swap1\n          dup2\n          mstore\n          0x20\n          dup2\n          swap1\n          mstore\n          0x40\n          swap1\n          keccak256\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n          dup1\n          sload\n          dup3\n          add\n          swap1\n          sstore\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n        tag_194:\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n          dup2\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n          and\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n          dup4\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n          and\n          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n          dup4\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n          mload(0x40)\n          tag_195\n          swap2\n            /* \"#utility.yul\":1367:1392   */\n          dup2\n          mstore\n            /* \"#utility.yul\":1355:1357   */\n          0x20\n            /* \"#utility.yul\":1340:1358   */\n          add\n          swap1\n            /* \"#utility.yul\":1221:1398   */\n          jump\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n        tag_195:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          log3\n            /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":14:541   */\n        tag_25:\n            /* \"#utility.yul\":163:165   */\n          0x20\n            /* \"#utility.yul\":152:161   */\n          dup2\n            /* \"#utility.yul\":145:166   */\n          mstore\n            /* \"#utility.yul\":126:130   */\n          0x00\n            /* \"#utility.yul\":195:201   */\n          dup3\n            /* \"#utility.yul\":189:202   */\n          mload\n            /* \"#utility.yul\":238:244   */\n          dup1\n            /* \"#utility.yul\":233:235   */\n          0x20\n            /* \"#utility.yul\":222:231   */\n          dup5\n            /* \"#utility.yul\":218:236   */\n          add\n            /* \"#utility.yul\":211:245   */\n          mstore\n            /* \"#utility.yul\":263:264   */\n          0x00\n            /* \"#utility.yul\":273:413   */\n        tag_204:\n            /* \"#utility.yul\":287:293   */\n          dup2\n            /* \"#utility.yul\":284:285   */\n          dup2\n            /* \"#utility.yul\":281:294   */\n          lt\n            /* \"#utility.yul\":273:413   */\n          iszero\n          tag_206\n          jumpi\n            /* \"#utility.yul\":398:400   */\n          0x20\n            /* \"#utility.yul\":382:396   */\n          dup2\n          dup7\n          add\n            /* \"#utility.yul\":378:401   */\n          dup2\n          add\n            /* \"#utility.yul\":372:402   */\n          mload\n            /* \"#utility.yul\":367:369   */\n          0x40\n            /* \"#utility.yul\":348:365   */\n          dup7\n          dup5\n          add\n            /* \"#utility.yul\":344:370   */\n          add\n            /* \"#utility.yul\":337:403   */\n          mstore\n            /* \"#utility.yul\":302:312   */\n          add\n            /* \"#utility.yul\":273:413   */\n          jump(tag_204)\n        tag_206:\n            /* \"#utility.yul\":277:280   */\n          pop\n            /* \"#utility.yul\":462:463   */\n          0x00\n            /* \"#utility.yul\":457:459   */\n          0x40\n            /* \"#utility.yul\":448:454   */\n          dup3\n            /* \"#utility.yul\":437:446   */\n          dup6\n            /* \"#utility.yul\":433:455   */\n          add\n            /* \"#utility.yul\":429:460   */\n          add\n            /* \"#utility.yul\":422:464   */\n          mstore\n            /* \"#utility.yul\":532:534   */\n          0x40\n            /* \"#utility.yul\":525:527   */\n          0x1f\n            /* \"#utility.yul\":521:528   */\n          not\n            /* \"#utility.yul\":516:518   */\n          0x1f\n            /* \"#utility.yul\":508:514   */\n          dup4\n            /* \"#utility.yul\":504:519   */\n          add\n            /* \"#utility.yul\":500:529   */\n          and\n            /* \"#utility.yul\":489:498   */\n          dup5\n            /* \"#utility.yul\":485:530   */\n          add\n            /* \"#utility.yul\":481:535   */\n          add\n            /* \"#utility.yul\":473:535   */\n          swap2\n          pop\n          pop\n            /* \"#utility.yul\":14:541   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":546:719   */\n        tag_196:\n            /* \"#utility.yul\":614:634   */\n          dup1\n          calldataload\n          sub(shl(0xa0, 0x01), 0x01)\n            /* \"#utility.yul\":663:694   */\n          dup2\n          and\n            /* \"#utility.yul\":653:695   */\n          dup2\n          eq\n            /* \"#utility.yul\":643:713   */\n          tag_208\n          jumpi\n            /* \"#utility.yul\":709:710   */\n          0x00\n            /* \"#utility.yul\":706:707   */\n          dup1\n            /* \"#utility.yul\":699:711   */\n          revert\n            /* \"#utility.yul\":643:713   */\n        tag_208:\n            /* \"#utility.yul\":546:719   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":724:1024   */\n        tag_28:\n            /* \"#utility.yul\":792:798   */\n          0x00\n            /* \"#utility.yul\":800:806   */\n          dup1\n            /* \"#utility.yul\":853:855   */\n          0x40\n            /* \"#utility.yul\":841:850   */\n          dup4\n            /* \"#utility.yul\":832:839   */\n          dup6\n            /* \"#utility.yul\":828:851   */\n          sub\n            /* \"#utility.yul\":824:856   */\n          slt\n            /* \"#utility.yul\":821:873   */\n          iszero\n          tag_210\n          jumpi\n            /* \"#utility.yul\":869:870   */\n          0x00\n            /* \"#utility.yul\":866:867   */\n          dup1\n            /* \"#utility.yul\":859:871   */\n          revert\n            /* \"#utility.yul\":821:873   */\n        tag_210:\n            /* \"#utility.yul\":892:921   */\n          tag_211\n            /* \"#utility.yul\":911:920   */\n          dup4\n            /* \"#utility.yul\":892:921   */\n          tag_196\n          jump\t// in\n        tag_211:\n            /* \"#utility.yul\":882:921   */\n          swap5\n            /* \"#utility.yul\":990:992   */\n          0x20\n            /* \"#utility.yul\":975:993   */\n          swap4\n          swap1\n          swap4\n          add\n            /* \"#utility.yul\":962:994   */\n          calldataload\n          swap4\n          pop\n          pop\n          pop\n            /* \"#utility.yul\":724:1024   */\n          jump\t// out\n            /* \"#utility.yul\":1403:1777   */\n        tag_38:\n            /* \"#utility.yul\":1480:1486   */\n          0x00\n            /* \"#utility.yul\":1488:1494   */\n          dup1\n            /* \"#utility.yul\":1496:1502   */\n          0x00\n            /* \"#utility.yul\":1549:1551   */\n          0x60\n            /* \"#utility.yul\":1537:1546   */\n          dup5\n            /* \"#utility.yul\":1528:1535   */\n          dup7\n            /* \"#utility.yul\":1524:1547   */\n          sub\n            /* \"#utility.yul\":1520:1552   */\n          slt\n            /* \"#utility.yul\":1517:1569   */\n          iszero\n          tag_215\n          jumpi\n            /* \"#utility.yul\":1565:1566   */\n          0x00\n            /* \"#utility.yul\":1562:1563   */\n          dup1\n            /* \"#utility.yul\":1555:1567   */\n          revert\n            /* \"#utility.yul\":1517:1569   */\n        tag_215:\n            /* \"#utility.yul\":1588:1617   */\n          tag_216\n            /* \"#utility.yul\":1607:1616   */\n          dup5\n            /* \"#utility.yul\":1588:1617   */\n          tag_196\n          jump\t// in\n        tag_216:\n            /* \"#utility.yul\":1578:1617   */\n          swap3\n          pop\n            /* \"#utility.yul\":1636:1674   */\n          tag_217\n            /* \"#utility.yul\":1670:1672   */\n          0x20\n            /* \"#utility.yul\":1659:1668   */\n          dup6\n            /* \"#utility.yul\":1655:1673   */\n          add\n            /* \"#utility.yul\":1636:1674   */\n          tag_196\n          jump\t// in\n        tag_217:\n            /* \"#utility.yul\":1403:1777   */\n          swap3\n          swap6\n            /* \"#utility.yul\":1626:1674   */\n          swap3\n          swap5\n          pop\n          pop\n          pop\n            /* \"#utility.yul\":1743:1745   */\n          0x40\n            /* \"#utility.yul\":1728:1746   */\n          swap2\n          swap1\n          swap2\n          add\n            /* \"#utility.yul\":1715:1747   */\n          calldataload\n          swap1\n            /* \"#utility.yul\":1403:1777   */\n          jump\t// out\n            /* \"#utility.yul\":1971:2098   */\n        tag_197:\n            /* \"#utility.yul\":2032:2042   */\n          0x4e487b71\n            /* \"#utility.yul\":2027:2030   */\n          0xe0\n            /* \"#utility.yul\":2023:2043   */\n          shl\n            /* \"#utility.yul\":2020:2021   */\n          0x00\n            /* \"#utility.yul\":2013:2044   */\n          mstore\n            /* \"#utility.yul\":2063:2067   */\n          0x41\n            /* \"#utility.yul\":2060:2061   */\n          0x04\n            /* \"#utility.yul\":2053:2068   */\n          mstore\n            /* \"#utility.yul\":2087:2091   */\n          0x24\n            /* \"#utility.yul\":2084:2085   */\n          0x00\n            /* \"#utility.yul\":2077:2092   */\n          revert\n            /* \"#utility.yul\":2103:2829   */\n        tag_198:\n            /* \"#utility.yul\":2146:2151   */\n          0x00\n            /* \"#utility.yul\":2199:2202   */\n          dup3\n            /* \"#utility.yul\":2192:2196   */\n          0x1f\n            /* \"#utility.yul\":2184:2190   */\n          dup4\n            /* \"#utility.yul\":2180:2197   */\n          add\n            /* \"#utility.yul\":2176:2203   */\n          slt\n            /* \"#utility.yul\":2166:2221   */\n          tag_221\n          jumpi\n            /* \"#utility.yul\":2217:2218   */\n          0x00\n            /* \"#utility.yul\":2214:2215   */\n          dup1\n            /* \"#utility.yul\":2207:2219   */\n          revert\n            /* \"#utility.yul\":2166:2221   */\n        tag_221:\n            /* \"#utility.yul\":2257:2263   */\n          dup2\n            /* \"#utility.yul\":2244:2264   */\n          calldataload\n            /* \"#utility.yul\":2287:2305   */\n          0xffffffffffffffff\n            /* \"#utility.yul\":2279:2285   */\n          dup2\n            /* \"#utility.yul\":2276:2306   */\n          gt\n            /* \"#utility.yul\":2273:2329   */\n          iszero\n          tag_223\n          jumpi\n            /* \"#utility.yul\":2309:2327   */\n          tag_223\n          tag_197\n          jump\t// in\n        tag_223:\n            /* \"#utility.yul\":2358:2360   */\n          0x40\n            /* \"#utility.yul\":2352:2361   */\n          mload\n            /* \"#utility.yul\":2450:2452   */\n          0x1f\n            /* \"#utility.yul\":2412:2429   */\n          dup3\n          add\n          not(0x1f)\n            /* \"#utility.yul\":2408:2439   */\n          swap1\n          dup2\n          and\n            /* \"#utility.yul\":2441:2443   */\n          0x3f\n            /* \"#utility.yul\":2404:2444   */\n          add\n            /* \"#utility.yul\":2400:2454   */\n          and\n            /* \"#utility.yul\":2388:2455   */\n          dup2\n          add\n            /* \"#utility.yul\":2485:2503   */\n          0xffffffffffffffff\n            /* \"#utility.yul\":2470:2504   */\n          dup2\n          gt\n            /* \"#utility.yul\":2506:2528   */\n          dup3\n          dup3\n          lt\n            /* \"#utility.yul\":2467:2529   */\n          or\n            /* \"#utility.yul\":2464:2552   */\n          iszero\n          tag_225\n          jumpi\n            /* \"#utility.yul\":2532:2550   */\n          tag_225\n          tag_197\n          jump\t// in\n        tag_225:\n            /* \"#utility.yul\":2568:2570   */\n          0x40\n            /* \"#utility.yul\":2561:2583   */\n          mstore\n            /* \"#utility.yul\":2592:2614   */\n          dup2\n          dup2\n          mstore\n            /* \"#utility.yul\":2633:2652   */\n          dup4\n          dup3\n          add\n            /* \"#utility.yul\":2654:2658   */\n          0x20\n            /* \"#utility.yul\":2629:2659   */\n          add\n            /* \"#utility.yul\":2626:2665   */\n          dup6\n          lt\n            /* \"#utility.yul\":2623:2682   */\n          iszero\n          tag_226\n          jumpi\n            /* \"#utility.yul\":2678:2679   */\n          0x00\n            /* \"#utility.yul\":2675:2676   */\n          dup1\n            /* \"#utility.yul\":2668:2680   */\n          revert\n            /* \"#utility.yul\":2623:2682   */\n        tag_226:\n            /* \"#utility.yul\":2742:2748   */\n          dup2\n            /* \"#utility.yul\":2735:2739   */\n          0x20\n            /* \"#utility.yul\":2727:2733   */\n          dup6\n            /* \"#utility.yul\":2723:2740   */\n          add\n            /* \"#utility.yul\":2716:2720   */\n          0x20\n            /* \"#utility.yul\":2708:2714   */\n          dup4\n            /* \"#utility.yul\":2704:2721   */\n          add\n            /* \"#utility.yul\":2691:2749   */\n          calldatacopy\n            /* \"#utility.yul\":2797:2798   */\n          0x00\n            /* \"#utility.yul\":2769:2788   */\n          swap2\n          dup2\n          add\n            /* \"#utility.yul\":2790:2794   */\n          0x20\n            /* \"#utility.yul\":2765:2795   */\n          add\n            /* \"#utility.yul\":2758:2799   */\n          swap2\n          swap1\n          swap2\n          mstore\n            /* \"#utility.yul\":2773:2779   */\n          swap4\n            /* \"#utility.yul\":2103:2829   */\n          swap3\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2834:3372   */\n        tag_50:\n            /* \"#utility.yul\":2922:2928   */\n          0x00\n            /* \"#utility.yul\":2930:2936   */\n          dup1\n            /* \"#utility.yul\":2983:2985   */\n          0x40\n            /* \"#utility.yul\":2971:2980   */\n          dup4\n            /* \"#utility.yul\":2962:2969   */\n          dup6\n            /* \"#utility.yul\":2958:2981   */\n          sub\n            /* \"#utility.yul\":2954:2986   */\n          slt\n            /* \"#utility.yul\":2951:3003   */\n          iszero\n          tag_228\n          jumpi\n            /* \"#utility.yul\":2999:3000   */\n          0x00\n            /* \"#utility.yul\":2996:2997   */\n          dup1\n            /* \"#utility.yul\":2989:3001   */\n          revert\n            /* \"#utility.yul\":2951:3003   */\n        tag_228:\n            /* \"#utility.yul\":3039:3048   */\n          dup3\n            /* \"#utility.yul\":3026:3049   */\n          calldataload\n            /* \"#utility.yul\":3072:3090   */\n          0xffffffffffffffff\n            /* \"#utility.yul\":3064:3070   */\n          dup2\n            /* \"#utility.yul\":3061:3091   */\n          gt\n            /* \"#utility.yul\":3058:3108   */\n          iszero\n          tag_229\n          jumpi\n            /* \"#utility.yul\":3104:3105   */\n          0x00\n            /* \"#utility.yul\":3101:3102   */\n          dup1\n            /* \"#utility.yul\":3094:3106   */\n          revert\n            /* \"#utility.yul\":3058:3108   */\n        tag_229:\n            /* \"#utility.yul\":3127:3177   */\n          tag_230\n            /* \"#utility.yul\":3169:3176   */\n          dup6\n            /* \"#utility.yul\":3160:3166   */\n          dup3\n            /* \"#utility.yul\":3149:3158   */\n          dup7\n            /* \"#utility.yul\":3145:3167   */\n          add\n            /* \"#utility.yul\":3127:3177   */\n          tag_198\n          jump\t// in\n        tag_230:\n            /* \"#utility.yul\":3117:3177   */\n          swap3\n          pop\n          pop\n            /* \"#utility.yul\":3230:3232   */\n          0x20\n            /* \"#utility.yul\":3219:3228   */\n          dup4\n            /* \"#utility.yul\":3215:3233   */\n          add\n            /* \"#utility.yul\":3202:3234   */\n          calldataload\n            /* \"#utility.yul\":3259:3277   */\n          0xffffffffffffffff\n            /* \"#utility.yul\":3249:3257   */\n          dup2\n            /* \"#utility.yul\":3246:3278   */\n          gt\n            /* \"#utility.yul\":3243:3295   */\n          iszero\n          tag_231\n          jumpi\n            /* \"#utility.yul\":3291:3292   */\n          0x00\n            /* \"#utility.yul\":3288:3289   */\n          dup1\n            /* \"#utility.yul\":3281:3293   */\n          revert\n            /* \"#utility.yul\":3243:3295   */\n        tag_231:\n            /* \"#utility.yul\":3314:3366   */\n          tag_232\n            /* \"#utility.yul\":3358:3365   */\n          dup6\n            /* \"#utility.yul\":3347:3355   */\n          dup3\n            /* \"#utility.yul\":3336:3345   */\n          dup7\n            /* \"#utility.yul\":3332:3356   */\n          add\n            /* \"#utility.yul\":3314:3366   */\n          tag_198\n          jump\t// in\n        tag_232:\n            /* \"#utility.yul\":3304:3366   */\n          swap2\n          pop\n          pop\n            /* \"#utility.yul\":2834:3372   */\n          swap3\n          pop\n          swap3\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":3377:3699   */\n        tag_54:\n            /* \"#utility.yul\":3446:3452   */\n          0x00\n            /* \"#utility.yul\":3499:3501   */\n          0x20\n            /* \"#utility.yul\":3487:3496   */\n          dup3\n            /* \"#utility.yul\":3478:3485   */\n          dup5\n            /* \"#utility.yul\":3474:3497   */\n          sub\n            /* \"#utility.yul\":3470:3502   */\n          slt\n            /* \"#utility.yul\":3467:3519   */\n          iszero\n          tag_234\n          jumpi\n            /* \"#utility.yul\":3515:3516   */\n          0x00\n            /* \"#utility.yul\":3512:3513   */\n          dup1\n            /* \"#utility.yul\":3505:3517   */\n          revert\n            /* \"#utility.yul\":3467:3519   */\n        tag_234:\n            /* \"#utility.yul\":3555:3564   */\n          dup2\n            /* \"#utility.yul\":3542:3565   */\n          calldataload\n            /* \"#utility.yul\":3588:3606   */\n          0xffffffffffffffff\n            /* \"#utility.yul\":3580:3586   */\n          dup2\n            /* \"#utility.yul\":3577:3607   */\n          gt\n            /* \"#utility.yul\":3574:3624   */\n          iszero\n          tag_235\n          jumpi\n            /* \"#utility.yul\":3620:3621   */\n          0x00\n            /* \"#utility.yul\":3617:3618   */\n          dup1\n            /* \"#utility.yul\":3610:3622   */\n          revert\n            /* \"#utility.yul\":3574:3624   */\n        tag_235:\n            /* \"#utility.yul\":3643:3693   */\n          tag_236\n            /* \"#utility.yul\":3685:3692   */\n          dup5\n            /* \"#utility.yul\":3676:3682   */\n          dup3\n            /* \"#utility.yul\":3665:3674   */\n          dup6\n            /* \"#utility.yul\":3661:3683   */\n          add\n            /* \"#utility.yul\":3643:3693   */\n          tag_198\n          jump\t// in\n        tag_236:\n            /* \"#utility.yul\":3633:3693   */\n          swap5\n            /* \"#utility.yul\":3377:3699   */\n          swap4\n          pop\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":3704:3890   */\n        tag_58:\n            /* \"#utility.yul\":3763:3769   */\n          0x00\n            /* \"#utility.yul\":3816:3818   */\n          0x20\n            /* \"#utility.yul\":3804:3813   */\n          dup3\n            /* \"#utility.yul\":3795:3802   */\n          dup5\n            /* \"#utility.yul\":3791:3814   */\n          sub\n            /* \"#utility.yul\":3787:3819   */\n          slt\n            /* \"#utility.yul\":3784:3836   */\n          iszero\n          tag_238\n          jumpi\n            /* \"#utility.yul\":3832:3833   */\n          0x00\n            /* \"#utility.yul\":3829:3830   */\n          dup1\n            /* \"#utility.yul\":3822:3834   */\n          revert\n            /* \"#utility.yul\":3784:3836   */\n        tag_238:\n            /* \"#utility.yul\":3855:3884   */\n          tag_239\n            /* \"#utility.yul\":3874:3883   */\n          dup3\n            /* \"#utility.yul\":3855:3884   */\n          tag_196\n          jump\t// in\n        tag_239:\n            /* \"#utility.yul\":3845:3884   */\n          swap4\n            /* \"#utility.yul\":3704:3890   */\n          swap3\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":4103:4363   */\n        tag_79:\n            /* \"#utility.yul\":4171:4177   */\n          0x00\n            /* \"#utility.yul\":4179:4185   */\n          dup1\n            /* \"#utility.yul\":4232:4234   */\n          0x40\n            /* \"#utility.yul\":4220:4229   */\n          dup4\n            /* \"#utility.yul\":4211:4218   */\n          dup6\n            /* \"#utility.yul\":4207:4230   */\n          sub\n            /* \"#utility.yul\":4203:4235   */\n          slt\n            /* \"#utility.yul\":4200:4252   */\n          iszero\n          tag_242\n          jumpi\n            /* \"#utility.yul\":4248:4249   */\n          0x00\n            /* \"#utility.yul\":4245:4246   */\n          dup1\n            /* \"#utility.yul\":4238:4250   */\n          revert\n            /* \"#utility.yul\":4200:4252   */\n        tag_242:\n            /* \"#utility.yul\":4271:4300   */\n          tag_243\n            /* \"#utility.yul\":4290:4299   */\n          dup4\n            /* \"#utility.yul\":4271:4300   */\n          tag_196\n          jump\t// in\n        tag_243:\n            /* \"#utility.yul\":4261:4300   */\n          swap2\n          pop\n            /* \"#utility.yul\":4319:4357   */\n          tag_244\n            /* \"#utility.yul\":4353:4355   */\n          0x20\n            /* \"#utility.yul\":4342:4351   */\n          dup5\n            /* \"#utility.yul\":4338:4356   */\n          add\n            /* \"#utility.yul\":4319:4357   */\n          tag_196\n          jump\t// in\n        tag_244:\n            /* \"#utility.yul\":4309:4357   */\n          swap1\n          pop\n            /* \"#utility.yul\":4103:4363   */\n          swap3\n          pop\n          swap3\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":4368:4748   */\n        tag_87:\n            /* \"#utility.yul\":4447:4448   */\n          0x01\n            /* \"#utility.yul\":4443:4455   */\n          dup2\n          dup2\n          shr\n          swap1\n            /* \"#utility.yul\":4490:4502   */\n          dup3\n          and\n          dup1\n            /* \"#utility.yul\":4511:4572   */\n          tag_246\n          jumpi\n            /* \"#utility.yul\":4565:4569   */\n          0x7f\n            /* \"#utility.yul\":4557:4563   */\n          dup3\n            /* \"#utility.yul\":4553:4570   */\n          and\n            /* \"#utility.yul\":4543:4570   */\n          swap2\n          pop\n            /* \"#utility.yul\":4511:4572   */\n        tag_246:\n            /* \"#utility.yul\":4618:4620   */\n          0x20\n            /* \"#utility.yul\":4610:4616   */\n          dup3\n            /* \"#utility.yul\":4607:4621   */\n          lt\n            /* \"#utility.yul\":4587:4605   */\n          dup2\n            /* \"#utility.yul\":4584:4622   */\n          sub\n            /* \"#utility.yul\":4581:4742   */\n          tag_247\n          jumpi\n            /* \"#utility.yul\":4664:4674   */\n          0x4e487b71\n            /* \"#utility.yul\":4659:4662   */\n          0xe0\n            /* \"#utility.yul\":4655:4675   */\n          shl\n            /* \"#utility.yul\":4652:4653   */\n          0x00\n            /* \"#utility.yul\":4645:4676   */\n          mstore\n            /* \"#utility.yul\":4699:4703   */\n          0x22\n            /* \"#utility.yul\":4696:4697   */\n          0x04\n            /* \"#utility.yul\":4689:4704   */\n          mstore\n            /* \"#utility.yul\":4727:4731   */\n          0x24\n            /* \"#utility.yul\":4724:4725   */\n          0x00\n            /* \"#utility.yul\":4717:4732   */\n          revert\n            /* \"#utility.yul\":4581:4742   */\n        tag_247:\n          pop\n            /* \"#utility.yul\":4368:4748   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":5233:5751   */\n        tag_200:\n            /* \"#utility.yul\":5335:5337   */\n          0x1f\n            /* \"#utility.yul\":5330:5333   */\n          dup3\n            /* \"#utility.yul\":5327:5338   */\n          gt\n            /* \"#utility.yul\":5324:5745   */\n          iszero\n          tag_152\n          jumpi\n            /* \"#utility.yul\":5371:5376   */\n          dup1\n            /* \"#utility.yul\":5368:5369   */\n          0x00\n            /* \"#utility.yul\":5361:5377   */\n          mstore\n            /* \"#utility.yul\":5415:5419   */\n          0x20\n            /* \"#utility.yul\":5412:5413   */\n          0x00\n            /* \"#utility.yul\":5402:5420   */\n          keccak256\n            /* \"#utility.yul\":5485:5487   */\n          0x1f\n            /* \"#utility.yul\":5473:5483   */\n          dup5\n            /* \"#utility.yul\":5469:5488   */\n          add\n            /* \"#utility.yul\":5466:5467   */\n          0x05\n            /* \"#utility.yul\":5462:5489   */\n          shr\n            /* \"#utility.yul\":5456:5460   */\n          dup2\n            /* \"#utility.yul\":5452:5490   */\n          add\n            /* \"#utility.yul\":5521:5525   */\n          0x20\n            /* \"#utility.yul\":5509:5519   */\n          dup6\n            /* \"#utility.yul\":5506:5526   */\n          lt\n            /* \"#utility.yul\":5503:5550   */\n          iszero\n          tag_252\n          jumpi\n          pop\n            /* \"#utility.yul\":5544:5548   */\n          dup1\n            /* \"#utility.yul\":5503:5550   */\n        tag_252:\n            /* \"#utility.yul\":5599:5601   */\n          0x1f\n            /* \"#utility.yul\":5594:5597   */\n          dup5\n            /* \"#utility.yul\":5590:5602   */\n          add\n            /* \"#utility.yul\":5587:5588   */\n          0x05\n            /* \"#utility.yul\":5583:5603   */\n          shr\n            /* \"#utility.yul\":5577:5581   */\n          dup3\n            /* \"#utility.yul\":5573:5604   */\n          add\n            /* \"#utility.yul\":5563:5604   */\n          swap2\n          pop\n            /* \"#utility.yul\":5654:5735   */\n        tag_253:\n            /* \"#utility.yul\":5672:5674   */\n          dup2\n            /* \"#utility.yul\":5665:5670   */\n          dup2\n            /* \"#utility.yul\":5662:5675   */\n          lt\n            /* \"#utility.yul\":5654:5735   */\n          iszero\n          tag_255\n          jumpi\n            /* \"#utility.yul\":5731:5732   */\n          0x00\n            /* \"#utility.yul\":5717:5733   */\n          dup2\n          sstore\n            /* \"#utility.yul\":5698:5699   */\n          0x01\n            /* \"#utility.yul\":5687:5700   */\n          add\n            /* \"#utility.yul\":5654:5735   */\n          jump(tag_253)\n        tag_255:\n            /* \"#utility.yul\":5658:5661   */\n          pop\n          pop\n            /* \"#utility.yul\":5233:5751   */\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":5927:7226   */\n        tag_116:\n            /* \"#utility.yul\":6053:6056   */\n          dup2\n            /* \"#utility.yul\":6047:6057   */\n          mload\n            /* \"#utility.yul\":6080:6098   */\n          0xffffffffffffffff\n            /* \"#utility.yul\":6072:6078   */\n          dup2\n            /* \"#utility.yul\":6069:6099   */\n          gt\n            /* \"#utility.yul\":6066:6122   */\n          iszero\n          tag_259\n          jumpi\n            /* \"#utility.yul\":6102:6120   */\n          tag_259\n          tag_197\n          jump\t// in\n        tag_259:\n            /* \"#utility.yul\":6131:6228   */\n          tag_260\n            /* \"#utility.yul\":6221:6227   */\n          dup2\n            /* \"#utility.yul\":6181:6219   */\n          tag_261\n            /* \"#utility.yul\":6213:6217   */\n          dup5\n            /* \"#utility.yul\":6207:6218   */\n          sload\n            /* \"#utility.yul\":6181:6219   */\n          tag_87\n          jump\t// in\n        tag_261:\n            /* \"#utility.yul\":6175:6179   */\n          dup5\n            /* \"#utility.yul\":6131:6228   */\n          tag_200\n          jump\t// in\n        tag_260:\n            /* \"#utility.yul\":6277:6281   */\n          0x20\n            /* \"#utility.yul\":6308:6310   */\n          0x1f\n            /* \"#utility.yul\":6297:6311   */\n          dup3\n          gt\n            /* \"#utility.yul\":6325:6326   */\n          0x01\n            /* \"#utility.yul\":6320:6969   */\n          dup2\n          eq\n          tag_263\n          jumpi\n            /* \"#utility.yul\":7013:7014   */\n          0x00\n            /* \"#utility.yul\":7030:7036   */\n          dup4\n            /* \"#utility.yul\":7027:7116   */\n          iszero\n          tag_264\n          jumpi\n          pop\n            /* \"#utility.yul\":7082:7101   */\n          dup5\n          dup3\n          add\n            /* \"#utility.yul\":7076:7102   */\n          mload\n            /* \"#utility.yul\":7027:7116   */\n        tag_264:\n          not(0x00)\n            /* \"#utility.yul\":5884:5885   */\n          0x03\n            /* \"#utility.yul\":5880:5891   */\n          dup6\n          swap1\n          shl\n            /* \"#utility.yul\":5876:5900   */\n          shr\n            /* \"#utility.yul\":5872:5901   */\n          not\n            /* \"#utility.yul\":5862:5902   */\n          and\n            /* \"#utility.yul\":5908:5909   */\n          0x01\n            /* \"#utility.yul\":5904:5915   */\n          dup5\n          swap1\n          shl\n            /* \"#utility.yul\":5859:5916   */\n          or\n            /* \"#utility.yul\":7129:7210   */\n          dup5\n          sstore\n            /* \"#utility.yul\":6290:7220   */\n          jump(tag_255)\n            /* \"#utility.yul\":6320:6969   */\n        tag_263:\n            /* \"#utility.yul\":5180:5181   */\n          0x00\n            /* \"#utility.yul\":5173:5187   */\n          dup5\n          dup2\n          mstore\n            /* \"#utility.yul\":5217:5221   */\n          0x20\n            /* \"#utility.yul\":5204:5222   */\n          dup2\n          keccak256\n          not(0x1f)\n            /* \"#utility.yul\":6356:6376   */\n          dup6\n          and\n          swap2\n            /* \"#utility.yul\":6474:6696   */\n        tag_267:\n            /* \"#utility.yul\":6488:6495   */\n          dup3\n            /* \"#utility.yul\":6485:6486   */\n          dup2\n            /* \"#utility.yul\":6482:6496   */\n          lt\n            /* \"#utility.yul\":6474:6696   */\n          iszero\n          tag_269\n          jumpi\n            /* \"#utility.yul\":6570:6589   */\n          dup8\n          dup6\n          add\n            /* \"#utility.yul\":6564:6590   */\n          mload\n            /* \"#utility.yul\":6549:6591   */\n          dup3\n          sstore\n            /* \"#utility.yul\":6677:6681   */\n          0x20\n            /* \"#utility.yul\":6662:6682   */\n          swap5\n          dup6\n          add\n          swap5\n            /* \"#utility.yul\":6630:6631   */\n          0x01\n            /* \"#utility.yul\":6618:6632   */\n          swap1\n          swap3\n          add\n          swap2\n            /* \"#utility.yul\":6504:6516   */\n          add\n            /* \"#utility.yul\":6474:6696   */\n          jump(tag_267)\n        tag_269:\n            /* \"#utility.yul\":6478:6481   */\n          pop\n            /* \"#utility.yul\":6724:6730   */\n          dup5\n            /* \"#utility.yul\":6715:6722   */\n          dup3\n            /* \"#utility.yul\":6712:6731   */\n          lt\n            /* \"#utility.yul\":6709:6910   */\n          iszero\n          tag_270\n          jumpi\n            /* \"#utility.yul\":6785:6804   */\n          dup7\n          dup5\n          add\n            /* \"#utility.yul\":6779:6805   */\n          mload\n          not(0x00)\n            /* \"#utility.yul\":6868:6869   */\n          0x03\n            /* \"#utility.yul\":6864:6878   */\n          dup8\n          swap1\n          shl\n            /* \"#utility.yul\":6880:6883   */\n          0xf8\n            /* \"#utility.yul\":6860:6884   */\n          and\n            /* \"#utility.yul\":6856:6893   */\n          shr\n            /* \"#utility.yul\":6852:6894   */\n          not\n            /* \"#utility.yul\":6837:6895   */\n          and\n            /* \"#utility.yul\":6822:6896   */\n          dup2\n          sstore\n            /* \"#utility.yul\":6709:6910   */\n        tag_270:\n          pop\n          pop\n          pop\n          pop\n            /* \"#utility.yul\":6956:6957   */\n          0x01\n            /* \"#utility.yul\":6940:6954   */\n          swap1\n          dup2\n          shl\n            /* \"#utility.yul\":6936:6958   */\n          add\n            /* \"#utility.yul\":6923:6959   */\n          swap1\n          sstore\n          pop\n            /* \"#utility.yul\":5927:7226   */\n          jump\t// out\n            /* \"#utility.yul\":7581:7803   */\n        tag_189:\n            /* \"#utility.yul\":7646:7655   */\n          dup1\n          dup3\n          add\n            /* \"#utility.yul\":7667:7677   */\n          dup1\n          dup3\n          gt\n            /* \"#utility.yul\":7664:7797   */\n          iszero\n          tag_92\n          jumpi\n            /* \"#utility.yul\":7719:7729   */\n          0x4e487b71\n            /* \"#utility.yul\":7714:7717   */\n          0xe0\n            /* \"#utility.yul\":7710:7730   */\n          shl\n            /* \"#utility.yul\":7707:7708   */\n          0x00\n            /* \"#utility.yul\":7700:7731   */\n          mstore\n            /* \"#utility.yul\":7754:7758   */\n          0x11\n            /* \"#utility.yul\":7751:7752   */\n          0x04\n            /* \"#utility.yul\":7744:7759   */\n          mstore\n            /* \"#utility.yul\":7782:7786   */\n          0x24\n            /* \"#utility.yul\":7779:7780   */\n          0x00\n            /* \"#utility.yul\":7772:7787   */\n          revert\n\n        auxdata: 0xa2646970667358221220c8852fb7b8bc5bc2e0bb47db09997f4a4be9d29054e1c4beec35e07625033d5f64736f6c634300081a0033\n    }\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1256": {
									"entryPoint": null,
									"id": 1256,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1009,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 1102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_18c40d09d3be00e8c0eafe4f0ffbd938b1824b54b7ac8efe521dcc1be43de891_t_stringliteral_ef82cc74a34211697cb87f1279e66832ee4958064d55b955c515bfec77ba8016__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2bbd014460a2430483f9b71ee977c43e9f2442681a2de6f53458e60831ed4db6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_95a2feb49b1029e40960c5f143071314131a09e8c032ba7ef14c7e8b91d52899__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9e28b3853f378e1414dd8a72fb1b762bb8980cd75a0b9480d2a46c1117cab7a2_t_stringliteral_a93af70c5699d14b835fb4daebde67e376db7da71a152e136af3228c5e7fc499__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2920:10",
										"nodeType": "YulBlock",
										"src": "0:2920:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "112:253:10",
													"nodeType": "YulBlock",
													"src": "112:253:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "158:16:10",
																"nodeType": "YulBlock",
																"src": "158:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "167:1:10",
																					"nodeType": "YulLiteral",
																					"src": "167:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "170:1:10",
																					"nodeType": "YulLiteral",
																					"src": "170:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "160:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "160:6:10"
																			},
																			"nativeSrc": "160:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "160:12:10"
																		},
																		"nativeSrc": "160:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "160:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "133:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "133:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "142:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "142:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "129:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "129:3:10"
																		},
																		"nativeSrc": "129:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "129:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "154:2:10",
																		"nodeType": "YulLiteral",
																		"src": "154:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "125:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "125:3:10"
																},
																"nativeSrc": "125:32:10",
																"nodeType": "YulFunctionCall",
																"src": "125:32:10"
															},
															"nativeSrc": "122:52:10",
															"nodeType": "YulIf",
															"src": "122:52:10"
														},
														{
															"nativeSrc": "183:29:10",
															"nodeType": "YulVariableDeclaration",
															"src": "183:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "202:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "202:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "196:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "196:5:10"
																},
																"nativeSrc": "196:16:10",
																"nodeType": "YulFunctionCall",
																"src": "196:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "187:5:10",
																	"nodeType": "YulTypedName",
																	"src": "187:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "275:16:10",
																"nodeType": "YulBlock",
																"src": "275:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "284:1:10",
																					"nodeType": "YulLiteral",
																					"src": "284:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "287:1:10",
																					"nodeType": "YulLiteral",
																					"src": "287:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "277:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:10"
																			},
																			"nativeSrc": "277:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "277:12:10"
																		},
																		"nativeSrc": "277:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "277:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "234:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "234:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "245:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "245:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "260:3:10",
																										"nodeType": "YulLiteral",
																										"src": "260:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "265:1:10",
																										"nodeType": "YulLiteral",
																										"src": "265:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "256:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "256:3:10"
																								},
																								"nativeSrc": "256:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "256:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "269:1:10",
																								"nodeType": "YulLiteral",
																								"src": "269:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "252:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "252:3:10"
																						},
																						"nativeSrc": "252:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "252:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "241:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "241:3:10"
																				},
																				"nativeSrc": "241:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "241:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "231:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "231:2:10"
																		},
																		"nativeSrc": "231:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "231:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "224:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "224:6:10"
																},
																"nativeSrc": "224:50:10",
																"nodeType": "YulFunctionCall",
																"src": "224:50:10"
															},
															"nativeSrc": "221:70:10",
															"nodeType": "YulIf",
															"src": "221:70:10"
														},
														{
															"nativeSrc": "300:15:10",
															"nodeType": "YulAssignment",
															"src": "300:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "310:5:10",
																"nodeType": "YulIdentifier",
																"src": "310:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "300:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "300:6:10"
																}
															]
														},
														{
															"nativeSrc": "324:35:10",
															"nodeType": "YulAssignment",
															"src": "324:35:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "344:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "344:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "355:2:10",
																				"nodeType": "YulLiteral",
																				"src": "355:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "340:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "340:3:10"
																		},
																		"nativeSrc": "340:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "340:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "334:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "334:5:10"
																},
																"nativeSrc": "334:25:10",
																"nodeType": "YulFunctionCall",
																"src": "334:25:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "324:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "324:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nativeSrc": "14:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "70:9:10",
														"nodeType": "YulTypedName",
														"src": "70:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "81:7:10",
														"nodeType": "YulTypedName",
														"src": "81:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "93:6:10",
														"nodeType": "YulTypedName",
														"src": "93:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "101:6:10",
														"nodeType": "YulTypedName",
														"src": "101:6:10",
														"type": ""
													}
												],
												"src": "14:351:10"
											},
											{
												"body": {
													"nativeSrc": "471:102:10",
													"nodeType": "YulBlock",
													"src": "471:102:10",
													"statements": [
														{
															"nativeSrc": "481:26:10",
															"nodeType": "YulAssignment",
															"src": "481:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "493:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "493:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "504:2:10",
																		"nodeType": "YulLiteral",
																		"src": "504:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "489:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "489:3:10"
																},
																"nativeSrc": "489:18:10",
																"nodeType": "YulFunctionCall",
																"src": "489:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "481:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "481:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "523:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "523:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "538:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "538:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "554:3:10",
																								"nodeType": "YulLiteral",
																								"src": "554:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "559:1:10",
																								"nodeType": "YulLiteral",
																								"src": "559:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "550:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "550:3:10"
																						},
																						"nativeSrc": "550:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "550:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "563:1:10",
																						"nodeType": "YulLiteral",
																						"src": "563:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "546:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "546:3:10"
																				},
																				"nativeSrc": "546:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "546:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "534:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "534:3:10"
																		},
																		"nativeSrc": "534:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "534:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "516:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:10"
																},
																"nativeSrc": "516:51:10",
																"nodeType": "YulFunctionCall",
																"src": "516:51:10"
															},
															"nativeSrc": "516:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "516:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "370:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "440:9:10",
														"nodeType": "YulTypedName",
														"src": "440:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "451:6:10",
														"nodeType": "YulTypedName",
														"src": "451:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "462:4:10",
														"nodeType": "YulTypedName",
														"src": "462:4:10",
														"type": ""
													}
												],
												"src": "370:203:10"
											},
											{
												"body": {
													"nativeSrc": "752:181:10",
													"nodeType": "YulBlock",
													"src": "752:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "769:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "769:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "780:2:10",
																		"nodeType": "YulLiteral",
																		"src": "780:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "762:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "762:6:10"
																},
																"nativeSrc": "762:21:10",
																"nodeType": "YulFunctionCall",
																"src": "762:21:10"
															},
															"nativeSrc": "762:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "762:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "803:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "814:2:10",
																				"nodeType": "YulLiteral",
																				"src": "814:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "799:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "799:3:10"
																		},
																		"nativeSrc": "799:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "799:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "819:2:10",
																		"nodeType": "YulLiteral",
																		"src": "819:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "792:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "792:6:10"
																},
																"nativeSrc": "792:30:10",
																"nodeType": "YulFunctionCall",
																"src": "792:30:10"
															},
															"nativeSrc": "792:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "792:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "842:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "842:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "853:2:10",
																				"nodeType": "YulLiteral",
																				"src": "853:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "838:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "838:3:10"
																		},
																		"nativeSrc": "838:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "838:18:10"
																	},
																	{
																		"hexValue": "496e76616c696420416c676562726120466163746f72792061646472657373",
																		"kind": "string",
																		"nativeSrc": "858:33:10",
																		"nodeType": "YulLiteral",
																		"src": "858:33:10",
																		"type": "",
																		"value": "Invalid Algebra Factory address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "831:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "831:6:10"
																},
																"nativeSrc": "831:61:10",
																"nodeType": "YulFunctionCall",
																"src": "831:61:10"
															},
															"nativeSrc": "831:61:10",
															"nodeType": "YulExpressionStatement",
															"src": "831:61:10"
														},
														{
															"nativeSrc": "901:26:10",
															"nodeType": "YulAssignment",
															"src": "901:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "913:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "913:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "924:2:10",
																		"nodeType": "YulLiteral",
																		"src": "924:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "909:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "909:3:10"
																},
																"nativeSrc": "909:18:10",
																"nodeType": "YulFunctionCall",
																"src": "909:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "901:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "901:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_95a2feb49b1029e40960c5f143071314131a09e8c032ba7ef14c7e8b91d52899__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "578:355:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "729:9:10",
														"nodeType": "YulTypedName",
														"src": "729:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "743:4:10",
														"nodeType": "YulTypedName",
														"src": "743:4:10",
														"type": ""
													}
												],
												"src": "578:355:10"
											},
											{
												"body": {
													"nativeSrc": "1112:227:10",
													"nodeType": "YulBlock",
													"src": "1112:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1129:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1129:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1140:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1140:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1122:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1122:6:10"
																},
																"nativeSrc": "1122:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1122:21:10"
															},
															"nativeSrc": "1122:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "1122:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1163:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1163:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1174:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1174:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1159:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1159:3:10"
																		},
																		"nativeSrc": "1159:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1159:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1179:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1179:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1152:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1152:6:10"
																},
																"nativeSrc": "1152:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1152:30:10"
															},
															"nativeSrc": "1152:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "1152:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1202:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1202:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1213:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1213:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1198:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1198:3:10"
																		},
																		"nativeSrc": "1198:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1198:18:10"
																	},
																	{
																		"hexValue": "4d696e7420616d6f756e74206d7573742062652067726561746572207468616e",
																		"kind": "string",
																		"nativeSrc": "1218:34:10",
																		"nodeType": "YulLiteral",
																		"src": "1218:34:10",
																		"type": "",
																		"value": "Mint amount must be greater than"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1191:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1191:6:10"
																},
																"nativeSrc": "1191:62:10",
																"nodeType": "YulFunctionCall",
																"src": "1191:62:10"
															},
															"nativeSrc": "1191:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "1191:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1273:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1273:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1284:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1284:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1269:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1269:3:10"
																		},
																		"nativeSrc": "1269:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1269:18:10"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "1289:7:10",
																		"nodeType": "YulLiteral",
																		"src": "1289:7:10",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1262:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1262:6:10"
																},
																"nativeSrc": "1262:35:10",
																"nodeType": "YulFunctionCall",
																"src": "1262:35:10"
															},
															"nativeSrc": "1262:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "1262:35:10"
														},
														{
															"nativeSrc": "1306:27:10",
															"nodeType": "YulAssignment",
															"src": "1306:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1318:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1318:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1329:3:10",
																		"nodeType": "YulLiteral",
																		"src": "1329:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1314:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1314:3:10"
																},
																"nativeSrc": "1314:19:10",
																"nodeType": "YulFunctionCall",
																"src": "1314:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1306:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1306:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2bbd014460a2430483f9b71ee977c43e9f2442681a2de6f53458e60831ed4db6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "938:401:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1089:9:10",
														"nodeType": "YulTypedName",
														"src": "1089:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1103:4:10",
														"nodeType": "YulTypedName",
														"src": "1103:4:10",
														"type": ""
													}
												],
												"src": "938:401:10"
											},
											{
												"body": {
													"nativeSrc": "1619:279:10",
													"nodeType": "YulBlock",
													"src": "1619:279:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1636:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1636:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1647:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1647:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1629:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1629:6:10"
																},
																"nativeSrc": "1629:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1629:21:10"
															},
															"nativeSrc": "1629:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "1629:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1670:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1670:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1681:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1681:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1666:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1666:3:10"
																		},
																		"nativeSrc": "1666:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1666:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1686:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1686:1:10",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1659:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1659:6:10"
																},
																"nativeSrc": "1659:29:10",
																"nodeType": "YulFunctionCall",
																"src": "1659:29:10"
															},
															"nativeSrc": "1659:29:10",
															"nodeType": "YulExpressionStatement",
															"src": "1659:29:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1708:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1708:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1719:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1719:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1704:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:10"
																		},
																		"nativeSrc": "1704:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1704:18:10"
																	},
																	{
																		"hexValue": "546f6b656e41",
																		"kind": "string",
																		"nativeSrc": "1724:8:10",
																		"nodeType": "YulLiteral",
																		"src": "1724:8:10",
																		"type": "",
																		"value": "TokenA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1697:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1697:6:10"
																},
																"nativeSrc": "1697:36:10",
																"nodeType": "YulFunctionCall",
																"src": "1697:36:10"
															},
															"nativeSrc": "1697:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "1697:36:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1753:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1753:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1764:4:10",
																				"nodeType": "YulLiteral",
																				"src": "1764:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1749:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1749:3:10"
																		},
																		"nativeSrc": "1749:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1749:20:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1771:3:10",
																		"nodeType": "YulLiteral",
																		"src": "1771:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1742:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1742:6:10"
																},
																"nativeSrc": "1742:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1742:33:10"
															},
															"nativeSrc": "1742:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1742:33:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1795:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1795:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1806:3:10",
																				"nodeType": "YulLiteral",
																				"src": "1806:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1791:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1791:3:10"
																		},
																		"nativeSrc": "1791:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1791:19:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1812:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1812:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1784:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:10"
																},
																"nativeSrc": "1784:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1784:30:10"
															},
															"nativeSrc": "1784:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "1784:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1834:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1834:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1845:3:10",
																				"nodeType": "YulLiteral",
																				"src": "1845:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1830:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:10"
																		},
																		"nativeSrc": "1830:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1830:19:10"
																	},
																	{
																		"hexValue": "5441",
																		"kind": "string",
																		"nativeSrc": "1851:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1851:4:10",
																		"type": "",
																		"value": "TA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1823:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:10"
																},
																"nativeSrc": "1823:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1823:33:10"
															},
															"nativeSrc": "1823:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1823:33:10"
														},
														{
															"nativeSrc": "1865:27:10",
															"nodeType": "YulAssignment",
															"src": "1865:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1877:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1877:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1888:3:10",
																		"nodeType": "YulLiteral",
																		"src": "1888:3:10",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1873:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1873:3:10"
																},
																"nativeSrc": "1873:19:10",
																"nodeType": "YulFunctionCall",
																"src": "1873:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1865:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1865:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_18c40d09d3be00e8c0eafe4f0ffbd938b1824b54b7ac8efe521dcc1be43de891_t_stringliteral_ef82cc74a34211697cb87f1279e66832ee4958064d55b955c515bfec77ba8016__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1344:554:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1596:9:10",
														"nodeType": "YulTypedName",
														"src": "1596:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1610:4:10",
														"nodeType": "YulTypedName",
														"src": "1610:4:10",
														"type": ""
													}
												],
												"src": "1344:554:10"
											},
											{
												"body": {
													"nativeSrc": "2032:145:10",
													"nodeType": "YulBlock",
													"src": "2032:145:10",
													"statements": [
														{
															"nativeSrc": "2042:26:10",
															"nodeType": "YulAssignment",
															"src": "2042:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2054:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2054:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2065:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2065:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2050:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2050:3:10"
																},
																"nativeSrc": "2050:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2050:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2042:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2042:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2084:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2084:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2099:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2099:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2115:3:10",
																								"nodeType": "YulLiteral",
																								"src": "2115:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2120:1:10",
																								"nodeType": "YulLiteral",
																								"src": "2120:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2111:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "2111:3:10"
																						},
																						"nativeSrc": "2111:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "2111:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2124:1:10",
																						"nodeType": "YulLiteral",
																						"src": "2124:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2107:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2107:3:10"
																				},
																				"nativeSrc": "2107:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2107:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2095:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2095:3:10"
																		},
																		"nativeSrc": "2095:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2095:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2077:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:10"
																},
																"nativeSrc": "2077:51:10",
																"nodeType": "YulFunctionCall",
																"src": "2077:51:10"
															},
															"nativeSrc": "2077:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "2077:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2148:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2148:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2159:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2159:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2144:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2144:3:10"
																		},
																		"nativeSrc": "2144:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2144:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2164:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2164:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2137:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2137:6:10"
																},
																"nativeSrc": "2137:34:10",
																"nodeType": "YulFunctionCall",
																"src": "2137:34:10"
															},
															"nativeSrc": "2137:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "2137:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "1903:274:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1993:9:10",
														"nodeType": "YulTypedName",
														"src": "1993:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2004:6:10",
														"nodeType": "YulTypedName",
														"src": "2004:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2012:6:10",
														"nodeType": "YulTypedName",
														"src": "2012:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2023:4:10",
														"nodeType": "YulTypedName",
														"src": "2023:4:10",
														"type": ""
													}
												],
												"src": "1903:274:10"
											},
											{
												"body": {
													"nativeSrc": "2283:76:10",
													"nodeType": "YulBlock",
													"src": "2283:76:10",
													"statements": [
														{
															"nativeSrc": "2293:26:10",
															"nodeType": "YulAssignment",
															"src": "2293:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2305:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2305:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2316:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2316:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2301:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2301:3:10"
																},
																"nativeSrc": "2301:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2301:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2293:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2293:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2335:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2335:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2346:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2346:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2328:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2328:6:10"
																},
																"nativeSrc": "2328:25:10",
																"nodeType": "YulFunctionCall",
																"src": "2328:25:10"
															},
															"nativeSrc": "2328:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "2328:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2182:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2252:9:10",
														"nodeType": "YulTypedName",
														"src": "2252:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2263:6:10",
														"nodeType": "YulTypedName",
														"src": "2263:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2274:4:10",
														"nodeType": "YulTypedName",
														"src": "2274:4:10",
														"type": ""
													}
												],
												"src": "2182:177:10"
											},
											{
												"body": {
													"nativeSrc": "2639:279:10",
													"nodeType": "YulBlock",
													"src": "2639:279:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2656:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2656:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2667:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2667:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2649:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2649:6:10"
																},
																"nativeSrc": "2649:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2649:21:10"
															},
															"nativeSrc": "2649:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "2649:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2690:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2690:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2701:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2701:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2686:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2686:3:10"
																		},
																		"nativeSrc": "2686:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2686:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2706:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2706:1:10",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2679:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2679:6:10"
																},
																"nativeSrc": "2679:29:10",
																"nodeType": "YulFunctionCall",
																"src": "2679:29:10"
															},
															"nativeSrc": "2679:29:10",
															"nodeType": "YulExpressionStatement",
															"src": "2679:29:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2728:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2728:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2739:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2739:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2724:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2724:3:10"
																		},
																		"nativeSrc": "2724:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2724:18:10"
																	},
																	{
																		"hexValue": "546f6b656e42",
																		"kind": "string",
																		"nativeSrc": "2744:8:10",
																		"nodeType": "YulLiteral",
																		"src": "2744:8:10",
																		"type": "",
																		"value": "TokenB"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2717:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2717:6:10"
																},
																"nativeSrc": "2717:36:10",
																"nodeType": "YulFunctionCall",
																"src": "2717:36:10"
															},
															"nativeSrc": "2717:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "2717:36:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2773:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2773:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2784:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2784:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2769:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2769:3:10"
																		},
																		"nativeSrc": "2769:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2769:20:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2791:3:10",
																		"nodeType": "YulLiteral",
																		"src": "2791:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2762:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:10"
																},
																"nativeSrc": "2762:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2762:33:10"
															},
															"nativeSrc": "2762:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2762:33:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2815:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2815:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2826:3:10",
																				"nodeType": "YulLiteral",
																				"src": "2826:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2811:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2811:3:10"
																		},
																		"nativeSrc": "2811:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2811:19:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2832:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2832:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2804:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2804:6:10"
																},
																"nativeSrc": "2804:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2804:30:10"
															},
															"nativeSrc": "2804:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "2804:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2854:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2854:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2865:3:10",
																				"nodeType": "YulLiteral",
																				"src": "2865:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2850:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2850:3:10"
																		},
																		"nativeSrc": "2850:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2850:19:10"
																	},
																	{
																		"hexValue": "5442",
																		"kind": "string",
																		"nativeSrc": "2871:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2871:4:10",
																		"type": "",
																		"value": "TB"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2843:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2843:6:10"
																},
																"nativeSrc": "2843:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2843:33:10"
															},
															"nativeSrc": "2843:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2843:33:10"
														},
														{
															"nativeSrc": "2885:27:10",
															"nodeType": "YulAssignment",
															"src": "2885:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2897:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2897:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2908:3:10",
																		"nodeType": "YulLiteral",
																		"src": "2908:3:10",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2893:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2893:3:10"
																},
																"nativeSrc": "2893:19:10",
																"nodeType": "YulFunctionCall",
																"src": "2893:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2885:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2885:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9e28b3853f378e1414dd8a72fb1b762bb8980cd75a0b9480d2a46c1117cab7a2_t_stringliteral_a93af70c5699d14b835fb4daebde67e376db7da71a152e136af3228c5e7fc499__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2364:554:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2616:9:10",
														"nodeType": "YulTypedName",
														"src": "2616:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2630:4:10",
														"nodeType": "YulTypedName",
														"src": "2630:4:10",
														"type": ""
													}
												],
												"src": "2364:554:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_95a2feb49b1029e40960c5f143071314131a09e8c032ba7ef14c7e8b91d52899__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Invalid Algebra Factory address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2bbd014460a2430483f9b71ee977c43e9f2442681a2de6f53458e60831ed4db6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Mint amount must be greater than\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_18c40d09d3be00e8c0eafe4f0ffbd938b1824b54b7ac8efe521dcc1be43de891_t_stringliteral_ef82cc74a34211697cb87f1279e66832ee4958064d55b955c515bfec77ba8016__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 6)\n        mstore(add(headStart, 96), \"TokenA\")\n        mstore(add(headStart, 0x20), 128)\n        mstore(add(headStart, 128), 2)\n        mstore(add(headStart, 160), \"TA\")\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_9e28b3853f378e1414dd8a72fb1b762bb8980cd75a0b9480d2a46c1117cab7a2_t_stringliteral_a93af70c5699d14b835fb4daebde67e376db7da71a152e136af3228c5e7fc499__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 6)\n        mstore(add(headStart, 96), \"TokenB\")\n        mstore(add(headStart, 0x20), 128)\n        mstore(add(headStart, 128), 2)\n        mstore(add(headStart, 160), \"TB\")\n        tail := add(headStart, 192)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161229538038061229583398101604081905261002f9161044e565b338061005657604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61005f816103f1565b506001600160a01b0382166100b65760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420416c676562726120466163746f7279206164647265737300604482015260640161004d565b600081116101145760405162461bcd60e51b815260206004820152602560248201527f4d696e7420616d6f756e74206d7573742062652067726561746572207468616e604482015264207a65726f60d81b606482015260840161004d565b600180546001600160a01b0319166001600160a01b03841617905560405160009061013e90610441565b604051809103906000f08015801561015a573d6000803e3d6000fd5b506040805163266c45bb60e11b815260048101919091526006604482015265546f6b656e4160d01b6064820152608060248201526002608482015261544160f01b60a48201529091506001600160a01b03821690634cd88b769060c401600060405180830381600087803b1580156101d157600080fd5b505af11580156101e5573d6000803e3d6000fd5b50506040516340c10f1960e01b8152336004820152602481018590526001600160a01b03841692506340c10f199150604401600060405180830381600087803b15801561023157600080fd5b505af1158015610245573d6000803e3d6000fd5b5050600380546001600160a01b0319166001600160a01b0385169081179091556040518581523393509091506000805160206122758339815191529060200160405180910390a3600060405161029a90610441565b604051809103906000f0801580156102b6573d6000803e3d6000fd5b506040805163266c45bb60e11b8152600481019190915260066044820152652a37b5b2b72160d11b60648201526080602482015260026084820152612a2160f11b60a48201529091506001600160a01b03821690634cd88b769060c401600060405180830381600087803b15801561032d57600080fd5b505af1158015610341573d6000803e3d6000fd5b50506040516340c10f1960e01b8152336004820152602481018690526001600160a01b03841692506340c10f199150604401600060405180830381600087803b15801561038d57600080fd5b505af11580156103a1573d6000803e3d6000fd5b5050600480546001600160a01b0319166001600160a01b0385169081179091556040518681523393509091506000805160206122758339815191529060200160405180910390a350505050610488565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610ee18061139483390190565b6000806040838503121561046157600080fd5b82516001600160a01b038116811461047857600080fd5b6020939093015192949293505050565b610efd806104976000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063a7b64b0411610066578063a7b64b0414610185578063b62d2af914610198578063d8ed2241146101ab578063f2fde38b146101be57600080fd5b80638da5cb5b146101595780639a06b1131461016a5780639cd441da1461017257600080fd5b80630fc63d10146100d45780631a7c2131146101035780634f16fa53146101165780635f64b55b1461012b5780636fc98ee11461013e578063715018a614610151575b600080fd5b6003546100e7906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6002546100e7906001600160a01b031681565b610129610124366004610d79565b6101d1565b005b6004546100e7906001600160a01b031681565b61012961014c366004610d79565b61038a565b610129610524565b6000546001600160a01b03166100e7565b610129610538565b610129610180366004610dba565b61078d565b6001546100e7906001600160a01b031681565b6101296101a6366004610ddc565b610b0f565b6100e76101b9366004610e00565b610b8f565b6101296101cc366004610ddc565b610ca9565b6101d9610ce7565b6003546001600160a01b038481169116148061020257506004546001600160a01b038481169116145b6102275760405162461bcd60e51b815260040161021e90610e39565b60405180910390fd5b6001600160a01b0382166102745760405162461bcd60e51b8152602060048201526014602482015273496e76616c696420706f6f6c206164647265737360601b604482015260640161021e565b600081116102c45760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161021e565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610313573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103379190610e68565b50816001600160a01b0316836001600160a01b03167f32d8ccb17edf05070e5a75f56f66402f1e3071f6104787c3ec400afbb1a0d6d18360405161037d91815260200190565b60405180910390a3505050565b610392610ce7565b6003546001600160a01b03848116911614806103bb57506004546001600160a01b038481169116145b6103d75760405162461bcd60e51b815260040161021e90610e39565b6001600160a01b03821661042d5760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420726563697069656e74206164647265737300000000000000604482015260640161021e565b6000811161047d5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161021e565b6040516340c10f1960e01b81526001600160a01b038381166004830152602482018390528416906340c10f1990604401600060405180830381600087803b1580156104c757600080fd5b505af11580156104db573d6000803e3d6000fd5b50505050816001600160a01b0316836001600160a01b03167fbf67ec129007be07f346d9d2933215293a6612ce7ff17d6b479a5a5cae72890c8360405161037d91815260200190565b61052c610ce7565b6105366000610d14565b565b610540610ce7565b600080516020610ea88339815191526040516105869060208082526016908201527529ba30b93a34b733903837b7b61031b932b0ba34b7b760511b604082015260600190565b60405180910390a16003546001600160a01b0316158015906105b257506004546001600160a01b031615155b6105fe5760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e73206d75737420626520696e697469616c697a6564000000000000604482015260640161021e565b6004546003546001600160a01b039182169116036106595760405162461bcd60e51b8152602060048201526018602482015277151bdad95b9cc81b5d5cdd08189948191a5999995c995b9d60421b604482015260640161021e565b6001546003546004805460405163e343361560e01b81526001600160a01b039384169281019290925282166024820152911690819063e3433615906044016020604051808303816000875af11580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da9190610e8a565b600280546001600160a01b0319166001600160a01b0392909216918217905561073d5760405162461bcd60e51b815260206004820152601560248201527411985a5b1959081d1bc818dc99585d19481c1bdbdb605a1b604482015260640161021e565b6004546003546002546040516001600160a01b039182168152928116929116907f9c5d829b9b23efc461f9aeef91979ec04bb903feb3bee4f26d22114abfc7335b9060200160405180910390a350565b610795610ce7565b600080516020610ea88339815191526040516107e2906020808252601b908201527f5374617274696e67206c6971756964697479206164646974696f6e0000000000604082015260600190565b60405180910390a16002546001600160a01b03166108345760405162461bcd60e51b815260206004820152600f60248201526e139bc81c1bdbdb0818dc99585d1959608a1b604482015260640161021e565b6000821180156108445750600081115b6108a05760405162461bcd60e51b815260206004820152602760248201527f546f6b656e20616d6f756e7473206d7573742062652067726561746572207468604482015266616e207a65726f60c81b606482015260840161021e565b60035460025460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101859052600092919091169063a9059cbb906044016020604051808303816000875af11580156108fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091e9190610e68565b9050806109665760405162461bcd60e51b8152602060048201526016602482015275151bdad95b90481d1c985b9cd9995c8819985a5b195960521b604482015260640161021e565b600080516020610ea88339815191526040516109a890602080825260129082015271151bdad95b90481d1c985b9cd9995c9c995960721b604082015260600190565b60405180910390a16004805460025460405163a9059cbb60e01b81526001600160a01b03918216938101939093526024830185905260009291169063a9059cbb906044016020604051808303816000875af1158015610a0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2f9190610e68565b905080610a775760405162461bcd60e51b8152602060048201526016602482015275151bdad95b90881d1c985b9cd9995c8819985a5b195960521b604482015260640161021e565b600080516020610ea8833981519152604051610ab990602080825260129082015271151bdad95b90881d1c985b9cd9995c9c995960721b604082015260600190565b60405180910390a160025460408051868152602081018690526001600160a01b03909216917fac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee45910160405180910390a250505050565b610b17610ce7565b6001600160a01b038116610b6d5760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420416c676562726120466163746f7279206164647265737300604482015260640161021e565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b03831615801590610bb157506001600160a01b03821615155b610bcd5760405162461bcd60e51b815260040161021e90610e39565b816001600160a01b0316836001600160a01b031603610c295760405162461bcd60e51b8152602060048201526018602482015277151bdad95b9cc81b5d5cdd08189948191a5999995c995b9d60421b604482015260640161021e565b60015460405163d8ed224160e01b81526001600160a01b038581166004830152848116602483015290911690819063d8ed224190604401602060405180830381865afa158015610c7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca19190610e8a565b949350505050565b610cb1610ce7565b6001600160a01b038116610cdb57604051631e4fbdf760e01b81526000600482015260240161021e565b610ce481610d14565b50565b6000546001600160a01b031633146105365760405163118cdaa760e01b815233600482015260240161021e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114610ce457600080fd5b600080600060608486031215610d8e57600080fd5b8335610d9981610d64565b92506020840135610da981610d64565b929592945050506040919091013590565b60008060408385031215610dcd57600080fd5b50508035926020909101359150565b600060208284031215610dee57600080fd5b8135610df981610d64565b9392505050565b60008060408385031215610e1357600080fd5b8235610e1e81610d64565b91506020830135610e2e81610d64565b809150509250929050565b602080825260159082015274496e76616c696420746f6b656e206164647265737360581b604082015260600190565b600060208284031215610e7a57600080fd5b81518015158114610df957600080fd5b600060208284031215610e9c57600080fd5b8151610df981610d6456fe94ebca8d29d278a0288a52a710c11e928307b6f2e15fbaf4508cc4ceb3d21f8ba2646970667358221220f9f08f065c5bcc82d73f5b75cc4a17017f151a20087aa5e56ef2dd20ff13a73d64736f6c634300081a0033608060405234801561001057600080fd5b506040805160208082018352600080835283519182019093529182523391600361003a8382610178565b5060046100478282610178565b5050506001600160a01b03811661007857604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61008181610087565b50610236565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061010357607f821691505b60208210810361012357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561017357806000526020600020601f840160051c810160208510156101505750805b601f840160051c820191505b81811015610170576000815560010161015c565b50505b505050565b81516001600160401b03811115610191576101916100d9565b6101a58161019f84546100ef565b84610129565b6020601f8211600181146101d957600083156101c15750848201515b600019600385901b1c1916600184901b178455610170565b600084815260208120601f198516915b8281101561020957878501518255602094850194600190920191016101e9565b50848210156102275786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b610c9c806102456000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb14610209578063b90497e01461021c578063dd62ed3e14610224578063f2fde38b1461025d57600080fd5b806370a08231146101b5578063715018a6146101de5780638da5cb5b146101e657806395d89b411461020157600080fd5b8063313ce567116100d3578063313ce5671461016b57806340c10f191461017a5780634cd88b761461018f57806358e792ee146101a257600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610270565b60405161011a919061088d565b60405180910390f35b6101366101313660046108f7565b610302565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610921565b61031c565b6040516012815260200161011a565b61018d6101883660046108f7565b610340565b005b61018d61019d366004610a03565b610356565b61018d6101b0366004610a6c565b6103d9565b61014a6101c3366004610aa9565b6001600160a01b031660009081526020819052604090205490565b61018d6103ed565b6005546040516001600160a01b03909116815260200161011a565b61010d610401565b6101366102173660046108f7565b610410565b61010d61041e565b61014a610232366004610acb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018d61026b366004610aa9565b6104ac565b60606006805461027f90610afe565b80601f01602080910402602001604051908101604052809291908181526020018280546102ab90610afe565b80156102f85780601f106102cd576101008083540402835291602001916102f8565b820191906000526020600020905b8154815290600101906020018083116102db57829003601f168201915b5050505050905090565b6000336103108185856104ea565b60019150505b92915050565b60003361032a8582856104fc565b61033585858561057a565b506001949350505050565b6103486105d9565b6103528282610606565b5050565b60085460ff16156103ae5760405162461bcd60e51b815260206004820152601960248201527f546f6b656e20616c726561647920696e697469616c697a65640000000000000060448201526064015b60405180910390fd5b60066103ba8382610b86565b5060076103c78282610b86565b50506008805460ff1916600117905550565b6103e16105d9565b60096103528282610b86565b6103f56105d9565b6103ff600061063c565b565b60606007805461027f90610afe565b60003361031081858561057a565b6009805461042b90610afe565b80601f016020809104026020016040519081016040528092919081815260200182805461045790610afe565b80156104a45780601f10610479576101008083540402835291602001916104a4565b820191906000526020600020905b81548152906001019060200180831161048757829003601f168201915b505050505081565b6104b46105d9565b6001600160a01b0381166104de57604051631e4fbdf760e01b8152600060048201526024016103a5565b6104e78161063c565b50565b6104f7838383600161068e565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610574578181101561056557604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103a5565b6105748484848403600061068e565b50505050565b6001600160a01b0383166105a457604051634b637e8f60e11b8152600060048201526024016103a5565b6001600160a01b0382166105ce5760405163ec442f0560e01b8152600060048201526024016103a5565b6104f7838383610763565b6005546001600160a01b031633146103ff5760405163118cdaa760e01b81523360048201526024016103a5565b6001600160a01b0382166106305760405163ec442f0560e01b8152600060048201526024016103a5565b61035260008383610763565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166106b85760405163e602df0560e01b8152600060048201526024016103a5565b6001600160a01b0383166106e257604051634a1406b160e11b8152600060048201526024016103a5565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561057457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161075591815260200190565b60405180910390a350505050565b6001600160a01b03831661078e5780600260008282546107839190610c45565b909155506108009050565b6001600160a01b038316600090815260208190526040902054818110156107e15760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103a5565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661081c5760028054829003905561083b565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161088091815260200190565b60405180910390a3505050565b602081526000825180602084015260005b818110156108bb576020818601810151604086840101520161089e565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146108f257600080fd5b919050565b6000806040838503121561090a57600080fd5b610913836108db565b946020939093013593505050565b60008060006060848603121561093657600080fd5b61093f846108db565b925061094d602085016108db565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261098557600080fd5b813567ffffffffffffffff81111561099f5761099f61095e565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156109ce576109ce61095e565b6040528181528382016020018510156109e657600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610a1657600080fd5b823567ffffffffffffffff811115610a2d57600080fd5b610a3985828601610974565b925050602083013567ffffffffffffffff811115610a5657600080fd5b610a6285828601610974565b9150509250929050565b600060208284031215610a7e57600080fd5b813567ffffffffffffffff811115610a9557600080fd5b610aa184828501610974565b949350505050565b600060208284031215610abb57600080fd5b610ac4826108db565b9392505050565b60008060408385031215610ade57600080fd5b610ae7836108db565b9150610af5602084016108db565b90509250929050565b600181811c90821680610b1257607f821691505b602082108103610b3257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104f757806000526020600020601f840160051c81016020851015610b5f5750805b601f840160051c820191505b81811015610b7f5760008155600101610b6b565b5050505050565b815167ffffffffffffffff811115610ba057610ba061095e565b610bb481610bae8454610afe565b84610b38565b6020601f821160018114610be85760008315610bd05750848201515b600019600385901b1c1916600184901b178455610b7f565b600084815260208120601f198516915b82811015610c185787850151825560209485019460019092019101610bf8565b5084821015610c365786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561031657634e487b7160e01b600052601160045260246000fdfea2646970667358221220c8852fb7b8bc5bc2e0bb47db09997f4a4be9d29054e1c4beec35e07625033d5f64736f6c634300081a0033bf67ec129007be07f346d9d2933215293a6612ce7ff17d6b479a5a5cae72890c",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2295 CODESIZE SUB DUP1 PUSH2 0x2295 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x44E JUMP JUMPDEST CALLER DUP1 PUSH2 0x56 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5F DUP2 PUSH2 0x3F1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420416C676562726120466163746F7279206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x114 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420616D6F756E74206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x13E SWAP1 PUSH2 0x441 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x15A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x266C45BB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x6 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x546F6B656E41 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x84 DUP3 ADD MSTORE PUSH2 0x5441 PUSH1 0xF0 SHL PUSH1 0xA4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x4CD88B76 SWAP1 PUSH1 0xC4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 POP PUSH4 0x40C10F19 SWAP2 POP PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x245 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE CALLER SWAP4 POP SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2275 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x29A SWAP1 PUSH2 0x441 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x2B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x266C45BB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x6 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x2A37B5B2B721 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x84 DUP3 ADD MSTORE PUSH2 0x2A21 PUSH1 0xF1 SHL PUSH1 0xA4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x4CD88B76 SWAP1 PUSH1 0xC4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x341 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 POP PUSH4 0x40C10F19 SWAP2 POP PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE CALLER SWAP4 POP SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2275 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH2 0x488 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xEE1 DUP1 PUSH2 0x1394 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH2 0xEFD DUP1 PUSH2 0x497 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA7B64B04 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA7B64B04 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0xB62D2AF9 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xD8ED2241 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x9A06B113 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFC63D10 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x1A7C2131 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x4F16FA53 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x6FC98EE1 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x151 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x1D1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST PUSH2 0x129 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE7 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x538 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xDDC JUMP JUMPDEST PUSH2 0xB0F JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x129 PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0xDDC JUMP JUMPDEST PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x202 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420706F6F6C2061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x313 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0xE68 JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x32D8CCB17EDF05070E5A75F56F66402F1E3071F6104787C3EC400AFBB1A0D6D1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x392 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x3BB JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x42D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x47D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xBF67EC129007BE07F346D9D2933215293A6612CE7FF17D6B479A5A5CAE72890C DUP4 PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x52C PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x536 PUSH1 0x0 PUSH2 0xD14 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x540 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x586 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x29BA30B93A34B733903837B7B61031B932B0BA34B7B7 PUSH1 0x51 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x5B2 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST PUSH2 0x5FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E73206D75737420626520696E697469616C697A6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND SUB PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x151BDAD95B9CC81B5D5CDD08189948191A5999995C995B9D PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE3433615 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 DUP2 SWAP1 PUSH4 0xE3433615 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6DA SWAP2 SWAP1 PUSH2 0xE8A JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x11985A5B1959081D1BC818DC99585D19481C1BDBDB PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP3 DUP2 AND SWAP3 SWAP2 AND SWAP1 PUSH32 0x9C5D829B9B23EFC461F9AEEF91979EC04BB903FEB3BEE4F26D22114ABFC7335B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x795 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x7E2 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x5374617274696E67206C6971756964697479206164646974696F6E0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x834 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BC81C1BDBDB0818DC99585D1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x844 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616D6F756E7473206D7573742062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616E207A65726F PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91E SWAP2 SWAP1 PUSH2 0xE68 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x966 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151BDAD95B90481D1C985B9CD9995C8819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x9A8 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x151BDAD95B90481D1C985B9CD9995C9C9959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x4 DUP1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP3 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2F SWAP2 SWAP1 PUSH2 0xE68 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xA77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151BDAD95B90881D1C985B9CD9995C8819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0xAB9 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x151BDAD95B90881D1C985B9CD9995C9C9959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH32 0xAC1D76749E5447B7B16F5AB61447E1BD502F3BB4807AF3B28E620D1700A6EE45 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0xB17 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420416C676562726120466163746F7279206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xBB1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0xBCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E SWAP1 PUSH2 0xE39 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x151BDAD95B9CC81B5D5CDD08189948191A5999995C995B9D PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD8ED2241 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 DUP2 SWAP1 PUSH4 0xD8ED2241 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0xE8A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xCB1 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCDB JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x21E JUMP JUMPDEST PUSH2 0xCE4 DUP2 PUSH2 0xD14 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x536 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xD99 DUP2 PUSH2 0xD64 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xDA9 DUP2 PUSH2 0xD64 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDF9 DUP2 PUSH2 0xD64 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xE1E DUP2 PUSH2 0xD64 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xE2E DUP2 PUSH2 0xD64 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x496E76616C696420746F6B656E2061646472657373 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDF9 DUP2 PUSH2 0xD64 JUMP INVALID SWAP5 0xEB 0xCA DUP14 0x29 0xD2 PUSH25 0xA0288A52A710C11E928307B6F2E15FBAF4508CC4CEB3D21F8B LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 CREATE DUP16 MOD TLOAD JUMPDEST 0xCC DUP3 0xD7 EXTCODEHASH JUMPDEST PUSH22 0xCC4A17017F151A20087AA5E56EF2DD20FF13A73D6473 PUSH16 0x6C634300081A00336080604052348015 PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE DUP4 MLOAD SWAP2 DUP3 ADD SWAP1 SWAP4 MSTORE SWAP2 DUP3 MSTORE CALLER SWAP2 PUSH1 0x3 PUSH2 0x3A DUP4 DUP3 PUSH2 0x178 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x47 DUP3 DUP3 PUSH2 0x178 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x78 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x81 DUP2 PUSH2 0x87 JUMP JUMPDEST POP PUSH2 0x236 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x103 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x123 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x173 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x150 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x15C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x191 JUMPI PUSH2 0x191 PUSH2 0xD9 JUMP JUMPDEST PUSH2 0x1A5 DUP2 PUSH2 0x19F DUP5 SLOAD PUSH2 0xEF JUMP JUMPDEST DUP5 PUSH2 0x129 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x1C1 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x170 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x209 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1E9 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x227 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xC9C DUP1 PUSH2 0x245 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xB90497E0 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x4CD88B76 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x58E792EE EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x88D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F7 JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x921 JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x18D PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F7 JUMP JUMPDEST PUSH2 0x340 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18D PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x356 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x401 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F7 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x41E JUMP JUMPDEST PUSH2 0x14A PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0xACB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0xAA9 JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x27F SWAP1 PUSH2 0xAFE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0xAFE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x310 DUP2 DUP6 DUP6 PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x32A DUP6 DUP3 DUP6 PUSH2 0x4FC JUMP JUMPDEST PUSH2 0x335 DUP6 DUP6 DUP6 PUSH2 0x57A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x348 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x352 DUP3 DUP3 PUSH2 0x606 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616C726561647920696E697469616C697A656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH2 0x3BA DUP4 DUP3 PUSH2 0xB86 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0x3C7 DUP3 DUP3 PUSH2 0xB86 JUMP JUMPDEST POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x3E1 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x352 DUP3 DUP3 PUSH2 0xB86 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x3FF PUSH1 0x0 PUSH2 0x63C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x27F SWAP1 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x310 DUP2 DUP6 DUP6 PUSH2 0x57A JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x42B SWAP1 PUSH2 0xAFE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x457 SWAP1 PUSH2 0xAFE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x479 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x487 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x4B4 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4DE JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x4E7 DUP2 PUSH2 0x63C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4F7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x68E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x574 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x565 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x574 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x68E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5CE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x4F7 DUP4 DUP4 DUP4 PUSH2 0x763 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x630 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x352 PUSH1 0x0 DUP4 DUP4 PUSH2 0x763 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6B8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6E2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x574 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x755 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x78E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x783 SWAP2 SWAP1 PUSH2 0xC45 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x800 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x7E1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x81C JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x83B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x880 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8BB JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x89E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x90A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x913 DUP4 PUSH2 0x8DB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x936 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93F DUP5 PUSH2 0x8DB JUMP JUMPDEST SWAP3 POP PUSH2 0x94D PUSH1 0x20 DUP6 ADD PUSH2 0x8DB JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x985 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x99F JUMPI PUSH2 0x99F PUSH2 0x95E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x9CE JUMPI PUSH2 0x9CE PUSH2 0x95E JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA39 DUP6 DUP3 DUP7 ADD PUSH2 0x974 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA62 DUP6 DUP3 DUP7 ADD PUSH2 0x974 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA1 DUP5 DUP3 DUP6 ADD PUSH2 0x974 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xABB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC4 DUP3 PUSH2 0x8DB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xADE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAE7 DUP4 PUSH2 0x8DB JUMP JUMPDEST SWAP2 POP PUSH2 0xAF5 PUSH1 0x20 DUP5 ADD PUSH2 0x8DB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB12 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB32 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4F7 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xB5F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB7F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB6B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBA0 JUMPI PUSH2 0xBA0 PUSH2 0x95E JUMP JUMPDEST PUSH2 0xBB4 DUP2 PUSH2 0xBAE DUP5 SLOAD PUSH2 0xAFE JUMP JUMPDEST DUP5 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0xBE8 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0xBD0 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC18 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xBF8 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0xC36 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x316 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 DUP6 0x2F 0xB7 0xB8 0xBC JUMPDEST 0xC2 0xE0 0xBB SELFBALANCE 0xDB MULMOD SWAP10 PUSH32 0x4A4BE9D29054E1C4BEEC35E07625033D5F64736F6C634300081A0033BF67EC12 SWAP1 SMOD 0xBE SMOD RETURN CHAINID 0xD9 0xD2 SWAP4 ORIGIN ISZERO 0x29 GASPRICE PUSH7 0x12CE7FF17D6B47 SWAP11 GAS TLOAD 0xAE PUSH19 0x890C0000000000000000000000000000000000 ",
							"sourceMap": "223:5273:9:-:0;;;804:784;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;262:10;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;516:51:10;489:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;879:29:9;;871:73;;;;-1:-1:-1;;;871:73:9;;780:2:10;871:73:9;;;762:21:10;819:2;799:18;;;792:30;858:33;838:18;;;831:61;909:18;;871:73:9;578:355:10;871:73:9;975:1;962:10;:14;954:64;;;;-1:-1:-1;;;954:64:9;;1140:2:10;954:64:9;;;1122:21:10;1179:2;1159:18;;;1152:30;1218:34;1198:18;;;1191:62;-1:-1:-1;;;1269:18:10;;;1262:35;1314:19;;954:64:9;938:401:10;954:64:9;1029:14;:32;;-1:-1:-1;;;;;;1029:32:9;-1:-1:-1;;;;;1029:32:9;;;;;1120:17;;-1:-1:-1;;1120:17:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1147:34:9;;;-1:-1:-1;;;1147:34:9;;;;;1629:21:10;;;;1686:1;1666:18;;;1659:29;-1:-1:-1;;;1704:18:10;;;1697:36;1771:3;1749:20;;;1742:33;1812:1;1791:19;;;1784:30;-1:-1:-1;;;1830:19:10;;;1823:33;1098:39:9;;-1:-1:-1;;;;;;1147:18:9;;;;;1873:19:10;;1147:34:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1191:36:9;;-1:-1:-1;;;1191:36:9;;1204:10;1191:36;;;2077:51:10;2144:18;;;2137:34;;;-1:-1:-1;;;;;1191:12:9;;;-1:-1:-1;1191:12:9;;-1:-1:-1;2050:18:10;;1191:36:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1237:6:9;:25;;-1:-1:-1;;;;;;1237:25:9;-1:-1:-1;;;;;1237:25:9;;;;;;;;1277:44;;2328:25:10;;;1298:10:9;;-1:-1:-1;1237:25:9;;-1:-1:-1;;;;;;;;;;;;1277:44:9;2316:2:10;2301:18;1277:44:9;;;;;;;1358:19;1380:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1407:34:9;;;-1:-1:-1;;;1407:34:9;;;;;2649:21:10;;;;2706:1;2686:18;;;2679:29;-1:-1:-1;;;2724:18:10;;;2717:36;2791:3;2769:20;;;2762:33;2832:1;2811:19;;;2804:30;-1:-1:-1;;;2850:19:10;;;2843:33;1358:39:9;;-1:-1:-1;;;;;;1407:18:9;;;;;2893:19:10;;1407:34:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1451:36:9;;-1:-1:-1;;;1451:36:9;;1464:10;1451:36;;;2077:51:10;2144:18;;;2137:34;;;-1:-1:-1;;;;;1451:12:9;;;-1:-1:-1;1451:12:9;;-1:-1:-1;2050:18:10;;1451:36:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1497:6:9;:25;;-1:-1:-1;;;;;;1497:25:9;-1:-1:-1;;;;;1497:25:9;;;;;;;;1537:44;;2328:25:10;;;1558:10:9;;-1:-1:-1;1497:25:9;;-1:-1:-1;;;;;;;;;;;;1537:44:9;2316:2:10;2301:18;1537:44:9;;;;;;;861:727;;804:784;;223:5273;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;223:5273:9:-;;;;;;;;:::o;14:351:10:-;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;196:16;;-1:-1:-1;;;;;241:31:10;;231:42;;221:70;;287:1;284;277:12;221:70;355:2;340:18;;;;334:25;310:5;;334:25;;-1:-1:-1;;;14:351:10:o;2364:554::-;223:5273:9;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 3303,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 3348,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addLiquidity_1512": {
									"entryPoint": 1933,
									"id": 1512,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@algebraFactory_1111": {
									"entryPoint": null,
									"id": 1111,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@computePoolAddress_1562": {
									"entryPoint": 2959,
									"id": 1562,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@createPool_1322": {
									"entryPoint": 1336,
									"id": 1322,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastCreatedPool_1113": {
									"entryPoint": null,
									"id": 1113,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintTokens_1377": {
									"entryPoint": 906,
									"id": 1377,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1316,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenA_1115": {
									"entryPoint": null,
									"id": 1115,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenB_1117": {
									"entryPoint": null,
									"id": 1117,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3241,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferTokensToPool_1432": {
									"entryPoint": 465,
									"id": 1432,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@updateAlgebraFactory_1585": {
									"entryPoint": 2831,
									"id": 1585,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 3722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_18e4817b259137ec94132f737c84152c28fb5852c0a31a9a91af72573983b0d8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_433af072dffa991865871a0855e15ff65c04410ef2c35fa9a13b990d1685b02f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67b5480f1b28e4dae4d922a7b15bccf15e09ed915b314470d2be602ada735c7b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_724621119f5db596bbde230b76cd5d37276aff48356c0f8f9dcac60f48930a47__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_847af5c88ed3fb202d9e41a959a255471c737d793cbf61df15ac3cc7d64e6f0f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_95a2feb49b1029e40960c5f143071314131a09e8c032ba7ef14c7e8b91d52899__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c7e060f1e5ee73f3c2beb76a55480adf5ff315d0e0edd965836493e574235ec6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d05c3b30d29b5b07b1f8faddbfc569df6dca70b5fc76a8eab0cbb2b4b52fa72e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f74c1d8be5143796742bd7dd7d8d89b0c10c4c13912662e84672ea6b54765128__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f848200720cfffaee489e51b4359a2329522c129a1802953dc9d3cb6bddffeb9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 3428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9108:10",
										"nodeType": "YulBlock",
										"src": "0:9108:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:10",
													"nodeType": "YulBlock",
													"src": "115:102:10",
													"statements": [
														{
															"nativeSrc": "125:26:10",
															"nodeType": "YulAssignment",
															"src": "125:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:10",
																		"nodeType": "YulLiteral",
																		"src": "148:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:10"
																},
																"nativeSrc": "133:18:10",
																"nodeType": "YulFunctionCall",
																"src": "133:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:10",
																								"nodeType": "YulLiteral",
																								"src": "198:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:10",
																								"nodeType": "YulLiteral",
																								"src": "203:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:10"
																						},
																						"nativeSrc": "194:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:10",
																						"nodeType": "YulLiteral",
																						"src": "207:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:10"
																				},
																				"nativeSrc": "190:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:10"
																		},
																		"nativeSrc": "178:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:10"
																},
																"nativeSrc": "160:51:10",
																"nodeType": "YulFunctionCall",
																"src": "160:51:10"
															},
															"nativeSrc": "160:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:10",
														"nodeType": "YulTypedName",
														"src": "84:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:10",
														"nodeType": "YulTypedName",
														"src": "95:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:10",
														"nodeType": "YulTypedName",
														"src": "106:4:10",
														"type": ""
													}
												],
												"src": "14:203:10"
											},
											{
												"body": {
													"nativeSrc": "267:86:10",
													"nodeType": "YulBlock",
													"src": "267:86:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "331:16:10",
																"nodeType": "YulBlock",
																"src": "331:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "340:1:10",
																					"nodeType": "YulLiteral",
																					"src": "340:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:1:10",
																					"nodeType": "YulLiteral",
																					"src": "343:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "333:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:10"
																			},
																			"nativeSrc": "333:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "333:12:10"
																		},
																		"nativeSrc": "333:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "333:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "290:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "290:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "301:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "301:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "316:3:10",
																										"nodeType": "YulLiteral",
																										"src": "316:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "321:1:10",
																										"nodeType": "YulLiteral",
																										"src": "321:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "312:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "312:3:10"
																								},
																								"nativeSrc": "312:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "312:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "325:1:10",
																								"nodeType": "YulLiteral",
																								"src": "325:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "308:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "308:3:10"
																						},
																						"nativeSrc": "308:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "308:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "297:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "297:3:10"
																				},
																				"nativeSrc": "297:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "297:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "287:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "287:2:10"
																		},
																		"nativeSrc": "287:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "287:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "280:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "280:6:10"
																},
																"nativeSrc": "280:50:10",
																"nodeType": "YulFunctionCall",
																"src": "280:50:10"
															},
															"nativeSrc": "277:70:10",
															"nodeType": "YulIf",
															"src": "277:70:10"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "222:131:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "256:5:10",
														"nodeType": "YulTypedName",
														"src": "256:5:10",
														"type": ""
													}
												],
												"src": "222:131:10"
											},
											{
												"body": {
													"nativeSrc": "462:404:10",
													"nodeType": "YulBlock",
													"src": "462:404:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "508:16:10",
																"nodeType": "YulBlock",
																"src": "508:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "517:1:10",
																					"nodeType": "YulLiteral",
																					"src": "517:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "520:1:10",
																					"nodeType": "YulLiteral",
																					"src": "520:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "510:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "510:6:10"
																			},
																			"nativeSrc": "510:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "510:12:10"
																		},
																		"nativeSrc": "510:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "510:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "483:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "483:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "492:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "492:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "479:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "479:3:10"
																		},
																		"nativeSrc": "479:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "479:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "504:2:10",
																		"nodeType": "YulLiteral",
																		"src": "504:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "475:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "475:3:10"
																},
																"nativeSrc": "475:32:10",
																"nodeType": "YulFunctionCall",
																"src": "475:32:10"
															},
															"nativeSrc": "472:52:10",
															"nodeType": "YulIf",
															"src": "472:52:10"
														},
														{
															"nativeSrc": "533:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "533:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "559:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "559:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "546:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "546:12:10"
																},
																"nativeSrc": "546:23:10",
																"nodeType": "YulFunctionCall",
																"src": "546:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "537:5:10",
																	"nodeType": "YulTypedName",
																	"src": "537:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "603:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "603:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "578:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "578:24:10"
																},
																"nativeSrc": "578:31:10",
																"nodeType": "YulFunctionCall",
																"src": "578:31:10"
															},
															"nativeSrc": "578:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "578:31:10"
														},
														{
															"nativeSrc": "618:15:10",
															"nodeType": "YulAssignment",
															"src": "618:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "628:5:10",
																"nodeType": "YulIdentifier",
																"src": "628:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "618:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "618:6:10"
																}
															]
														},
														{
															"nativeSrc": "642:47:10",
															"nodeType": "YulVariableDeclaration",
															"src": "642:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "674:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "674:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "685:2:10",
																				"nodeType": "YulLiteral",
																				"src": "685:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "670:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "670:3:10"
																		},
																		"nativeSrc": "670:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "670:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "657:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "657:12:10"
																},
																"nativeSrc": "657:32:10",
																"nodeType": "YulFunctionCall",
																"src": "657:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "646:7:10",
																	"nodeType": "YulTypedName",
																	"src": "646:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "723:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "723:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "698:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "698:24:10"
																},
																"nativeSrc": "698:33:10",
																"nodeType": "YulFunctionCall",
																"src": "698:33:10"
															},
															"nativeSrc": "698:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "698:33:10"
														},
														{
															"nativeSrc": "740:17:10",
															"nodeType": "YulAssignment",
															"src": "740:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "750:7:10",
																"nodeType": "YulIdentifier",
																"src": "750:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "740:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "740:6:10"
																}
															]
														},
														{
															"nativeSrc": "766:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "766:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "781:1:10",
																"nodeType": "YulLiteral",
																"src": "781:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "770:7:10",
																	"nodeType": "YulTypedName",
																	"src": "770:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "791:43:10",
															"nodeType": "YulAssignment",
															"src": "791:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "819:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "819:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "830:2:10",
																				"nodeType": "YulLiteral",
																				"src": "830:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "815:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "815:3:10"
																		},
																		"nativeSrc": "815:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "815:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "802:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "802:12:10"
																},
																"nativeSrc": "802:32:10",
																"nodeType": "YulFunctionCall",
																"src": "802:32:10"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "791:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "791:7:10"
																}
															]
														},
														{
															"nativeSrc": "843:17:10",
															"nodeType": "YulAssignment",
															"src": "843:17:10",
															"value": {
																"name": "value_2",
																"nativeSrc": "853:7:10",
																"nodeType": "YulIdentifier",
																"src": "853:7:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "843:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "843:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "358:508:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "412:9:10",
														"nodeType": "YulTypedName",
														"src": "412:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "423:7:10",
														"nodeType": "YulTypedName",
														"src": "423:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "435:6:10",
														"nodeType": "YulTypedName",
														"src": "435:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "443:6:10",
														"nodeType": "YulTypedName",
														"src": "443:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "451:6:10",
														"nodeType": "YulTypedName",
														"src": "451:6:10",
														"type": ""
													}
												],
												"src": "358:508:10"
											},
											{
												"body": {
													"nativeSrc": "958:259:10",
													"nodeType": "YulBlock",
													"src": "958:259:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1004:16:10",
																"nodeType": "YulBlock",
																"src": "1004:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1013:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1013:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1016:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1016:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1006:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1006:6:10"
																			},
																			"nativeSrc": "1006:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1006:12:10"
																		},
																		"nativeSrc": "1006:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1006:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "979:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "979:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "988:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "988:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "975:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "975:3:10"
																		},
																		"nativeSrc": "975:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "975:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1000:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1000:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "971:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "971:3:10"
																},
																"nativeSrc": "971:32:10",
																"nodeType": "YulFunctionCall",
																"src": "971:32:10"
															},
															"nativeSrc": "968:52:10",
															"nodeType": "YulIf",
															"src": "968:52:10"
														},
														{
															"nativeSrc": "1029:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1029:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1042:1:10",
																"nodeType": "YulLiteral",
																"src": "1042:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1033:5:10",
																	"nodeType": "YulTypedName",
																	"src": "1033:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1052:32:10",
															"nodeType": "YulAssignment",
															"src": "1052:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1074:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1074:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1061:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1061:12:10"
																},
																"nativeSrc": "1061:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1061:23:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1052:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1052:5:10"
																}
															]
														},
														{
															"nativeSrc": "1093:15:10",
															"nodeType": "YulAssignment",
															"src": "1093:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "1103:5:10",
																"nodeType": "YulIdentifier",
																"src": "1103:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1093:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1093:6:10"
																}
															]
														},
														{
															"nativeSrc": "1117:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1117:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1132:1:10",
																"nodeType": "YulLiteral",
																"src": "1132:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1121:7:10",
																	"nodeType": "YulTypedName",
																	"src": "1121:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1142:43:10",
															"nodeType": "YulAssignment",
															"src": "1142:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1170:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1170:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1181:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1181:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1166:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1166:3:10"
																		},
																		"nativeSrc": "1166:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1166:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1153:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1153:12:10"
																},
																"nativeSrc": "1153:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1153:32:10"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1142:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1142:7:10"
																}
															]
														},
														{
															"nativeSrc": "1194:17:10",
															"nodeType": "YulAssignment",
															"src": "1194:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "1204:7:10",
																"nodeType": "YulIdentifier",
																"src": "1204:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1194:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "871:346:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "916:9:10",
														"nodeType": "YulTypedName",
														"src": "916:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "927:7:10",
														"nodeType": "YulTypedName",
														"src": "927:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "939:6:10",
														"nodeType": "YulTypedName",
														"src": "939:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "947:6:10",
														"nodeType": "YulTypedName",
														"src": "947:6:10",
														"type": ""
													}
												],
												"src": "871:346:10"
											},
											{
												"body": {
													"nativeSrc": "1292:177:10",
													"nodeType": "YulBlock",
													"src": "1292:177:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1338:16:10",
																"nodeType": "YulBlock",
																"src": "1338:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1347:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1347:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1350:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1350:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1340:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1340:6:10"
																			},
																			"nativeSrc": "1340:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1340:12:10"
																		},
																		"nativeSrc": "1340:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1340:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1313:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1313:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1322:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1309:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1309:3:10"
																		},
																		"nativeSrc": "1309:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1309:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1334:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1334:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1305:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1305:3:10"
																},
																"nativeSrc": "1305:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1305:32:10"
															},
															"nativeSrc": "1302:52:10",
															"nodeType": "YulIf",
															"src": "1302:52:10"
														},
														{
															"nativeSrc": "1363:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1363:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1389:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1389:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1376:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1376:12:10"
																},
																"nativeSrc": "1376:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1376:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1367:5:10",
																	"nodeType": "YulTypedName",
																	"src": "1367:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1433:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1433:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1408:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "1408:24:10"
																},
																"nativeSrc": "1408:31:10",
																"nodeType": "YulFunctionCall",
																"src": "1408:31:10"
															},
															"nativeSrc": "1408:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "1408:31:10"
														},
														{
															"nativeSrc": "1448:15:10",
															"nodeType": "YulAssignment",
															"src": "1448:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "1458:5:10",
																"nodeType": "YulIdentifier",
																"src": "1458:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1448:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1448:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1222:247:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1258:9:10",
														"nodeType": "YulTypedName",
														"src": "1258:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1269:7:10",
														"nodeType": "YulTypedName",
														"src": "1269:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1281:6:10",
														"nodeType": "YulTypedName",
														"src": "1281:6:10",
														"type": ""
													}
												],
												"src": "1222:247:10"
											},
											{
												"body": {
													"nativeSrc": "1561:301:10",
													"nodeType": "YulBlock",
													"src": "1561:301:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1607:16:10",
																"nodeType": "YulBlock",
																"src": "1607:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1616:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1616:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1619:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1619:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1609:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1609:6:10"
																			},
																			"nativeSrc": "1609:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1609:12:10"
																		},
																		"nativeSrc": "1609:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1609:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1582:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1582:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1591:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1591:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1578:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1578:3:10"
																		},
																		"nativeSrc": "1578:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1578:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1603:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1603:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1574:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1574:3:10"
																},
																"nativeSrc": "1574:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1574:32:10"
															},
															"nativeSrc": "1571:52:10",
															"nodeType": "YulIf",
															"src": "1571:52:10"
														},
														{
															"nativeSrc": "1632:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1632:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1658:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1658:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1645:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1645:12:10"
																},
																"nativeSrc": "1645:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1645:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1636:5:10",
																	"nodeType": "YulTypedName",
																	"src": "1636:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1702:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1702:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1677:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "1677:24:10"
																},
																"nativeSrc": "1677:31:10",
																"nodeType": "YulFunctionCall",
																"src": "1677:31:10"
															},
															"nativeSrc": "1677:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "1677:31:10"
														},
														{
															"nativeSrc": "1717:15:10",
															"nodeType": "YulAssignment",
															"src": "1717:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "1727:5:10",
																"nodeType": "YulIdentifier",
																"src": "1727:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1717:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1717:6:10"
																}
															]
														},
														{
															"nativeSrc": "1741:47:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1741:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1773:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1773:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1784:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1784:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1769:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1769:3:10"
																		},
																		"nativeSrc": "1769:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1769:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1756:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1756:12:10"
																},
																"nativeSrc": "1756:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1756:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1745:7:10",
																	"nodeType": "YulTypedName",
																	"src": "1745:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "1822:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "1822:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1797:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "1797:24:10"
																},
																"nativeSrc": "1797:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1797:33:10"
															},
															"nativeSrc": "1797:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1797:33:10"
														},
														{
															"nativeSrc": "1839:17:10",
															"nodeType": "YulAssignment",
															"src": "1839:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "1849:7:10",
																"nodeType": "YulIdentifier",
																"src": "1849:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1839:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1839:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "1474:388:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1519:9:10",
														"nodeType": "YulTypedName",
														"src": "1519:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1530:7:10",
														"nodeType": "YulTypedName",
														"src": "1530:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1542:6:10",
														"nodeType": "YulTypedName",
														"src": "1542:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1550:6:10",
														"nodeType": "YulTypedName",
														"src": "1550:6:10",
														"type": ""
													}
												],
												"src": "1474:388:10"
											},
											{
												"body": {
													"nativeSrc": "2041:171:10",
													"nodeType": "YulBlock",
													"src": "2041:171:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2058:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2058:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2069:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2069:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2051:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:10"
																},
																"nativeSrc": "2051:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2051:21:10"
															},
															"nativeSrc": "2051:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2092:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2092:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2103:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2103:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2088:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2088:3:10"
																		},
																		"nativeSrc": "2088:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2088:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2108:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2108:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2081:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2081:6:10"
																},
																"nativeSrc": "2081:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2081:30:10"
															},
															"nativeSrc": "2081:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "2081:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2131:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2131:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2127:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2127:3:10"
																		},
																		"nativeSrc": "2127:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2127:18:10"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "2147:23:10",
																		"nodeType": "YulLiteral",
																		"src": "2147:23:10",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2120:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2120:6:10"
																},
																"nativeSrc": "2120:51:10",
																"nodeType": "YulFunctionCall",
																"src": "2120:51:10"
															},
															"nativeSrc": "2120:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "2120:51:10"
														},
														{
															"nativeSrc": "2180:26:10",
															"nodeType": "YulAssignment",
															"src": "2180:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2192:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2192:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2203:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2203:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2188:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2188:3:10"
																},
																"nativeSrc": "2188:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2188:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2180:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2180:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1867:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2018:9:10",
														"nodeType": "YulTypedName",
														"src": "2018:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2032:4:10",
														"nodeType": "YulTypedName",
														"src": "2032:4:10",
														"type": ""
													}
												],
												"src": "1867:345:10"
											},
											{
												"body": {
													"nativeSrc": "2391:170:10",
													"nodeType": "YulBlock",
													"src": "2391:170:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2408:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2408:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2419:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2419:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2401:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:10"
																},
																"nativeSrc": "2401:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2401:21:10"
															},
															"nativeSrc": "2401:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "2401:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2442:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2442:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2453:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2453:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2438:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2438:3:10"
																		},
																		"nativeSrc": "2438:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2438:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2458:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2458:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2431:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2431:6:10"
																},
																"nativeSrc": "2431:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2431:30:10"
															},
															"nativeSrc": "2431:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "2431:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2481:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2481:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2492:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2492:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2477:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2477:3:10"
																		},
																		"nativeSrc": "2477:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2477:18:10"
																	},
																	{
																		"hexValue": "496e76616c696420706f6f6c2061646472657373",
																		"kind": "string",
																		"nativeSrc": "2497:22:10",
																		"nodeType": "YulLiteral",
																		"src": "2497:22:10",
																		"type": "",
																		"value": "Invalid pool address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2470:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:10"
																},
																"nativeSrc": "2470:50:10",
																"nodeType": "YulFunctionCall",
																"src": "2470:50:10"
															},
															"nativeSrc": "2470:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "2470:50:10"
														},
														{
															"nativeSrc": "2529:26:10",
															"nodeType": "YulAssignment",
															"src": "2529:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2541:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2541:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2552:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2552:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2537:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2537:3:10"
																},
																"nativeSrc": "2537:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2537:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2529:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2529:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c7e060f1e5ee73f3c2beb76a55480adf5ff315d0e0edd965836493e574235ec6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2217:344:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2368:9:10",
														"nodeType": "YulTypedName",
														"src": "2368:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2382:4:10",
														"nodeType": "YulTypedName",
														"src": "2382:4:10",
														"type": ""
													}
												],
												"src": "2217:344:10"
											},
											{
												"body": {
													"nativeSrc": "2740:182:10",
													"nodeType": "YulBlock",
													"src": "2740:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2757:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2757:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2768:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2768:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2750:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2750:6:10"
																},
																"nativeSrc": "2750:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2750:21:10"
															},
															"nativeSrc": "2750:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "2750:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2791:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2791:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2802:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2802:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2787:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2787:3:10"
																		},
																		"nativeSrc": "2787:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2787:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2807:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2807:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2780:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2780:6:10"
																},
																"nativeSrc": "2780:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2780:30:10"
															},
															"nativeSrc": "2780:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "2780:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2830:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2830:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2841:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2841:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2826:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2826:3:10"
																		},
																		"nativeSrc": "2826:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2826:18:10"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "2846:34:10",
																		"nodeType": "YulLiteral",
																		"src": "2846:34:10",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2819:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2819:6:10"
																},
																"nativeSrc": "2819:62:10",
																"nodeType": "YulFunctionCall",
																"src": "2819:62:10"
															},
															"nativeSrc": "2819:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "2819:62:10"
														},
														{
															"nativeSrc": "2890:26:10",
															"nodeType": "YulAssignment",
															"src": "2890:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2902:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2902:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2913:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2913:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2898:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2898:3:10"
																},
																"nativeSrc": "2898:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2898:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2890:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2890:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2566:356:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2717:9:10",
														"nodeType": "YulTypedName",
														"src": "2717:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2731:4:10",
														"nodeType": "YulTypedName",
														"src": "2731:4:10",
														"type": ""
													}
												],
												"src": "2566:356:10"
											},
											{
												"body": {
													"nativeSrc": "3056:145:10",
													"nodeType": "YulBlock",
													"src": "3056:145:10",
													"statements": [
														{
															"nativeSrc": "3066:26:10",
															"nodeType": "YulAssignment",
															"src": "3066:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3078:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3078:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3089:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3089:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3074:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3074:3:10"
																},
																"nativeSrc": "3074:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3074:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3066:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3066:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3108:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3108:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3123:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3123:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3139:3:10",
																								"nodeType": "YulLiteral",
																								"src": "3139:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3144:1:10",
																								"nodeType": "YulLiteral",
																								"src": "3144:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3135:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "3135:3:10"
																						},
																						"nativeSrc": "3135:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "3135:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3148:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3148:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3131:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3131:3:10"
																				},
																				"nativeSrc": "3131:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3131:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3119:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3119:3:10"
																		},
																		"nativeSrc": "3119:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3119:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3101:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3101:6:10"
																},
																"nativeSrc": "3101:51:10",
																"nodeType": "YulFunctionCall",
																"src": "3101:51:10"
															},
															"nativeSrc": "3101:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "3101:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3172:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3172:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3183:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3183:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3168:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3168:3:10"
																		},
																		"nativeSrc": "3168:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3168:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3188:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3188:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3161:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3161:6:10"
																},
																"nativeSrc": "3161:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3161:34:10"
															},
															"nativeSrc": "3161:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3161:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2927:274:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3017:9:10",
														"nodeType": "YulTypedName",
														"src": "3017:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3028:6:10",
														"nodeType": "YulTypedName",
														"src": "3028:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3036:6:10",
														"nodeType": "YulTypedName",
														"src": "3036:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3047:4:10",
														"nodeType": "YulTypedName",
														"src": "3047:4:10",
														"type": ""
													}
												],
												"src": "2927:274:10"
											},
											{
												"body": {
													"nativeSrc": "3284:199:10",
													"nodeType": "YulBlock",
													"src": "3284:199:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3330:16:10",
																"nodeType": "YulBlock",
																"src": "3330:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3339:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3339:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3342:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3342:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3332:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3332:6:10"
																			},
																			"nativeSrc": "3332:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3332:12:10"
																		},
																		"nativeSrc": "3332:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3332:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3305:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3305:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3314:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3314:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3301:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3301:3:10"
																		},
																		"nativeSrc": "3301:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3301:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3326:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3326:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3297:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3297:3:10"
																},
																"nativeSrc": "3297:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3297:32:10"
															},
															"nativeSrc": "3294:52:10",
															"nodeType": "YulIf",
															"src": "3294:52:10"
														},
														{
															"nativeSrc": "3355:29:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3355:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3374:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3374:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3368:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3368:5:10"
																},
																"nativeSrc": "3368:16:10",
																"nodeType": "YulFunctionCall",
																"src": "3368:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3359:5:10",
																	"nodeType": "YulTypedName",
																	"src": "3359:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3437:16:10",
																"nodeType": "YulBlock",
																"src": "3437:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3446:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3446:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3449:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3449:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3439:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3439:6:10"
																			},
																			"nativeSrc": "3439:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3439:12:10"
																		},
																		"nativeSrc": "3439:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3439:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3406:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3406:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3427:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "3427:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3420:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "3420:6:10"
																						},
																						"nativeSrc": "3420:13:10",
																						"nodeType": "YulFunctionCall",
																						"src": "3420:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3413:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "3413:6:10"
																				},
																				"nativeSrc": "3413:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3413:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3403:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3403:2:10"
																		},
																		"nativeSrc": "3403:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3403:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3396:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3396:6:10"
																},
																"nativeSrc": "3396:40:10",
																"nodeType": "YulFunctionCall",
																"src": "3396:40:10"
															},
															"nativeSrc": "3393:60:10",
															"nodeType": "YulIf",
															"src": "3393:60:10"
														},
														{
															"nativeSrc": "3462:15:10",
															"nodeType": "YulAssignment",
															"src": "3462:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "3472:5:10",
																"nodeType": "YulIdentifier",
																"src": "3472:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3462:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3462:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "3206:277:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3250:9:10",
														"nodeType": "YulTypedName",
														"src": "3250:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3261:7:10",
														"nodeType": "YulTypedName",
														"src": "3261:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3273:6:10",
														"nodeType": "YulTypedName",
														"src": "3273:6:10",
														"type": ""
													}
												],
												"src": "3206:277:10"
											},
											{
												"body": {
													"nativeSrc": "3589:76:10",
													"nodeType": "YulBlock",
													"src": "3589:76:10",
													"statements": [
														{
															"nativeSrc": "3599:26:10",
															"nodeType": "YulAssignment",
															"src": "3599:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3611:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3611:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3622:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3622:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3607:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3607:3:10"
																},
																"nativeSrc": "3607:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3607:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3599:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3599:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3641:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3641:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3652:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3652:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3634:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3634:6:10"
																},
																"nativeSrc": "3634:25:10",
																"nodeType": "YulFunctionCall",
																"src": "3634:25:10"
															},
															"nativeSrc": "3634:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "3634:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3488:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3558:9:10",
														"nodeType": "YulTypedName",
														"src": "3558:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3569:6:10",
														"nodeType": "YulTypedName",
														"src": "3569:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3580:4:10",
														"nodeType": "YulTypedName",
														"src": "3580:4:10",
														"type": ""
													}
												],
												"src": "3488:177:10"
											},
											{
												"body": {
													"nativeSrc": "3844:175:10",
													"nodeType": "YulBlock",
													"src": "3844:175:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3861:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3861:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3872:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3872:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3854:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3854:6:10"
																},
																"nativeSrc": "3854:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3854:21:10"
															},
															"nativeSrc": "3854:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "3854:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3895:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3895:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3906:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3906:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3891:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3891:3:10"
																		},
																		"nativeSrc": "3891:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3891:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3911:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3911:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3884:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3884:6:10"
																},
																"nativeSrc": "3884:30:10",
																"nodeType": "YulFunctionCall",
																"src": "3884:30:10"
															},
															"nativeSrc": "3884:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "3884:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3934:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3934:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3945:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3945:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3930:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3930:3:10"
																		},
																		"nativeSrc": "3930:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3930:18:10"
																	},
																	{
																		"hexValue": "496e76616c696420726563697069656e742061646472657373",
																		"kind": "string",
																		"nativeSrc": "3950:27:10",
																		"nodeType": "YulLiteral",
																		"src": "3950:27:10",
																		"type": "",
																		"value": "Invalid recipient address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3923:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3923:6:10"
																},
																"nativeSrc": "3923:55:10",
																"nodeType": "YulFunctionCall",
																"src": "3923:55:10"
															},
															"nativeSrc": "3923:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "3923:55:10"
														},
														{
															"nativeSrc": "3987:26:10",
															"nodeType": "YulAssignment",
															"src": "3987:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3999:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3999:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4010:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4010:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3995:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3995:3:10"
																},
																"nativeSrc": "3995:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3995:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3987:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3987:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3670:349:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3821:9:10",
														"nodeType": "YulTypedName",
														"src": "3821:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3835:4:10",
														"nodeType": "YulTypedName",
														"src": "3835:4:10",
														"type": ""
													}
												],
												"src": "3670:349:10"
											},
											{
												"body": {
													"nativeSrc": "4198:172:10",
													"nodeType": "YulBlock",
													"src": "4198:172:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4215:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4215:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4226:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4226:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4208:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4208:6:10"
																},
																"nativeSrc": "4208:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4208:21:10"
															},
															"nativeSrc": "4208:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "4208:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4249:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4249:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4260:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4260:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4245:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4245:3:10"
																		},
																		"nativeSrc": "4245:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4245:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4265:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4265:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4238:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:10"
																},
																"nativeSrc": "4238:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4238:30:10"
															},
															"nativeSrc": "4238:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "4238:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4288:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4288:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4299:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4299:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4284:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4284:3:10"
																		},
																		"nativeSrc": "4284:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4284:18:10"
																	},
																	{
																		"hexValue": "5374617274696e6720706f6f6c206372656174696f6e",
																		"kind": "string",
																		"nativeSrc": "4304:24:10",
																		"nodeType": "YulLiteral",
																		"src": "4304:24:10",
																		"type": "",
																		"value": "Starting pool creation"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4277:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4277:6:10"
																},
																"nativeSrc": "4277:52:10",
																"nodeType": "YulFunctionCall",
																"src": "4277:52:10"
															},
															"nativeSrc": "4277:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "4277:52:10"
														},
														{
															"nativeSrc": "4338:26:10",
															"nodeType": "YulAssignment",
															"src": "4338:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4350:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4350:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4361:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4361:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4346:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4346:3:10"
																},
																"nativeSrc": "4346:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4346:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4338:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4338:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f74c1d8be5143796742bd7dd7d8d89b0c10c4c13912662e84672ea6b54765128__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4024:346:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4175:9:10",
														"nodeType": "YulTypedName",
														"src": "4175:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4189:4:10",
														"nodeType": "YulTypedName",
														"src": "4189:4:10",
														"type": ""
													}
												],
												"src": "4024:346:10"
											},
											{
												"body": {
													"nativeSrc": "4549:176:10",
													"nodeType": "YulBlock",
													"src": "4549:176:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4566:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4566:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4577:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4577:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4559:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4559:6:10"
																},
																"nativeSrc": "4559:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4559:21:10"
															},
															"nativeSrc": "4559:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "4559:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4600:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4600:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4611:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4611:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4596:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4596:3:10"
																		},
																		"nativeSrc": "4596:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4596:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4616:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4616:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4589:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4589:6:10"
																},
																"nativeSrc": "4589:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4589:30:10"
															},
															"nativeSrc": "4589:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "4589:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4639:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4639:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4650:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4650:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4635:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4635:3:10"
																		},
																		"nativeSrc": "4635:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4635:18:10"
																	},
																	{
																		"hexValue": "546f6b656e73206d75737420626520696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "4655:28:10",
																		"nodeType": "YulLiteral",
																		"src": "4655:28:10",
																		"type": "",
																		"value": "Tokens must be initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4628:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4628:6:10"
																},
																"nativeSrc": "4628:56:10",
																"nodeType": "YulFunctionCall",
																"src": "4628:56:10"
															},
															"nativeSrc": "4628:56:10",
															"nodeType": "YulExpressionStatement",
															"src": "4628:56:10"
														},
														{
															"nativeSrc": "4693:26:10",
															"nodeType": "YulAssignment",
															"src": "4693:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4705:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4705:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4716:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4716:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4701:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4701:3:10"
																},
																"nativeSrc": "4701:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4701:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4693:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4693:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_18e4817b259137ec94132f737c84152c28fb5852c0a31a9a91af72573983b0d8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4375:350:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4526:9:10",
														"nodeType": "YulTypedName",
														"src": "4526:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4540:4:10",
														"nodeType": "YulTypedName",
														"src": "4540:4:10",
														"type": ""
													}
												],
												"src": "4375:350:10"
											},
											{
												"body": {
													"nativeSrc": "4904:174:10",
													"nodeType": "YulBlock",
													"src": "4904:174:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4921:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4921:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4932:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4932:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4914:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4914:6:10"
																},
																"nativeSrc": "4914:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4914:21:10"
															},
															"nativeSrc": "4914:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "4914:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4955:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4955:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4966:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4966:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4951:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4951:3:10"
																		},
																		"nativeSrc": "4951:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4951:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4971:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4971:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4944:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4944:6:10"
																},
																"nativeSrc": "4944:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4944:30:10"
															},
															"nativeSrc": "4944:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "4944:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4994:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4994:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5005:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5005:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4990:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4990:3:10"
																		},
																		"nativeSrc": "4990:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4990:18:10"
																	},
																	{
																		"hexValue": "546f6b656e73206d75737420626520646966666572656e74",
																		"kind": "string",
																		"nativeSrc": "5010:26:10",
																		"nodeType": "YulLiteral",
																		"src": "5010:26:10",
																		"type": "",
																		"value": "Tokens must be different"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4983:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4983:6:10"
																},
																"nativeSrc": "4983:54:10",
																"nodeType": "YulFunctionCall",
																"src": "4983:54:10"
															},
															"nativeSrc": "4983:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "4983:54:10"
														},
														{
															"nativeSrc": "5046:26:10",
															"nodeType": "YulAssignment",
															"src": "5046:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5058:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5058:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5069:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5069:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5054:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5054:3:10"
																},
																"nativeSrc": "5054:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5054:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5046:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5046:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4730:348:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4881:9:10",
														"nodeType": "YulTypedName",
														"src": "4881:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4895:4:10",
														"nodeType": "YulTypedName",
														"src": "4895:4:10",
														"type": ""
													}
												],
												"src": "4730:348:10"
											},
											{
												"body": {
													"nativeSrc": "5212:171:10",
													"nodeType": "YulBlock",
													"src": "5212:171:10",
													"statements": [
														{
															"nativeSrc": "5222:26:10",
															"nodeType": "YulAssignment",
															"src": "5222:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5234:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5234:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5245:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5245:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5230:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5230:3:10"
																},
																"nativeSrc": "5230:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5230:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5222:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5222:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5264:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5264:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5279:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5279:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5295:3:10",
																								"nodeType": "YulLiteral",
																								"src": "5295:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5300:1:10",
																								"nodeType": "YulLiteral",
																								"src": "5300:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5291:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "5291:3:10"
																						},
																						"nativeSrc": "5291:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "5291:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5304:1:10",
																						"nodeType": "YulLiteral",
																						"src": "5304:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5287:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5287:3:10"
																				},
																				"nativeSrc": "5287:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5287:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5275:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5275:3:10"
																		},
																		"nativeSrc": "5275:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5275:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5257:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5257:6:10"
																},
																"nativeSrc": "5257:51:10",
																"nodeType": "YulFunctionCall",
																"src": "5257:51:10"
															},
															"nativeSrc": "5257:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "5257:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5328:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5328:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5339:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5339:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5324:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5324:3:10"
																		},
																		"nativeSrc": "5324:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5324:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5348:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5348:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5364:3:10",
																								"nodeType": "YulLiteral",
																								"src": "5364:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5369:1:10",
																								"nodeType": "YulLiteral",
																								"src": "5369:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5360:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "5360:3:10"
																						},
																						"nativeSrc": "5360:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "5360:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5373:1:10",
																						"nodeType": "YulLiteral",
																						"src": "5373:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5356:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5356:3:10"
																				},
																				"nativeSrc": "5356:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5356:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5344:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5344:3:10"
																		},
																		"nativeSrc": "5344:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5344:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5317:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5317:6:10"
																},
																"nativeSrc": "5317:60:10",
																"nodeType": "YulFunctionCall",
																"src": "5317:60:10"
															},
															"nativeSrc": "5317:60:10",
															"nodeType": "YulExpressionStatement",
															"src": "5317:60:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "5083:300:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5173:9:10",
														"nodeType": "YulTypedName",
														"src": "5173:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5184:6:10",
														"nodeType": "YulTypedName",
														"src": "5184:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5192:6:10",
														"nodeType": "YulTypedName",
														"src": "5192:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5203:4:10",
														"nodeType": "YulTypedName",
														"src": "5203:4:10",
														"type": ""
													}
												],
												"src": "5083:300:10"
											},
											{
												"body": {
													"nativeSrc": "5469:170:10",
													"nodeType": "YulBlock",
													"src": "5469:170:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5515:16:10",
																"nodeType": "YulBlock",
																"src": "5515:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5524:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5524:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5527:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5527:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5517:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5517:6:10"
																			},
																			"nativeSrc": "5517:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5517:12:10"
																		},
																		"nativeSrc": "5517:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5517:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5490:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5490:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5499:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5499:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5486:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5486:3:10"
																		},
																		"nativeSrc": "5486:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5486:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5511:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5511:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5482:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5482:3:10"
																},
																"nativeSrc": "5482:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5482:32:10"
															},
															"nativeSrc": "5479:52:10",
															"nodeType": "YulIf",
															"src": "5479:52:10"
														},
														{
															"nativeSrc": "5540:29:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5540:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5559:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5559:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5553:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5553:5:10"
																},
																"nativeSrc": "5553:16:10",
																"nodeType": "YulFunctionCall",
																"src": "5553:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5544:5:10",
																	"nodeType": "YulTypedName",
																	"src": "5544:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5603:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5603:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5578:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "5578:24:10"
																},
																"nativeSrc": "5578:31:10",
																"nodeType": "YulFunctionCall",
																"src": "5578:31:10"
															},
															"nativeSrc": "5578:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "5578:31:10"
														},
														{
															"nativeSrc": "5618:15:10",
															"nodeType": "YulAssignment",
															"src": "5618:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "5628:5:10",
																"nodeType": "YulIdentifier",
																"src": "5628:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5618:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5618:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "5388:251:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5435:9:10",
														"nodeType": "YulTypedName",
														"src": "5435:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5446:7:10",
														"nodeType": "YulTypedName",
														"src": "5446:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5458:6:10",
														"nodeType": "YulTypedName",
														"src": "5458:6:10",
														"type": ""
													}
												],
												"src": "5388:251:10"
											},
											{
												"body": {
													"nativeSrc": "5818:171:10",
													"nodeType": "YulBlock",
													"src": "5818:171:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5835:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5835:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5846:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5846:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5828:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5828:6:10"
																},
																"nativeSrc": "5828:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5828:21:10"
															},
															"nativeSrc": "5828:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "5828:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5869:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5869:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5880:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5880:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5865:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5865:3:10"
																		},
																		"nativeSrc": "5865:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5865:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5885:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5885:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5858:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5858:6:10"
																},
																"nativeSrc": "5858:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5858:30:10"
															},
															"nativeSrc": "5858:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "5858:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5908:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5908:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5919:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5919:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5904:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5904:3:10"
																		},
																		"nativeSrc": "5904:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5904:18:10"
																	},
																	{
																		"hexValue": "4661696c656420746f2063726561746520706f6f6c",
																		"kind": "string",
																		"nativeSrc": "5924:23:10",
																		"nodeType": "YulLiteral",
																		"src": "5924:23:10",
																		"type": "",
																		"value": "Failed to create pool"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5897:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5897:6:10"
																},
																"nativeSrc": "5897:51:10",
																"nodeType": "YulFunctionCall",
																"src": "5897:51:10"
															},
															"nativeSrc": "5897:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "5897:51:10"
														},
														{
															"nativeSrc": "5957:26:10",
															"nodeType": "YulAssignment",
															"src": "5957:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5969:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5969:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5980:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5980:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5965:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5965:3:10"
																},
																"nativeSrc": "5965:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5965:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5957:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5957:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f848200720cfffaee489e51b4359a2329522c129a1802953dc9d3cb6bddffeb9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5644:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5795:9:10",
														"nodeType": "YulTypedName",
														"src": "5795:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5809:4:10",
														"nodeType": "YulTypedName",
														"src": "5809:4:10",
														"type": ""
													}
												],
												"src": "5644:345:10"
											},
											{
												"body": {
													"nativeSrc": "6168:177:10",
													"nodeType": "YulBlock",
													"src": "6168:177:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6185:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6185:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6196:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6196:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6178:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6178:6:10"
																},
																"nativeSrc": "6178:21:10",
																"nodeType": "YulFunctionCall",
																"src": "6178:21:10"
															},
															"nativeSrc": "6178:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "6178:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6219:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6219:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6230:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6230:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6215:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6215:3:10"
																		},
																		"nativeSrc": "6215:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6215:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6235:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6235:2:10",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6208:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6208:6:10"
																},
																"nativeSrc": "6208:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6208:30:10"
															},
															"nativeSrc": "6208:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "6208:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6258:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6258:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6269:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6269:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6254:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6254:3:10"
																		},
																		"nativeSrc": "6254:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6254:18:10"
																	},
																	{
																		"hexValue": "5374617274696e67206c6971756964697479206164646974696f6e",
																		"kind": "string",
																		"nativeSrc": "6274:29:10",
																		"nodeType": "YulLiteral",
																		"src": "6274:29:10",
																		"type": "",
																		"value": "Starting liquidity addition"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6247:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6247:6:10"
																},
																"nativeSrc": "6247:57:10",
																"nodeType": "YulFunctionCall",
																"src": "6247:57:10"
															},
															"nativeSrc": "6247:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "6247:57:10"
														},
														{
															"nativeSrc": "6313:26:10",
															"nodeType": "YulAssignment",
															"src": "6313:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6325:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6325:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6336:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6336:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6321:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6321:3:10"
																},
																"nativeSrc": "6321:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6321:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6313:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6313:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_847af5c88ed3fb202d9e41a959a255471c737d793cbf61df15ac3cc7d64e6f0f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5994:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6145:9:10",
														"nodeType": "YulTypedName",
														"src": "6145:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6159:4:10",
														"nodeType": "YulTypedName",
														"src": "6159:4:10",
														"type": ""
													}
												],
												"src": "5994:351:10"
											},
											{
												"body": {
													"nativeSrc": "6524:165:10",
													"nodeType": "YulBlock",
													"src": "6524:165:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6541:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6541:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6552:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6552:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6534:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6534:6:10"
																},
																"nativeSrc": "6534:21:10",
																"nodeType": "YulFunctionCall",
																"src": "6534:21:10"
															},
															"nativeSrc": "6534:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "6534:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6575:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6575:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6586:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6586:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6571:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6571:3:10"
																		},
																		"nativeSrc": "6571:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6571:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6591:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6591:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6564:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6564:6:10"
																},
																"nativeSrc": "6564:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6564:30:10"
															},
															"nativeSrc": "6564:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "6564:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6614:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6614:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6625:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6625:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6610:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6610:3:10"
																		},
																		"nativeSrc": "6610:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6610:18:10"
																	},
																	{
																		"hexValue": "4e6f20706f6f6c2063726561746564",
																		"kind": "string",
																		"nativeSrc": "6630:17:10",
																		"nodeType": "YulLiteral",
																		"src": "6630:17:10",
																		"type": "",
																		"value": "No pool created"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6603:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6603:6:10"
																},
																"nativeSrc": "6603:45:10",
																"nodeType": "YulFunctionCall",
																"src": "6603:45:10"
															},
															"nativeSrc": "6603:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "6603:45:10"
														},
														{
															"nativeSrc": "6657:26:10",
															"nodeType": "YulAssignment",
															"src": "6657:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6669:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6669:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6680:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6680:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6665:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6665:3:10"
																},
																"nativeSrc": "6665:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6665:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6657:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6657:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_724621119f5db596bbde230b76cd5d37276aff48356c0f8f9dcac60f48930a47__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6350:339:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6501:9:10",
														"nodeType": "YulTypedName",
														"src": "6501:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6515:4:10",
														"nodeType": "YulTypedName",
														"src": "6515:4:10",
														"type": ""
													}
												],
												"src": "6350:339:10"
											},
											{
												"body": {
													"nativeSrc": "6868:229:10",
													"nodeType": "YulBlock",
													"src": "6868:229:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6885:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6885:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6896:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6896:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6878:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6878:6:10"
																},
																"nativeSrc": "6878:21:10",
																"nodeType": "YulFunctionCall",
																"src": "6878:21:10"
															},
															"nativeSrc": "6878:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "6878:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6919:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6919:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6930:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6930:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6915:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6915:3:10"
																		},
																		"nativeSrc": "6915:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6915:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6935:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6935:2:10",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6908:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6908:6:10"
																},
																"nativeSrc": "6908:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6908:30:10"
															},
															"nativeSrc": "6908:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "6908:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6958:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6958:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6969:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6969:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6954:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6954:3:10"
																		},
																		"nativeSrc": "6954:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6954:18:10"
																	},
																	{
																		"hexValue": "546f6b656e20616d6f756e7473206d7573742062652067726561746572207468",
																		"kind": "string",
																		"nativeSrc": "6974:34:10",
																		"nodeType": "YulLiteral",
																		"src": "6974:34:10",
																		"type": "",
																		"value": "Token amounts must be greater th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6947:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6947:6:10"
																},
																"nativeSrc": "6947:62:10",
																"nodeType": "YulFunctionCall",
																"src": "6947:62:10"
															},
															"nativeSrc": "6947:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "6947:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7029:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7029:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7040:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7040:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7025:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7025:3:10"
																		},
																		"nativeSrc": "7025:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7025:18:10"
																	},
																	{
																		"hexValue": "616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "7045:9:10",
																		"nodeType": "YulLiteral",
																		"src": "7045:9:10",
																		"type": "",
																		"value": "an zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7018:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7018:6:10"
																},
																"nativeSrc": "7018:37:10",
																"nodeType": "YulFunctionCall",
																"src": "7018:37:10"
															},
															"nativeSrc": "7018:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "7018:37:10"
														},
														{
															"nativeSrc": "7064:27:10",
															"nodeType": "YulAssignment",
															"src": "7064:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7076:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7076:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7087:3:10",
																		"nodeType": "YulLiteral",
																		"src": "7087:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7072:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7072:3:10"
																},
																"nativeSrc": "7072:19:10",
																"nodeType": "YulFunctionCall",
																"src": "7072:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7064:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7064:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67b5480f1b28e4dae4d922a7b15bccf15e09ed915b314470d2be602ada735c7b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6694:403:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6845:9:10",
														"nodeType": "YulTypedName",
														"src": "6845:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6859:4:10",
														"nodeType": "YulTypedName",
														"src": "6859:4:10",
														"type": ""
													}
												],
												"src": "6694:403:10"
											},
											{
												"body": {
													"nativeSrc": "7276:172:10",
													"nodeType": "YulBlock",
													"src": "7276:172:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7293:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7293:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7304:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7304:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7286:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7286:6:10"
																},
																"nativeSrc": "7286:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7286:21:10"
															},
															"nativeSrc": "7286:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "7286:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7327:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7327:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7338:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7338:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7323:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7323:3:10"
																		},
																		"nativeSrc": "7323:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7323:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7343:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7343:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7316:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7316:6:10"
																},
																"nativeSrc": "7316:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7316:30:10"
															},
															"nativeSrc": "7316:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "7316:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7366:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7366:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7377:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7377:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7362:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7362:3:10"
																		},
																		"nativeSrc": "7362:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7362:18:10"
																	},
																	{
																		"hexValue": "546f6b656e41207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "7382:24:10",
																		"nodeType": "YulLiteral",
																		"src": "7382:24:10",
																		"type": "",
																		"value": "TokenA transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7355:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7355:6:10"
																},
																"nativeSrc": "7355:52:10",
																"nodeType": "YulFunctionCall",
																"src": "7355:52:10"
															},
															"nativeSrc": "7355:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "7355:52:10"
														},
														{
															"nativeSrc": "7416:26:10",
															"nodeType": "YulAssignment",
															"src": "7416:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7428:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7428:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7439:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7439:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7424:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7424:3:10"
																},
																"nativeSrc": "7424:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7424:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7416:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7416:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7102:346:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7253:9:10",
														"nodeType": "YulTypedName",
														"src": "7253:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7267:4:10",
														"nodeType": "YulTypedName",
														"src": "7267:4:10",
														"type": ""
													}
												],
												"src": "7102:346:10"
											},
											{
												"body": {
													"nativeSrc": "7627:168:10",
													"nodeType": "YulBlock",
													"src": "7627:168:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7644:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7644:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7655:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7655:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7637:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7637:6:10"
																},
																"nativeSrc": "7637:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7637:21:10"
															},
															"nativeSrc": "7637:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "7637:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7678:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7678:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7689:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7689:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7674:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7674:3:10"
																		},
																		"nativeSrc": "7674:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7674:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7694:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7694:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7667:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7667:6:10"
																},
																"nativeSrc": "7667:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7667:30:10"
															},
															"nativeSrc": "7667:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "7667:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7717:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7717:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7728:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7728:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7713:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7713:3:10"
																		},
																		"nativeSrc": "7713:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7713:18:10"
																	},
																	{
																		"hexValue": "546f6b656e41207472616e73666572726564",
																		"kind": "string",
																		"nativeSrc": "7733:20:10",
																		"nodeType": "YulLiteral",
																		"src": "7733:20:10",
																		"type": "",
																		"value": "TokenA transferred"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7706:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7706:6:10"
																},
																"nativeSrc": "7706:48:10",
																"nodeType": "YulFunctionCall",
																"src": "7706:48:10"
															},
															"nativeSrc": "7706:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "7706:48:10"
														},
														{
															"nativeSrc": "7763:26:10",
															"nodeType": "YulAssignment",
															"src": "7763:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7775:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7775:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7786:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7786:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7771:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7771:3:10"
																},
																"nativeSrc": "7771:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7771:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7763:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7763:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d05c3b30d29b5b07b1f8faddbfc569df6dca70b5fc76a8eab0cbb2b4b52fa72e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7453:342:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7604:9:10",
														"nodeType": "YulTypedName",
														"src": "7604:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7618:4:10",
														"nodeType": "YulTypedName",
														"src": "7618:4:10",
														"type": ""
													}
												],
												"src": "7453:342:10"
											},
											{
												"body": {
													"nativeSrc": "7974:172:10",
													"nodeType": "YulBlock",
													"src": "7974:172:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7991:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7991:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8002:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8002:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7984:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7984:6:10"
																},
																"nativeSrc": "7984:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7984:21:10"
															},
															"nativeSrc": "7984:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "7984:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8025:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8025:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8036:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8036:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8021:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8021:3:10"
																		},
																		"nativeSrc": "8021:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8021:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8041:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8041:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8014:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8014:6:10"
																},
																"nativeSrc": "8014:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8014:30:10"
															},
															"nativeSrc": "8014:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "8014:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8064:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8064:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8075:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8075:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8060:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8060:3:10"
																		},
																		"nativeSrc": "8060:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8060:18:10"
																	},
																	{
																		"hexValue": "546f6b656e42207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "8080:24:10",
																		"nodeType": "YulLiteral",
																		"src": "8080:24:10",
																		"type": "",
																		"value": "TokenB transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8053:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8053:6:10"
																},
																"nativeSrc": "8053:52:10",
																"nodeType": "YulFunctionCall",
																"src": "8053:52:10"
															},
															"nativeSrc": "8053:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "8053:52:10"
														},
														{
															"nativeSrc": "8114:26:10",
															"nodeType": "YulAssignment",
															"src": "8114:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8126:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8126:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8137:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8137:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8122:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8122:3:10"
																},
																"nativeSrc": "8122:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8122:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8114:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8114:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7800:346:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7951:9:10",
														"nodeType": "YulTypedName",
														"src": "7951:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7965:4:10",
														"nodeType": "YulTypedName",
														"src": "7965:4:10",
														"type": ""
													}
												],
												"src": "7800:346:10"
											},
											{
												"body": {
													"nativeSrc": "8325:168:10",
													"nodeType": "YulBlock",
													"src": "8325:168:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8342:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8342:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8353:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8353:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8335:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8335:6:10"
																},
																"nativeSrc": "8335:21:10",
																"nodeType": "YulFunctionCall",
																"src": "8335:21:10"
															},
															"nativeSrc": "8335:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "8335:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8376:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8376:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8387:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8387:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8372:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8372:3:10"
																		},
																		"nativeSrc": "8372:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8372:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8392:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8392:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8365:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8365:6:10"
																},
																"nativeSrc": "8365:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8365:30:10"
															},
															"nativeSrc": "8365:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "8365:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8415:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8415:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8426:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8426:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8411:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8411:3:10"
																		},
																		"nativeSrc": "8411:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8411:18:10"
																	},
																	{
																		"hexValue": "546f6b656e42207472616e73666572726564",
																		"kind": "string",
																		"nativeSrc": "8431:20:10",
																		"nodeType": "YulLiteral",
																		"src": "8431:20:10",
																		"type": "",
																		"value": "TokenB transferred"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8404:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8404:6:10"
																},
																"nativeSrc": "8404:48:10",
																"nodeType": "YulFunctionCall",
																"src": "8404:48:10"
															},
															"nativeSrc": "8404:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "8404:48:10"
														},
														{
															"nativeSrc": "8461:26:10",
															"nodeType": "YulAssignment",
															"src": "8461:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8473:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8473:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8484:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8484:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8469:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8469:3:10"
																},
																"nativeSrc": "8469:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8469:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8461:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8461:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_433af072dffa991865871a0855e15ff65c04410ef2c35fa9a13b990d1685b02f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8151:342:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8302:9:10",
														"nodeType": "YulTypedName",
														"src": "8302:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8316:4:10",
														"nodeType": "YulTypedName",
														"src": "8316:4:10",
														"type": ""
													}
												],
												"src": "8151:342:10"
											},
											{
												"body": {
													"nativeSrc": "8627:119:10",
													"nodeType": "YulBlock",
													"src": "8627:119:10",
													"statements": [
														{
															"nativeSrc": "8637:26:10",
															"nodeType": "YulAssignment",
															"src": "8637:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8649:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8649:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8660:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8660:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8645:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8645:3:10"
																},
																"nativeSrc": "8645:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8645:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8637:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8637:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8679:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8679:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8690:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8690:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8672:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8672:6:10"
																},
																"nativeSrc": "8672:25:10",
																"nodeType": "YulFunctionCall",
																"src": "8672:25:10"
															},
															"nativeSrc": "8672:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "8672:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8717:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8717:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8728:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8728:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8713:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8713:3:10"
																		},
																		"nativeSrc": "8713:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8713:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8733:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8733:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8706:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8706:6:10"
																},
																"nativeSrc": "8706:34:10",
																"nodeType": "YulFunctionCall",
																"src": "8706:34:10"
															},
															"nativeSrc": "8706:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "8706:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8498:248:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8588:9:10",
														"nodeType": "YulTypedName",
														"src": "8588:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8599:6:10",
														"nodeType": "YulTypedName",
														"src": "8599:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8607:6:10",
														"nodeType": "YulTypedName",
														"src": "8607:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8618:4:10",
														"nodeType": "YulTypedName",
														"src": "8618:4:10",
														"type": ""
													}
												],
												"src": "8498:248:10"
											},
											{
												"body": {
													"nativeSrc": "8925:181:10",
													"nodeType": "YulBlock",
													"src": "8925:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8942:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8942:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8953:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8953:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8935:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8935:6:10"
																},
																"nativeSrc": "8935:21:10",
																"nodeType": "YulFunctionCall",
																"src": "8935:21:10"
															},
															"nativeSrc": "8935:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "8935:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8976:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8976:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8987:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8987:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8972:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8972:3:10"
																		},
																		"nativeSrc": "8972:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8972:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8992:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8992:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8965:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8965:6:10"
																},
																"nativeSrc": "8965:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8965:30:10"
															},
															"nativeSrc": "8965:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "8965:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9015:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9015:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9026:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9026:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9011:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9011:3:10"
																		},
																		"nativeSrc": "9011:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9011:18:10"
																	},
																	{
																		"hexValue": "496e76616c696420416c676562726120466163746f72792061646472657373",
																		"kind": "string",
																		"nativeSrc": "9031:33:10",
																		"nodeType": "YulLiteral",
																		"src": "9031:33:10",
																		"type": "",
																		"value": "Invalid Algebra Factory address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9004:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9004:6:10"
																},
																"nativeSrc": "9004:61:10",
																"nodeType": "YulFunctionCall",
																"src": "9004:61:10"
															},
															"nativeSrc": "9004:61:10",
															"nodeType": "YulExpressionStatement",
															"src": "9004:61:10"
														},
														{
															"nativeSrc": "9074:26:10",
															"nodeType": "YulAssignment",
															"src": "9074:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9086:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9086:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9097:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9097:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9082:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9082:3:10"
																},
																"nativeSrc": "9082:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9082:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9074:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9074:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_95a2feb49b1029e40960c5f143071314131a09e8c032ba7ef14c7e8b91d52899__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8751:355:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8902:9:10",
														"nodeType": "YulTypedName",
														"src": "8902:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8916:4:10",
														"nodeType": "YulTypedName",
														"src": "8916:4:10",
														"type": ""
													}
												],
												"src": "8751:355:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid token address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c7e060f1e5ee73f3c2beb76a55480adf5ff315d0e0edd965836493e574235ec6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid pool address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Invalid recipient address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f74c1d8be5143796742bd7dd7d8d89b0c10c4c13912662e84672ea6b54765128__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Starting pool creation\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_18e4817b259137ec94132f737c84152c28fb5852c0a31a9a91af72573983b0d8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Tokens must be initialized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Tokens must be different\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f848200720cfffaee489e51b4359a2329522c129a1802953dc9d3cb6bddffeb9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Failed to create pool\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_847af5c88ed3fb202d9e41a959a255471c737d793cbf61df15ac3cc7d64e6f0f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Starting liquidity addition\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_724621119f5db596bbde230b76cd5d37276aff48356c0f8f9dcac60f48930a47__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"No pool created\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_67b5480f1b28e4dae4d922a7b15bccf15e09ed915b314470d2be602ada735c7b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Token amounts must be greater th\")\n        mstore(add(headStart, 96), \"an zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"TokenA transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d05c3b30d29b5b07b1f8faddbfc569df6dca70b5fc76a8eab0cbb2b4b52fa72e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"TokenA transferred\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"TokenB transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_433af072dffa991865871a0855e15ff65c04410ef2c35fa9a13b990d1685b02f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"TokenB transferred\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_95a2feb49b1029e40960c5f143071314131a09e8c032ba7ef14c7e8b91d52899__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Invalid Algebra Factory address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063a7b64b0411610066578063a7b64b0414610185578063b62d2af914610198578063d8ed2241146101ab578063f2fde38b146101be57600080fd5b80638da5cb5b146101595780639a06b1131461016a5780639cd441da1461017257600080fd5b80630fc63d10146100d45780631a7c2131146101035780634f16fa53146101165780635f64b55b1461012b5780636fc98ee11461013e578063715018a614610151575b600080fd5b6003546100e7906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6002546100e7906001600160a01b031681565b610129610124366004610d79565b6101d1565b005b6004546100e7906001600160a01b031681565b61012961014c366004610d79565b61038a565b610129610524565b6000546001600160a01b03166100e7565b610129610538565b610129610180366004610dba565b61078d565b6001546100e7906001600160a01b031681565b6101296101a6366004610ddc565b610b0f565b6100e76101b9366004610e00565b610b8f565b6101296101cc366004610ddc565b610ca9565b6101d9610ce7565b6003546001600160a01b038481169116148061020257506004546001600160a01b038481169116145b6102275760405162461bcd60e51b815260040161021e90610e39565b60405180910390fd5b6001600160a01b0382166102745760405162461bcd60e51b8152602060048201526014602482015273496e76616c696420706f6f6c206164647265737360601b604482015260640161021e565b600081116102c45760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161021e565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610313573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103379190610e68565b50816001600160a01b0316836001600160a01b03167f32d8ccb17edf05070e5a75f56f66402f1e3071f6104787c3ec400afbb1a0d6d18360405161037d91815260200190565b60405180910390a3505050565b610392610ce7565b6003546001600160a01b03848116911614806103bb57506004546001600160a01b038481169116145b6103d75760405162461bcd60e51b815260040161021e90610e39565b6001600160a01b03821661042d5760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420726563697069656e74206164647265737300000000000000604482015260640161021e565b6000811161047d5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161021e565b6040516340c10f1960e01b81526001600160a01b038381166004830152602482018390528416906340c10f1990604401600060405180830381600087803b1580156104c757600080fd5b505af11580156104db573d6000803e3d6000fd5b50505050816001600160a01b0316836001600160a01b03167fbf67ec129007be07f346d9d2933215293a6612ce7ff17d6b479a5a5cae72890c8360405161037d91815260200190565b61052c610ce7565b6105366000610d14565b565b610540610ce7565b600080516020610ea88339815191526040516105869060208082526016908201527529ba30b93a34b733903837b7b61031b932b0ba34b7b760511b604082015260600190565b60405180910390a16003546001600160a01b0316158015906105b257506004546001600160a01b031615155b6105fe5760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e73206d75737420626520696e697469616c697a6564000000000000604482015260640161021e565b6004546003546001600160a01b039182169116036106595760405162461bcd60e51b8152602060048201526018602482015277151bdad95b9cc81b5d5cdd08189948191a5999995c995b9d60421b604482015260640161021e565b6001546003546004805460405163e343361560e01b81526001600160a01b039384169281019290925282166024820152911690819063e3433615906044016020604051808303816000875af11580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da9190610e8a565b600280546001600160a01b0319166001600160a01b0392909216918217905561073d5760405162461bcd60e51b815260206004820152601560248201527411985a5b1959081d1bc818dc99585d19481c1bdbdb605a1b604482015260640161021e565b6004546003546002546040516001600160a01b039182168152928116929116907f9c5d829b9b23efc461f9aeef91979ec04bb903feb3bee4f26d22114abfc7335b9060200160405180910390a350565b610795610ce7565b600080516020610ea88339815191526040516107e2906020808252601b908201527f5374617274696e67206c6971756964697479206164646974696f6e0000000000604082015260600190565b60405180910390a16002546001600160a01b03166108345760405162461bcd60e51b815260206004820152600f60248201526e139bc81c1bdbdb0818dc99585d1959608a1b604482015260640161021e565b6000821180156108445750600081115b6108a05760405162461bcd60e51b815260206004820152602760248201527f546f6b656e20616d6f756e7473206d7573742062652067726561746572207468604482015266616e207a65726f60c81b606482015260840161021e565b60035460025460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101859052600092919091169063a9059cbb906044016020604051808303816000875af11580156108fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091e9190610e68565b9050806109665760405162461bcd60e51b8152602060048201526016602482015275151bdad95b90481d1c985b9cd9995c8819985a5b195960521b604482015260640161021e565b600080516020610ea88339815191526040516109a890602080825260129082015271151bdad95b90481d1c985b9cd9995c9c995960721b604082015260600190565b60405180910390a16004805460025460405163a9059cbb60e01b81526001600160a01b03918216938101939093526024830185905260009291169063a9059cbb906044016020604051808303816000875af1158015610a0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2f9190610e68565b905080610a775760405162461bcd60e51b8152602060048201526016602482015275151bdad95b90881d1c985b9cd9995c8819985a5b195960521b604482015260640161021e565b600080516020610ea8833981519152604051610ab990602080825260129082015271151bdad95b90881d1c985b9cd9995c9c995960721b604082015260600190565b60405180910390a160025460408051868152602081018690526001600160a01b03909216917fac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee45910160405180910390a250505050565b610b17610ce7565b6001600160a01b038116610b6d5760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420416c676562726120466163746f7279206164647265737300604482015260640161021e565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b03831615801590610bb157506001600160a01b03821615155b610bcd5760405162461bcd60e51b815260040161021e90610e39565b816001600160a01b0316836001600160a01b031603610c295760405162461bcd60e51b8152602060048201526018602482015277151bdad95b9cc81b5d5cdd08189948191a5999995c995b9d60421b604482015260640161021e565b60015460405163d8ed224160e01b81526001600160a01b038581166004830152848116602483015290911690819063d8ed224190604401602060405180830381865afa158015610c7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca19190610e8a565b949350505050565b610cb1610ce7565b6001600160a01b038116610cdb57604051631e4fbdf760e01b81526000600482015260240161021e565b610ce481610d14565b50565b6000546001600160a01b031633146105365760405163118cdaa760e01b815233600482015260240161021e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114610ce457600080fd5b600080600060608486031215610d8e57600080fd5b8335610d9981610d64565b92506020840135610da981610d64565b929592945050506040919091013590565b60008060408385031215610dcd57600080fd5b50508035926020909101359150565b600060208284031215610dee57600080fd5b8135610df981610d64565b9392505050565b60008060408385031215610e1357600080fd5b8235610e1e81610d64565b91506020830135610e2e81610d64565b809150509250929050565b602080825260159082015274496e76616c696420746f6b656e206164647265737360581b604082015260600190565b600060208284031215610e7a57600080fd5b81518015158114610df957600080fd5b600060208284031215610e9c57600080fd5b8151610df981610d6456fe94ebca8d29d278a0288a52a710c11e928307b6f2e15fbaf4508cc4ceb3d21f8ba2646970667358221220f9f08f065c5bcc82d73f5b75cc4a17017f151a20087aa5e56ef2dd20ff13a73d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA7B64B04 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA7B64B04 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0xB62D2AF9 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xD8ED2241 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x9A06B113 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFC63D10 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x1A7C2131 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x4F16FA53 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x6FC98EE1 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x151 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x1D1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST PUSH2 0x129 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE7 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x538 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xDDC JUMP JUMPDEST PUSH2 0xB0F JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x129 PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0xDDC JUMP JUMPDEST PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x202 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420706F6F6C2061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x313 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0xE68 JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x32D8CCB17EDF05070E5A75F56F66402F1E3071F6104787C3EC400AFBB1A0D6D1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x392 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x3BB JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x42D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x47D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xBF67EC129007BE07F346D9D2933215293A6612CE7FF17D6B479A5A5CAE72890C DUP4 PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x52C PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x536 PUSH1 0x0 PUSH2 0xD14 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x540 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x586 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x29BA30B93A34B733903837B7B61031B932B0BA34B7B7 PUSH1 0x51 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x5B2 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST PUSH2 0x5FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E73206D75737420626520696E697469616C697A6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND SUB PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x151BDAD95B9CC81B5D5CDD08189948191A5999995C995B9D PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE3433615 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 DUP2 SWAP1 PUSH4 0xE3433615 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6DA SWAP2 SWAP1 PUSH2 0xE8A JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x11985A5B1959081D1BC818DC99585D19481C1BDBDB PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP3 DUP2 AND SWAP3 SWAP2 AND SWAP1 PUSH32 0x9C5D829B9B23EFC461F9AEEF91979EC04BB903FEB3BEE4F26D22114ABFC7335B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x795 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x7E2 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x5374617274696E67206C6971756964697479206164646974696F6E0000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x834 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BC81C1BDBDB0818DC99585D1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x844 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616D6F756E7473206D7573742062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616E207A65726F PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91E SWAP2 SWAP1 PUSH2 0xE68 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x966 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151BDAD95B90481D1C985B9CD9995C8819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0x9A8 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x151BDAD95B90481D1C985B9CD9995C9C9959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x4 DUP1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP3 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2F SWAP2 SWAP1 PUSH2 0xE68 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xA77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151BDAD95B90881D1C985B9CD9995C8819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xEA8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH2 0xAB9 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x151BDAD95B90881D1C985B9CD9995C9C9959 PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH32 0xAC1D76749E5447B7B16F5AB61447E1BD502F3BB4807AF3B28E620D1700A6EE45 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0xB17 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420416C676562726120466163746F7279206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xBB1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0xBCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E SWAP1 PUSH2 0xE39 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x151BDAD95B9CC81B5D5CDD08189948191A5999995C995B9D PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD8ED2241 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 DUP2 SWAP1 PUSH4 0xD8ED2241 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0xE8A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xCB1 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCDB JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x21E JUMP JUMPDEST PUSH2 0xCE4 DUP2 PUSH2 0xD14 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x536 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xD99 DUP2 PUSH2 0xD64 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xDA9 DUP2 PUSH2 0xD64 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDF9 DUP2 PUSH2 0xD64 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xE1E DUP2 PUSH2 0xD64 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xE2E DUP2 PUSH2 0xD64 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x496E76616C696420746F6B656E2061646472657373 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDF9 DUP2 PUSH2 0xD64 JUMP INVALID SWAP5 0xEB 0xCA DUP14 0x29 0xD2 PUSH25 0xA0288A52A710C11E928307B6F2E15FBAF4508CC4CEB3D21F8B LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 CREATE DUP16 MOD TLOAD JUMPDEST 0xCC DUP3 0xD7 EXTCODEHASH JUMPDEST PUSH22 0xCC4A17017F151A20087AA5E56EF2DD20FF13A73D6473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "223:5273:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;351:21;;;;;-1:-1:-1;;;;;351:21:9;;;;;;-1:-1:-1;;;;;178:32:10;;;160:51;;148:2;133:18;351:21:9;;;;;;;315:30;;;;;-1:-1:-1;;;;;315:30:9;;;3092:416;;;;;;:::i;:::-;;:::i;:::-;;378:21;;;;;-1:-1:-1;;;;;378:21:9;;;2460:388;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;1638:85::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;1687:517:9;;;:::i;3687:796::-;;;;;;:::i;:::-;;:::i;280:29::-;;;;;-1:-1:-1;;;;;280:29:9;;;5282:212;;;;;;:::i;:::-;;:::i;4740:396::-;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;3092:416:9:-;1531:13:0;:11;:13::i;:::-;3213:6:9::1;::::0;-1:-1:-1;;;;;3204:15:9;;::::1;3213:6:::0;::::1;3204:15;::::0;:34:::1;;-1:-1:-1::0;3232:6:9::1;::::0;-1:-1:-1;;;;;3223:15:9;;::::1;3232:6:::0;::::1;3223:15;3204:34;3196:68;;;;-1:-1:-1::0;;;3196:68:9::1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;3282:18:9;::::1;3274:51;;;::::0;-1:-1:-1;;;3274:51:9;;2419:2:10;3274:51:9::1;::::0;::::1;2401:21:10::0;2458:2;2438:18;;;2431:30;-1:-1:-1;;;2477:18:10;;;2470:50;2537:18;;3274:51:9::1;2217:344:10::0;3274:51:9::1;3352:1;3343:6;:10;3335:55;;;::::0;-1:-1:-1;;;3335:55:9;;2768:2:10;3335:55:9::1;::::0;::::1;2750:21:10::0;;;2787:18;;;2780:30;2846:34;2826:18;;;2819:62;2898:18;;3335:55:9::1;2566:356:10::0;3335:55:9::1;3401:41;::::0;-1:-1:-1;;;3401:41:9;;-1:-1:-1;;;;;3119:32:10;;;3401:41:9::1;::::0;::::1;3101:51:10::0;3168:18;;;3161:34;;;3401:27:9;::::1;::::0;::::1;::::0;3074:18:10;;3401:41:9::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3488:4;-1:-1:-1::0;;;;;3457:44:9::1;3481:5;-1:-1:-1::0;;;;;3457:44:9::1;;3494:6;3457:44;;;;3634:25:10::0;;3622:2;3607:18;;3488:177;3457:44:9::1;;;;;;;;3092:416:::0;;;:::o;2460:388::-;1531:13:0;:11;:13::i;:::-;2569:6:9::1;::::0;-1:-1:-1;;;;;2560:15:9;;::::1;2569:6:::0;::::1;2560:15;::::0;:34:::1;;-1:-1:-1::0;2588:6:9::1;::::0;-1:-1:-1;;;;;2579:15:9;;::::1;2588:6:::0;::::1;2579:15;2560:34;2552:68;;;;-1:-1:-1::0;;;2552:68:9::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2638:16:9;::::1;2630:54;;;::::0;-1:-1:-1;;;2630:54:9;;3872:2:10;2630:54:9::1;::::0;::::1;3854:21:10::0;3911:2;3891:18;;;3884:30;3950:27;3930:18;;;3923:55;3995:18;;2630:54:9::1;3670:349:10::0;2630:54:9::1;2711:1;2702:6;:10;2694:55;;;::::0;-1:-1:-1;;;2694:55:9;;2768:2:10;2694:55:9::1;::::0;::::1;2750:21:10::0;;;2787:18;;;2780:30;2846:34;2826:18;;;2819:62;2898:18;;2694:55:9::1;2566:356:10::0;2694:55:9::1;2760:35;::::0;-1:-1:-1;;;2760:35:9;;-1:-1:-1;;;;;3119:32:10;;;2760:35:9::1;::::0;::::1;3101:51:10::0;3168:18;;;3161:34;;;2760:23:9;::::1;::::0;::::1;::::0;3074:18:10;;2760:35:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2830:2;-1:-1:-1::0;;;;;2810:31:9::1;2823:5;-1:-1:-1::0;;;;;2810:31:9::1;;2834:6;2810:31;;;;3634:25:10::0;;3622:2;3607:18;;3488:177;2293:101:0;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1687:517:9:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;;;;;;;1743:35:9::1;;;;4226:2:10::0;4208:21;;;4265:2;4245:18;;;4238:30;-1:-1:-1;;;4299:2:10;4284:18;;4277:52;4361:2;4346:18;;4024:346;1743:35:9::1;;;;;;;;1796:6;::::0;-1:-1:-1;;;;;1796:6:9::1;:20:::0;;::::1;::::0;:44:::1;;-1:-1:-1::0;1820:6:9::1;::::0;-1:-1:-1;;;;;1820:6:9::1;:20:::0;::::1;1796:44;1788:83;;;::::0;-1:-1:-1;;;1788:83:9;;4577:2:10;1788:83:9::1;::::0;::::1;4559:21:10::0;4616:2;4596:18;;;4589:30;4655:28;4635:18;;;4628:56;4701:18;;1788:83:9::1;4375:350:10::0;1788:83:9::1;1899:6;::::0;1889::::1;::::0;-1:-1:-1;;;;;1899:6:9;;::::1;1889::::0;::::1;:16:::0;1881:53:::1;;;::::0;-1:-1:-1;;;1881:53:9;;4932:2:10;1881:53:9::1;::::0;::::1;4914:21:10::0;4971:2;4951:18;;;4944:30;-1:-1:-1;;;4990:18:10;;;4983:54;5054:18;;1881:53:9::1;4730:348:10::0;1881:53:9::1;1987:14;::::0;2049:6:::1;::::0;2057::::1;::::0;;2030:34:::1;::::0;-1:-1:-1;;;2030:34:9;;-1:-1:-1;;;;;2049:6:9;;::::1;2030:34:::0;;::::1;5257:51:10::0;;;;2057:6:9;::::1;5324:18:10::0;;;5317:60;1987:14:9;::::1;::::0;;;2030:18:::1;::::0;5230::10;;2030:34:9::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2012:15;:52:::0;;-1:-1:-1;;;;;;2012:52:9::1;-1:-1:-1::0;;;;;2012:52:9;;;::::1;::::0;;::::1;::::0;;2075:63:::1;;;::::0;-1:-1:-1;;;2075:63:9;;5846:2:10;2075:63:9::1;::::0;::::1;5828:21:10::0;5885:2;5865:18;;;5858:30;-1:-1:-1;;;5904:18:10;;;5897:51;5965:18;;2075:63:9::1;5644:345:10::0;2075:63:9::1;2173:6;::::0;2165::::1;::::0;2181:15:::1;::::0;2153:44:::1;::::0;-1:-1:-1;;;;;2181:15:9;;::::1;160:51:10::0;;2173:6:9;;::::1;::::0;2165;::::1;::::0;2153:44:::1;::::0;148:2:10;133:18;2153:44:9::1;;;;;;;1728:476;1687:517::o:0;3687:796::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;;;;;;;3787:40:9::1;;;;6196:2:10::0;6178:21;;;6235:2;6215:18;;;6208:30;6274:29;6269:2;6254:18;;6247:57;6336:2;6321:18;;5994:351;3787:40:9::1;;;;;;;;3845:15;::::0;-1:-1:-1;;;;;3845:15:9::1;3837:57;;;::::0;-1:-1:-1;;;3837:57:9;;6552:2:10;3837:57:9::1;::::0;::::1;6534:21:10::0;6591:2;6571:18;;;6564:30;-1:-1:-1;;;6610:18:10;;;6603:45;6665:18;;3837:57:9::1;6350:339:10::0;3837:57:9::1;3927:1;3912:12;:16;:36;;;;;3947:1;3932:12;:16;3912:36;3904:88;;;::::0;-1:-1:-1;;;3904:88:9;;6896:2:10;3904:88:9::1;::::0;::::1;6878:21:10::0;6935:2;6915:18;;;6908:30;6974:34;6954:18;;;6947:62;-1:-1:-1;;;7025:18:10;;;7018:37;7072:19;;3904:88:9::1;6694:403:10::0;3904:88:9::1;4070:6;::::0;4087:15:::1;::::0;4058:59:::1;::::0;-1:-1:-1;;;4058:59:9;;-1:-1:-1;;;;;4087:15:9;;::::1;4058:59;::::0;::::1;3101:51:10::0;3168:18;;;3161:34;;;4042:13:9::1;::::0;4070:6;;;::::1;::::0;4058:28:::1;::::0;3074:18:10;;4058:59:9::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4042:75;;4135:8;4127:43;;;::::0;-1:-1:-1;;;4127:43:9;;7304:2:10;4127:43:9::1;::::0;::::1;7286:21:10::0;7343:2;7323:18;;;7316:30;-1:-1:-1;;;7362:18:10;;;7355:52;7424:18;;4127:43:9::1;7102:346:10::0;4127:43:9::1;-1:-1:-1::0;;;;;;;;;;;4185:31:9::1;;;;7655:2:10::0;7637:21;;;7694:2;7674:18;;;7667:30;-1:-1:-1;;;7728:2:10;7713:18;;7706:48;7786:2;7771:18;;7453:342;4185:31:9::1;;;;;;;;4255:6;::::0;;4272:15:::1;::::0;4243:59:::1;::::0;-1:-1:-1;;;4243:59:9;;-1:-1:-1;;;;;4272:15:9;;::::1;4243:59:::0;;::::1;3101:51:10::0;;;;3168:18;;;3161:34;;;4227:13:9::1;::::0;4255:6;::::1;::::0;4243:28:::1;::::0;3074:18:10;;4243:59:9::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4227:75;;4320:8;4312:43;;;::::0;-1:-1:-1;;;4312:43:9;;8002:2:10;4312:43:9::1;::::0;::::1;7984:21:10::0;8041:2;8021:18;;;8014:30;-1:-1:-1;;;8060:18:10;;;8053:52;8122:18;;4312:43:9::1;7800:346:10::0;4312:43:9::1;-1:-1:-1::0;;;;;;;;;;;4370:31:9::1;;;;8353:2:10::0;8335:21;;;8392:2;8372:18;;;8365:30;-1:-1:-1;;;8426:2:10;8411:18;;8404:48;8484:2;8469:18;;8151:342;4370:31:9::1;;;;;;;;4432:15;::::0;4417:59:::1;::::0;;8672:25:10;;;8728:2;8713:18;;8706:34;;;-1:-1:-1;;;;;4432:15:9;;::::1;::::0;4417:59:::1;::::0;8645:18:10;4417:59:9::1;;;;;;;3772:711;;3687:796:::0;;:::o;5282:212::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;5376:31:9;::::1;5368:75;;;::::0;-1:-1:-1;;;5368:75:9;;8953:2:10;5368:75:9::1;::::0;::::1;8935:21:10::0;8992:2;8972:18;;;8965:30;9031:33;9011:18;;;9004:61;9082:18;;5368:75:9::1;8751:355:10::0;5368:75:9::1;5453:14;:34:::0;;-1:-1:-1;;;;;;5453:34:9::1;-1:-1:-1::0;;;;;5453:34:9;;;::::1;::::0;;;::::1;::::0;;5282:212::o;4740:396::-;4823:19;-1:-1:-1;;;;;4862:20:9;;;;;;:44;;-1:-1:-1;;;;;;4886:20:9;;;;4862:44;4854:78;;;;-1:-1:-1;;;4854:78:9;;;;;;;:::i;:::-;4960:6;-1:-1:-1;;;;;4950:16:9;:6;-1:-1:-1;;;;;4950:16:9;;4942:53;;;;-1:-1:-1;;;4942:53:9;;4932:2:10;4942:53:9;;;4914:21:10;4971:2;4951:18;;;4944:30;-1:-1:-1;;;4990:18:10;;;4983:54;5054:18;;4942:53:9;4730:348:10;4942:53:9;5048:14;;5087:42;;-1:-1:-1;;;5087:42:9;;-1:-1:-1;;;;;5275:32:10;;;5087:42:9;;;5257:51:10;5344:32;;;5324:18;;;5317:60;5048:14:9;;;;;;5087:26;;5230:18:10;;5087:42:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5073:56;4740:396;-1:-1:-1;;;;4740:396:9:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;160:51:10::0;133:18;;2672:31:0::1;14:203:10::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;160:51:10;133:18;;1901:40:0;14:203:10;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;222:131:10:-;-1:-1:-1;;;;;297:31:10;;287:42;;277:70;;343:1;340;333:12;358:508;435:6;443;451;504:2;492:9;483:7;479:23;475:32;472:52;;;520:1;517;510:12;472:52;559:9;546:23;578:31;603:5;578:31;:::i;:::-;628:5;-1:-1:-1;685:2:10;670:18;;657:32;698:33;657:32;698:33;:::i;:::-;358:508;;750:7;;-1:-1:-1;;;830:2:10;815:18;;;;802:32;;358:508::o;871:346::-;939:6;947;1000:2;988:9;979:7;975:23;971:32;968:52;;;1016:1;1013;1006:12;968:52;-1:-1:-1;;1061:23:10;;;1181:2;1166:18;;;1153:32;;-1:-1:-1;871:346:10:o;1222:247::-;1281:6;1334:2;1322:9;1313:7;1309:23;1305:32;1302:52;;;1350:1;1347;1340:12;1302:52;1389:9;1376:23;1408:31;1433:5;1408:31;:::i;:::-;1458:5;1222:247;-1:-1:-1;;;1222:247:10:o;1474:388::-;1542:6;1550;1603:2;1591:9;1582:7;1578:23;1574:32;1571:52;;;1619:1;1616;1609:12;1571:52;1658:9;1645:23;1677:31;1702:5;1677:31;:::i;:::-;1727:5;-1:-1:-1;1784:2:10;1769:18;;1756:32;1797:33;1756:32;1797:33;:::i;:::-;1849:7;1839:17;;;1474:388;;;;;:::o;1867:345::-;2069:2;2051:21;;;2108:2;2088:18;;;2081:30;-1:-1:-1;;;2142:2:10;2127:18;;2120:51;2203:2;2188:18;;1867:345::o;3206:277::-;3273:6;3326:2;3314:9;3305:7;3301:23;3297:32;3294:52;;;3342:1;3339;3332:12;3294:52;3374:9;3368:16;3427:5;3420:13;3413:21;3406:5;3403:32;3393:60;;3449:1;3446;3439:12;5388:251;5458:6;5511:2;5499:9;5490:7;5486:23;5482:32;5479:52;;;5527:1;5524;5517:12;5479:52;5559:9;5553:16;5578:31;5603:5;5578:31;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "767400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256,uint256)": "infinite",
								"algebraFactory()": "2347",
								"computePoolAddress(address,address)": "infinite",
								"createPool()": "infinite",
								"lastCreatedPool()": "2348",
								"mintTokens(address,address,uint256)": "infinite",
								"owner()": "2342",
								"renounceOwnership()": "infinite",
								"tokenA()": "2326",
								"tokenB()": "2392",
								"transferOwnership(address)": "infinite",
								"transferTokensToPool(address,address,uint256)": "infinite",
								"updateAlgebraFactory(address)": "26808"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 223,
									"end": 5496,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 223,
									"end": 5496,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 223,
									"end": 5496,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 804,
									"end": 1588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 262,
									"end": 272,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 262,
									"end": 272,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 516,
									"end": 567,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 489,
									"end": 507,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 489,
									"end": 507,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 879,
									"end": 908,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 879,
									"end": 908,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 871,
									"end": 944,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 871,
									"end": 944,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 871,
									"end": 944,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 871,
									"end": 944,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 871,
									"end": 944,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 871,
									"end": 944,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 780,
									"end": 782,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 871,
									"end": 944,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 871,
									"end": 944,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 871,
									"end": 944,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 762,
									"end": 783,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 819,
									"end": 821,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 799,
									"end": 817,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 799,
									"end": 817,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 799,
									"end": 817,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 792,
									"end": 822,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 858,
									"end": 891,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C696420416C676562726120466163746F7279206164647265737300"
								},
								{
									"begin": 838,
									"end": 856,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 838,
									"end": 856,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 838,
									"end": 856,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 831,
									"end": 892,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 909,
									"end": 927,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 909,
									"end": 927,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 871,
									"end": 944,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 578,
									"end": 933,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 871,
									"end": 944,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 871,
									"end": 944,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 975,
									"end": 976,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 962,
									"end": 972,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 962,
									"end": 976,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 954,
									"end": 1018,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 954,
									"end": 1018,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 954,
									"end": 1018,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 954,
									"end": 1018,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 954,
									"end": 1018,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 954,
									"end": 1018,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1140,
									"end": 1142,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 954,
									"end": 1018,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 954,
									"end": 1018,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 954,
									"end": 1018,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1143,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1179,
									"end": 1181,
									"name": "PUSH",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1159,
									"end": 1177,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1159,
									"end": 1177,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1159,
									"end": 1177,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1152,
									"end": 1182,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1218,
									"end": 1252,
									"name": "PUSH",
									"source": 10,
									"value": "4D696E7420616D6F756E74206D7573742062652067726561746572207468616E"
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1191,
									"end": 1253,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "207A65726F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1269,
									"end": 1287,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1269,
									"end": 1287,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1269,
									"end": 1287,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1262,
									"end": 1297,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1314,
									"end": 1333,
									"name": "PUSH",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 1314,
									"end": 1333,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 954,
									"end": 1018,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 938,
									"end": 1339,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 954,
									"end": 1018,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 954,
									"end": 1018,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1029,
									"end": 1043,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1029,
									"end": 1061,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1029,
									"end": 1061,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1029,
									"end": 1061,
									"name": "AND",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1029,
									"end": 1061,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1029,
									"end": 1061,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1029,
									"end": 1061,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1029,
									"end": 1061,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1029,
									"end": 1061,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1120,
									"end": 1137,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "CREATE",
									"source": 9
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "RETURNDATACOPY",
									"source": 9
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "266C45BB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1629,
									"end": 1650,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 1650,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 1650,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 1650,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1686,
									"end": 1687,
									"name": "PUSH",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1659,
									"end": 1688,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "546F6B656E41"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1704,
									"end": 1722,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1704,
									"end": 1722,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1704,
									"end": 1722,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1697,
									"end": 1733,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1771,
									"end": 1774,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1749,
									"end": 1769,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1749,
									"end": 1769,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1749,
									"end": 1769,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1742,
									"end": 1775,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1812,
									"end": 1813,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1791,
									"end": 1810,
									"name": "PUSH",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 1791,
									"end": 1810,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1791,
									"end": 1810,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1784,
									"end": 1814,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5441"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1830,
									"end": 1849,
									"name": "PUSH",
									"source": 10,
									"value": "A4"
								},
								{
									"begin": 1830,
									"end": 1849,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1830,
									"end": 1849,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1823,
									"end": 1856,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1137,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1137,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1147,
									"end": 1165,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1165,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1165,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1165,
									"name": "PUSH",
									"source": 9,
									"value": "4CD88B76"
								},
								{
									"begin": 1147,
									"end": 1165,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1873,
									"end": 1892,
									"name": "PUSH",
									"source": 10,
									"value": "C4"
								},
								{
									"begin": 1873,
									"end": 1892,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "EXTCODESIZE",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "GAS",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "CALL",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "RETURNDATACOPY",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1147,
									"end": 1181,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40C10F19"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1214,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2077,
									"end": 2128,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2144,
									"end": 2162,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2144,
									"end": 2162,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2144,
									"end": 2162,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2137,
									"end": 2171,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2137,
									"end": 2171,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2137,
									"end": 2171,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1191,
									"end": 1203,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1203,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1203,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1191,
									"end": 1203,
									"name": "PUSH",
									"source": 9,
									"value": "40C10F19"
								},
								{
									"begin": 1191,
									"end": 1203,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2050,
									"end": 2068,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 2050,
									"end": 2068,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "EXTCODESIZE",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "GAS",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "CALL",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "RETURNDATACOPY",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1191,
									"end": 1227,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1237,
									"end": 1243,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1237,
									"end": 1262,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1237,
									"end": 1262,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1237,
									"end": 1262,
									"name": "AND",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1237,
									"end": 1262,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1237,
									"end": 1262,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1237,
									"end": 1262,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1237,
									"end": 1262,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1237,
									"end": 1262,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1237,
									"end": 1262,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1237,
									"end": 1262,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1237,
									"end": 1262,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1277,
									"end": 1321,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1277,
									"end": 1321,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2328,
									"end": 2353,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2328,
									"end": 2353,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2328,
									"end": 2353,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1298,
									"end": 1308,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1237,
									"end": 1262,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1237,
									"end": 1262,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "1F8AF5D09536CFFF9C726B5B64E3468E91184F0E2F8D91057F8023DACFC32600"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1277,
									"end": 1321,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2316,
									"end": 2318,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2301,
									"end": 2319,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1277,
									"end": 1321,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1277,
									"end": 1321,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1277,
									"end": 1321,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1277,
									"end": 1321,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1277,
									"end": 1321,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1277,
									"end": 1321,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1277,
									"end": 1321,
									"name": "LOG3",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1377,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1380,
									"end": 1397,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "CREATE",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "RETURNDATACOPY",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1380,
									"end": 1397,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "266C45BB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2649,
									"end": 2670,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2649,
									"end": 2670,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2649,
									"end": 2670,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2649,
									"end": 2670,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2706,
									"end": 2707,
									"name": "PUSH",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 2686,
									"end": 2704,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 2686,
									"end": 2704,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2686,
									"end": 2704,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2679,
									"end": 2708,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2A37B5B2B721"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2724,
									"end": 2742,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2724,
									"end": 2742,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2724,
									"end": 2742,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2717,
									"end": 2753,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2791,
									"end": 2794,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2769,
									"end": 2789,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2769,
									"end": 2789,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2769,
									"end": 2789,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2762,
									"end": 2795,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2832,
									"end": 2833,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2811,
									"end": 2830,
									"name": "PUSH",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 2811,
									"end": 2830,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2811,
									"end": 2830,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2804,
									"end": 2834,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2A21"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2850,
									"end": 2869,
									"name": "PUSH",
									"source": 10,
									"value": "A4"
								},
								{
									"begin": 2850,
									"end": 2869,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2850,
									"end": 2869,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2843,
									"end": 2876,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1397,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1397,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1407,
									"end": 1425,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1425,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1425,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1425,
									"name": "PUSH",
									"source": 9,
									"value": "4CD88B76"
								},
								{
									"begin": 1407,
									"end": 1425,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2893,
									"end": 2912,
									"name": "PUSH",
									"source": 10,
									"value": "C4"
								},
								{
									"begin": 2893,
									"end": 2912,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "EXTCODESIZE",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "GAS",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "CALL",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "RETURNDATACOPY",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1407,
									"end": 1441,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40C10F19"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1464,
									"end": 1474,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2077,
									"end": 2128,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2144,
									"end": 2162,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2144,
									"end": 2162,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2144,
									"end": 2162,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2137,
									"end": 2171,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2137,
									"end": 2171,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2137,
									"end": 2171,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "PUSH",
									"source": 9,
									"value": "40C10F19"
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2050,
									"end": 2068,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 2050,
									"end": 2068,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "EXTCODESIZE",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "GAS",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "CALL",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "RETURNDATACOPY",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1451,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1497,
									"end": 1503,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "AND",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1537,
									"end": 1581,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1537,
									"end": 1581,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2328,
									"end": 2353,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2328,
									"end": 2353,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2328,
									"end": 2353,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1558,
									"end": 1568,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1558,
									"end": 1568,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "1F8AF5D09536CFFF9C726B5B64E3468E91184F0E2F8D91057F8023DACFC32600"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1537,
									"end": 1581,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2316,
									"end": 2318,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2301,
									"end": 2319,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1537,
									"end": 1581,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1537,
									"end": 1581,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1537,
									"end": 1581,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1537,
									"end": 1581,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1537,
									"end": 1581,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1537,
									"end": 1581,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1537,
									"end": 1581,
									"name": "LOG3",
									"source": 9
								},
								{
									"begin": 861,
									"end": 1588,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 861,
									"end": 1588,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 804,
									"end": 1588,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 223,
									"end": 5496,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 223,
									"end": 5496,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 223,
									"end": 5496,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 223,
									"end": 5496,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 223,
									"end": 5496,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 223,
									"end": 5496,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 223,
									"end": 5496,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 223,
									"end": 5496,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 223,
									"end": 5496,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 223,
									"end": 5496,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 223,
									"end": 5496,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 223,
									"end": 5496,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 365,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 365,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 93,
									"end": 99,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 101,
									"end": 107,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 154,
									"end": 156,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 142,
									"end": 151,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 133,
									"end": 140,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 129,
									"end": 152,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 125,
									"end": 157,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 122,
									"end": 174,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 122,
									"end": 174,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 122,
									"end": 174,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 170,
									"end": 171,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 168,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 160,
									"end": 172,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 122,
									"end": 174,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 122,
									"end": 174,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 196,
									"end": 212,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 196,
									"end": 212,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 241,
									"end": 272,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 241,
									"end": 272,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 231,
									"end": 273,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 231,
									"end": 273,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 221,
									"end": 291,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 221,
									"end": 291,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 287,
									"end": 288,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 284,
									"end": 285,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 277,
									"end": 289,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 221,
									"end": 291,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 221,
									"end": 291,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 355,
									"end": 357,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 340,
									"end": 358,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 340,
									"end": 358,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 340,
									"end": 358,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 340,
									"end": 358,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 334,
									"end": 359,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 310,
									"end": 315,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 310,
									"end": 315,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 334,
									"end": 359,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 334,
									"end": 359,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 365,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2364,
									"end": 2918,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 2364,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 223,
									"end": 5496,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 5496,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 223,
									"end": 5496,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 5496,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 5496,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 223,
									"end": 5496,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 5496,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f9f08f065c5bcc82d73f5b75cc4a17017f151a20087aa5e56ef2dd20ff13a73d64736f6c634300081a0033",
									".code": [
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "A7B64B04"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "A7B64B04"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "B62D2AF9"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "D8ED2241"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "9A06B113"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "9CD441DA"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "FC63D10"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "1A7C2131"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "4F16FA53"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "5F64B55B"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "6FC98EE1"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 5496,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 351,
											"end": 372,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 351,
											"end": 372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 351,
											"end": 372,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 351,
											"end": 372,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 351,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 351,
											"end": 372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 351,
											"end": 372,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 351,
											"end": 372,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 351,
											"end": 372,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 351,
											"end": 372,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 351,
											"end": 372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 351,
											"end": 372,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 372,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 351,
											"end": 372,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 372,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 351,
											"end": 372,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 351,
											"end": 372,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 351,
											"end": 372,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 351,
											"end": 372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 351,
											"end": 372,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 315,
											"end": 345,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 315,
											"end": 345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 315,
											"end": 345,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 315,
											"end": 345,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 315,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 315,
											"end": 345,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 315,
											"end": 345,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 315,
											"end": 345,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 315,
											"end": 345,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3092,
											"end": 3508,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3092,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3092,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3092,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3092,
											"end": 3508,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3092,
											"end": 3508,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3092,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 3092,
											"end": 3508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3092,
											"end": 3508,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3092,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3092,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 3092,
											"end": 3508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3092,
											"end": 3508,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3092,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3092,
											"end": 3508,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 378,
											"end": 399,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 378,
											"end": 399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 378,
											"end": 399,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 378,
											"end": 399,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 378,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 378,
											"end": 399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 378,
											"end": 399,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 378,
											"end": 399,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 378,
											"end": 399,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2848,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2460,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2460,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 2460,
											"end": 2848,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2848,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2460,
											"end": 2848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2848,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 2460,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2460,
											"end": 2848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 2204,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1687,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1687,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1687,
											"end": 2204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 4483,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3687,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3687,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3687,
											"end": 4483,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 4483,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3687,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3687,
											"end": 4483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 4483,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3687,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 3687,
											"end": 4483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 280,
											"end": 309,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 280,
											"end": 309,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 280,
											"end": 309,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 280,
											"end": 309,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 280,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 280,
											"end": 309,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 280,
											"end": 309,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 280,
											"end": 309,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 280,
											"end": 309,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5494,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 5282,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 5282,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 5282,
											"end": 5494,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5494,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5282,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 5282,
											"end": 5494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5494,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 5282,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 5282,
											"end": 5494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4740,
											"end": 5136,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 4740,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4740,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 4740,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 4740,
											"end": 5136,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4740,
											"end": 5136,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4740,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4740,
											"end": 5136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4740,
											"end": 5136,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 4740,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4740,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 4740,
											"end": 5136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3508,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 3092,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3213,
											"end": 3219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3204,
											"end": 3219,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3204,
											"end": 3219,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3204,
											"end": 3219,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3219,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3204,
											"end": 3219,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3204,
											"end": 3219,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3204,
											"end": 3238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 3204,
											"end": 3238,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3232,
											"end": 3238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3232,
											"end": 3238,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3223,
											"end": 3238,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3238,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3238,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3232,
											"end": 3238,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3232,
											"end": 3238,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3238,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3204,
											"end": 3238,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 3204,
											"end": 3238,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 3196,
											"end": 3264,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 3196,
											"end": 3264,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3282,
											"end": 3300,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3300,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3274,
											"end": 3325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3274,
											"end": 3325,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3274,
											"end": 3325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3274,
											"end": 3325,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3274,
											"end": 3325,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3274,
											"end": 3325,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2421,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3274,
											"end": 3325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3274,
											"end": 3325,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3274,
											"end": 3325,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2422,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2460,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2431,
											"end": 2461,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420706F6F6C2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2477,
											"end": 2495,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2477,
											"end": 2495,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2495,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2520,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2537,
											"end": 2555,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2537,
											"end": 2555,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 2217,
											"end": 2561,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3325,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3274,
											"end": 3325,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3349,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3343,
											"end": 3353,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3390,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 3335,
											"end": 3390,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3335,
											"end": 3390,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3335,
											"end": 3390,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3390,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2770,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3335,
											"end": 3390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3335,
											"end": 3390,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3390,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2750,
											"end": 2771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2750,
											"end": 2771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2750,
											"end": 2771,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2787,
											"end": 2805,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2787,
											"end": 2805,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2787,
											"end": 2805,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2810,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2880,
											"name": "PUSH",
											"source": 10,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 2826,
											"end": 2844,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2826,
											"end": 2844,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2844,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2819,
											"end": 2881,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2898,
											"end": 2916,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2898,
											"end": 2916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3335,
											"end": 3390,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 2566,
											"end": 2922,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3335,
											"end": 3390,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 3335,
											"end": 3390,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3401,
											"end": 3442,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3401,
											"end": 3442,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3401,
											"end": 3442,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3101,
											"end": 3152,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3186,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3168,
											"end": 3186,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3186,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3161,
											"end": 3195,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3161,
											"end": 3195,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3161,
											"end": 3195,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3428,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3428,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3428,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 3401,
											"end": 3428,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3092,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3074,
											"end": 3092,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3401,
											"end": 3442,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3401,
											"end": 3442,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3442,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3492,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3457,
											"end": 3501,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3486,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3457,
											"end": 3501,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "32D8CCB17EDF05070E5A75F56F66402F1E3071F6104787C3EC400AFBB1A0D6D1"
										},
										{
											"begin": 3494,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3457,
											"end": 3501,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 3457,
											"end": 3501,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3634,
											"end": 3659,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3634,
											"end": 3659,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3622,
											"end": 3624,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3607,
											"end": 3625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3625,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3488,
											"end": 3665,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3457,
											"end": 3501,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 3457,
											"end": 3501,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3457,
											"end": 3501,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3501,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3501,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3501,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3501,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 3092,
											"end": 3508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3092,
											"end": 3508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3092,
											"end": 3508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3092,
											"end": 3508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2848,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2460,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2560,
											"end": 2575,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2560,
											"end": 2575,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2560,
											"end": 2575,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2575,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2560,
											"end": 2575,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2560,
											"end": 2575,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2560,
											"end": 2594,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2560,
											"end": 2594,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2588,
											"end": 2594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2588,
											"end": 2594,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2579,
											"end": 2594,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 2594,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 2594,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2588,
											"end": 2594,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2588,
											"end": 2594,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 2594,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2560,
											"end": 2594,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2560,
											"end": 2594,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2552,
											"end": 2620,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 2552,
											"end": 2620,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2552,
											"end": 2620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2552,
											"end": 2620,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2552,
											"end": 2620,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2552,
											"end": 2620,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2552,
											"end": 2620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2552,
											"end": 2620,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2552,
											"end": 2620,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 2552,
											"end": 2620,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2552,
											"end": 2620,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2552,
											"end": 2620,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2552,
											"end": 2620,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 2552,
											"end": 2620,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2638,
											"end": 2654,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2638,
											"end": 2654,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2630,
											"end": 2684,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 2630,
											"end": 2684,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2630,
											"end": 2684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2630,
											"end": 2684,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2630,
											"end": 2684,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2630,
											"end": 2684,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3872,
											"end": 3874,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2630,
											"end": 2684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2630,
											"end": 2684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2630,
											"end": 2684,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3875,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3911,
											"end": 3913,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 3891,
											"end": 3909,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3891,
											"end": 3909,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3891,
											"end": 3909,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3884,
											"end": 3914,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3950,
											"end": 3977,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420726563697069656E74206164647265737300000000000000"
										},
										{
											"begin": 3930,
											"end": 3948,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3930,
											"end": 3948,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3930,
											"end": 3948,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 3978,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3995,
											"end": 4013,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3995,
											"end": 4013,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2630,
											"end": 2684,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 3670,
											"end": 4019,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2630,
											"end": 2684,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 2630,
											"end": 2684,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2711,
											"end": 2712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2708,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2702,
											"end": 2712,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2694,
											"end": 2749,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2694,
											"end": 2749,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2694,
											"end": 2749,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2749,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2770,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2694,
											"end": 2749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2694,
											"end": 2749,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2749,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2750,
											"end": 2771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2750,
											"end": 2771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2750,
											"end": 2771,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2787,
											"end": 2805,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2787,
											"end": 2805,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2787,
											"end": 2805,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2810,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2880,
											"name": "PUSH",
											"source": 10,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 2826,
											"end": 2844,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2826,
											"end": 2844,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2844,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2819,
											"end": 2881,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2898,
											"end": 2916,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2898,
											"end": 2916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2694,
											"end": 2749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 2566,
											"end": 2922,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2694,
											"end": 2749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2694,
											"end": 2749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2760,
											"end": 2795,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2760,
											"end": 2795,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2760,
											"end": 2795,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3101,
											"end": 3152,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3186,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3168,
											"end": 3186,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3186,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3161,
											"end": 3195,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3161,
											"end": 3195,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3161,
											"end": 3195,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2783,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2783,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 2760,
											"end": 2783,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3092,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3074,
											"end": 3092,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2795,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2795,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2795,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2830,
											"end": 2832,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2810,
											"end": 2841,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2828,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2810,
											"end": 2841,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "BF67EC129007BE07F346D9D2933215293A6612CE7FF17D6B479A5A5CAE72890C"
										},
										{
											"begin": 2834,
											"end": 2840,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2810,
											"end": 2841,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 2810,
											"end": 2841,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3634,
											"end": 3659,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3634,
											"end": 3659,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3622,
											"end": 3624,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3607,
											"end": 3625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3625,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3488,
											"end": 3665,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 2204,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1687,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CD3C33721F956E41CD7226E4EC1D7A9AFED0F88A83C3CAEA27C8CE3F8C1BDBBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1743,
											"end": 1778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1743,
											"end": 1778,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1743,
											"end": 1778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1743,
											"end": 1778,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4228,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4208,
											"end": 4229,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4208,
											"end": 4229,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4208,
											"end": 4229,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4267,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 4245,
											"end": 4263,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4245,
											"end": 4263,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4245,
											"end": 4263,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4238,
											"end": 4268,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "29BA30B93A34B733903837B7B61031B932B0BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4299,
											"end": 4301,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4277,
											"end": 4329,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4361,
											"end": 4363,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4370,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1743,
											"end": 1778,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1743,
											"end": 1778,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1743,
											"end": 1778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1743,
											"end": 1778,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1743,
											"end": 1778,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1743,
											"end": 1778,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1743,
											"end": 1778,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1743,
											"end": 1778,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1743,
											"end": 1778,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1796,
											"end": 1802,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1816,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1816,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1816,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1816,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1840,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1796,
											"end": 1840,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1820,
											"end": 1826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1820,
											"end": 1826,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1820,
											"end": 1826,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1840,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1840,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1840,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1796,
											"end": 1840,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1788,
											"end": 1871,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1788,
											"end": 1871,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1788,
											"end": 1871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1788,
											"end": 1871,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1788,
											"end": 1871,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1788,
											"end": 1871,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4577,
											"end": 4579,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1788,
											"end": 1871,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1788,
											"end": 1871,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4559,
											"end": 4580,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4616,
											"end": 4618,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 4596,
											"end": 4614,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4596,
											"end": 4614,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4596,
											"end": 4614,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4589,
											"end": 4619,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4655,
											"end": 4683,
											"name": "PUSH",
											"source": 10,
											"value": "546F6B656E73206D75737420626520696E697469616C697A6564000000000000"
										},
										{
											"begin": 4635,
											"end": 4653,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4635,
											"end": 4653,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4684,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4701,
											"end": 4719,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4701,
											"end": 4719,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 1871,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 4375,
											"end": 4725,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 1871,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1788,
											"end": 1871,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 1905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1899,
											"end": 1905,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 1895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1889,
											"end": 1895,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1899,
											"end": 1905,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 1905,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 1905,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 1895,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 1895,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 1905,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1881,
											"end": 1934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1881,
											"end": 1934,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1881,
											"end": 1934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1881,
											"end": 1934,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1881,
											"end": 1934,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1881,
											"end": 1934,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4932,
											"end": 4934,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1881,
											"end": 1934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1881,
											"end": 1934,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1881,
											"end": 1934,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4914,
											"end": 4935,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4971,
											"end": 4973,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B9CC81B5D5CDD08189948191A5999995C995B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5037,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5054,
											"end": 5072,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5054,
											"end": 5072,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1934,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 4730,
											"end": 5078,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1934,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1881,
											"end": 1934,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 2001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1987,
											"end": 2001,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2049,
											"end": 2055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2057,
											"end": 2063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2057,
											"end": 2063,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2057,
											"end": 2063,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2030,
											"end": 2064,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3433615"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2030,
											"end": 2064,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2049,
											"end": 2055,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5257,
											"end": 5308,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5257,
											"end": 5308,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5257,
											"end": 5308,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5257,
											"end": 5308,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2057,
											"end": 2063,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2057,
											"end": 2063,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5317,
											"end": 5377,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1987,
											"end": 2001,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 2001,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 2001,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 2001,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 2001,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E3433615"
										},
										{
											"begin": 2030,
											"end": 2048,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5248,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5230,
											"end": 5248,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2064,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 2030,
											"end": 2064,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2030,
											"end": 2064,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2012,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2012,
											"end": 2064,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2012,
											"end": 2064,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2012,
											"end": 2064,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2012,
											"end": 2064,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2012,
											"end": 2064,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2012,
											"end": 2064,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2012,
											"end": 2064,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2012,
											"end": 2064,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2012,
											"end": 2064,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2012,
											"end": 2064,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2012,
											"end": 2064,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2012,
											"end": 2064,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 2075,
											"end": 2138,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2138,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2075,
											"end": 2138,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2138,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5846,
											"end": 5848,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2075,
											"end": 2138,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2138,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5828,
											"end": 5849,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5885,
											"end": 5887,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 5865,
											"end": 5883,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5865,
											"end": 5883,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5865,
											"end": 5883,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5858,
											"end": 5888,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11985A5B1959081D1BC818DC99585D19481C1BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5897,
											"end": 5948,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5965,
											"end": 5983,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5965,
											"end": 5983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 5644,
											"end": 5989,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2138,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 2075,
											"end": 2138,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2173,
											"end": 2179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2173,
											"end": 2179,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2181,
											"end": 2196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2181,
											"end": 2196,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2153,
											"end": 2197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2197,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2181,
											"end": 2196,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2181,
											"end": 2196,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2181,
											"end": 2196,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2179,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2173,
											"end": 2179,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2173,
											"end": 2179,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2173,
											"end": 2179,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2171,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2153,
											"end": 2197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9C5D829B9B23EFC461F9AEEF91979EC04BB903FEB3BEE4F26D22114ABFC7335B"
										},
										{
											"begin": 2153,
											"end": 2197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2197,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2153,
											"end": 2197,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2153,
											"end": 2197,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2153,
											"end": 2197,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2153,
											"end": 2197,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2153,
											"end": 2197,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 2204,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 2204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 4483,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 3687,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CD3C33721F956E41CD7226E4EC1D7A9AFED0F88A83C3CAEA27C8CE3F8C1BDBBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3787,
											"end": 3827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3787,
											"end": 3827,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3787,
											"end": 3827,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3787,
											"end": 3827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6196,
											"end": 6198,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6178,
											"end": 6199,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6178,
											"end": 6199,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6178,
											"end": 6199,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6235,
											"end": 6237,
											"name": "PUSH",
											"source": 10,
											"value": "1B"
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6208,
											"end": 6238,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6274,
											"end": 6303,
											"name": "PUSH",
											"source": 10,
											"value": "5374617274696E67206C6971756964697479206164646974696F6E0000000000"
										},
										{
											"begin": 6269,
											"end": 6271,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6254,
											"end": 6272,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6254,
											"end": 6272,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6247,
											"end": 6304,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6336,
											"end": 6338,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6321,
											"end": 6339,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6321,
											"end": 6339,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6345,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3787,
											"end": 3827,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3787,
											"end": 3827,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3787,
											"end": 3827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3787,
											"end": 3827,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3787,
											"end": 3827,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3787,
											"end": 3827,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3787,
											"end": 3827,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3787,
											"end": 3827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3787,
											"end": 3827,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 3845,
											"end": 3860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3845,
											"end": 3860,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3845,
											"end": 3860,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3837,
											"end": 3894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3837,
											"end": 3894,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3837,
											"end": 3894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3837,
											"end": 3894,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3837,
											"end": 3894,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3837,
											"end": 3894,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6552,
											"end": 6554,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3837,
											"end": 3894,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3837,
											"end": 3894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6534,
											"end": 6555,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6591,
											"end": 6593,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 6571,
											"end": 6589,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6571,
											"end": 6589,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6571,
											"end": 6589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6564,
											"end": 6594,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81C1BDBDB0818DC99585D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6610,
											"end": 6628,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6610,
											"end": 6628,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6610,
											"end": 6628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6603,
											"end": 6648,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6665,
											"end": 6683,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6665,
											"end": 6683,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3837,
											"end": 3894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 6350,
											"end": 6689,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3837,
											"end": 3894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3837,
											"end": 3894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3927,
											"end": 3928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3912,
											"end": 3924,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3912,
											"end": 3928,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3912,
											"end": 3948,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3912,
											"end": 3948,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3912,
											"end": 3948,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 3912,
											"end": 3948,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3912,
											"end": 3948,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3947,
											"end": 3948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3932,
											"end": 3944,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 3948,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3912,
											"end": 3948,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 3912,
											"end": 3948,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3904,
											"end": 3992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 3904,
											"end": 3992,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3904,
											"end": 3992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3904,
											"end": 3992,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3904,
											"end": 3992,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3904,
											"end": 3992,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6896,
											"end": 6898,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3904,
											"end": 3992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3904,
											"end": 3992,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3904,
											"end": 3992,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6878,
											"end": 6899,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "PUSH",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 6915,
											"end": 6933,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6915,
											"end": 6933,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6915,
											"end": 6933,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6908,
											"end": 6938,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6974,
											"end": 7008,
											"name": "PUSH",
											"source": 10,
											"value": "546F6B656E20616D6F756E7473206D7573742062652067726561746572207468"
										},
										{
											"begin": 6954,
											"end": 6972,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6954,
											"end": 6972,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6954,
											"end": 6972,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6947,
											"end": 7009,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616E207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7025,
											"end": 7043,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7025,
											"end": 7043,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7025,
											"end": 7043,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7018,
											"end": 7055,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7072,
											"end": 7091,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 7072,
											"end": 7091,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3904,
											"end": 3992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 6694,
											"end": 7097,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3904,
											"end": 3992,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 3904,
											"end": 3992,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4070,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4070,
											"end": 4076,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4087,
											"end": 4102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4087,
											"end": 4102,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4058,
											"end": 4117,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4058,
											"end": 4117,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4087,
											"end": 4102,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4087,
											"end": 4102,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4087,
											"end": 4102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4058,
											"end": 4117,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3101,
											"end": 3152,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3186,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3168,
											"end": 3186,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3186,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3161,
											"end": 3195,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3161,
											"end": 3195,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3161,
											"end": 3195,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4042,
											"end": 4055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4042,
											"end": 4055,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4070,
											"end": 4076,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4070,
											"end": 4076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4070,
											"end": 4076,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4070,
											"end": 4076,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4070,
											"end": 4076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 4058,
											"end": 4086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3092,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3074,
											"end": 3092,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4117,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 4058,
											"end": 4117,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 4058,
											"end": 4117,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4117,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4117,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4135,
											"end": 4143,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4127,
											"end": 4170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 4127,
											"end": 4170,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4127,
											"end": 4170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4127,
											"end": 4170,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4127,
											"end": 4170,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4127,
											"end": 4170,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7304,
											"end": 7306,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4127,
											"end": 4170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4127,
											"end": 4170,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4127,
											"end": 4170,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7286,
											"end": 7307,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7343,
											"end": 7345,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 7323,
											"end": 7341,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7323,
											"end": 7341,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7323,
											"end": 7341,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7316,
											"end": 7346,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B90481D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7355,
											"end": 7407,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4127,
											"end": 4170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 7102,
											"end": 7448,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4127,
											"end": 4170,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 4127,
											"end": 4170,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CD3C33721F956E41CD7226E4EC1D7A9AFED0F88A83C3CAEA27C8CE3F8C1BDBBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4185,
											"end": 4216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4216,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4216,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 4185,
											"end": 4216,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7655,
											"end": 7657,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7637,
											"end": 7658,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7637,
											"end": 7658,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7637,
											"end": 7658,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7694,
											"end": 7696,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 7674,
											"end": 7692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7674,
											"end": 7692,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7674,
											"end": 7692,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7667,
											"end": 7697,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B90481D1C985B9CD9995C9C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7728,
											"end": 7730,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7713,
											"end": 7731,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7713,
											"end": 7731,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7706,
											"end": 7754,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7788,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7771,
											"end": 7789,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7771,
											"end": 7789,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7453,
											"end": 7795,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4185,
											"end": 4216,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 4185,
											"end": 4216,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4185,
											"end": 4216,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4216,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4216,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4216,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4216,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4216,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4272,
											"end": 4287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4272,
											"end": 4287,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4243,
											"end": 4302,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4243,
											"end": 4302,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4272,
											"end": 4287,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4272,
											"end": 4287,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4272,
											"end": 4287,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3101,
											"end": 3152,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3152,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3152,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3152,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3186,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3168,
											"end": 3186,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3186,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3161,
											"end": 3195,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3161,
											"end": 3195,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3161,
											"end": 3195,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4227,
											"end": 4240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4240,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4261,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 4243,
											"end": 4271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3092,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3074,
											"end": 3092,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4302,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 4243,
											"end": 4302,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 4243,
											"end": 4302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4227,
											"end": 4302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4227,
											"end": 4302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4320,
											"end": 4328,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4312,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 4312,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4312,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4312,
											"end": 4355,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4312,
											"end": 4355,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4312,
											"end": 4355,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8002,
											"end": 8004,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4312,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4312,
											"end": 4355,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4312,
											"end": 4355,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7984,
											"end": 8005,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8041,
											"end": 8043,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 8021,
											"end": 8039,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8021,
											"end": 8039,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8021,
											"end": 8039,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B90881D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8060,
											"end": 8078,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8060,
											"end": 8078,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8060,
											"end": 8078,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8053,
											"end": 8105,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8122,
											"end": 8140,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8122,
											"end": 8140,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 7800,
											"end": 8146,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 4312,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CD3C33721F956E41CD7226E4EC1D7A9AFED0F88A83C3CAEA27C8CE3F8C1BDBBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4370,
											"end": 4401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4370,
											"end": 4401,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4370,
											"end": 4401,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 4370,
											"end": 4401,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8353,
											"end": 8355,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8335,
											"end": 8356,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8335,
											"end": 8356,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8335,
											"end": 8356,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8394,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 8372,
											"end": 8390,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8372,
											"end": 8390,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8372,
											"end": 8390,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8365,
											"end": 8395,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B90881D1C985B9CD9995C9C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8426,
											"end": 8428,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8429,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8411,
											"end": 8429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8404,
											"end": 8452,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8484,
											"end": 8486,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8469,
											"end": 8487,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8469,
											"end": 8487,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8151,
											"end": 8493,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4370,
											"end": 4401,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 4370,
											"end": 4401,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4370,
											"end": 4401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4370,
											"end": 4401,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4370,
											"end": 4401,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4370,
											"end": 4401,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4370,
											"end": 4401,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4370,
											"end": 4401,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4370,
											"end": 4401,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 4432,
											"end": 4447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4432,
											"end": 4447,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4417,
											"end": 4476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4417,
											"end": 4476,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4417,
											"end": 4476,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8697,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 8697,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 8697,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8728,
											"end": 8730,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8713,
											"end": 8731,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8713,
											"end": 8731,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8706,
											"end": 8740,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8706,
											"end": 8740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8706,
											"end": 8740,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4432,
											"end": 4447,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4432,
											"end": 4447,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4432,
											"end": 4447,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4432,
											"end": 4447,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4417,
											"end": 4476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "AC1D76749E5447B7B16F5AB61447E1BD502F3BB4807AF3B28E620D1700A6EE45"
										},
										{
											"begin": 4417,
											"end": 4476,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4417,
											"end": 4476,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4417,
											"end": 4476,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4417,
											"end": 4476,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4417,
											"end": 4476,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4417,
											"end": 4476,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4417,
											"end": 4476,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 4483,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 4483,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 4483,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 4483,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 4483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5494,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 5282,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5376,
											"end": 5407,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5376,
											"end": 5407,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5443,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 5368,
											"end": 5443,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5368,
											"end": 5443,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5368,
											"end": 5443,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5443,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8953,
											"end": 8955,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5368,
											"end": 5443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5368,
											"end": 5443,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5368,
											"end": 5443,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8935,
											"end": 8956,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8992,
											"end": 8994,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8972,
											"end": 8990,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8972,
											"end": 8990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8972,
											"end": 8990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8965,
											"end": 8995,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9031,
											"end": 9064,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420416C676562726120466163746F7279206164647265737300"
										},
										{
											"begin": 9011,
											"end": 9029,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9011,
											"end": 9029,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9011,
											"end": 9029,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9004,
											"end": 9065,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9082,
											"end": 9100,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9082,
											"end": 9100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5368,
											"end": 5443,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 8751,
											"end": 9106,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5368,
											"end": 5443,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 5368,
											"end": 5443,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5453,
											"end": 5467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5453,
											"end": 5487,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5453,
											"end": 5487,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5453,
											"end": 5487,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5453,
											"end": 5487,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5453,
											"end": 5487,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5453,
											"end": 5487,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5453,
											"end": 5487,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5453,
											"end": 5487,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5453,
											"end": 5487,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5453,
											"end": 5487,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5453,
											"end": 5487,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5453,
											"end": 5487,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5453,
											"end": 5487,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4740,
											"end": 5136,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 4740,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4823,
											"end": 4842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4862,
											"end": 4882,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4862,
											"end": 4882,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4862,
											"end": 4882,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4862,
											"end": 4882,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4862,
											"end": 4882,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4862,
											"end": 4882,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4862,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 4862,
											"end": 4906,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4886,
											"end": 4906,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4886,
											"end": 4906,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4886,
											"end": 4906,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4886,
											"end": 4906,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4862,
											"end": 4906,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 4862,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4854,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 4854,
											"end": 4932,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4854,
											"end": 4932,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4854,
											"end": 4932,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4854,
											"end": 4932,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4854,
											"end": 4932,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4854,
											"end": 4932,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4854,
											"end": 4932,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4854,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 4854,
											"end": 4932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4854,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 4854,
											"end": 4932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4854,
											"end": 4932,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 4854,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 4966,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4950,
											"end": 4966,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4950,
											"end": 4966,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 4966,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4942,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 4942,
											"end": 4995,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4942,
											"end": 4995,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4942,
											"end": 4995,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4942,
											"end": 4995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4942,
											"end": 4995,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4932,
											"end": 4934,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4995,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4942,
											"end": 4995,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4942,
											"end": 4995,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4914,
											"end": 4935,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4971,
											"end": 4973,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B9CC81B5D5CDD08189948191A5999995C995B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5037,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5054,
											"end": 5072,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5054,
											"end": 5072,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4942,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 4730,
											"end": 5078,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4942,
											"end": 4995,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 4942,
											"end": 4995,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5048,
											"end": 5062,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5048,
											"end": 5062,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8ED2241"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5275,
											"end": 5307,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5275,
											"end": 5307,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5275,
											"end": 5307,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5257,
											"end": 5308,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5376,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5376,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5344,
											"end": 5376,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5317,
											"end": 5377,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5048,
											"end": 5062,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5048,
											"end": 5062,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5048,
											"end": 5062,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5048,
											"end": 5062,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5048,
											"end": 5062,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5048,
											"end": 5062,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5113,
											"name": "PUSH",
											"source": 9,
											"value": "D8ED2241"
										},
										{
											"begin": 5087,
											"end": 5113,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5248,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5230,
											"end": 5248,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 5087,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 5087,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5073,
											"end": 5129,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4740,
											"end": 5136,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4740,
											"end": 5136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 222,
											"end": 353,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 222,
											"end": 353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 297,
											"end": 328,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 297,
											"end": 328,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 287,
											"end": 329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 287,
											"end": 329,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 277,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 277,
											"end": 347,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 333,
											"end": 345,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 358,
											"end": 866,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 358,
											"end": 866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 449,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 506,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 492,
											"end": 501,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 483,
											"end": 490,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 479,
											"end": 502,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 475,
											"end": 507,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 472,
											"end": 524,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 472,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 472,
											"end": 524,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 520,
											"end": 521,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 518,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 510,
											"end": 522,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 472,
											"end": 524,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 472,
											"end": 524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 559,
											"end": 568,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 546,
											"end": 569,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 578,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 603,
											"end": 608,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 578,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 578,
											"end": 609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 578,
											"end": 609,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 578,
											"end": 609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 628,
											"end": 633,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 685,
											"end": 687,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 670,
											"end": 688,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 670,
											"end": 688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 657,
											"end": 689,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 698,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 657,
											"end": 689,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 698,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 698,
											"end": 731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 698,
											"end": 731,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 698,
											"end": 731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 358,
											"end": 866,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 358,
											"end": 866,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 750,
											"end": 757,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 750,
											"end": 757,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 830,
											"end": 832,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 815,
											"end": 833,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 815,
											"end": 833,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 815,
											"end": 833,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 815,
											"end": 833,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 802,
											"end": 834,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 802,
											"end": 834,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 358,
											"end": 866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 871,
											"end": 1217,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 871,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 939,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 953,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 1002,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 988,
											"end": 997,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 979,
											"end": 986,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 975,
											"end": 998,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 971,
											"end": 1003,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 968,
											"end": 1020,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 968,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 968,
											"end": 1020,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1017,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1013,
											"end": 1014,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1006,
											"end": 1018,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 968,
											"end": 1020,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 968,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1061,
											"end": 1084,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1061,
											"end": 1084,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1061,
											"end": 1084,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1153,
											"end": 1185,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1153,
											"end": 1185,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 871,
											"end": 1217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1222,
											"end": 1469,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1222,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1281,
											"end": 1287,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1336,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1313,
											"end": 1320,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1332,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1305,
											"end": 1337,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1354,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 1302,
											"end": 1354,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1350,
											"end": 1351,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1348,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1340,
											"end": 1352,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1354,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 1302,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1376,
											"end": 1399,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1408,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1408,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 1408,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1408,
											"end": 1439,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 1408,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1458,
											"end": 1463,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1222,
											"end": 1469,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1862,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1474,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1556,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1603,
											"end": 1605,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1582,
											"end": 1589,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1578,
											"end": 1601,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1574,
											"end": 1606,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1623,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 1571,
											"end": 1623,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1619,
											"end": 1620,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1617,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1609,
											"end": 1621,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1623,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 1571,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1667,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1645,
											"end": 1668,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 1677,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1708,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 1677,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1732,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1784,
											"end": 1786,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1769,
											"end": 1787,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1769,
											"end": 1787,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1788,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 1756,
											"end": 1788,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 1797,
											"end": 1830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1830,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 1797,
											"end": 1830,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1849,
											"end": 1856,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1856,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1862,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1862,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1862,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1474,
											"end": 1862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 2212,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 1867,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2069,
											"end": 2071,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2051,
											"end": 2072,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2072,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2110,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 2088,
											"end": 2106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2106,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2106,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2081,
											"end": 2111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420746F6B656E2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2120,
											"end": 2171,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2203,
											"end": 2205,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2188,
											"end": 2206,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2188,
											"end": 2206,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 2212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3483,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3206,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3279,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3328,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3323,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3305,
											"end": 3312,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3324,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3297,
											"end": 3329,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3346,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 3294,
											"end": 3346,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3342,
											"end": 3343,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3340,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3344,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3346,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 3294,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3374,
											"end": 3383,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3427,
											"end": 3432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3433,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3434,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3406,
											"end": 3411,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3403,
											"end": 3435,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3393,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 3393,
											"end": 3453,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3449,
											"end": 3450,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3447,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3439,
											"end": 3451,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5388,
											"end": 5639,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 5388,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5458,
											"end": 5464,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5511,
											"end": 5513,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5508,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5490,
											"end": 5497,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5486,
											"end": 5509,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5514,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5479,
											"end": 5531,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5479,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5479,
											"end": 5531,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5527,
											"end": 5528,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5524,
											"end": 5525,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5517,
											"end": 5529,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5479,
											"end": 5531,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5479,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5568,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5553,
											"end": 5569,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 5603,
											"end": 5608,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 5578,
											"end": 5609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										}
									],
									".data": {
										"CD3C33721F956E41CD7226E4EC1D7A9AFED0F88A83C3CAEA27C8CE3F8C1BDBBC": "94ebca8d29d278a0288a52a710c11e928307b6f2e15fbaf4508cc4ceb3d21f8b"
									}
								},
								"1": {
									".code": [
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 378,
											"end": 428,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 378,
											"end": 428,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 378,
											"end": 428,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 378,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 378,
											"end": 428,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 378,
											"end": 428,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 428,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 378,
											"end": 428,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 378,
											"end": 428,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 378,
											"end": 428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 414,
											"end": 424,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 414,
											"end": 424,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 1967,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1962,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1896,
											"end": 2009,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 1967,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1962,
											"end": 1975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 1975,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1962,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1985,
											"end": 1992,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1985,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1995,
											"end": 2002,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 1992,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1985,
											"end": 2002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 2002,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1985,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2852,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2774,
											"end": 2792,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2774,
											"end": 2792,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1353,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1269,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1392,
											"end": 1404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1373,
											"end": 1405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1405,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1373,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 141,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 75,
											"end": 85,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 70,
											"end": 73,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 63,
											"end": 64,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 87,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 106,
											"end": 110,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 103,
											"end": 104,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 130,
											"end": 134,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 127,
											"end": 128,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 135,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 146,
											"end": 526,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 146,
											"end": 526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 225,
											"end": 226,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 221,
											"end": 233,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 221,
											"end": 233,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 221,
											"end": 233,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 221,
											"end": 233,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 268,
											"end": 280,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 268,
											"end": 280,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 268,
											"end": 280,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 289,
											"end": 350,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 343,
											"end": 347,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 331,
											"end": 348,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 321,
											"end": 348,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 321,
											"end": 348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 289,
											"end": 350,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 289,
											"end": 350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 396,
											"end": 398,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 388,
											"end": 394,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 385,
											"end": 399,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 365,
											"end": 383,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 362,
											"end": 400,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 359,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 359,
											"end": 520,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 442,
											"end": 452,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 437,
											"end": 440,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 433,
											"end": 453,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 430,
											"end": 431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 423,
											"end": 454,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 477,
											"end": 481,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 474,
											"end": 475,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 467,
											"end": 482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 505,
											"end": 509,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 502,
											"end": 503,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 510,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 359,
											"end": 520,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 359,
											"end": 520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 359,
											"end": 520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 146,
											"end": 526,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 146,
											"end": 526,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 146,
											"end": 526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 146,
											"end": 526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 657,
											"end": 1175,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 657,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 759,
											"end": 761,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 754,
											"end": 757,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 751,
											"end": 762,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 748,
											"end": 1169,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 748,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 748,
											"end": 1169,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 795,
											"end": 800,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 792,
											"end": 793,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 837,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 844,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 909,
											"end": 911,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 897,
											"end": 907,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 893,
											"end": 912,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 880,
											"end": 884,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 876,
											"end": 914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 945,
											"end": 949,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 933,
											"end": 943,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 930,
											"end": 950,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 927,
											"end": 974,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 927,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 927,
											"end": 974,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 968,
											"end": 972,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 927,
											"end": 974,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 927,
											"end": 974,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1023,
											"end": 1025,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1018,
											"end": 1021,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1014,
											"end": 1026,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1011,
											"end": 1012,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1007,
											"end": 1027,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1005,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 987,
											"end": 1028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 987,
											"end": 1028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1078,
											"end": 1159,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1078,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1096,
											"end": 1098,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1089,
											"end": 1094,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1086,
											"end": 1099,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1078,
											"end": 1159,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1078,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1078,
											"end": 1159,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1155,
											"end": 1156,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1157,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1141,
											"end": 1157,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1123,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1111,
											"end": 1124,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1078,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1078,
											"end": 1159,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1078,
											"end": 1159,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1078,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 748,
											"end": 1169,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 748,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 657,
											"end": 1175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 657,
											"end": 1175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 657,
											"end": 1175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 657,
											"end": 1175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1351,
											"end": 2650,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1351,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1471,
											"end": 1481,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1471,
											"end": 1481,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1493,
											"end": 1523,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1523,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1490,
											"end": 1546,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1490,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1490,
											"end": 1546,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1526,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1526,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1526,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1526,
											"end": 1544,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1526,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1555,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1645,
											"end": 1651,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1605,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1637,
											"end": 1641,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1642,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1605,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1605,
											"end": 1643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1605,
											"end": 1643,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1605,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1599,
											"end": 1603,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1555,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 1555,
											"end": 1652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1555,
											"end": 1652,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1555,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1705,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1732,
											"end": 1734,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1750,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1744,
											"end": 2393,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 2393,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 1744,
											"end": 2393,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2437,
											"end": 2438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2460,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2451,
											"end": 2540,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2451,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 2451,
											"end": 2540,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2506,
											"end": 2525,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2506,
											"end": 2525,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2506,
											"end": 2525,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2500,
											"end": 2526,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2451,
											"end": 2540,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 2451,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1304,
											"end": 1315,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1304,
											"end": 1315,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1304,
											"end": 1315,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1324,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1325,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1286,
											"end": 1326,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1332,
											"end": 1333,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1328,
											"end": 1339,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1339,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1339,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1283,
											"end": 1340,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2553,
											"end": 2634,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2553,
											"end": 2634,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1714,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1714,
											"end": 2644,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 2393,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 1744,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 604,
											"end": 605,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 611,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 597,
											"end": 611,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 597,
											"end": 611,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 641,
											"end": 645,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 628,
											"end": 646,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1780,
											"end": 1800,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 1800,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 1800,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1912,
											"end": 1919,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1906,
											"end": 1920,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1994,
											"end": 2013,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1994,
											"end": 2013,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1994,
											"end": 2013,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2014,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2015,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2015,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2105,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2086,
											"end": 2106,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2054,
											"end": 2055,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1902,
											"end": 1905,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2148,
											"end": 2154,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2146,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2136,
											"end": 2155,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2334,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 2133,
											"end": 2334,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2209,
											"end": 2228,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2209,
											"end": 2228,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2209,
											"end": 2228,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2203,
											"end": 2229,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2292,
											"end": 2293,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2288,
											"end": 2302,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2288,
											"end": 2302,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2288,
											"end": 2302,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2304,
											"end": 2307,
											"name": "PUSH",
											"source": 10,
											"value": "F8"
										},
										{
											"begin": 2284,
											"end": 2308,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2317,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2276,
											"end": 2318,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2319,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2246,
											"end": 2320,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2246,
											"end": 2320,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2334,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 2133,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2364,
											"end": 2378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2364,
											"end": 2378,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2364,
											"end": 2378,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2360,
											"end": 2382,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2347,
											"end": 2383,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2347,
											"end": 2383,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1351,
											"end": 2650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2655,
											"end": 2858,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 2655,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH #[$]",
											"source": 6,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH [$]",
											"source": 6,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 1369,
											"name": "RETURN",
											"source": 6
										}
									],
									".data": {
										"0": {
											".auxdata": "a2646970667358221220c8852fb7b8bc5bc2e0bb47db09997f4a4be9d29054e1c4beec35e07625033d5f64736f6c634300081a0033",
											".code": [
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "80"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "CALLVALUE",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "tag",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "4"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "2"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "CALLDATALOAD",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "E0"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "SHR",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "70A08231"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "A9059CBB"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "A9059CBB"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "15"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "B90497E0"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "16"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "DD62ED3E"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "17"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "F2FDE38B"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "18"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "tag",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "70A08231"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "11"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "715018A6"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "12"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "8DA5CB5B"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "13"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "95D89B41"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "14"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "tag",
													"source": 6,
													"value": "19"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "313CE567"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "21"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "313CE567"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "7"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "40C10F19"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "8"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "4CD88B76"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "9"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "58E792EE"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "10"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "tag",
													"source": 6,
													"value": "21"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "6FDDE03"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "3"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "95EA7B3"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "4"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "18160DDD"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "5"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "23B872DD"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "EQ",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "6"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "tag",
													"source": 6,
													"value": "2"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 168,
													"end": 1369,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 827,
													"end": 923,
													"name": "tag",
													"source": 6,
													"value": "3"
												},
												{
													"begin": 827,
													"end": 923,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 827,
													"end": 923,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "22"
												},
												{
													"begin": 827,
													"end": 923,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "23"
												},
												{
													"begin": 827,
													"end": 923,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 827,
													"end": 923,
													"name": "tag",
													"source": 6,
													"value": "22"
												},
												{
													"begin": 827,
													"end": 923,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 827,
													"end": 923,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 827,
													"end": 923,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 827,
													"end": 923,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "24"
												},
												{
													"begin": 827,
													"end": 923,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 827,
													"end": 923,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 827,
													"end": 923,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "25"
												},
												{
													"begin": 827,
													"end": 923,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 827,
													"end": 923,
													"name": "tag",
													"source": 6,
													"value": "24"
												},
												{
													"begin": 827,
													"end": 923,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 827,
													"end": 923,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 827,
													"end": 923,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 827,
													"end": 923,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 827,
													"end": 923,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 827,
													"end": 923,
													"name": "SUB",
													"source": 6
												},
												{
													"begin": 827,
													"end": 923,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 827,
													"end": 923,
													"name": "RETURN",
													"source": 6
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "tag",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "26"
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "27"
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "CALLDATASIZE",
													"source": 2
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "28"
												},
												{
													"begin": 4293,
													"end": 4479,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "tag",
													"source": 2,
													"value": "27"
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "29"
												},
												{
													"begin": 4293,
													"end": 4479,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "tag",
													"source": 2,
													"value": "26"
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 1194,
													"end": 1208,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 1194,
													"end": 1208,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 1187,
													"end": 1209,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 1169,
													"end": 1210,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 1169,
													"end": 1210,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 1157,
													"end": 1159,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 1142,
													"end": 1160,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "24"
												},
												{
													"begin": 1029,
													"end": 1216,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 3144,
													"end": 3241,
													"name": "tag",
													"source": 2,
													"value": "5"
												},
												{
													"begin": 3144,
													"end": 3241,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 3222,
													"end": 3234,
													"name": "PUSH",
													"source": 2,
													"value": "2"
												},
												{
													"begin": 3222,
													"end": 3234,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 3144,
													"end": 3241,
													"name": "tag",
													"source": 2,
													"value": "32"
												},
												{
													"begin": 3144,
													"end": 3241,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 3144,
													"end": 3241,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 3144,
													"end": 3241,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 1367,
													"end": 1392,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 1367,
													"end": 1392,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 1367,
													"end": 1392,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 1355,
													"end": 1357,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 1340,
													"end": 1358,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 3144,
													"end": 3241,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "24"
												},
												{
													"begin": 1221,
													"end": 1398,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5039,
													"end": 5283,
													"name": "tag",
													"source": 2,
													"value": "6"
												},
												{
													"begin": 5039,
													"end": 5283,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 5039,
													"end": 5283,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "26"
												},
												{
													"begin": 5039,
													"end": 5283,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "37"
												},
												{
													"begin": 5039,
													"end": 5283,
													"name": "CALLDATASIZE",
													"source": 2
												},
												{
													"begin": 5039,
													"end": 5283,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 5039,
													"end": 5283,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "38"
												},
												{
													"begin": 5039,
													"end": 5283,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 5039,
													"end": 5283,
													"name": "tag",
													"source": 2,
													"value": "37"
												},
												{
													"begin": 5039,
													"end": 5283,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 5039,
													"end": 5283,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "39"
												},
												{
													"begin": 5039,
													"end": 5283,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 3002,
													"end": 3084,
													"name": "tag",
													"source": 2,
													"value": "7"
												},
												{
													"begin": 3002,
													"end": 3084,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 3002,
													"end": 3084,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 3002,
													"end": 3084,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 3075,
													"end": 3077,
													"name": "PUSH",
													"source": 2,
													"value": "12"
												},
												{
													"begin": 1924,
													"end": 1960,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 1924,
													"end": 1960,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 1912,
													"end": 1914,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 1897,
													"end": 1915,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 3002,
													"end": 3084,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "24"
												},
												{
													"begin": 1782,
													"end": 1966,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 1098,
													"end": 1193,
													"name": "tag",
													"source": 6,
													"value": "8"
												},
												{
													"begin": 1098,
													"end": 1193,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 1098,
													"end": 1193,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "45"
												},
												{
													"begin": 1098,
													"end": 1193,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "46"
												},
												{
													"begin": 1098,
													"end": 1193,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": 1098,
													"end": 1193,
													"name": "PUSH",
													"source": 6,
													"value": "4"
												},
												{
													"begin": 1098,
													"end": 1193,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "28"
												},
												{
													"begin": 1098,
													"end": 1193,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 1098,
													"end": 1193,
													"name": "tag",
													"source": 6,
													"value": "46"
												},
												{
													"begin": 1098,
													"end": 1193,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 1098,
													"end": 1193,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "47"
												},
												{
													"begin": 1098,
													"end": 1193,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 1098,
													"end": 1193,
													"name": "tag",
													"source": 6,
													"value": "45"
												},
												{
													"begin": 1098,
													"end": 1193,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 1098,
													"end": 1193,
													"name": "STOP",
													"source": 6
												},
												{
													"begin": 525,
													"end": 751,
													"name": "tag",
													"source": 6,
													"value": "9"
												},
												{
													"begin": 525,
													"end": 751,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 525,
													"end": 751,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "45"
												},
												{
													"begin": 525,
													"end": 751,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "49"
												},
												{
													"begin": 525,
													"end": 751,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": 525,
													"end": 751,
													"name": "PUSH",
													"source": 6,
													"value": "4"
												},
												{
													"begin": 525,
													"end": 751,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "50"
												},
												{
													"begin": 525,
													"end": 751,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 525,
													"end": 751,
													"name": "tag",
													"source": 6,
													"value": "49"
												},
												{
													"begin": 525,
													"end": 751,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 525,
													"end": 751,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "51"
												},
												{
													"begin": 525,
													"end": 751,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 1265,
													"end": 1367,
													"name": "tag",
													"source": 6,
													"value": "10"
												},
												{
													"begin": 1265,
													"end": 1367,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 1265,
													"end": 1367,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "45"
												},
												{
													"begin": 1265,
													"end": 1367,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "53"
												},
												{
													"begin": 1265,
													"end": 1367,
													"name": "CALLDATASIZE",
													"source": 6
												},
												{
													"begin": 1265,
													"end": 1367,
													"name": "PUSH",
													"source": 6,
													"value": "4"
												},
												{
													"begin": 1265,
													"end": 1367,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "54"
												},
												{
													"begin": 1265,
													"end": 1367,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 1265,
													"end": 1367,
													"name": "tag",
													"source": 6,
													"value": "53"
												},
												{
													"begin": 1265,
													"end": 1367,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 1265,
													"end": 1367,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "55"
												},
												{
													"begin": 1265,
													"end": 1367,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 3299,
													"end": 3415,
													"name": "tag",
													"source": 2,
													"value": "11"
												},
												{
													"begin": 3299,
													"end": 3415,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 3299,
													"end": 3415,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "32"
												},
												{
													"begin": 3299,
													"end": 3415,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "57"
												},
												{
													"begin": 3299,
													"end": 3415,
													"name": "CALLDATASIZE",
													"source": 2
												},
												{
													"begin": 3299,
													"end": 3415,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 3299,
													"end": 3415,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "58"
												},
												{
													"begin": 3299,
													"end": 3415,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 3299,
													"end": 3415,
													"name": "tag",
													"source": 2,
													"value": "57"
												},
												{
													"begin": 3299,
													"end": 3415,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 3390,
													"end": 3408,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 3364,
													"end": 3371,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 3390,
													"end": 3408,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3390,
													"end": 3408,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 3390,
													"end": 3408,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 3390,
													"end": 3408,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 3390,
													"end": 3408,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 3390,
													"end": 3408,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3390,
													"end": 3408,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 3390,
													"end": 3408,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 3390,
													"end": 3408,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3390,
													"end": 3408,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 3390,
													"end": 3408,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 3390,
													"end": 3408,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3299,
													"end": 3415,
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "tag",
													"source": 0,
													"value": "12"
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "45"
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "62"
												},
												{
													"begin": 2293,
													"end": 2394,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "tag",
													"source": 0,
													"value": "13"
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "PUSH",
													"source": 0,
													"value": "5"
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 4041,
													"end": 4092,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 4041,
													"end": 4092,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 4029,
													"end": 4031,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 4014,
													"end": 4032,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 1638,
													"end": 1723,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "24"
												},
												{
													"begin": 3895,
													"end": 4098,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 929,
													"end": 1029,
													"name": "tag",
													"source": 6,
													"value": "14"
												},
												{
													"begin": 929,
													"end": 1029,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 929,
													"end": 1029,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "22"
												},
												{
													"begin": 929,
													"end": 1029,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "68"
												},
												{
													"begin": 929,
													"end": 1029,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 3610,
													"end": 3788,
													"name": "tag",
													"source": 2,
													"value": "15"
												},
												{
													"begin": 3610,
													"end": 3788,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 3610,
													"end": 3788,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "26"
												},
												{
													"begin": 3610,
													"end": 3788,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "71"
												},
												{
													"begin": 3610,
													"end": 3788,
													"name": "CALLDATASIZE",
													"source": 2
												},
												{
													"begin": 3610,
													"end": 3788,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 3610,
													"end": 3788,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "28"
												},
												{
													"begin": 3610,
													"end": 3788,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 3610,
													"end": 3788,
													"name": "tag",
													"source": 2,
													"value": "71"
												},
												{
													"begin": 3610,
													"end": 3788,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 3610,
													"end": 3788,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "72"
												},
												{
													"begin": 3610,
													"end": 3788,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 309,
													"end": 331,
													"name": "tag",
													"source": 6,
													"value": "16"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "22"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "75"
												},
												{
													"begin": 309,
													"end": 331,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 3846,
													"end": 3986,
													"name": "tag",
													"source": 2,
													"value": "17"
												},
												{
													"begin": 3846,
													"end": 3986,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 3846,
													"end": 3986,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "32"
												},
												{
													"begin": 3846,
													"end": 3986,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "78"
												},
												{
													"begin": 3846,
													"end": 3986,
													"name": "CALLDATASIZE",
													"source": 2
												},
												{
													"begin": 3846,
													"end": 3986,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 3846,
													"end": 3986,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "79"
												},
												{
													"begin": 3846,
													"end": 3986,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 3846,
													"end": 3986,
													"name": "tag",
													"source": 2,
													"value": "78"
												},
												{
													"begin": 3846,
													"end": 3986,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 3926,
													"end": 3933,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3963,
													"name": "PUSH",
													"source": 2,
													"value": "1"
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "SWAP4",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "SWAP5",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3846,
													"end": 3986,
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "tag",
													"source": 0,
													"value": "18"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "45"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "83"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "CALLDATASIZE",
													"source": 0
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "58"
												},
												{
													"begin": 2543,
													"end": 2758,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "tag",
													"source": 0,
													"value": "83"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "84"
												},
												{
													"begin": 2543,
													"end": 2758,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 827,
													"end": 923,
													"name": "tag",
													"source": 6,
													"value": "23"
												},
												{
													"begin": 827,
													"end": 923,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 873,
													"end": 886,
													"name": "PUSH",
													"source": 6,
													"value": "60"
												},
												{
													"begin": 905,
													"end": 916,
													"name": "PUSH",
													"source": 6,
													"value": "6"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "86"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "87"
												},
												{
													"begin": 898,
													"end": 916,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "tag",
													"source": 6,
													"value": "86"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH",
													"source": 6,
													"value": "1F"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DIV",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "MUL",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SWAP3",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "88"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "87"
												},
												{
													"begin": 898,
													"end": 916,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "tag",
													"source": 6,
													"value": "88"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "89"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH",
													"source": 6,
													"value": "1F"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "90"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH",
													"source": 6,
													"value": "100"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DIV",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "MUL",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "89"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "tag",
													"source": 6,
													"value": "90"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "KECCAK256",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "tag",
													"source": 6,
													"value": "91"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "91"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SUB",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "PUSH",
													"source": 6,
													"value": "1F"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "tag",
													"source": 6,
													"value": "89"
												},
												{
													"begin": 898,
													"end": 916,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 898,
													"end": 916,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 827,
													"end": 923,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 827,
													"end": 923,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "tag",
													"source": 2,
													"value": "29"
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 4366,
													"end": 4370,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 735,
													"end": 745,
													"name": "CALLER",
													"source": 5
												},
												{
													"begin": 4420,
													"end": 4451,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "95"
												},
												{
													"begin": 735,
													"end": 745,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 4436,
													"end": 4443,
													"name": "DUP6",
													"source": 2
												},
												{
													"begin": 4445,
													"end": 4450,
													"name": "DUP6",
													"source": 2
												},
												{
													"begin": 4420,
													"end": 4428,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "96"
												},
												{
													"begin": 4420,
													"end": 4451,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 4420,
													"end": 4451,
													"name": "tag",
													"source": 2,
													"value": "95"
												},
												{
													"begin": 4420,
													"end": 4451,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 4468,
													"end": 4472,
													"name": "PUSH",
													"source": 2,
													"value": "1"
												},
												{
													"begin": 4461,
													"end": 4472,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 4461,
													"end": 4472,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 4461,
													"end": 4472,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "tag",
													"source": 2,
													"value": "92"
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "SWAP3",
													"source": 2
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 4293,
													"end": 4479,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 4293,
													"end": 4479,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 5039,
													"end": 5283,
													"name": "tag",
													"source": 2,
													"value": "39"
												},
												{
													"begin": 5039,
													"end": 5283,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 5126,
													"end": 5130,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 735,
													"end": 745,
													"name": "CALLER",
													"source": 5
												},
												{
													"begin": 5182,
													"end": 5219,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "100"
												},
												{
													"begin": 5198,
													"end": 5202,
													"name": "DUP6",
													"source": 2
												},
												{
													"begin": 735,
													"end": 745,
													"name": "DUP3",
													"source": 5
												},
												{
													"begin": 5213,
													"end": 5218,
													"name": "DUP6",
													"source": 2
												},
												{
													"begin": 5182,
													"end": 5197,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "101"
												},
												{
													"begin": 5182,
													"end": 5219,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 5182,
													"end": 5219,
													"name": "tag",
													"source": 2,
													"value": "100"
												},
												{
													"begin": 5182,
													"end": 5219,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 5229,
													"end": 5255,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "102"
												},
												{
													"begin": 5239,
													"end": 5243,
													"name": "DUP6",
													"source": 2
												},
												{
													"begin": 5245,
													"end": 5247,
													"name": "DUP6",
													"source": 2
												},
												{
													"begin": 5249,
													"end": 5254,
													"name": "DUP6",
													"source": 2
												},
												{
													"begin": 5229,
													"end": 5238,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "103"
												},
												{
													"begin": 5229,
													"end": 5255,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 5229,
													"end": 5255,
													"name": "tag",
													"source": 2,
													"value": "102"
												},
												{
													"begin": 5229,
													"end": 5255,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 5272,
													"end": 5276,
													"name": "PUSH",
													"source": 2,
													"value": "1"
												},
												{
													"begin": 5272,
													"end": 5276,
													"name": "SWAP5",
													"source": 2
												},
												{
													"begin": 5039,
													"end": 5283,
													"name": "SWAP4",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 5039,
													"end": 5283,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 1098,
													"end": 1193,
													"name": "tag",
													"source": 6,
													"value": "47"
												},
												{
													"begin": 1098,
													"end": 1193,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "106"
												},
												{
													"begin": 1531,
													"end": 1542,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "107"
												},
												{
													"begin": 1531,
													"end": 1544,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "tag",
													"source": 0,
													"value": "106"
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1169,
													"end": 1186,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "109"
												},
												{
													"begin": 1175,
													"end": 1177,
													"modifierDepth": 1,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 1179,
													"end": 1185,
													"modifierDepth": 1,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 1169,
													"end": 1174,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "110"
												},
												{
													"begin": 1169,
													"end": 1186,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 1169,
													"end": 1186,
													"modifierDepth": 1,
													"name": "tag",
													"source": 6,
													"value": "109"
												},
												{
													"begin": 1169,
													"end": 1186,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 1098,
													"end": 1193,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 1098,
													"end": 1193,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 1098,
													"end": 1193,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 525,
													"end": 751,
													"name": "tag",
													"source": 6,
													"value": "51"
												},
												{
													"begin": 525,
													"end": 751,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 615,
													"end": 626,
													"name": "PUSH",
													"source": 6,
													"value": "8"
												},
												{
													"begin": 615,
													"end": 626,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": 615,
													"end": 626,
													"name": "PUSH",
													"source": 6,
													"value": "FF"
												},
												{
													"begin": 615,
													"end": 626,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 614,
													"end": 626,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 606,
													"end": 656,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "112"
												},
												{
													"begin": 606,
													"end": 656,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 606,
													"end": 656,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 606,
													"end": 656,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "461BCD"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E5"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 606,
													"end": 656,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 606,
													"end": 656,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 4955,
													"end": 4957,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 606,
													"end": 656,
													"name": "PUSH",
													"source": 6,
													"value": "4"
												},
												{
													"begin": 606,
													"end": 656,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 606,
													"end": 656,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 4937,
													"end": 4958,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 4994,
													"end": 4996,
													"name": "PUSH",
													"source": 10,
													"value": "19"
												},
												{
													"begin": 4974,
													"end": 4992,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 4974,
													"end": 4992,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 4974,
													"end": 4992,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 4967,
													"end": 4997,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 5033,
													"end": 5060,
													"name": "PUSH",
													"source": 10,
													"value": "546F6B656E20616C726561647920696E697469616C697A656400000000000000"
												},
												{
													"begin": 5013,
													"end": 5031,
													"name": "PUSH",
													"source": 10,
													"value": "44"
												},
												{
													"begin": 5013,
													"end": 5031,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 5013,
													"end": 5031,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 5006,
													"end": 5061,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 5078,
													"end": 5096,
													"name": "PUSH",
													"source": 10,
													"value": "64"
												},
												{
													"begin": 5078,
													"end": 5096,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 606,
													"end": 656,
													"name": "tag",
													"source": 6,
													"value": "113"
												},
												{
													"begin": 606,
													"end": 656,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 606,
													"end": 656,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 606,
													"end": 656,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 606,
													"end": 656,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 606,
													"end": 656,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 606,
													"end": 656,
													"name": "SUB",
													"source": 6
												},
												{
													"begin": 606,
													"end": 656,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 606,
													"end": 656,
													"name": "REVERT",
													"source": 6
												},
												{
													"begin": 606,
													"end": 656,
													"name": "tag",
													"source": 6,
													"value": "112"
												},
												{
													"begin": 606,
													"end": 656,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 666,
													"end": 677,
													"name": "PUSH",
													"source": 6,
													"value": "6"
												},
												{
													"begin": 666,
													"end": 684,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "115"
												},
												{
													"begin": 680,
													"end": 684,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 666,
													"end": 677,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 666,
													"end": 684,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "116"
												},
												{
													"begin": 666,
													"end": 684,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 666,
													"end": 684,
													"name": "tag",
													"source": 6,
													"value": "115"
												},
												{
													"begin": 666,
													"end": 684,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 694,
													"end": 707,
													"name": "PUSH",
													"source": 6,
													"value": "7"
												},
												{
													"begin": 694,
													"end": 716,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "117"
												},
												{
													"begin": 710,
													"end": 716,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 694,
													"end": 707,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 694,
													"end": 716,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "116"
												},
												{
													"begin": 694,
													"end": 716,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 694,
													"end": 716,
													"name": "tag",
													"source": 6,
													"value": "117"
												},
												{
													"begin": 694,
													"end": 716,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 726,
													"end": 737,
													"name": "PUSH",
													"source": 6,
													"value": "8"
												},
												{
													"begin": 726,
													"end": 744,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 726,
													"end": 744,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "FF"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 726,
													"end": 744,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 740,
													"end": 744,
													"name": "PUSH",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 726,
													"end": 744,
													"name": "OR",
													"source": 6
												},
												{
													"begin": 726,
													"end": 744,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 726,
													"end": 744,
													"name": "SSTORE",
													"source": 6
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 525,
													"end": 751,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 1265,
													"end": 1367,
													"name": "tag",
													"source": 6,
													"value": "55"
												},
												{
													"begin": 1265,
													"end": 1367,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "119"
												},
												{
													"begin": 1531,
													"end": 1542,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "107"
												},
												{
													"begin": 1531,
													"end": 1544,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "tag",
													"source": 0,
													"value": "119"
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1340,
													"end": 1348,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 6,
													"value": "9"
												},
												{
													"begin": 1340,
													"end": 1360,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "109"
												},
												{
													"begin": 1351,
													"end": 1360,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 1340,
													"end": 1348,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 1340,
													"end": 1360,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "116"
												},
												{
													"begin": 1340,
													"end": 1360,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "tag",
													"source": 0,
													"value": "62"
												},
												{
													"begin": 2293,
													"end": 2394,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "124"
												},
												{
													"begin": 1531,
													"end": 1542,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "107"
												},
												{
													"begin": 1531,
													"end": 1544,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "tag",
													"source": 0,
													"value": "124"
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2357,
													"end": 2387,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "126"
												},
												{
													"begin": 2384,
													"end": 2385,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 2357,
													"end": 2375,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "127"
												},
												{
													"begin": 2357,
													"end": 2387,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 2357,
													"end": 2387,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "126"
												},
												{
													"begin": 2357,
													"end": 2387,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2293,
													"end": 2394,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 929,
													"end": 1029,
													"name": "tag",
													"source": 6,
													"value": "68"
												},
												{
													"begin": 929,
													"end": 1029,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 977,
													"end": 990,
													"name": "PUSH",
													"source": 6,
													"value": "60"
												},
												{
													"begin": 1009,
													"end": 1022,
													"name": "PUSH",
													"source": 6,
													"value": "7"
												},
												{
													"begin": 1002,
													"end": 1022,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 1002,
													"end": 1022,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": 1002,
													"end": 1022,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "86"
												},
												{
													"begin": 1002,
													"end": 1022,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 1002,
													"end": 1022,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "87"
												},
												{
													"begin": 1002,
													"end": 1022,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 3610,
													"end": 3788,
													"name": "tag",
													"source": 2,
													"value": "72"
												},
												{
													"begin": 3610,
													"end": 3788,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 3679,
													"end": 3683,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 735,
													"end": 745,
													"name": "CALLER",
													"source": 5
												},
												{
													"begin": 3733,
													"end": 3760,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "95"
												},
												{
													"begin": 735,
													"end": 745,
													"name": "DUP2",
													"source": 5
												},
												{
													"begin": 3750,
													"end": 3752,
													"name": "DUP6",
													"source": 2
												},
												{
													"begin": 3754,
													"end": 3759,
													"name": "DUP6",
													"source": 2
												},
												{
													"begin": 3733,
													"end": 3742,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "103"
												},
												{
													"begin": 3733,
													"end": 3760,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 309,
													"end": 331,
													"name": "tag",
													"source": 6,
													"value": "75"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH",
													"source": 6,
													"value": "9"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "138"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "87"
												},
												{
													"begin": 309,
													"end": 331,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "tag",
													"source": 6,
													"value": "138"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH",
													"source": 6,
													"value": "1F"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DIV",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "MUL",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "MLOAD",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH",
													"source": 6,
													"value": "40"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "SWAP3",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "139"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "87"
												},
												{
													"begin": 309,
													"end": 331,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "tag",
													"source": 6,
													"value": "139"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "ISZERO",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "140"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH",
													"source": 6,
													"value": "1F"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "LT",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "141"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH",
													"source": 6,
													"value": "100"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DIV",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "MUL",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "140"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "tag",
													"source": 6,
													"value": "141"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH",
													"source": 6,
													"value": "0"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "KECCAK256",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "tag",
													"source": 6,
													"value": "142"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "SLOAD",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "MSTORE",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH",
													"source": 6,
													"value": "1"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH",
													"source": 6,
													"value": "20"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP1",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP4",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "GT",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH [tag]",
													"source": 6,
													"value": "142"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "JUMPI",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "SWAP1",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "SUB",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "PUSH",
													"source": 6,
													"value": "1F"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "AND",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP3",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "ADD",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "SWAP2",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "tag",
													"source": 6,
													"value": "140"
												},
												{
													"begin": 309,
													"end": 331,
													"name": "JUMPDEST",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "POP",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"name": "DUP2",
													"source": 6
												},
												{
													"begin": 309,
													"end": 331,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 6
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "tag",
													"source": 0,
													"value": "84"
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "145"
												},
												{
													"begin": 1531,
													"end": 1542,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "107"
												},
												{
													"begin": 1531,
													"end": 1544,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "tag",
													"source": 0,
													"value": "145"
												},
												{
													"begin": 1531,
													"end": 1544,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 2627,
													"end": 2649,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 2627,
													"end": 2649,
													"modifierDepth": 1,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 2623,
													"end": 2714,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "147"
												},
												{
													"begin": 2623,
													"end": 2714,
													"modifierDepth": 1,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1E4FBDF7"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 2700,
													"end": 2701,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 2672,
													"end": 2703,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 4041,
													"end": 4092,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 4014,
													"end": 4032,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 4014,
													"end": 4032,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 2672,
													"end": 2703,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "113"
												},
												{
													"begin": 3895,
													"end": 4098,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 2623,
													"end": 2714,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "147"
												},
												{
													"begin": 2623,
													"end": 2714,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2723,
													"end": 2751,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "149"
												},
												{
													"begin": 2742,
													"end": 2750,
													"modifierDepth": 1,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 2723,
													"end": 2741,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "127"
												},
												{
													"begin": 2723,
													"end": 2751,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 2723,
													"end": 2751,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "149"
												},
												{
													"begin": 2723,
													"end": 2751,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2543,
													"end": 2758,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 2543,
													"end": 2758,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 8989,
													"end": 9117,
													"name": "tag",
													"source": 2,
													"value": "96"
												},
												{
													"begin": 8989,
													"end": 9117,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 9073,
													"end": 9110,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "152"
												},
												{
													"begin": 9082,
													"end": 9087,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 9089,
													"end": 9096,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 9098,
													"end": 9103,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 9105,
													"end": 9109,
													"name": "PUSH",
													"source": 2,
													"value": "1"
												},
												{
													"begin": 9073,
													"end": 9081,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "153"
												},
												{
													"begin": 9073,
													"end": 9110,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 9073,
													"end": 9110,
													"name": "tag",
													"source": 2,
													"value": "152"
												},
												{
													"begin": 9073,
													"end": 9110,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 8989,
													"end": 9117,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 8989,
													"end": 9117,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 8989,
													"end": 9117,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 8989,
													"end": 9117,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 10663,
													"end": 11140,
													"name": "tag",
													"source": 2,
													"value": "101"
												},
												{
													"begin": 10663,
													"end": 11140,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 10762,
													"end": 10786,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3963,
													"name": "PUSH",
													"source": 2,
													"value": "1"
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3970,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "SWAP4",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "DUP7",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "SWAP3",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 3952,
													"end": 3979,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 10828,
													"end": 10865,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 10828,
													"end": 10865,
													"name": "EQ",
													"source": 2
												},
												{
													"begin": 10824,
													"end": 11134,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "160"
												},
												{
													"begin": 10824,
													"end": 11134,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 10904,
													"end": 10909,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 10885,
													"end": 10901,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 10885,
													"end": 10909,
													"name": "LT",
													"source": 2
												},
												{
													"begin": 10881,
													"end": 11011,
													"name": "ISZERO",
													"source": 2
												},
												{
													"begin": 10881,
													"end": 11011,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "157"
												},
												{
													"begin": 10881,
													"end": 11011,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 10936,
													"end": 10996,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 10936,
													"end": 10996,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "7DC7A0D9"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 10936,
													"end": 10996,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 10936,
													"end": 10996,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 7451,
													"end": 7483,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 7451,
													"end": 7483,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 10936,
													"end": 10996,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 10936,
													"end": 10996,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 10936,
													"end": 10996,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 7433,
													"end": 7484,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 7500,
													"end": 7518,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 7500,
													"end": 7518,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 7500,
													"end": 7518,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 7493,
													"end": 7527,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 7493,
													"end": 7527,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 7493,
													"end": 7527,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 7543,
													"end": 7561,
													"name": "PUSH",
													"source": 10,
													"value": "44"
												},
												{
													"begin": 7543,
													"end": 7561,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 7543,
													"end": 7561,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 7536,
													"end": 7570,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 7536,
													"end": 7570,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 7536,
													"end": 7570,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 7406,
													"end": 7424,
													"name": "PUSH",
													"source": 10,
													"value": "64"
												},
												{
													"begin": 7406,
													"end": 7424,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 10936,
													"end": 10996,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "113"
												},
												{
													"begin": 7231,
													"end": 7576,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 10881,
													"end": 11011,
													"name": "tag",
													"source": 2,
													"value": "157"
												},
												{
													"begin": 10881,
													"end": 11011,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 11052,
													"end": 11109,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "160"
												},
												{
													"begin": 11061,
													"end": 11066,
													"name": "DUP5",
													"source": 2
												},
												{
													"begin": 11068,
													"end": 11075,
													"name": "DUP5",
													"source": 2
												},
												{
													"begin": 11096,
													"end": 11101,
													"name": "DUP5",
													"source": 2
												},
												{
													"begin": 11077,
													"end": 11093,
													"name": "DUP5",
													"source": 2
												},
												{
													"begin": 11077,
													"end": 11101,
													"name": "SUB",
													"source": 2
												},
												{
													"begin": 11103,
													"end": 11108,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 11052,
													"end": 11060,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "153"
												},
												{
													"begin": 11052,
													"end": 11109,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 11052,
													"end": 11109,
													"name": "tag",
													"source": 2,
													"value": "160"
												},
												{
													"begin": 11052,
													"end": 11109,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 10752,
													"end": 11140,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 10663,
													"end": 11140,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 10663,
													"end": 11140,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 10663,
													"end": 11140,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 10663,
													"end": 11140,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 5656,
													"end": 5956,
													"name": "tag",
													"source": 2,
													"value": "103"
												},
												{
													"begin": 5656,
													"end": 5956,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 5739,
													"end": 5757,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 5739,
													"end": 5757,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 5735,
													"end": 5821,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "162"
												},
												{
													"begin": 5735,
													"end": 5821,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 5780,
													"end": 5810,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 5780,
													"end": 5810,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "4B637E8F"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 5780,
													"end": 5810,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 5780,
													"end": 5810,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 5807,
													"end": 5808,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 5780,
													"end": 5810,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 5780,
													"end": 5810,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 5780,
													"end": 5810,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 4041,
													"end": 4092,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 4014,
													"end": 4032,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 4014,
													"end": 4032,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 5780,
													"end": 5810,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "113"
												},
												{
													"begin": 3895,
													"end": 4098,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5735,
													"end": 5821,
													"name": "tag",
													"source": 2,
													"value": "162"
												},
												{
													"begin": 5735,
													"end": 5821,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 5834,
													"end": 5850,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 5834,
													"end": 5850,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 5830,
													"end": 5916,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "164"
												},
												{
													"begin": 5830,
													"end": 5916,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 5873,
													"end": 5905,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 5873,
													"end": 5905,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "EC442F05"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 5873,
													"end": 5905,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 5873,
													"end": 5905,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 5902,
													"end": 5903,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 5873,
													"end": 5905,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 5873,
													"end": 5905,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 5873,
													"end": 5905,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 4041,
													"end": 4092,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 4014,
													"end": 4032,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 4014,
													"end": 4032,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 5873,
													"end": 5905,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "113"
												},
												{
													"begin": 3895,
													"end": 4098,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5830,
													"end": 5916,
													"name": "tag",
													"source": 2,
													"value": "164"
												},
												{
													"begin": 5830,
													"end": 5916,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 5925,
													"end": 5949,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "152"
												},
												{
													"begin": 5933,
													"end": 5937,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 5939,
													"end": 5941,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 5943,
													"end": 5948,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 5925,
													"end": 5932,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "167"
												},
												{
													"begin": 5925,
													"end": 5949,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 1796,
													"end": 1958,
													"name": "tag",
													"source": 0,
													"value": "107"
												},
												{
													"begin": 1796,
													"end": 1958,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "PUSH",
													"source": 0,
													"value": "5"
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 1710,
													"end": 1716,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 735,
													"end": 745,
													"name": "CALLER",
													"source": 5
												},
												{
													"begin": 1855,
													"end": 1878,
													"name": "EQ",
													"source": 0
												},
												{
													"begin": 1851,
													"end": 1952,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "126"
												},
												{
													"begin": 1851,
													"end": 1952,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "118CDAA7"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 735,
													"end": 745,
													"name": "CALLER",
													"source": 5
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 4041,
													"end": 4092,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 4014,
													"end": 4032,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 4014,
													"end": 4032,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 1901,
													"end": 1941,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "113"
												},
												{
													"begin": 3895,
													"end": 4098,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 7721,
													"end": 7929,
													"name": "tag",
													"source": 2,
													"value": "110"
												},
												{
													"begin": 7721,
													"end": 7929,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 7791,
													"end": 7812,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 7791,
													"end": 7812,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 7787,
													"end": 7878,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "175"
												},
												{
													"begin": 7787,
													"end": 7878,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 7835,
													"end": 7867,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 7835,
													"end": 7867,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "EC442F05"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 7835,
													"end": 7867,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 7835,
													"end": 7867,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 7864,
													"end": 7865,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 7835,
													"end": 7867,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 7835,
													"end": 7867,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 7835,
													"end": 7867,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 4041,
													"end": 4092,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 4014,
													"end": 4032,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 4014,
													"end": 4032,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 7835,
													"end": 7867,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "113"
												},
												{
													"begin": 3895,
													"end": 4098,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 7787,
													"end": 7878,
													"name": "tag",
													"source": 2,
													"value": "175"
												},
												{
													"begin": 7787,
													"end": 7878,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 7887,
													"end": 7922,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "109"
												},
												{
													"begin": 7903,
													"end": 7904,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 7907,
													"end": 7914,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 7916,
													"end": 7921,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 7887,
													"end": 7894,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "167"
												},
												{
													"begin": 7887,
													"end": 7922,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 2912,
													"end": 3099,
													"name": "tag",
													"source": 0,
													"value": "127"
												},
												{
													"begin": 2912,
													"end": 3099,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "PUSH",
													"source": 0,
													"value": "5"
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "AND",
													"source": 0
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "OR",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "SWAP4",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "SSTORE",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "PUSH",
													"source": 0,
													"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 2985,
													"end": 3001,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 2985,
													"end": 3001,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "LOG3",
													"source": 0
												},
												{
													"begin": 2975,
													"end": 3099,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 2912,
													"end": 3099,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 2912,
													"end": 3099,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 9949,
													"end": 10381,
													"name": "tag",
													"source": 2,
													"value": "153"
												},
												{
													"begin": 9949,
													"end": 10381,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 10061,
													"end": 10080,
													"name": "DUP5",
													"source": 2
												},
												{
													"begin": 10061,
													"end": 10080,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 10057,
													"end": 10146,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "180"
												},
												{
													"begin": 10057,
													"end": 10146,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 10103,
													"end": 10135,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 10103,
													"end": 10135,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E602DF05"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 10103,
													"end": 10135,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 10103,
													"end": 10135,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 10132,
													"end": 10133,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 10103,
													"end": 10135,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 10103,
													"end": 10135,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 10103,
													"end": 10135,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 4041,
													"end": 4092,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 4014,
													"end": 4032,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 4014,
													"end": 4032,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 10103,
													"end": 10135,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "113"
												},
												{
													"begin": 3895,
													"end": 4098,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 10057,
													"end": 10146,
													"name": "tag",
													"source": 2,
													"value": "180"
												},
												{
													"begin": 10057,
													"end": 10146,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 10159,
													"end": 10180,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 10159,
													"end": 10180,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 10155,
													"end": 10245,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "182"
												},
												{
													"begin": 10155,
													"end": 10245,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 10203,
													"end": 10234,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 10203,
													"end": 10234,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "4A1406B1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 10203,
													"end": 10234,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 10203,
													"end": 10234,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 10231,
													"end": 10232,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 10203,
													"end": 10234,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 10203,
													"end": 10234,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 10203,
													"end": 10234,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 4041,
													"end": 4092,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 4014,
													"end": 4032,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 4014,
													"end": 4032,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 10203,
													"end": 10234,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "113"
												},
												{
													"begin": 3895,
													"end": 4098,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 10155,
													"end": 10245,
													"name": "tag",
													"source": 2,
													"value": "182"
												},
												{
													"begin": 10155,
													"end": 10245,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 10254,
													"end": 10272,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10272,
													"name": "DUP6",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10272,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10272,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 10254,
													"end": 10272,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10272,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10272,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10265,
													"name": "PUSH",
													"source": 2,
													"value": "1"
												},
												{
													"begin": 10254,
													"end": 10272,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 10254,
													"end": 10272,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10272,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10272,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10272,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 10254,
													"end": 10272,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10272,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10272,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10281,
													"name": "SWAP4",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10281,
													"name": "DUP8",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10281,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10281,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10281,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10281,
													"name": "SWAP3",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10281,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10281,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10281,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10289,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10289,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 10254,
													"end": 10289,
													"name": "SSTORE",
													"source": 2
												},
												{
													"begin": 10299,
													"end": 10375,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 10299,
													"end": 10375,
													"name": "ISZERO",
													"source": 2
												},
												{
													"begin": 10299,
													"end": 10375,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "160"
												},
												{
													"begin": 10299,
													"end": 10375,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 10349,
													"end": 10356,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 10333,
													"end": 10364,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 10342,
													"end": 10347,
													"name": "DUP5",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 10333,
													"end": 10364,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 10333,
													"end": 10364,
													"name": "PUSH",
													"source": 2,
													"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
												},
												{
													"begin": 10358,
													"end": 10363,
													"name": "DUP5",
													"source": 2
												},
												{
													"begin": 10333,
													"end": 10364,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 10333,
													"end": 10364,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 10333,
													"end": 10364,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "185"
												},
												{
													"begin": 10333,
													"end": 10364,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 1367,
													"end": 1392,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 1367,
													"end": 1392,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 1355,
													"end": 1357,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 1340,
													"end": 1358,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 1340,
													"end": 1358,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 1221,
													"end": 1398,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 10333,
													"end": 10364,
													"name": "tag",
													"source": 2,
													"value": "185"
												},
												{
													"begin": 10333,
													"end": 10364,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 10333,
													"end": 10364,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 10333,
													"end": 10364,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 10333,
													"end": 10364,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 10333,
													"end": 10364,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 10333,
													"end": 10364,
													"name": "SUB",
													"source": 2
												},
												{
													"begin": 10333,
													"end": 10364,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 10333,
													"end": 10364,
													"name": "LOG3",
													"source": 2
												},
												{
													"begin": 9949,
													"end": 10381,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 9949,
													"end": 10381,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 9949,
													"end": 10381,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 9949,
													"end": 10381,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 9949,
													"end": 10381,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 6271,
													"end": 7378,
													"name": "tag",
													"source": 2,
													"value": "167"
												},
												{
													"begin": 6271,
													"end": 7378,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6360,
													"end": 6378,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 6360,
													"end": 6378,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 6356,
													"end": 6896,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "187"
												},
												{
													"begin": 6356,
													"end": 6896,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 6512,
													"end": 6517,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 6496,
													"end": 6508,
													"name": "PUSH",
													"source": 2,
													"value": "2"
												},
												{
													"begin": 6496,
													"end": 6508,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 6496,
													"end": 6517,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 6496,
													"end": 6517,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 6496,
													"end": 6517,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 6496,
													"end": 6517,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "188"
												},
												{
													"begin": 6496,
													"end": 6517,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 6496,
													"end": 6517,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6496,
													"end": 6517,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "189"
												},
												{
													"begin": 6496,
													"end": 6517,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 6496,
													"end": 6517,
													"name": "tag",
													"source": 2,
													"value": "188"
												},
												{
													"begin": 6496,
													"end": 6517,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 6496,
													"end": 6517,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6496,
													"end": 6517,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 6496,
													"end": 6517,
													"name": "SSTORE",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 6356,
													"end": 6896,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "190"
												},
												{
													"begin": 6356,
													"end": 6896,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 6356,
													"end": 6896,
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 6356,
													"end": 6896,
													"name": "tag",
													"source": 2,
													"value": "187"
												},
												{
													"begin": 6356,
													"end": 6896,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6570,
													"end": 6585,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 6570,
													"end": 6585,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 6548,
													"end": 6567,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 6570,
													"end": 6585,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6570,
													"end": 6585,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6570,
													"end": 6585,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 6570,
													"end": 6585,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 6570,
													"end": 6585,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6570,
													"end": 6585,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6570,
													"end": 6585,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 6570,
													"end": 6585,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 6570,
													"end": 6585,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6570,
													"end": 6585,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 6570,
													"end": 6585,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 6603,
													"end": 6622,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6603,
													"end": 6622,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6603,
													"end": 6622,
													"name": "LT",
													"source": 2
												},
												{
													"begin": 6599,
													"end": 6714,
													"name": "ISZERO",
													"source": 2
												},
												{
													"begin": 6599,
													"end": 6714,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "191"
												},
												{
													"begin": 6599,
													"end": 6714,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 6649,
													"end": 6699,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 6649,
													"end": 6699,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "391434E3"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "E2"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": 6649,
													"end": 6699,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6649,
													"end": 6699,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 7451,
													"end": 7483,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 7451,
													"end": 7483,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 6649,
													"end": 6699,
													"name": "PUSH",
													"source": 2,
													"value": "4"
												},
												{
													"begin": 6649,
													"end": 6699,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 6649,
													"end": 6699,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 7433,
													"end": 7484,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 7500,
													"end": 7518,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 7500,
													"end": 7518,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 7500,
													"end": 7518,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 7493,
													"end": 7527,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 7493,
													"end": 7527,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 7493,
													"end": 7527,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 7543,
													"end": 7561,
													"name": "PUSH",
													"source": 10,
													"value": "44"
												},
												{
													"begin": 7543,
													"end": 7561,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 7543,
													"end": 7561,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 7536,
													"end": 7570,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 7536,
													"end": 7570,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 7536,
													"end": 7570,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 7406,
													"end": 7424,
													"name": "PUSH",
													"source": 10,
													"value": "64"
												},
												{
													"begin": 7406,
													"end": 7424,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 6649,
													"end": 6699,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "113"
												},
												{
													"begin": 7231,
													"end": 7576,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6599,
													"end": 6714,
													"name": "tag",
													"source": 2,
													"value": "191"
												},
												{
													"begin": 6599,
													"end": 6714,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6834,
													"end": 6849,
													"name": "DUP5",
													"source": 2
												},
												{
													"begin": 6834,
													"end": 6849,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 6834,
													"end": 6843,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 6834,
													"end": 6849,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6834,
													"end": 6849,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6834,
													"end": 6849,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 6834,
													"end": 6849,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 6834,
													"end": 6849,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 6834,
													"end": 6849,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6834,
													"end": 6849,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 6834,
													"end": 6849,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 6834,
													"end": 6849,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6834,
													"end": 6849,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 6852,
													"end": 6871,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6852,
													"end": 6871,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 6852,
													"end": 6871,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6852,
													"end": 6871,
													"name": "SUB",
													"source": 2
												},
												{
													"begin": 6834,
													"end": 6871,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 6834,
													"end": 6871,
													"name": "SSTORE",
													"source": 2
												},
												{
													"begin": 6356,
													"end": 6896,
													"name": "tag",
													"source": 2,
													"value": "190"
												},
												{
													"begin": 6356,
													"end": 6896,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 6910,
													"end": 6926,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 6910,
													"end": 6926,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 6906,
													"end": 7331,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "193"
												},
												{
													"begin": 6906,
													"end": 7331,
													"name": "JUMPI",
													"source": 2
												},
												{
													"begin": 7073,
													"end": 7085,
													"name": "PUSH",
													"source": 2,
													"value": "2"
												},
												{
													"begin": 7073,
													"end": 7094,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 7073,
													"end": 7094,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 7073,
													"end": 7094,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 7073,
													"end": 7094,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 7073,
													"end": 7094,
													"name": "SUB",
													"source": 2
												},
												{
													"begin": 7073,
													"end": 7094,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 7073,
													"end": 7094,
													"name": "SSTORE",
													"source": 2
												},
												{
													"begin": 6906,
													"end": 7331,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "194"
												},
												{
													"begin": 6906,
													"end": 7331,
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 6906,
													"end": 7331,
													"name": "tag",
													"source": 2,
													"value": "193"
												},
												{
													"begin": 6906,
													"end": 7331,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 7284,
													"end": 7297,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 7284,
													"end": 7297,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 7284,
													"end": 7293,
													"name": "PUSH",
													"source": 2,
													"value": "0"
												},
												{
													"begin": 7284,
													"end": 7297,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 7284,
													"end": 7297,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 7284,
													"end": 7297,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 7284,
													"end": 7297,
													"name": "PUSH",
													"source": 2,
													"value": "20"
												},
												{
													"begin": 7284,
													"end": 7297,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": 7284,
													"end": 7297,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 7284,
													"end": 7297,
													"name": "MSTORE",
													"source": 2
												},
												{
													"begin": 7284,
													"end": 7297,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 7284,
													"end": 7297,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 7284,
													"end": 7297,
													"name": "KECCAK256",
													"source": 2
												},
												{
													"begin": 7284,
													"end": 7306,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 7284,
													"end": 7306,
													"name": "SLOAD",
													"source": 2
												},
												{
													"begin": 7284,
													"end": 7306,
													"name": "DUP3",
													"source": 2
												},
												{
													"begin": 7284,
													"end": 7306,
													"name": "ADD",
													"source": 2
												},
												{
													"begin": 7284,
													"end": 7306,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 7284,
													"end": 7306,
													"name": "SSTORE",
													"source": 2
												},
												{
													"begin": 6906,
													"end": 7331,
													"name": "tag",
													"source": 2,
													"value": "194"
												},
												{
													"begin": 6906,
													"end": 7331,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 7361,
													"end": 7363,
													"name": "DUP2",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 7346,
													"end": 7371,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 7355,
													"end": 7359,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 7346,
													"end": 7371,
													"name": "AND",
													"source": 2
												},
												{
													"begin": 7346,
													"end": 7371,
													"name": "PUSH",
													"source": 2,
													"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
												},
												{
													"begin": 7365,
													"end": 7370,
													"name": "DUP4",
													"source": 2
												},
												{
													"begin": 7346,
													"end": 7371,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 7346,
													"end": 7371,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 7346,
													"end": 7371,
													"name": "PUSH [tag]",
													"source": 2,
													"value": "195"
												},
												{
													"begin": 7346,
													"end": 7371,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 1367,
													"end": 1392,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 1367,
													"end": 1392,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 1355,
													"end": 1357,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 1340,
													"end": 1358,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 1340,
													"end": 1358,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 1221,
													"end": 1398,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 7346,
													"end": 7371,
													"name": "tag",
													"source": 2,
													"value": "195"
												},
												{
													"begin": 7346,
													"end": 7371,
													"name": "JUMPDEST",
													"source": 2
												},
												{
													"begin": 7346,
													"end": 7371,
													"name": "PUSH",
													"source": 2,
													"value": "40"
												},
												{
													"begin": 7346,
													"end": 7371,
													"name": "MLOAD",
													"source": 2
												},
												{
													"begin": 7346,
													"end": 7371,
													"name": "DUP1",
													"source": 2
												},
												{
													"begin": 7346,
													"end": 7371,
													"name": "SWAP2",
													"source": 2
												},
												{
													"begin": 7346,
													"end": 7371,
													"name": "SUB",
													"source": 2
												},
												{
													"begin": 7346,
													"end": 7371,
													"name": "SWAP1",
													"source": 2
												},
												{
													"begin": 7346,
													"end": 7371,
													"name": "LOG3",
													"source": 2
												},
												{
													"begin": 6271,
													"end": 7378,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 6271,
													"end": 7378,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 6271,
													"end": 7378,
													"name": "POP",
													"source": 2
												},
												{
													"begin": 6271,
													"end": 7378,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 2
												},
												{
													"begin": 14,
													"end": 541,
													"name": "tag",
													"source": 10,
													"value": "25"
												},
												{
													"begin": 14,
													"end": 541,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 163,
													"end": 165,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 152,
													"end": 161,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 145,
													"end": 166,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 126,
													"end": 130,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 195,
													"end": 201,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 189,
													"end": 202,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": 238,
													"end": 244,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 233,
													"end": 235,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 222,
													"end": 231,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 218,
													"end": 236,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 211,
													"end": 245,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 263,
													"end": 264,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 273,
													"end": 413,
													"name": "tag",
													"source": 10,
													"value": "204"
												},
												{
													"begin": 273,
													"end": 413,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 287,
													"end": 293,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 284,
													"end": 285,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 281,
													"end": 294,
													"name": "LT",
													"source": 10
												},
												{
													"begin": 273,
													"end": 413,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 273,
													"end": 413,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "206"
												},
												{
													"begin": 273,
													"end": 413,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 398,
													"end": 400,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 382,
													"end": 396,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 382,
													"end": 396,
													"name": "DUP7",
													"source": 10
												},
												{
													"begin": 382,
													"end": 396,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 378,
													"end": 401,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 378,
													"end": 401,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 372,
													"end": 402,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": 367,
													"end": 369,
													"name": "PUSH",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 348,
													"end": 365,
													"name": "DUP7",
													"source": 10
												},
												{
													"begin": 348,
													"end": 365,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 348,
													"end": 365,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 344,
													"end": 370,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 337,
													"end": 403,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 302,
													"end": 312,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 273,
													"end": 413,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "204"
												},
												{
													"begin": 273,
													"end": 413,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 273,
													"end": 413,
													"name": "tag",
													"source": 10,
													"value": "206"
												},
												{
													"begin": 273,
													"end": 413,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 277,
													"end": 280,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 462,
													"end": 463,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 457,
													"end": 459,
													"name": "PUSH",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 448,
													"end": 454,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 437,
													"end": 446,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 433,
													"end": 455,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 429,
													"end": 460,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 422,
													"end": 464,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 532,
													"end": 534,
													"name": "PUSH",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 525,
													"end": 527,
													"name": "PUSH",
													"source": 10,
													"value": "1F"
												},
												{
													"begin": 521,
													"end": 528,
													"name": "NOT",
													"source": 10
												},
												{
													"begin": 516,
													"end": 518,
													"name": "PUSH",
													"source": 10,
													"value": "1F"
												},
												{
													"begin": 508,
													"end": 514,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 504,
													"end": 519,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 500,
													"end": 529,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 489,
													"end": 498,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 485,
													"end": 530,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 481,
													"end": 535,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 473,
													"end": 535,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 473,
													"end": 535,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 473,
													"end": 535,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 14,
													"end": 541,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 14,
													"end": 541,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 14,
													"end": 541,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 14,
													"end": 541,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 14,
													"end": 541,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 546,
													"end": 719,
													"name": "tag",
													"source": 10,
													"value": "196"
												},
												{
													"begin": 546,
													"end": 719,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 614,
													"end": 634,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 614,
													"end": 634,
													"name": "CALLDATALOAD",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB",
													"source": -1
												},
												{
													"begin": 663,
													"end": 694,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 663,
													"end": 694,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 653,
													"end": 695,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 653,
													"end": 695,
													"name": "EQ",
													"source": 10
												},
												{
													"begin": 643,
													"end": 713,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "208"
												},
												{
													"begin": 643,
													"end": 713,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 709,
													"end": 710,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 706,
													"end": 707,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 699,
													"end": 711,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 643,
													"end": 713,
													"name": "tag",
													"source": 10,
													"value": "208"
												},
												{
													"begin": 643,
													"end": 713,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 546,
													"end": 719,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 546,
													"end": 719,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 546,
													"end": 719,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 546,
													"end": 719,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 724,
													"end": 1024,
													"name": "tag",
													"source": 10,
													"value": "28"
												},
												{
													"begin": 724,
													"end": 1024,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 792,
													"end": 798,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 800,
													"end": 806,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 853,
													"end": 855,
													"name": "PUSH",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 841,
													"end": 850,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 832,
													"end": 839,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 828,
													"end": 851,
													"name": "SUB",
													"source": 10
												},
												{
													"begin": 824,
													"end": 856,
													"name": "SLT",
													"source": 10
												},
												{
													"begin": 821,
													"end": 873,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 821,
													"end": 873,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "210"
												},
												{
													"begin": 821,
													"end": 873,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 869,
													"end": 870,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 866,
													"end": 867,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 859,
													"end": 871,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 821,
													"end": 873,
													"name": "tag",
													"source": 10,
													"value": "210"
												},
												{
													"begin": 821,
													"end": 873,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 892,
													"end": 921,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "211"
												},
												{
													"begin": 911,
													"end": 920,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 892,
													"end": 921,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "196"
												},
												{
													"begin": 892,
													"end": 921,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 892,
													"end": 921,
													"name": "tag",
													"source": 10,
													"value": "211"
												},
												{
													"begin": 892,
													"end": 921,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 882,
													"end": 921,
													"name": "SWAP5",
													"source": 10
												},
												{
													"begin": 990,
													"end": 992,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 975,
													"end": 993,
													"name": "SWAP4",
													"source": 10
												},
												{
													"begin": 975,
													"end": 993,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 975,
													"end": 993,
													"name": "SWAP4",
													"source": 10
												},
												{
													"begin": 975,
													"end": 993,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 962,
													"end": 994,
													"name": "CALLDATALOAD",
													"source": 10
												},
												{
													"begin": 962,
													"end": 994,
													"name": "SWAP4",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 724,
													"end": 1024,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 1403,
													"end": 1777,
													"name": "tag",
													"source": 10,
													"value": "38"
												},
												{
													"begin": 1403,
													"end": 1777,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 1480,
													"end": 1486,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 1488,
													"end": 1494,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 1496,
													"end": 1502,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 1549,
													"end": 1551,
													"name": "PUSH",
													"source": 10,
													"value": "60"
												},
												{
													"begin": 1537,
													"end": 1546,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 1528,
													"end": 1535,
													"name": "DUP7",
													"source": 10
												},
												{
													"begin": 1524,
													"end": 1547,
													"name": "SUB",
													"source": 10
												},
												{
													"begin": 1520,
													"end": 1552,
													"name": "SLT",
													"source": 10
												},
												{
													"begin": 1517,
													"end": 1569,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 1517,
													"end": 1569,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "215"
												},
												{
													"begin": 1517,
													"end": 1569,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 1565,
													"end": 1566,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 1562,
													"end": 1563,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 1555,
													"end": 1567,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 1517,
													"end": 1569,
													"name": "tag",
													"source": 10,
													"value": "215"
												},
												{
													"begin": 1517,
													"end": 1569,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 1588,
													"end": 1617,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "216"
												},
												{
													"begin": 1607,
													"end": 1616,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 1588,
													"end": 1617,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "196"
												},
												{
													"begin": 1588,
													"end": 1617,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 1588,
													"end": 1617,
													"name": "tag",
													"source": 10,
													"value": "216"
												},
												{
													"begin": 1588,
													"end": 1617,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 1578,
													"end": 1617,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 1578,
													"end": 1617,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 1636,
													"end": 1674,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "217"
												},
												{
													"begin": 1670,
													"end": 1672,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 1659,
													"end": 1668,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 1655,
													"end": 1673,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 1636,
													"end": 1674,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "196"
												},
												{
													"begin": 1636,
													"end": 1674,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 1636,
													"end": 1674,
													"name": "tag",
													"source": 10,
													"value": "217"
												},
												{
													"begin": 1636,
													"end": 1674,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 1403,
													"end": 1777,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 1403,
													"end": 1777,
													"name": "SWAP6",
													"source": 10
												},
												{
													"begin": 1626,
													"end": 1674,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 1626,
													"end": 1674,
													"name": "SWAP5",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 1743,
													"end": 1745,
													"name": "PUSH",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 1728,
													"end": 1746,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 1728,
													"end": 1746,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 1728,
													"end": 1746,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 1728,
													"end": 1746,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 1715,
													"end": 1747,
													"name": "CALLDATALOAD",
													"source": 10
												},
												{
													"begin": 1715,
													"end": 1747,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 1403,
													"end": 1777,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 1971,
													"end": 2098,
													"name": "tag",
													"source": 10,
													"value": "197"
												},
												{
													"begin": 1971,
													"end": 2098,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2032,
													"end": 2042,
													"name": "PUSH",
													"source": 10,
													"value": "4E487B71"
												},
												{
													"begin": 2027,
													"end": 2030,
													"name": "PUSH",
													"source": 10,
													"value": "E0"
												},
												{
													"begin": 2023,
													"end": 2043,
													"name": "SHL",
													"source": 10
												},
												{
													"begin": 2020,
													"end": 2021,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 2013,
													"end": 2044,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 2063,
													"end": 2067,
													"name": "PUSH",
													"source": 10,
													"value": "41"
												},
												{
													"begin": 2060,
													"end": 2061,
													"name": "PUSH",
													"source": 10,
													"value": "4"
												},
												{
													"begin": 2053,
													"end": 2068,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 2087,
													"end": 2091,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 2084,
													"end": 2085,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 2077,
													"end": 2092,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 2103,
													"end": 2829,
													"name": "tag",
													"source": 10,
													"value": "198"
												},
												{
													"begin": 2103,
													"end": 2829,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2146,
													"end": 2151,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 2199,
													"end": 2202,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 2192,
													"end": 2196,
													"name": "PUSH",
													"source": 10,
													"value": "1F"
												},
												{
													"begin": 2184,
													"end": 2190,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 2180,
													"end": 2197,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 2176,
													"end": 2203,
													"name": "SLT",
													"source": 10
												},
												{
													"begin": 2166,
													"end": 2221,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "221"
												},
												{
													"begin": 2166,
													"end": 2221,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 2217,
													"end": 2218,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 2214,
													"end": 2215,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 2207,
													"end": 2219,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 2166,
													"end": 2221,
													"name": "tag",
													"source": 10,
													"value": "221"
												},
												{
													"begin": 2166,
													"end": 2221,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2257,
													"end": 2263,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 2244,
													"end": 2264,
													"name": "CALLDATALOAD",
													"source": 10
												},
												{
													"begin": 2287,
													"end": 2305,
													"name": "PUSH",
													"source": 10,
													"value": "FFFFFFFFFFFFFFFF"
												},
												{
													"begin": 2279,
													"end": 2285,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 2276,
													"end": 2306,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 2273,
													"end": 2329,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 2273,
													"end": 2329,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "223"
												},
												{
													"begin": 2273,
													"end": 2329,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 2309,
													"end": 2327,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "223"
												},
												{
													"begin": 2309,
													"end": 2327,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "197"
												},
												{
													"begin": 2309,
													"end": 2327,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 2309,
													"end": 2327,
													"name": "tag",
													"source": 10,
													"value": "223"
												},
												{
													"begin": 2309,
													"end": 2327,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2358,
													"end": 2360,
													"name": "PUSH",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 2352,
													"end": 2361,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": 2450,
													"end": 2452,
													"name": "PUSH",
													"source": 10,
													"value": "1F"
												},
												{
													"begin": 2412,
													"end": 2429,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 2412,
													"end": 2429,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1F"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 2408,
													"end": 2439,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 2408,
													"end": 2439,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 2408,
													"end": 2439,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 2441,
													"end": 2443,
													"name": "PUSH",
													"source": 10,
													"value": "3F"
												},
												{
													"begin": 2404,
													"end": 2444,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 2400,
													"end": 2454,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 2388,
													"end": 2455,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 2388,
													"end": 2455,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 2485,
													"end": 2503,
													"name": "PUSH",
													"source": 10,
													"value": "FFFFFFFFFFFFFFFF"
												},
												{
													"begin": 2470,
													"end": 2504,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 2470,
													"end": 2504,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 2506,
													"end": 2528,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 2506,
													"end": 2528,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 2506,
													"end": 2528,
													"name": "LT",
													"source": 10
												},
												{
													"begin": 2467,
													"end": 2529,
													"name": "OR",
													"source": 10
												},
												{
													"begin": 2464,
													"end": 2552,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 2464,
													"end": 2552,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "225"
												},
												{
													"begin": 2464,
													"end": 2552,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 2532,
													"end": 2550,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "225"
												},
												{
													"begin": 2532,
													"end": 2550,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "197"
												},
												{
													"begin": 2532,
													"end": 2550,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 2532,
													"end": 2550,
													"name": "tag",
													"source": 10,
													"value": "225"
												},
												{
													"begin": 2532,
													"end": 2550,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2568,
													"end": 2570,
													"name": "PUSH",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 2561,
													"end": 2583,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 2592,
													"end": 2614,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 2592,
													"end": 2614,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 2592,
													"end": 2614,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 2633,
													"end": 2652,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 2633,
													"end": 2652,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 2633,
													"end": 2652,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 2654,
													"end": 2658,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 2629,
													"end": 2659,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 2626,
													"end": 2665,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "LT",
													"source": -1
												},
												{
													"begin": 2623,
													"end": 2682,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 2623,
													"end": 2682,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "226"
												},
												{
													"begin": 2623,
													"end": 2682,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 2678,
													"end": 2679,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 2675,
													"end": 2676,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 2668,
													"end": 2680,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 2623,
													"end": 2682,
													"name": "tag",
													"source": 10,
													"value": "226"
												},
												{
													"begin": 2623,
													"end": 2682,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2742,
													"end": 2748,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 2735,
													"end": 2739,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 2727,
													"end": 2733,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 2723,
													"end": 2740,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 2716,
													"end": 2720,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 2708,
													"end": 2714,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 2704,
													"end": 2721,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 2691,
													"end": 2749,
													"name": "CALLDATACOPY",
													"source": 10
												},
												{
													"begin": 2797,
													"end": 2798,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 2769,
													"end": 2788,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 2769,
													"end": 2788,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 2769,
													"end": 2788,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 2790,
													"end": 2794,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 2765,
													"end": 2795,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 2758,
													"end": 2799,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 2758,
													"end": 2799,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 2758,
													"end": 2799,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 2758,
													"end": 2799,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 2773,
													"end": 2779,
													"name": "SWAP4",
													"source": 10
												},
												{
													"begin": 2103,
													"end": 2829,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 2103,
													"end": 2829,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 2834,
													"end": 3372,
													"name": "tag",
													"source": 10,
													"value": "50"
												},
												{
													"begin": 2834,
													"end": 3372,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2922,
													"end": 2928,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 2930,
													"end": 2936,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 2983,
													"end": 2985,
													"name": "PUSH",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 2971,
													"end": 2980,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 2962,
													"end": 2969,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 2958,
													"end": 2981,
													"name": "SUB",
													"source": 10
												},
												{
													"begin": 2954,
													"end": 2986,
													"name": "SLT",
													"source": 10
												},
												{
													"begin": 2951,
													"end": 3003,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 2951,
													"end": 3003,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "228"
												},
												{
													"begin": 2951,
													"end": 3003,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 2999,
													"end": 3000,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 2996,
													"end": 2997,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 2989,
													"end": 3001,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 2951,
													"end": 3003,
													"name": "tag",
													"source": 10,
													"value": "228"
												},
												{
													"begin": 2951,
													"end": 3003,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 3039,
													"end": 3048,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 3026,
													"end": 3049,
													"name": "CALLDATALOAD",
													"source": 10
												},
												{
													"begin": 3072,
													"end": 3090,
													"name": "PUSH",
													"source": 10,
													"value": "FFFFFFFFFFFFFFFF"
												},
												{
													"begin": 3064,
													"end": 3070,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 3061,
													"end": 3091,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 3058,
													"end": 3108,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 3058,
													"end": 3108,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "229"
												},
												{
													"begin": 3058,
													"end": 3108,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 3104,
													"end": 3105,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 3101,
													"end": 3102,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 3094,
													"end": 3106,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 3058,
													"end": 3108,
													"name": "tag",
													"source": 10,
													"value": "229"
												},
												{
													"begin": 3058,
													"end": 3108,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 3127,
													"end": 3177,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "230"
												},
												{
													"begin": 3169,
													"end": 3176,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 3160,
													"end": 3166,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 3149,
													"end": 3158,
													"name": "DUP7",
													"source": 10
												},
												{
													"begin": 3145,
													"end": 3167,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 3127,
													"end": 3177,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "198"
												},
												{
													"begin": 3127,
													"end": 3177,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 3127,
													"end": 3177,
													"name": "tag",
													"source": 10,
													"value": "230"
												},
												{
													"begin": 3127,
													"end": 3177,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 3117,
													"end": 3177,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 3117,
													"end": 3177,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 3117,
													"end": 3177,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 3230,
													"end": 3232,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 3219,
													"end": 3228,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 3215,
													"end": 3233,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 3202,
													"end": 3234,
													"name": "CALLDATALOAD",
													"source": 10
												},
												{
													"begin": 3259,
													"end": 3277,
													"name": "PUSH",
													"source": 10,
													"value": "FFFFFFFFFFFFFFFF"
												},
												{
													"begin": 3249,
													"end": 3257,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 3246,
													"end": 3278,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 3243,
													"end": 3295,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 3243,
													"end": 3295,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "231"
												},
												{
													"begin": 3243,
													"end": 3295,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 3291,
													"end": 3292,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 3288,
													"end": 3289,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 3281,
													"end": 3293,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 3243,
													"end": 3295,
													"name": "tag",
													"source": 10,
													"value": "231"
												},
												{
													"begin": 3243,
													"end": 3295,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 3314,
													"end": 3366,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "232"
												},
												{
													"begin": 3358,
													"end": 3365,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 3347,
													"end": 3355,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 3336,
													"end": 3345,
													"name": "DUP7",
													"source": 10
												},
												{
													"begin": 3332,
													"end": 3356,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 3314,
													"end": 3366,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "198"
												},
												{
													"begin": 3314,
													"end": 3366,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 3314,
													"end": 3366,
													"name": "tag",
													"source": 10,
													"value": "232"
												},
												{
													"begin": 3314,
													"end": 3366,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 3304,
													"end": 3366,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 3304,
													"end": 3366,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 3304,
													"end": 3366,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 2834,
													"end": 3372,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 2834,
													"end": 3372,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 2834,
													"end": 3372,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 2834,
													"end": 3372,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 2834,
													"end": 3372,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 2834,
													"end": 3372,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 3377,
													"end": 3699,
													"name": "tag",
													"source": 10,
													"value": "54"
												},
												{
													"begin": 3377,
													"end": 3699,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 3446,
													"end": 3452,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 3499,
													"end": 3501,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 3487,
													"end": 3496,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 3478,
													"end": 3485,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 3474,
													"end": 3497,
													"name": "SUB",
													"source": 10
												},
												{
													"begin": 3470,
													"end": 3502,
													"name": "SLT",
													"source": 10
												},
												{
													"begin": 3467,
													"end": 3519,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 3467,
													"end": 3519,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "234"
												},
												{
													"begin": 3467,
													"end": 3519,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 3515,
													"end": 3516,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 3512,
													"end": 3513,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 3505,
													"end": 3517,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 3467,
													"end": 3519,
													"name": "tag",
													"source": 10,
													"value": "234"
												},
												{
													"begin": 3467,
													"end": 3519,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 3555,
													"end": 3564,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 3542,
													"end": 3565,
													"name": "CALLDATALOAD",
													"source": 10
												},
												{
													"begin": 3588,
													"end": 3606,
													"name": "PUSH",
													"source": 10,
													"value": "FFFFFFFFFFFFFFFF"
												},
												{
													"begin": 3580,
													"end": 3586,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 3577,
													"end": 3607,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 3574,
													"end": 3624,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 3574,
													"end": 3624,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "235"
												},
												{
													"begin": 3574,
													"end": 3624,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 3620,
													"end": 3621,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 3617,
													"end": 3618,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 3610,
													"end": 3622,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 3574,
													"end": 3624,
													"name": "tag",
													"source": 10,
													"value": "235"
												},
												{
													"begin": 3574,
													"end": 3624,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 3643,
													"end": 3693,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "236"
												},
												{
													"begin": 3685,
													"end": 3692,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 3676,
													"end": 3682,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 3665,
													"end": 3674,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 3661,
													"end": 3683,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 3643,
													"end": 3693,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "198"
												},
												{
													"begin": 3643,
													"end": 3693,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 3643,
													"end": 3693,
													"name": "tag",
													"source": 10,
													"value": "236"
												},
												{
													"begin": 3643,
													"end": 3693,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 3633,
													"end": 3693,
													"name": "SWAP5",
													"source": 10
												},
												{
													"begin": 3377,
													"end": 3699,
													"name": "SWAP4",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 3377,
													"end": 3699,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 3704,
													"end": 3890,
													"name": "tag",
													"source": 10,
													"value": "58"
												},
												{
													"begin": 3704,
													"end": 3890,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 3763,
													"end": 3769,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 3816,
													"end": 3818,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 3804,
													"end": 3813,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 3795,
													"end": 3802,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 3791,
													"end": 3814,
													"name": "SUB",
													"source": 10
												},
												{
													"begin": 3787,
													"end": 3819,
													"name": "SLT",
													"source": 10
												},
												{
													"begin": 3784,
													"end": 3836,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 3784,
													"end": 3836,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "238"
												},
												{
													"begin": 3784,
													"end": 3836,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 3832,
													"end": 3833,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 3829,
													"end": 3830,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 3822,
													"end": 3834,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 3784,
													"end": 3836,
													"name": "tag",
													"source": 10,
													"value": "238"
												},
												{
													"begin": 3784,
													"end": 3836,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 3855,
													"end": 3884,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "239"
												},
												{
													"begin": 3874,
													"end": 3883,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 3855,
													"end": 3884,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "196"
												},
												{
													"begin": 3855,
													"end": 3884,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 3855,
													"end": 3884,
													"name": "tag",
													"source": 10,
													"value": "239"
												},
												{
													"begin": 3855,
													"end": 3884,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 3845,
													"end": 3884,
													"name": "SWAP4",
													"source": 10
												},
												{
													"begin": 3704,
													"end": 3890,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 3704,
													"end": 3890,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 4103,
													"end": 4363,
													"name": "tag",
													"source": 10,
													"value": "79"
												},
												{
													"begin": 4103,
													"end": 4363,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4171,
													"end": 4177,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 4179,
													"end": 4185,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 4232,
													"end": 4234,
													"name": "PUSH",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 4220,
													"end": 4229,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 4211,
													"end": 4218,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 4207,
													"end": 4230,
													"name": "SUB",
													"source": 10
												},
												{
													"begin": 4203,
													"end": 4235,
													"name": "SLT",
													"source": 10
												},
												{
													"begin": 4200,
													"end": 4252,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 4200,
													"end": 4252,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "242"
												},
												{
													"begin": 4200,
													"end": 4252,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 4248,
													"end": 4249,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 4245,
													"end": 4246,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 4238,
													"end": 4250,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 4200,
													"end": 4252,
													"name": "tag",
													"source": 10,
													"value": "242"
												},
												{
													"begin": 4200,
													"end": 4252,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4271,
													"end": 4300,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "243"
												},
												{
													"begin": 4290,
													"end": 4299,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 4271,
													"end": 4300,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "196"
												},
												{
													"begin": 4271,
													"end": 4300,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 4271,
													"end": 4300,
													"name": "tag",
													"source": 10,
													"value": "243"
												},
												{
													"begin": 4271,
													"end": 4300,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4261,
													"end": 4300,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 4261,
													"end": 4300,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4319,
													"end": 4357,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "244"
												},
												{
													"begin": 4353,
													"end": 4355,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 4342,
													"end": 4351,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 4338,
													"end": 4356,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 4319,
													"end": 4357,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "196"
												},
												{
													"begin": 4319,
													"end": 4357,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 4319,
													"end": 4357,
													"name": "tag",
													"source": 10,
													"value": "244"
												},
												{
													"begin": 4319,
													"end": 4357,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4309,
													"end": 4357,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 4309,
													"end": 4357,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4103,
													"end": 4363,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 4103,
													"end": 4363,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4103,
													"end": 4363,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 4103,
													"end": 4363,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 4103,
													"end": 4363,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4103,
													"end": 4363,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 4368,
													"end": 4748,
													"name": "tag",
													"source": 10,
													"value": "87"
												},
												{
													"begin": 4368,
													"end": 4748,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4447,
													"end": 4448,
													"name": "PUSH",
													"source": 10,
													"value": "1"
												},
												{
													"begin": 4443,
													"end": 4455,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 4443,
													"end": 4455,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 4443,
													"end": 4455,
													"name": "SHR",
													"source": 10
												},
												{
													"begin": 4443,
													"end": 4455,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 4490,
													"end": 4502,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 4490,
													"end": 4502,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 4490,
													"end": 4502,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 4511,
													"end": 4572,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "246"
												},
												{
													"begin": 4511,
													"end": 4572,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 4565,
													"end": 4569,
													"name": "PUSH",
													"source": 10,
													"value": "7F"
												},
												{
													"begin": 4557,
													"end": 4563,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 4553,
													"end": 4570,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 4543,
													"end": 4570,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 4543,
													"end": 4570,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4511,
													"end": 4572,
													"name": "tag",
													"source": 10,
													"value": "246"
												},
												{
													"begin": 4511,
													"end": 4572,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4618,
													"end": 4620,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 4610,
													"end": 4616,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 4607,
													"end": 4621,
													"name": "LT",
													"source": 10
												},
												{
													"begin": 4587,
													"end": 4605,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 4584,
													"end": 4622,
													"name": "SUB",
													"source": 10
												},
												{
													"begin": 4581,
													"end": 4742,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "247"
												},
												{
													"begin": 4581,
													"end": 4742,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 4664,
													"end": 4674,
													"name": "PUSH",
													"source": 10,
													"value": "4E487B71"
												},
												{
													"begin": 4659,
													"end": 4662,
													"name": "PUSH",
													"source": 10,
													"value": "E0"
												},
												{
													"begin": 4655,
													"end": 4675,
													"name": "SHL",
													"source": 10
												},
												{
													"begin": 4652,
													"end": 4653,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 4645,
													"end": 4676,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 4699,
													"end": 4703,
													"name": "PUSH",
													"source": 10,
													"value": "22"
												},
												{
													"begin": 4696,
													"end": 4697,
													"name": "PUSH",
													"source": 10,
													"value": "4"
												},
												{
													"begin": 4689,
													"end": 4704,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 4727,
													"end": 4731,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 4724,
													"end": 4725,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 4717,
													"end": 4732,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 4581,
													"end": 4742,
													"name": "tag",
													"source": 10,
													"value": "247"
												},
												{
													"begin": 4581,
													"end": 4742,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4581,
													"end": 4742,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4368,
													"end": 4748,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 4368,
													"end": 4748,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 4368,
													"end": 4748,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4368,
													"end": 4748,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5233,
													"end": 5751,
													"name": "tag",
													"source": 10,
													"value": "200"
												},
												{
													"begin": 5233,
													"end": 5751,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5335,
													"end": 5337,
													"name": "PUSH",
													"source": 10,
													"value": "1F"
												},
												{
													"begin": 5330,
													"end": 5333,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 5327,
													"end": 5338,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 5324,
													"end": 5745,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 5324,
													"end": 5745,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "152"
												},
												{
													"begin": 5324,
													"end": 5745,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 5371,
													"end": 5376,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 5368,
													"end": 5369,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 5361,
													"end": 5377,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 5415,
													"end": 5419,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 5412,
													"end": 5413,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 5402,
													"end": 5420,
													"name": "KECCAK256",
													"source": 10
												},
												{
													"begin": 5485,
													"end": 5487,
													"name": "PUSH",
													"source": 10,
													"value": "1F"
												},
												{
													"begin": 5473,
													"end": 5483,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 5469,
													"end": 5488,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 5466,
													"end": 5467,
													"name": "PUSH",
													"source": 10,
													"value": "5"
												},
												{
													"begin": 5462,
													"end": 5489,
													"name": "SHR",
													"source": 10
												},
												{
													"begin": 5456,
													"end": 5460,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5452,
													"end": 5490,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 5521,
													"end": 5525,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 5509,
													"end": 5519,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 5506,
													"end": 5526,
													"name": "LT",
													"source": 10
												},
												{
													"begin": 5503,
													"end": 5550,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 5503,
													"end": 5550,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "252"
												},
												{
													"begin": 5503,
													"end": 5550,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 5544,
													"end": 5548,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 5503,
													"end": 5550,
													"name": "tag",
													"source": 10,
													"value": "252"
												},
												{
													"begin": 5503,
													"end": 5550,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5599,
													"end": 5601,
													"name": "PUSH",
													"source": 10,
													"value": "1F"
												},
												{
													"begin": 5594,
													"end": 5597,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 5590,
													"end": 5602,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 5587,
													"end": 5588,
													"name": "PUSH",
													"source": 10,
													"value": "5"
												},
												{
													"begin": 5583,
													"end": 5603,
													"name": "SHR",
													"source": 10
												},
												{
													"begin": 5577,
													"end": 5581,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 5573,
													"end": 5604,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 5563,
													"end": 5604,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 5563,
													"end": 5604,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5654,
													"end": 5735,
													"name": "tag",
													"source": 10,
													"value": "253"
												},
												{
													"begin": 5654,
													"end": 5735,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5672,
													"end": 5674,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5665,
													"end": 5670,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5662,
													"end": 5675,
													"name": "LT",
													"source": 10
												},
												{
													"begin": 5654,
													"end": 5735,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 5654,
													"end": 5735,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "255"
												},
												{
													"begin": 5654,
													"end": 5735,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 5731,
													"end": 5732,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 5717,
													"end": 5733,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5717,
													"end": 5733,
													"name": "SSTORE",
													"source": 10
												},
												{
													"begin": 5698,
													"end": 5699,
													"name": "PUSH",
													"source": 10,
													"value": "1"
												},
												{
													"begin": 5687,
													"end": 5700,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 5654,
													"end": 5735,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "253"
												},
												{
													"begin": 5654,
													"end": 5735,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5654,
													"end": 5735,
													"name": "tag",
													"source": 10,
													"value": "255"
												},
												{
													"begin": 5654,
													"end": 5735,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5658,
													"end": 5661,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5658,
													"end": 5661,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5233,
													"end": 5751,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5233,
													"end": 5751,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5233,
													"end": 5751,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5233,
													"end": 5751,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5927,
													"end": 7226,
													"name": "tag",
													"source": 10,
													"value": "116"
												},
												{
													"begin": 5927,
													"end": 7226,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 6053,
													"end": 6056,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 6047,
													"end": 6057,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": 6080,
													"end": 6098,
													"name": "PUSH",
													"source": 10,
													"value": "FFFFFFFFFFFFFFFF"
												},
												{
													"begin": 6072,
													"end": 6078,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 6069,
													"end": 6099,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 6066,
													"end": 6122,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 6066,
													"end": 6122,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "259"
												},
												{
													"begin": 6066,
													"end": 6122,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 6102,
													"end": 6120,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "259"
												},
												{
													"begin": 6102,
													"end": 6120,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "197"
												},
												{
													"begin": 6102,
													"end": 6120,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6102,
													"end": 6120,
													"name": "tag",
													"source": 10,
													"value": "259"
												},
												{
													"begin": 6102,
													"end": 6120,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 6131,
													"end": 6228,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "260"
												},
												{
													"begin": 6221,
													"end": 6227,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 6181,
													"end": 6219,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "261"
												},
												{
													"begin": 6213,
													"end": 6217,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 6207,
													"end": 6218,
													"name": "SLOAD",
													"source": 10
												},
												{
													"begin": 6181,
													"end": 6219,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "87"
												},
												{
													"begin": 6181,
													"end": 6219,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6181,
													"end": 6219,
													"name": "tag",
													"source": 10,
													"value": "261"
												},
												{
													"begin": 6181,
													"end": 6219,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 6175,
													"end": 6179,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 6131,
													"end": 6228,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "200"
												},
												{
													"begin": 6131,
													"end": 6228,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6131,
													"end": 6228,
													"name": "tag",
													"source": 10,
													"value": "260"
												},
												{
													"begin": 6131,
													"end": 6228,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 6277,
													"end": 6281,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 6308,
													"end": 6310,
													"name": "PUSH",
													"source": 10,
													"value": "1F"
												},
												{
													"begin": 6297,
													"end": 6311,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 6297,
													"end": 6311,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 6325,
													"end": 6326,
													"name": "PUSH",
													"source": 10,
													"value": "1"
												},
												{
													"begin": 6320,
													"end": 6969,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 6320,
													"end": 6969,
													"name": "EQ",
													"source": 10
												},
												{
													"begin": 6320,
													"end": 6969,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "263"
												},
												{
													"begin": 6320,
													"end": 6969,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 7013,
													"end": 7014,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 7030,
													"end": 7036,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 7027,
													"end": 7116,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 7027,
													"end": 7116,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "264"
												},
												{
													"begin": 7027,
													"end": 7116,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 7082,
													"end": 7101,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 7082,
													"end": 7101,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 7082,
													"end": 7101,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 7076,
													"end": 7102,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": 7027,
													"end": 7116,
													"name": "tag",
													"source": 10,
													"value": "264"
												},
												{
													"begin": 7027,
													"end": 7116,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 5884,
													"end": 5885,
													"name": "PUSH",
													"source": 10,
													"value": "3"
												},
												{
													"begin": 5880,
													"end": 5891,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 5880,
													"end": 5891,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 5880,
													"end": 5891,
													"name": "SHL",
													"source": 10
												},
												{
													"begin": 5876,
													"end": 5900,
													"name": "SHR",
													"source": 10
												},
												{
													"begin": 5872,
													"end": 5901,
													"name": "NOT",
													"source": 10
												},
												{
													"begin": 5862,
													"end": 5902,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 5908,
													"end": 5909,
													"name": "PUSH",
													"source": 10,
													"value": "1"
												},
												{
													"begin": 5904,
													"end": 5915,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 5904,
													"end": 5915,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 5904,
													"end": 5915,
													"name": "SHL",
													"source": 10
												},
												{
													"begin": 5859,
													"end": 5916,
													"name": "OR",
													"source": 10
												},
												{
													"begin": 7129,
													"end": 7210,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 7129,
													"end": 7210,
													"name": "SSTORE",
													"source": 10
												},
												{
													"begin": 6290,
													"end": 7220,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "255"
												},
												{
													"begin": 6290,
													"end": 7220,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6320,
													"end": 6969,
													"name": "tag",
													"source": 10,
													"value": "263"
												},
												{
													"begin": 6320,
													"end": 6969,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5180,
													"end": 5181,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 5173,
													"end": 5187,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 5173,
													"end": 5187,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5173,
													"end": 5187,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 5217,
													"end": 5221,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 5204,
													"end": 5222,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5204,
													"end": 5222,
													"name": "KECCAK256",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "1F"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 6356,
													"end": 6376,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 6356,
													"end": 6376,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 6356,
													"end": 6376,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 6474,
													"end": 6696,
													"name": "tag",
													"source": 10,
													"value": "267"
												},
												{
													"begin": 6474,
													"end": 6696,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 6488,
													"end": 6495,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 6485,
													"end": 6486,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 6482,
													"end": 6496,
													"name": "LT",
													"source": 10
												},
												{
													"begin": 6474,
													"end": 6696,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 6474,
													"end": 6696,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "269"
												},
												{
													"begin": 6474,
													"end": 6696,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 6570,
													"end": 6589,
													"name": "DUP8",
													"source": 10
												},
												{
													"begin": 6570,
													"end": 6589,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 6570,
													"end": 6589,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 6564,
													"end": 6590,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": 6549,
													"end": 6591,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 6549,
													"end": 6591,
													"name": "SSTORE",
													"source": 10
												},
												{
													"begin": 6677,
													"end": 6681,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 6662,
													"end": 6682,
													"name": "SWAP5",
													"source": 10
												},
												{
													"begin": 6662,
													"end": 6682,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 6662,
													"end": 6682,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 6662,
													"end": 6682,
													"name": "SWAP5",
													"source": 10
												},
												{
													"begin": 6630,
													"end": 6631,
													"name": "PUSH",
													"source": 10,
													"value": "1"
												},
												{
													"begin": 6618,
													"end": 6632,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 6618,
													"end": 6632,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 6618,
													"end": 6632,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 6618,
													"end": 6632,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 6504,
													"end": 6516,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 6474,
													"end": 6696,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "267"
												},
												{
													"begin": 6474,
													"end": 6696,
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6474,
													"end": 6696,
													"name": "tag",
													"source": 10,
													"value": "269"
												},
												{
													"begin": 6474,
													"end": 6696,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 6478,
													"end": 6481,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 6724,
													"end": 6730,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 6715,
													"end": 6722,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 6712,
													"end": 6731,
													"name": "LT",
													"source": 10
												},
												{
													"begin": 6709,
													"end": 6910,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 6709,
													"end": 6910,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "270"
												},
												{
													"begin": 6709,
													"end": 6910,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 6785,
													"end": 6804,
													"name": "DUP7",
													"source": 10
												},
												{
													"begin": 6785,
													"end": 6804,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 6785,
													"end": 6804,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 6779,
													"end": 6805,
													"name": "MLOAD",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"source": -1,
													"value": "0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT",
													"source": -1
												},
												{
													"begin": 6868,
													"end": 6869,
													"name": "PUSH",
													"source": 10,
													"value": "3"
												},
												{
													"begin": 6864,
													"end": 6878,
													"name": "DUP8",
													"source": 10
												},
												{
													"begin": 6864,
													"end": 6878,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 6864,
													"end": 6878,
													"name": "SHL",
													"source": 10
												},
												{
													"begin": 6880,
													"end": 6883,
													"name": "PUSH",
													"source": 10,
													"value": "F8"
												},
												{
													"begin": 6860,
													"end": 6884,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 6856,
													"end": 6893,
													"name": "SHR",
													"source": 10
												},
												{
													"begin": 6852,
													"end": 6894,
													"name": "NOT",
													"source": 10
												},
												{
													"begin": 6837,
													"end": 6895,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 6822,
													"end": 6896,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 6822,
													"end": 6896,
													"name": "SSTORE",
													"source": 10
												},
												{
													"begin": 6709,
													"end": 6910,
													"name": "tag",
													"source": 10,
													"value": "270"
												},
												{
													"begin": 6709,
													"end": 6910,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 6956,
													"end": 6957,
													"name": "PUSH",
													"source": 10,
													"value": "1"
												},
												{
													"begin": 6940,
													"end": 6954,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 6940,
													"end": 6954,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 6940,
													"end": 6954,
													"name": "SHL",
													"source": 10
												},
												{
													"begin": 6936,
													"end": 6958,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 6923,
													"end": 6959,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 6923,
													"end": 6959,
													"name": "SSTORE",
													"source": 10
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP",
													"source": -1
												},
												{
													"begin": 5927,
													"end": 7226,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 7581,
													"end": 7803,
													"name": "tag",
													"source": 10,
													"value": "189"
												},
												{
													"begin": 7581,
													"end": 7803,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 7646,
													"end": 7655,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 7646,
													"end": 7655,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 7646,
													"end": 7655,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 7667,
													"end": 7677,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 7667,
													"end": 7677,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 7667,
													"end": 7677,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 7664,
													"end": 7797,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 7664,
													"end": 7797,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "92"
												},
												{
													"begin": 7664,
													"end": 7797,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 7719,
													"end": 7729,
													"name": "PUSH",
													"source": 10,
													"value": "4E487B71"
												},
												{
													"begin": 7714,
													"end": 7717,
													"name": "PUSH",
													"source": 10,
													"value": "E0"
												},
												{
													"begin": 7710,
													"end": 7730,
													"name": "SHL",
													"source": 10
												},
												{
													"begin": 7707,
													"end": 7708,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 7700,
													"end": 7731,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 7754,
													"end": 7758,
													"name": "PUSH",
													"source": 10,
													"value": "11"
												},
												{
													"begin": 7751,
													"end": 7752,
													"name": "PUSH",
													"source": 10,
													"value": "4"
												},
												{
													"begin": 7744,
													"end": 7759,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 7782,
													"end": 7786,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 7779,
													"end": 7780,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 7772,
													"end": 7787,
													"name": "REVERT",
													"source": 10
												}
											]
										}
									}
								},
								"1F8AF5D09536CFFF9C726B5B64E3468E91184F0E2F8D91057F8023DACFC32600": "bf67ec129007be07f346d9d2933215293a6612ce7ff17d6b479a5a5cae72890c"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/token factory/CustomToken.sol",
								"contracts/token factory/interfaces/IAlgebraFactory.sol",
								"contracts/token factory/interfaces/IAlgebraPool.sol",
								"contracts/token factory/testAlgebra.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256)": "9cd441da",
							"algebraFactory()": "a7b64b04",
							"computePoolAddress(address,address)": "d8ed2241",
							"createPool()": "9a06b113",
							"lastCreatedPool()": "1a7c2131",
							"mintTokens(address,address,uint256)": "6fc98ee1",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"tokenA()": "0fc63d10",
							"tokenB()": "5f64b55b",
							"transferOwnership(address)": "f2fde38b",
							"transferTokensToPool(address,address,uint256)": "4f16fa53",
							"updateAlgebraFactory(address)": "b62d2af9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_algebraFactory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"step\",\"type\":\"string\"}],\"name\":\"DebugStep\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenBAmount\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensTransferredToPool\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenBAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"algebraFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"computePoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCreatedPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferTokensToPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAlgebraFactory\",\"type\":\"address\"}],\"name\":\"updateAlgebraFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256,uint256)\":{\"params\":{\"tokenAAmount\":\"The amount of Token A to add.\",\"tokenBAmount\":\"The amount of Token B to add.\"}},\"computePoolAddress(address,address)\":{\"params\":{\"tokenA\":\"The address of the first token.\",\"tokenB\":\"The address of the second token.\"},\"returns\":{\"poolAddress\":\"The address of the computed pool.\"}},\"mintTokens(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to mint.\",\"to\":\"The address to receive the minted tokens.\",\"token\":\"The address of the token to mint.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferTokensToPool(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to transfer.\",\"pool\":\"The address of the pool to receive the tokens.\",\"token\":\"The address of the token to transfer.\"}},\"updateAlgebraFactory(address)\":{\"params\":{\"newAlgebraFactory\":\"The new Algebra Factory address.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity(uint256,uint256)\":{\"notice\":\"Adds liquidity to the pool.\"},\"computePoolAddress(address,address)\":{\"notice\":\"Computes the address of a pool without creating it.\"},\"createPool()\":{\"notice\":\"Creates a pool for the two tokens created in the constructor.\"},\"mintTokens(address,address,uint256)\":{\"notice\":\"Mints tokens of the specified type to a given address.\"},\"transferTokensToPool(address,address,uint256)\":{\"notice\":\"Transfers tokens to a pool.\"},\"updateAlgebraFactory(address)\":{\"notice\":\"Updates the address of the Algebra Factory.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token factory/testAlgebra.sol\":\"AlgebraPoolTester\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x4ce6e9f30dba5ae30f26321dc851b669caf3f953f8c832304d05df2a523f1af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb24de66bbfa42093a20d448cb2564655525cba0342035a42a37654e5d922deb\",\"dweb:/ipfs/QmYgnFHamrgy5qurrxVLR1qDb7MirvGEoxCVwqiF1YvDMf\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/token factory/CustomToken.sol\":{\"keccak256\":\"0x30dbc416bdf2dabb4893e6fa2f27b1c19d6744e3f1ebfdec0f8272b4fe82be4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0e8f50296bad4367a365de9976a2cacbe36908b4f457226cc9fb1a4521bf593\",\"dweb:/ipfs/QmZ5p75TqSbyQzbakbYbdQvdBWeiKSBAtzFQrLSRKVk7tJ\"]},\"contracts/token factory/interfaces/IAlgebraFactory.sol\":{\"keccak256\":\"0x952b3b8283788bcea1eaf530f58a1a68476847e845fd65a0bfc8c02ece764d4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be4cd6ba621682c77e34d6d44728751c41fa67585d81e4e38956896b213ba6a9\",\"dweb:/ipfs/QmbwhzvnmNPR5ES4MdqtxjaPgxZCLXbS4vBnuqySJy435J\"]},\"contracts/token factory/interfaces/IAlgebraPool.sol\":{\"keccak256\":\"0xad34106048410b2b5ab5f2b92cc0dbc9663e7af2c2fdaa277fd977c27290e881\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9299282dad2a2c9cd29bcaf6c44ebe992368d473bac91c75d1911f2d3f5e6b04\",\"dweb:/ipfs/QmcFQiwwwvvQxwqLCBBiJ6cTLMsjKyG8d2Z2yCfgte9XB2\"]},\"contracts/token factory/testAlgebra.sol\":{\"keccak256\":\"0x343fbe4c28f5a50dbb55a29a46a571e7ae66b15812bdac6b82e97bb5bc5f935c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e014aed1c938cf128b387e29f9b958b0d3b3f64f9c38898da310061fc18109f4\",\"dweb:/ipfs/QmYoTBXqg8ow93oMd9nVeamTGu4koBPDKzdsiqGdXwawcy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/token factory/testAlgebra.sol:AlgebraPoolTester",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1111,
								"contract": "contracts/token factory/testAlgebra.sol:AlgebraPoolTester",
								"label": "algebraFactory",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1113,
								"contract": "contracts/token factory/testAlgebra.sol:AlgebraPoolTester",
								"label": "lastCreatedPool",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1115,
								"contract": "contracts/token factory/testAlgebra.sol:AlgebraPoolTester",
								"label": "tokenA",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1117,
								"contract": "contracts/token factory/testAlgebra.sol:AlgebraPoolTester",
								"label": "tokenB",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addLiquidity(uint256,uint256)": {
								"notice": "Adds liquidity to the pool."
							},
							"computePoolAddress(address,address)": {
								"notice": "Computes the address of a pool without creating it."
							},
							"createPool()": {
								"notice": "Creates a pool for the two tokens created in the constructor."
							},
							"mintTokens(address,address,uint256)": {
								"notice": "Mints tokens of the specified type to a given address."
							},
							"transferTokensToPool(address,address,uint256)": {
								"notice": "Transfers tokens to a pool."
							},
							"updateAlgebraFactory(address)": {
								"notice": "Updates the address of the Algebra Factory."
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> contracts/token factory/CustomToken.sol:16:25:\n   |\n16 |     function initialize(string memory name, string memory symbol) external {\n   |                         ^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/token factory/CustomToken.sol:24:5:\n   |\n24 |     function name() public view override returns (string memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 923,
						"file": "contracts/token factory/CustomToken.sol",
						"message": "The shadowed declaration is here:",
						"start": 827
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 563,
					"file": "contracts/token factory/CustomToken.sol",
					"start": 545
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> contracts/token factory/CustomToken.sol:16:45:\n   |\n16 |     function initialize(string memory name, string memory symbol) external {\n   |                                             ^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/token factory/CustomToken.sol:28:5:\n   |\n28 |     function symbol() public view override returns (string memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 1029,
						"file": "contracts/token factory/CustomToken.sol",
						"message": "The shadowed declaration is here:",
						"start": 929
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 585,
					"file": "contracts/token factory/CustomToken.sol",
					"start": 565
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n   --> contracts/token factory/testAlgebra.sol:115:33:\n    |\n115 |     function computePoolAddress(address tokenA, address tokenB) external view returns (address poolAddress) {\n    |                                 ^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/token factory/testAlgebra.sol:12:5:\n   |\n12 |     address public tokenA;\n   |     ^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 372,
						"file": "contracts/token factory/testAlgebra.sol",
						"message": "The shadowed declaration is here:",
						"start": 351
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 4782,
					"file": "contracts/token factory/testAlgebra.sol",
					"start": 4768
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n   --> contracts/token factory/testAlgebra.sol:115:49:\n    |\n115 |     function computePoolAddress(address tokenA, address tokenB) external view returns (address poolAddress) {\n    |                                                 ^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/token factory/testAlgebra.sol:13:5:\n   |\n13 |     address public tokenB;\n   |     ^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 399,
						"file": "contracts/token factory/testAlgebra.sol",
						"message": "The shadowed declaration is here:",
						"start": 378
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 4798,
					"file": "contracts/token factory/testAlgebra.sol",
					"start": 4784
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/token factory/CustomToken.sol": {
				"ast": {
					"absolutePath": "contracts/token factory/CustomToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"CustomToken": [
							1033
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						]
					},
					"id": 1034,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1034,
							"sourceUnit": 800,
							"src": "58:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1034,
							"sourceUnit": 148,
							"src": "114:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"192:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "192:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "192:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"199:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "199:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "199:7:6"
								}
							],
							"canonicalName": "CustomToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1033,
							"linearizedBaseContracts": [
								1033,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "CustomToken",
							"nameLocation": "177:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 943,
									"mutability": "mutable",
									"name": "_customName",
									"nameLocation": "228:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "213:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 942,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "213:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 945,
									"mutability": "mutable",
									"name": "_customSymbol",
									"nameLocation": "260:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "245:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 944,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "245:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 947,
									"mutability": "mutable",
									"name": "initialized",
									"nameLocation": "292:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "279:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 946,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "279:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "b90497e0",
									"id": 949,
									"mutability": "mutable",
									"name": "imageURL",
									"nameLocation": "323:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "309:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 948,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "309:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "426:2:6",
										"statements": []
									},
									"id": 961,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "",
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "398:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												{
													"hexValue": "",
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "402:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												}
											],
											"id": 954,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 951,
												"name": "ERC20",
												"nameLocations": [
													"392:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "392:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "392:13:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 956,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "414:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "418:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "414:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 958,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 955,
												"name": "Ownable",
												"nameLocations": [
													"406:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "406:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "406:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "389:2:6"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "426:0:6"
									},
									"scope": 1033,
									"src": "378:50:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "596:155:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "614:12:6",
															"subExpression": {
																"id": 969,
																"name": "initialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "615:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616c726561647920696e697469616c697a6564",
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "628:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91f9a36ded9df16899312719ead5ef5c9633419e1e5ccb00e0ab9b2c948c2b2b",
																"typeString": "literal_string \"Token already initialized\""
															},
															"value": "Token already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91f9a36ded9df16899312719ead5ef5c9633419e1e5ccb00e0ab9b2c948c2b2b",
																"typeString": "literal_string \"Token already initialized\""
															}
														],
														"id": 968,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "606:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "606:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "606:50:6"
											},
											{
												"expression": {
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 974,
														"name": "_customName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "666:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 975,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "680:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "666:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "666:18:6"
											},
											{
												"expression": {
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 978,
														"name": "_customSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "694:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 979,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "710:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "694:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "694:22:6"
											},
											{
												"expression": {
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 982,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "726:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "740:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "726:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "726:18:6"
											}
										]
									},
									"functionSelector": "4cd88b76",
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "534:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "545:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 962,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "545:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "579:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "565:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 964,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:42:6"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "596:0:6"
									},
									"scope": 1033,
									"src": "525:226:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "888:35:6",
										"statements": [
											{
												"expression": {
													"id": 993,
													"name": "_customName",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 943,
													"src": "905:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 992,
												"id": 994,
												"nodeType": "Return",
												"src": "898:18:6"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "836:4:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 989,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "855:8:6"
									},
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "840:2:6"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "873:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 990,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "873:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "872:15:6"
									},
									"scope": 1033,
									"src": "827:96:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										354
									],
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "992:37:6",
										"statements": [
											{
												"expression": {
													"id": 1002,
													"name": "_customSymbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 945,
													"src": "1009:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1001,
												"id": 1003,
												"nodeType": "Return",
												"src": "1002:20:6"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "938:6:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 998,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "959:8:6"
									},
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "944:2:6"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "977:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 999,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "977:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:15:6"
									},
									"scope": 1033,
									"src": "929:100:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "1159:34:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1015,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "1175:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1016,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "1179:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1014,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1169:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1169:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "1169:17:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1012,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1011,
												"name": "onlyOwner",
												"nameLocations": [
													"1149:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1149:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "1107:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1120:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1112:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1132:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1124:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:28:6"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1159:0:6"
									},
									"scope": 1033,
									"src": "1098:95:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "1330:37:6",
										"statements": [
											{
												"expression": {
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1027,
														"name": "imageURL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "1340:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1028,
														"name": "_imageURL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "1351:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1340:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "1340:20:6"
											}
										]
									},
									"functionSelector": "58e792ee",
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1025,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1024,
												"name": "onlyOwner",
												"nameLocations": [
													"1320:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1320:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1320:9:6"
										}
									],
									"name": "setImageURL",
									"nameLocation": "1274:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "_imageURL",
												"nameLocation": "1300:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "1286:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1021,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1286:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1285:25:6"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1330:0:6"
									},
									"scope": 1033,
									"src": "1265:102:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1034,
							"src": "168:1201:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "32:1338:6"
				},
				"id": 6
			},
			"contracts/token factory/interfaces/IAlgebraFactory.sol": {
				"ast": {
					"absolutePath": "contracts/token factory/interfaces/IAlgebraFactory.sol",
					"exportedSymbols": {
						"IAlgebraFactory": [
							1056
						]
					},
					"id": 1057,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1035,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAlgebraFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1056,
							"linearizedBaseContracts": [
								1056
							],
							"name": "IAlgebraFactory",
							"nameLocation": "68:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "90:231:7",
										"text": " @notice Creates a new pool for the given token pair.\n @param tokenA The address of the first token.\n @param tokenB The address of the second token.\n @return pool The address of the created pool."
									},
									"functionSelector": "e3433615",
									"id": 1045,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nameLocation": "335:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "354:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "346:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "370:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "362:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:32:7"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "404:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "396:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:14:7"
									},
									"scope": 1056,
									"src": "326:84:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "416:244:7",
										"text": " @notice Computes the address of a pool for the given token pair.\n @param tokenA The address of the first token.\n @param tokenB The address of the second token.\n @return pool The address of the computed pool."
									},
									"functionSelector": "d8ed2241",
									"id": 1055,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "computePoolAddress",
									"nameLocation": "674:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "701:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "693:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "717:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "709:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:32:7"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "756:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "748:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:14:7"
									},
									"scope": 1056,
									"src": "665:97:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1057,
							"src": "58:706:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:733:7"
				},
				"id": 7
			},
			"contracts/token factory/interfaces/IAlgebraPool.sol": {
				"ast": {
					"absolutePath": "contracts/token factory/interfaces/IAlgebraPool.sol",
					"exportedSymbols": {
						"IAlgebraPool": [
							1099
						]
					},
					"id": 1100,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1058,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAlgebraPool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1099,
							"linearizedBaseContracts": [
								1099
							],
							"name": "IAlgebraPool",
							"nameLocation": "68:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "87:444:8",
										"text": " @notice Adds liquidity to the pool.\n @param amount0Desired The amount of token0 to add.\n @param amount1Desired The amount of token1 to add.\n @param amount0Min The minimum amount of token0 to add.\n @param amount1Min The minimum amount of token1 to add.\n @param recipient The address to receive the liquidity tokens.\n @param deadline The timestamp by which the transaction must be confirmed."
									},
									"functionSelector": "ded998b9",
									"id": 1080,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "545:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "amount0Desired",
												"nameLocation": "575:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "567:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "amount1Desired",
												"nameLocation": "607:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "599:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "amount0Min",
												"nameLocation": "639:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "631:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "amount1Min",
												"nameLocation": "667:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "659:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "695:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "687:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "722:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "714:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "557:179:8"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "763:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "755:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "780:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "772:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "797:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "789:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "789:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "754:53:8"
									},
									"scope": 1099,
									"src": "536:272:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "814:409:8",
										"text": " @notice Removes liquidity from the pool.\n @param liquidity The amount of liquidity tokens to remove.\n @param amount0Min The minimum amount of token0 to withdraw.\n @param amount1Min The minimum amount of token1 to withdraw.\n @param recipient The address to receive the withdrawn tokens.\n @param deadline The timestamp by which the transaction must be confirmed."
									},
									"functionSelector": "ed856cdc",
									"id": 1098,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "1237:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1270:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "1262:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "amount0Min",
												"nameLocation": "1297:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "1289:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "amount1Min",
												"nameLocation": "1325:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "1317:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1317:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1353:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "1345:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1380:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "1372:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1372:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1252:142:8"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1421:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "1413:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1438:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "1430:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1430:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1412:34:8"
									},
									"scope": 1099,
									"src": "1228:219:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1100,
							"src": "58:1391:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1418:8"
				},
				"id": 8
			},
			"contracts/token factory/testAlgebra.sol": {
				"ast": {
					"absolutePath": "contracts/token factory/testAlgebra.sol",
					"exportedSymbols": {
						"AlgebraPoolTester": [
							1586
						],
						"Context": [
							933
						],
						"CustomToken": [
							1033
						],
						"ERC20": [
							799
						],
						"IAlgebraFactory": [
							1056
						],
						"IAlgebraPool": [
							1099
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						]
					},
					"id": 1587,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "contracts/token factory/interfaces/IAlgebraFactory.sol",
							"file": "./interfaces/IAlgebraFactory.sol",
							"id": 1102,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 1057,
							"src": "58:42:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token factory/interfaces/IAlgebraPool.sol",
							"file": "./interfaces/IAlgebraPool.sol",
							"id": 1103,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 1100,
							"src": "101:39:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1104,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 148,
							"src": "141:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token factory/CustomToken.sol",
							"file": "./CustomToken.sol",
							"id": 1105,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 1034,
							"src": "194:27:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"expression": {
												"id": 1107,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "262:3:9",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 1108,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "266:6:9",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "262:10:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 1106,
										"name": "Ownable",
										"nameLocations": [
											"253:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "253:7:9"
									},
									"id": 1109,
									"nodeType": "InheritanceSpecifier",
									"src": "253:20:9"
								}
							],
							"canonicalName": "AlgebraPoolTester",
							"contractDependencies": [
								1033
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1586,
							"linearizedBaseContracts": [
								1586,
								147,
								933
							],
							"name": "AlgebraPoolTester",
							"nameLocation": "232:17:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a7b64b04",
									"id": 1111,
									"mutability": "mutable",
									"name": "algebraFactory",
									"nameLocation": "295:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1586,
									"src": "280:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1110,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "280:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1a7c2131",
									"id": 1113,
									"mutability": "mutable",
									"name": "lastCreatedPool",
									"nameLocation": "330:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1586,
									"src": "315:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1112,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "315:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0fc63d10",
									"id": 1115,
									"mutability": "mutable",
									"name": "tokenA",
									"nameLocation": "366:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1586,
									"src": "351:21:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1114,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "351:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f64b55b",
									"id": 1117,
									"mutability": "mutable",
									"name": "tokenB",
									"nameLocation": "393:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1586,
									"src": "378:21:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1116,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "378:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9c5d829b9b23efc461f9aeef91979ec04bb903feb3bee4f26d22114abfc7335b",
									"id": 1125,
									"name": "PoolCreated",
									"nameLocation": "412:11:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "440:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "424:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "464:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "448:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"indexed": false,
												"mutability": "mutable",
												"name": "poolAddress",
												"nameLocation": "480:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "472:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "472:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:69:9"
									},
									"src": "406:87:9"
								},
								{
									"anonymous": false,
									"eventSelector": "bf67ec129007be07f346d9d2933215293a6612ce7ff17d6b479a5a5cae72890c",
									"id": 1133,
									"name": "TokensMinted",
									"nameLocation": "504:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "533:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "517:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "556:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "540:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "568:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "560:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:59:9"
									},
									"src": "498:78:9"
								},
								{
									"anonymous": false,
									"eventSelector": "32d8ccb17edf05070e5a75f56f66402f1e3071f6104787c3ec400afbb1a0d6d1",
									"id": 1141,
									"name": "TokensTransferredToPool",
									"nameLocation": "587:23:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "627:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "611:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "650:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "634:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "664:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "656:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "610:61:9"
									},
									"src": "581:91:9"
								},
								{
									"anonymous": false,
									"eventSelector": "ac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee45",
									"id": 1149,
									"name": "LiquidityAdded",
									"nameLocation": "683:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "714:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "698:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAAmount",
												"nameLocation": "728:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "720:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenBAmount",
												"nameLocation": "750:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "742:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:66:9"
									},
									"src": "677:87:9"
								},
								{
									"anonymous": false,
									"eventSelector": "94ebca8d29d278a0288a52a710c11e928307b6f2e15fbaf4508cc4ceb3d21f8b",
									"id": 1153,
									"name": "DebugStep",
									"nameLocation": "775:9:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"indexed": false,
												"mutability": "mutable",
												"name": "step",
												"nameLocation": "792:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "785:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1150,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "785:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:13:9"
									},
									"src": "769:29:9"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "861:727:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1161,
																"name": "_algebraFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "879:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "906:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "898:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1162,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "898:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "898:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "879:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420416c676562726120466163746f72792061646472657373",
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "910:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95a2feb49b1029e40960c5f143071314131a09e8c032ba7ef14c7e8b91d52899",
																"typeString": "literal_string \"Invalid Algebra Factory address\""
															},
															"value": "Invalid Algebra Factory address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95a2feb49b1029e40960c5f143071314131a09e8c032ba7ef14c7e8b91d52899",
																"typeString": "literal_string \"Invalid Algebra Factory address\""
															}
														],
														"id": 1160,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "871:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "871:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "871:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1171,
																"name": "mintAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1157,
																"src": "962:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "975:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "962:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e7420616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "978:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2bbd014460a2430483f9b71ee977c43e9f2442681a2de6f53458e60831ed4db6",
																"typeString": "literal_string \"Mint amount must be greater than zero\""
															},
															"value": "Mint amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2bbd014460a2430483f9b71ee977c43e9f2442681a2de6f53458e60831ed4db6",
																"typeString": "literal_string \"Mint amount must be greater than zero\""
															}
														],
														"id": 1170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "954:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "954:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "954:64:9"
											},
											{
												"expression": {
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1177,
														"name": "algebraFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "1029:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1178,
														"name": "_algebraFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "1046:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1029:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1180,
												"nodeType": "ExpressionStatement",
												"src": "1029:32:9"
											},
											{
												"assignments": [
													1183
												],
												"declarations": [
													{
														"constant": false,
														"id": 1183,
														"mutability": "mutable",
														"name": "_tokenA",
														"nameLocation": "1110:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1255,
														"src": "1098:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CustomToken_$1033",
															"typeString": "contract CustomToken"
														},
														"typeName": {
															"id": 1182,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1181,
																"name": "CustomToken",
																"nameLocations": [
																	"1098:11:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1033,
																"src": "1098:11:9"
															},
															"referencedDeclaration": 1033,
															"src": "1098:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CustomToken_$1033",
																"typeString": "contract CustomToken"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1188,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1120:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_CustomToken_$1033_$",
															"typeString": "function () returns (contract CustomToken)"
														},
														"typeName": {
															"id": 1185,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1184,
																"name": "CustomToken",
																"nameLocations": [
																	"1124:11:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1033,
																"src": "1124:11:9"
															},
															"referencedDeclaration": 1033,
															"src": "1124:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CustomToken_$1033",
																"typeString": "contract CustomToken"
															}
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1120:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CustomToken_$1033",
														"typeString": "contract CustomToken"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1098:39:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "546f6b656e41",
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1166:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_18c40d09d3be00e8c0eafe4f0ffbd938b1824b54b7ac8efe521dcc1be43de891",
																"typeString": "literal_string \"TokenA\""
															},
															"value": "TokenA"
														},
														{
															"hexValue": "5441",
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1176:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef82cc74a34211697cb87f1279e66832ee4958064d55b955c515bfec77ba8016",
																"typeString": "literal_string \"TA\""
															},
															"value": "TA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_18c40d09d3be00e8c0eafe4f0ffbd938b1824b54b7ac8efe521dcc1be43de891",
																"typeString": "literal_string \"TokenA\""
															},
															{
																"typeIdentifier": "t_stringliteral_ef82cc74a34211697cb87f1279e66832ee4958064d55b955c515bfec77ba8016",
																"typeString": "literal_string \"TA\""
															}
														],
														"expression": {
															"id": 1189,
															"name": "_tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "1147:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CustomToken_$1033",
																"typeString": "contract CustomToken"
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1155:10:9",
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 987,
														"src": "1147:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory) external"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "1147:34:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1199,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1204:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1208:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1204:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1201,
															"name": "mintAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "1216:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1196,
															"name": "_tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "1191:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CustomToken_$1033",
																"typeString": "contract CustomToken"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1199:4:9",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1020,
														"src": "1191:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1191:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "1191:36:9"
											},
											{
												"expression": {
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1204,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "1237:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1207,
																"name": "_tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "1254:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_CustomToken_$1033",
																	"typeString": "contract CustomToken"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_CustomToken_$1033",
																	"typeString": "contract CustomToken"
																}
															],
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1246:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1205,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1246:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1246:16:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1237:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "1237:25:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1212,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "1290:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1213,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1298:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1302:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1298:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1215,
															"name": "mintAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "1310:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1211,
														"name": "TokensMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "1277:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1277:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "EmitStatement",
												"src": "1272:49:9"
											},
											{
												"assignments": [
													1220
												],
												"declarations": [
													{
														"constant": false,
														"id": 1220,
														"mutability": "mutable",
														"name": "_tokenB",
														"nameLocation": "1370:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1255,
														"src": "1358:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CustomToken_$1033",
															"typeString": "contract CustomToken"
														},
														"typeName": {
															"id": 1219,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1218,
																"name": "CustomToken",
																"nameLocations": [
																	"1358:11:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1033,
																"src": "1358:11:9"
															},
															"referencedDeclaration": 1033,
															"src": "1358:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CustomToken_$1033",
																"typeString": "contract CustomToken"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1225,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1380:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_CustomToken_$1033_$",
															"typeString": "function () returns (contract CustomToken)"
														},
														"typeName": {
															"id": 1222,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1221,
																"name": "CustomToken",
																"nameLocations": [
																	"1384:11:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1033,
																"src": "1384:11:9"
															},
															"referencedDeclaration": 1033,
															"src": "1384:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CustomToken_$1033",
																"typeString": "contract CustomToken"
															}
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1380:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CustomToken_$1033",
														"typeString": "contract CustomToken"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1358:39:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "546f6b656e42",
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1426:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9e28b3853f378e1414dd8a72fb1b762bb8980cd75a0b9480d2a46c1117cab7a2",
																"typeString": "literal_string \"TokenB\""
															},
															"value": "TokenB"
														},
														{
															"hexValue": "5442",
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1436:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a93af70c5699d14b835fb4daebde67e376db7da71a152e136af3228c5e7fc499",
																"typeString": "literal_string \"TB\""
															},
															"value": "TB"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_9e28b3853f378e1414dd8a72fb1b762bb8980cd75a0b9480d2a46c1117cab7a2",
																"typeString": "literal_string \"TokenB\""
															},
															{
																"typeIdentifier": "t_stringliteral_a93af70c5699d14b835fb4daebde67e376db7da71a152e136af3228c5e7fc499",
																"typeString": "literal_string \"TB\""
															}
														],
														"expression": {
															"id": 1226,
															"name": "_tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "1407:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CustomToken_$1033",
																"typeString": "contract CustomToken"
															}
														},
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1415:10:9",
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 987,
														"src": "1407:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory) external"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1407:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "1407:34:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1236,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1464:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1468:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1464:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1238,
															"name": "mintAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "1476:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1233,
															"name": "_tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "1451:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CustomToken_$1033",
																"typeString": "contract CustomToken"
															}
														},
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1459:4:9",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1020,
														"src": "1451:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1451:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "1451:36:9"
											},
											{
												"expression": {
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1241,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "1497:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1244,
																"name": "_tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "1514:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_CustomToken_$1033",
																	"typeString": "contract CustomToken"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_CustomToken_$1033",
																	"typeString": "contract CustomToken"
																}
															],
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1506:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1242,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1506:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1506:16:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1497:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "1497:25:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1249,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "1550:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1250,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1558:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1562:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1558:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1252,
															"name": "mintAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "1570:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1248,
														"name": "TokensMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "1537:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1537:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1254,
												"nodeType": "EmitStatement",
												"src": "1532:49:9"
											}
										]
									},
									"id": 1256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "_algebraFactory",
												"nameLocation": "824:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "816:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "mintAmount",
												"nameLocation": "849:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "841:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "815:45:9"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "861:0:9"
									},
									"scope": 1586,
									"src": "804:784:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1321,
										"nodeType": "Block",
										"src": "1728:476:9",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "5374617274696e6720706f6f6c206372656174696f6e",
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1753:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f74c1d8be5143796742bd7dd7d8d89b0c10c4c13912662e84672ea6b54765128",
																"typeString": "literal_string \"Starting pool creation\""
															},
															"value": "Starting pool creation"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_f74c1d8be5143796742bd7dd7d8d89b0c10c4c13912662e84672ea6b54765128",
																"typeString": "literal_string \"Starting pool creation\""
															}
														],
														"id": 1262,
														"name": "DebugStep",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "1743:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1743:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1265,
												"nodeType": "EmitStatement",
												"src": "1738:40:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1267,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "1796:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1814:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1806:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1268,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1806:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1806:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1796:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1273,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "1820:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1838:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1830:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1274,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1830:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1830:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1820:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1796:44:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e73206d75737420626520696e697469616c697a6564",
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1842:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_18e4817b259137ec94132f737c84152c28fb5852c0a31a9a91af72573983b0d8",
																"typeString": "literal_string \"Tokens must be initialized\""
															},
															"value": "Tokens must be initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_18e4817b259137ec94132f737c84152c28fb5852c0a31a9a91af72573983b0d8",
																"typeString": "literal_string \"Tokens must be initialized\""
															}
														],
														"id": 1266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1788:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1788:83:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "1788:83:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1284,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "1889:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1285,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "1899:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1889:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e73206d75737420626520646966666572656e74",
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1907:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023",
																"typeString": "literal_string \"Tokens must be different\""
															},
															"value": "Tokens must be different"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023",
																"typeString": "literal_string \"Tokens must be different\""
															}
														],
														"id": 1283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1881:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1881:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "1881:53:9"
											},
											{
												"assignments": [
													1292
												],
												"declarations": [
													{
														"constant": false,
														"id": 1292,
														"mutability": "mutable",
														"name": "factory",
														"nameLocation": "1961:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1321,
														"src": "1945:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAlgebraFactory_$1056",
															"typeString": "contract IAlgebraFactory"
														},
														"typeName": {
															"id": 1291,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1290,
																"name": "IAlgebraFactory",
																"nameLocations": [
																	"1945:15:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1056,
																"src": "1945:15:9"
															},
															"referencedDeclaration": 1056,
															"src": "1945:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAlgebraFactory_$1056",
																"typeString": "contract IAlgebraFactory"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1296,
												"initialValue": {
													"arguments": [
														{
															"id": 1294,
															"name": "algebraFactory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "1987:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1293,
														"name": "IAlgebraFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "1971:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IAlgebraFactory_$1056_$",
															"typeString": "type(contract IAlgebraFactory)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1971:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAlgebraFactory_$1056",
														"typeString": "contract IAlgebraFactory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1945:57:9"
											},
											{
												"expression": {
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1297,
														"name": "lastCreatedPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "2012:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1300,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "2049:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1301,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "2057:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1298,
																"name": "factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "2030:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IAlgebraFactory_$1056",
																	"typeString": "contract IAlgebraFactory"
																}
															},
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2038:10:9",
															"memberName": "createPool",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1045,
															"src": "2030:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) external returns (address)"
															}
														},
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2030:34:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2012:52:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "2012:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1306,
																"name": "lastCreatedPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "2083:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2110:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2102:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1307,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2102:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2102:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2083:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2063726561746520706f6f6c",
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2114:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f848200720cfffaee489e51b4359a2329522c129a1802953dc9d3cb6bddffeb9",
																"typeString": "literal_string \"Failed to create pool\""
															},
															"value": "Failed to create pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f848200720cfffaee489e51b4359a2329522c129a1802953dc9d3cb6bddffeb9",
																"typeString": "literal_string \"Failed to create pool\""
															}
														],
														"id": 1305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2075:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2075:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "2075:63:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1316,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "2165:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1317,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "2173:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1318,
															"name": "lastCreatedPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "2181:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1315,
														"name": "PoolCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "2153:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2153:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1320,
												"nodeType": "EmitStatement",
												"src": "2148:49:9"
											}
										]
									},
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "1594:88:9",
										"text": " @notice Creates a pool for the two tokens created in the constructor."
									},
									"functionSelector": "9a06b113",
									"id": 1322,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1260,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1259,
												"name": "onlyOwner",
												"nameLocations": [
													"1718:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1718:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1718:9:9"
										}
									],
									"name": "createPool",
									"nameLocation": "1696:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1706:2:9"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1728:0:9"
									},
									"scope": 1586,
									"src": "1687:517:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "2542:306:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1335,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1325,
																	"src": "2560:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1336,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "2569:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2560:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1338,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1325,
																	"src": "2579:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1339,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "2588:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2579:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2560:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2596:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 1334,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2552:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2552:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "2552:68:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1346,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "2638:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2652:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2644:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1347,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2644:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2644:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2638:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e742061646472657373",
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															},
															"value": "Invalid recipient address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															}
														],
														"id": 1345,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2630:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "2630:54:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1356,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1329,
																"src": "2702:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2711:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2702:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2714:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 1355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2694:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2694:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1361,
												"nodeType": "ExpressionStatement",
												"src": "2694:55:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1366,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "2784:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1367,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "2788:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1363,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1325,
																	"src": "2772:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1362,
																"name": "CustomToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "2760:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_CustomToken_$1033_$",
																	"typeString": "type(contract CustomToken)"
																}
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2760:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CustomToken_$1033",
																"typeString": "contract CustomToken"
															}
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2779:4:9",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1020,
														"src": "2760:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2760:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "2760:35:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1371,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "2823:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1372,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "2830:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1373,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "2834:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1370,
														"name": "TokensMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "2810:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2810:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1375,
												"nodeType": "EmitStatement",
												"src": "2805:36:9"
											}
										]
									},
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "2210:245:9",
										"text": " @notice Mints tokens of the specified type to a given address.\n @param token The address of the token to mint.\n @param to The address to receive the minted tokens.\n @param amount The amount of tokens to mint."
									},
									"functionSelector": "6fc98ee1",
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1332,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1331,
												"name": "onlyOwner",
												"nameLocations": [
													"2532:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2532:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2532:9:9"
										}
									],
									"name": "mintTokens",
									"nameLocation": "2469:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2488:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "2480:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2503:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "2495:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2495:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2515:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "2507:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:43:9"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2542:0:9"
									},
									"scope": 1586,
									"src": "2460:388:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "3186:322:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1390,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "3204:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1391,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "3213:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3204:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1393,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "3223:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1394,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "3232:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3223:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3204:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3240:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 1389,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3196:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3196:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "3196:68:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1401,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "3282:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3298:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3290:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1402,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3290:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3290:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3282:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420706f6f6c2061646472657373",
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3302:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c7e060f1e5ee73f3c2beb76a55480adf5ff315d0e0edd965836493e574235ec6",
																"typeString": "literal_string \"Invalid pool address\""
															},
															"value": "Invalid pool address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c7e060f1e5ee73f3c2beb76a55480adf5ff315d0e0edd965836493e574235ec6",
																"typeString": "literal_string \"Invalid pool address\""
															}
														],
														"id": 1400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3274:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3274:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "3274:51:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1411,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1384,
																"src": "3343:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3352:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3343:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3355:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 1410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3335:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3335:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1416,
												"nodeType": "ExpressionStatement",
												"src": "3335:55:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1421,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "3429:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1422,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "3435:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1418,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "3413:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1417,
																"name": "CustomToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "3401:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_CustomToken_$1033_$",
																	"typeString": "type(contract CustomToken)"
																}
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3401:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CustomToken_$1033",
																"typeString": "contract CustomToken"
															}
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3420:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "3401:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3401:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1424,
												"nodeType": "ExpressionStatement",
												"src": "3401:41:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1426,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "3481:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1427,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "3488:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1428,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "3494:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1425,
														"name": "TokensTransferredToPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "3457:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3457:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1430,
												"nodeType": "EmitStatement",
												"src": "3452:49:9"
											}
										]
									},
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "2854:233:9",
										"text": " @notice Transfers tokens to a pool.\n @param token The address of the token to transfer.\n @param pool The address of the pool to receive the tokens.\n @param amount The amount of tokens to transfer."
									},
									"functionSelector": "4f16fa53",
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1387,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1386,
												"name": "onlyOwner",
												"nameLocations": [
													"3176:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3176:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3176:9:9"
										}
									],
									"name": "transferTokensToPool",
									"nameLocation": "3101:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3130:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "3122:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3122:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3145:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "3137:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3137:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3159:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "3151:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3151:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3121:45:9"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3186:0:9"
									},
									"scope": 1586,
									"src": "3092:416:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1511,
										"nodeType": "Block",
										"src": "3772:711:9",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "5374617274696e67206c6971756964697479206164646974696f6e",
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3797:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_847af5c88ed3fb202d9e41a959a255471c737d793cbf61df15ac3cc7d64e6f0f",
																"typeString": "literal_string \"Starting liquidity addition\""
															},
															"value": "Starting liquidity addition"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_847af5c88ed3fb202d9e41a959a255471c737d793cbf61df15ac3cc7d64e6f0f",
																"typeString": "literal_string \"Starting liquidity addition\""
															}
														],
														"id": 1442,
														"name": "DebugStep",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "3787:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3787:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1445,
												"nodeType": "EmitStatement",
												"src": "3782:45:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1447,
																"name": "lastCreatedPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "3845:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3872:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3864:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1448,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3864:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3864:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3845:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20706f6f6c2063726561746564",
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3876:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_724621119f5db596bbde230b76cd5d37276aff48356c0f8f9dcac60f48930a47",
																"typeString": "literal_string \"No pool created\""
															},
															"value": "No pool created"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_724621119f5db596bbde230b76cd5d37276aff48356c0f8f9dcac60f48930a47",
																"typeString": "literal_string \"No pool created\""
															}
														],
														"id": 1446,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3837:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3837:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1455,
												"nodeType": "ExpressionStatement",
												"src": "3837:57:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1457,
																	"name": "tokenAAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1435,
																	"src": "3912:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3927:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3912:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1460,
																	"name": "tokenBAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1437,
																	"src": "3932:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3947:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3932:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3912:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616d6f756e7473206d7573742062652067726561746572207468616e207a65726f",
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3950:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67b5480f1b28e4dae4d922a7b15bccf15e09ed915b314470d2be602ada735c7b",
																"typeString": "literal_string \"Token amounts must be greater than zero\""
															},
															"value": "Token amounts must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67b5480f1b28e4dae4d922a7b15bccf15e09ed915b314470d2be602ada735c7b",
																"typeString": "literal_string \"Token amounts must be greater than zero\""
															}
														],
														"id": 1456,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3904:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3904:88:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1466,
												"nodeType": "ExpressionStatement",
												"src": "3904:88:9"
											},
											{
												"assignments": [
													1468
												],
												"declarations": [
													{
														"constant": false,
														"id": 1468,
														"mutability": "mutable",
														"name": "successA",
														"nameLocation": "4047:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1511,
														"src": "4042:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1467,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4042:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1476,
												"initialValue": {
													"arguments": [
														{
															"id": 1473,
															"name": "lastCreatedPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "4087:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1474,
															"name": "tokenAAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "4104:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1470,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "4070:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1469,
																"name": "CustomToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "4058:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_CustomToken_$1033_$",
																	"typeString": "type(contract CustomToken)"
																}
															},
															"id": 1471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4058:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CustomToken_$1033",
																"typeString": "contract CustomToken"
															}
														},
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4078:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "4058:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4058:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4042:75:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1478,
															"name": "successA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "4135:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e41207472616e73666572206661696c6564",
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4145:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3",
																"typeString": "literal_string \"TokenA transfer failed\""
															},
															"value": "TokenA transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af8afe23c4ab3678a3296b30fa510770f174cd34c830a91c8f176ec5987cc0c3",
																"typeString": "literal_string \"TokenA transfer failed\""
															}
														],
														"id": 1477,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4127:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4127:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1481,
												"nodeType": "ExpressionStatement",
												"src": "4127:43:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "546f6b656e41207472616e73666572726564",
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4195:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d05c3b30d29b5b07b1f8faddbfc569df6dca70b5fc76a8eab0cbb2b4b52fa72e",
																"typeString": "literal_string \"TokenA transferred\""
															},
															"value": "TokenA transferred"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_d05c3b30d29b5b07b1f8faddbfc569df6dca70b5fc76a8eab0cbb2b4b52fa72e",
																"typeString": "literal_string \"TokenA transferred\""
															}
														],
														"id": 1482,
														"name": "DebugStep",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "4185:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4185:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1485,
												"nodeType": "EmitStatement",
												"src": "4180:36:9"
											},
											{
												"assignments": [
													1487
												],
												"declarations": [
													{
														"constant": false,
														"id": 1487,
														"mutability": "mutable",
														"name": "successB",
														"nameLocation": "4232:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1511,
														"src": "4227:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1486,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4227:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1495,
												"initialValue": {
													"arguments": [
														{
															"id": 1492,
															"name": "lastCreatedPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "4272:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1493,
															"name": "tokenBAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "4289:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1489,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "4255:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1488,
																"name": "CustomToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "4243:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_CustomToken_$1033_$",
																	"typeString": "type(contract CustomToken)"
																}
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4243:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CustomToken_$1033",
																"typeString": "contract CustomToken"
															}
														},
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4263:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "4243:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4243:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4227:75:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1497,
															"name": "successB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "4320:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e42207472616e73666572206661696c6564",
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4330:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db",
																"typeString": "literal_string \"TokenB transfer failed\""
															},
															"value": "TokenB transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e575d9283b67d5896943bba2581ae1c35e279d59e301516ef53a4917ac506db",
																"typeString": "literal_string \"TokenB transfer failed\""
															}
														],
														"id": 1496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4312:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4312:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1500,
												"nodeType": "ExpressionStatement",
												"src": "4312:43:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "546f6b656e42207472616e73666572726564",
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4380:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_433af072dffa991865871a0855e15ff65c04410ef2c35fa9a13b990d1685b02f",
																"typeString": "literal_string \"TokenB transferred\""
															},
															"value": "TokenB transferred"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_433af072dffa991865871a0855e15ff65c04410ef2c35fa9a13b990d1685b02f",
																"typeString": "literal_string \"TokenB transferred\""
															}
														],
														"id": 1501,
														"name": "DebugStep",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "4370:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4370:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1504,
												"nodeType": "EmitStatement",
												"src": "4365:36:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1506,
															"name": "lastCreatedPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "4432:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1507,
															"name": "tokenAAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "4449:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1508,
															"name": "tokenBAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "4463:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1505,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "4417:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4417:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1510,
												"nodeType": "EmitStatement",
												"src": "4412:64:9"
											}
										]
									},
									"documentation": {
										"id": 1433,
										"nodeType": "StructuredDocumentation",
										"src": "3514:168:9",
										"text": " @notice Adds liquidity to the pool.\n @param tokenAAmount The amount of Token A to add.\n @param tokenBAmount The amount of Token B to add."
									},
									"functionSelector": "9cd441da",
									"id": 1512,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1440,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1439,
												"name": "onlyOwner",
												"nameLocations": [
													"3762:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3762:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3762:9:9"
										}
									],
									"name": "addLiquidity",
									"nameLocation": "3696:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "tokenAAmount",
												"nameLocation": "3717:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "3709:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3709:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "tokenBAmount",
												"nameLocation": "3739:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "3731:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3708:44:9"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3772:0:9"
									},
									"scope": 1586,
									"src": "3687:796:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1561,
										"nodeType": "Block",
										"src": "4844:292:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1523,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1515,
																	"src": "4862:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4880:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4872:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1524,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4872:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4872:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4862:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1529,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1517,
																	"src": "4886:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4904:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4896:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1530,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4896:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4896:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4886:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4862:44:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4908:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 1522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4854:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4854:78:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1538,
												"nodeType": "ExpressionStatement",
												"src": "4854:78:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1540,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "4950:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1541,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "4960:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4950:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e73206d75737420626520646966666572656e74",
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4968:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023",
																"typeString": "literal_string \"Tokens must be different\""
															},
															"value": "Tokens must be different"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bdc88bb2cf3561ef2da2d9af30d1f8384f5b74edd27dcaa0b2b441e89886023",
																"typeString": "literal_string \"Tokens must be different\""
															}
														],
														"id": 1539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4942:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4942:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "4942:53:9"
											},
											{
												"assignments": [
													1548
												],
												"declarations": [
													{
														"constant": false,
														"id": 1548,
														"mutability": "mutable",
														"name": "factory",
														"nameLocation": "5022:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1561,
														"src": "5006:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAlgebraFactory_$1056",
															"typeString": "contract IAlgebraFactory"
														},
														"typeName": {
															"id": 1547,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1546,
																"name": "IAlgebraFactory",
																"nameLocations": [
																	"5006:15:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1056,
																"src": "5006:15:9"
															},
															"referencedDeclaration": 1056,
															"src": "5006:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAlgebraFactory_$1056",
																"typeString": "contract IAlgebraFactory"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1552,
												"initialValue": {
													"arguments": [
														{
															"id": 1550,
															"name": "algebraFactory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "5048:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1549,
														"name": "IAlgebraFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "5032:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IAlgebraFactory_$1056_$",
															"typeString": "type(contract IAlgebraFactory)"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5032:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAlgebraFactory_$1056",
														"typeString": "contract IAlgebraFactory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5006:57:9"
											},
											{
												"expression": {
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1553,
														"name": "poolAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1520,
														"src": "5073:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1556,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "5114:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1557,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "5122:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1554,
																"name": "factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1548,
																"src": "5087:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IAlgebraFactory_$1056",
																	"typeString": "contract IAlgebraFactory"
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5095:18:9",
															"memberName": "computePoolAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1055,
															"src": "5087:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) view external returns (address)"
															}
														},
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5087:42:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5073:56:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1560,
												"nodeType": "ExpressionStatement",
												"src": "5073:56:9"
											}
										]
									},
									"documentation": {
										"id": 1513,
										"nodeType": "StructuredDocumentation",
										"src": "4489:246:9",
										"text": " @notice Computes the address of a pool without creating it.\n @param tokenA The address of the first token.\n @param tokenB The address of the second token.\n @return poolAddress The address of the computed pool."
									},
									"functionSelector": "d8ed2241",
									"id": 1562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computePoolAddress",
									"nameLocation": "4749:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "4776:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "4768:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4768:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "4792:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "4784:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4784:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4767:32:9"
									},
									"returnParameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "poolAddress",
												"nameLocation": "4831:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "4823:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4823:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4822:21:9"
									},
									"scope": 1586,
									"src": "4740:396:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1584,
										"nodeType": "Block",
										"src": "5358:136:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1571,
																"name": "newAlgebraFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1565,
																"src": "5376:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5405:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5397:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1572,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5397:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5397:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5376:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420416c676562726120466163746f72792061646472657373",
															"id": 1577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5409:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95a2feb49b1029e40960c5f143071314131a09e8c032ba7ef14c7e8b91d52899",
																"typeString": "literal_string \"Invalid Algebra Factory address\""
															},
															"value": "Invalid Algebra Factory address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95a2feb49b1029e40960c5f143071314131a09e8c032ba7ef14c7e8b91d52899",
																"typeString": "literal_string \"Invalid Algebra Factory address\""
															}
														],
														"id": 1570,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5368:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5368:75:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "5368:75:9"
											},
											{
												"expression": {
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1580,
														"name": "algebraFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "5453:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1581,
														"name": "newAlgebraFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1565,
														"src": "5470:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5453:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1583,
												"nodeType": "ExpressionStatement",
												"src": "5453:34:9"
											}
										]
									},
									"documentation": {
										"id": 1563,
										"nodeType": "StructuredDocumentation",
										"src": "5142:135:9",
										"text": " @notice Updates the address of the Algebra Factory.\n @param newAlgebraFactory The new Algebra Factory address."
									},
									"functionSelector": "b62d2af9",
									"id": 1585,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1568,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1567,
												"name": "onlyOwner",
												"nameLocations": [
													"5348:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5348:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5348:9:9"
										}
									],
									"name": "updateAlgebraFactory",
									"nameLocation": "5291:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "newAlgebraFactory",
												"nameLocation": "5320:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "5312:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5311:27:9"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5358:0:9"
									},
									"scope": 1586,
									"src": "5282:212:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1587,
							"src": "223:5273:9",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								1125,
								1133,
								1141,
								1149,
								1153
							]
						}
					],
					"src": "32:5465:9"
				},
				"id": 9
			}
		}
	}
}